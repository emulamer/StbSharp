		// TypedefDecl- stbtt_uint8 - stbtt_uint8
		// TypedefDecl- stbtt_int8 - stbtt_int8
		// TypedefDecl- stbtt_uint16 - stbtt_uint16
		// TypedefDecl- stbtt_int16 - stbtt_int16
		// TypedefDecl- stbtt_uint32 - stbtt_uint32
		// TypedefDecl- stbtt_int32 - stbtt_int32
		// TypedefDecl- stbtt__check_size32 - stbtt__check_size32
			// ConditionalOperator-  - int
				// BinaryOperator-  - int [Binary Operator: EQ (==)]
					// UnaryExpr-  - unsigned long long [Unary Operator: 99999 ()]
						// TypeRef- stbtt_int32 - stbtt_int32
					// UnexposedExpr-  - unsigned long long
						// IntegerLiteral-  - int [Literal: 4]
				// IntegerLiteral-  - int [Literal: 1]
				// UnaryOperator-  - int [Unary Operator: Minus (-)]
					// IntegerLiteral-  - int [Literal: 1]
		// TypedefDecl- stbtt__check_size16 - stbtt__check_size16
			// ConditionalOperator-  - int
				// BinaryOperator-  - int [Binary Operator: EQ (==)]
					// UnaryExpr-  - unsigned long long [Unary Operator: 99999 ()]
						// TypeRef- stbtt_int16 - stbtt_int16
					// UnexposedExpr-  - unsigned long long
						// IntegerLiteral-  - int [Literal: 2]
				// IntegerLiteral-  - int [Literal: 1]
				// UnaryOperator-  - int [Unary Operator: Minus (-)]
					// IntegerLiteral-  - int [Literal: 1]
		// TypedefDecl- uintptr_t - uintptr_t
		// TypedefDecl- va_list - va_list
		// FunctionDecl- __va_start - void (char **, ...)
			// UnexposedAttr-  - 
			// ParmDecl-  - va_list *
				// TypeRef- va_list - va_list
		// TypedefDecl- size_t - size_t
		// TypedefDecl- rsize_t - rsize_t
			// TypeRef- size_t - size_t
		// TypedefDecl- intptr_t - intptr_t
		// TypedefDecl- ptrdiff_t - ptrdiff_t
		// TypedefDecl- wchar_t - wchar_t
		// TypedefDecl- wint_t - wint_t
		// TypedefDecl- wctype_t - wctype_t
		// TypedefDecl- errno_t - errno_t
		// TypedefDecl- __time32_t - __time32_t
		// TypedefDecl- __time64_t - __time64_t
		// TypedefDecl- time_t - time_t
			// TypeRef- __time64_t - __time64_t
		// FunctionDecl- _invalid_parameter_noinfo - void (void)
		// FunctionDecl- _invalid_parameter_noinfo_noreturn - void (void) __attribute__((noreturn))
		// FunctionDecl- _invoke_watson - void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))
			// ParmDecl-  - const wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl-  - const wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl-  - const wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl-  - unsigned int
			// ParmDecl-  - uintptr_t
				// TypeRef- uintptr_t - uintptr_t
		// StructDecl- threadlocaleinfostruct - struct threadlocaleinfostruct
		// StructDecl- threadmbcinfostruct - struct threadmbcinfostruct
		// TypedefDecl- pthreadlocinfo - pthreadlocinfo
			// TypeRef- struct threadlocaleinfostruct - struct threadlocaleinfostruct
		// TypedefDecl- pthreadmbcinfo - pthreadmbcinfo
			// TypeRef- struct threadmbcinfostruct - struct threadmbcinfostruct
		// StructDecl- __lc_time_data - struct __lc_time_data
		// StructDecl- localeinfo_struct - struct localeinfo_struct
			// UnexposedAttr-  - 
			// FieldDecl- locinfo - pthreadlocinfo
				// TypeRef- pthreadlocinfo - pthreadlocinfo
			// FieldDecl- mbcinfo - pthreadmbcinfo
				// TypeRef- pthreadmbcinfo - pthreadmbcinfo
		// TypedefDecl- _locale_tstruct - _locale_tstruct
			// StructDecl- localeinfo_struct - struct localeinfo_struct
				// UnexposedAttr-  - 
				// FieldDecl- locinfo - pthreadlocinfo
					// TypeRef- pthreadlocinfo - pthreadlocinfo
				// FieldDecl- mbcinfo - pthreadmbcinfo
					// TypeRef- pthreadmbcinfo - pthreadmbcinfo
		// TypedefDecl- _locale_t - _locale_t
			// StructDecl- localeinfo_struct - struct localeinfo_struct
				// UnexposedAttr-  - 
				// FieldDecl- locinfo - pthreadlocinfo
					// TypeRef- pthreadlocinfo - pthreadlocinfo
				// FieldDecl- mbcinfo - pthreadmbcinfo
					// TypeRef- pthreadmbcinfo - pthreadmbcinfo
		// StructDecl- localerefcount - struct localerefcount
			// UnexposedAttr-  - 
			// FieldDecl- locale - char *
			// FieldDecl- wlocale - wchar_t *
				// TypeRef- wchar_t - wchar_t
			// FieldDecl- refcount - int *
			// FieldDecl- wrefcount - int *
		// TypedefDecl- locrefcount - locrefcount
			// StructDecl- localerefcount - struct localerefcount
				// UnexposedAttr-  - 
				// FieldDecl- locale - char *
				// FieldDecl- wlocale - wchar_t *
					// TypeRef- wchar_t - wchar_t
				// FieldDecl- refcount - int *
				// FieldDecl- wrefcount - int *
		// StructDecl- threadlocaleinfostruct - struct threadlocaleinfostruct
			// UnexposedAttr-  - 
			// FieldDecl- refcount - int
			// FieldDecl- lc_codepage - unsigned int
			// FieldDecl- lc_collate_cp - unsigned int
			// FieldDecl- lc_time_cp - unsigned int
			// FieldDecl- lc_category - locrefcount [6]
				// TypeRef- locrefcount - locrefcount
				// IntegerLiteral-  - int [Literal: 6]
			// FieldDecl- lc_clike - int
			// FieldDecl- mb_cur_max - int
			// FieldDecl- lconv_intl_refcount - int *
			// FieldDecl- lconv_num_refcount - int *
			// FieldDecl- lconv_mon_refcount - int *
			// StructDecl- lconv - struct lconv
			// FieldDecl- lconv - struct lconv *
				// TypeRef- struct lconv - struct lconv
			// FieldDecl- ctype1_refcount - int *
			// FieldDecl- ctype1 - unsigned short *
			// FieldDecl- pctype - const unsigned short *
			// FieldDecl- pclmap - const unsigned char *
			// FieldDecl- pcumap - const unsigned char *
			// FieldDecl- lc_time_curr - struct __lc_time_data *
				// TypeRef- struct __lc_time_data - struct __lc_time_data
			// FieldDecl- locale_name - wchar_t *[6]
				// TypeRef- wchar_t - wchar_t
				// IntegerLiteral-  - int [Literal: 6]
		// TypedefDecl- threadlocinfo - threadlocinfo
			// StructDecl- threadlocaleinfostruct - struct threadlocaleinfostruct
				// UnexposedAttr-  - 
				// FieldDecl- refcount - int
				// FieldDecl- lc_codepage - unsigned int
				// FieldDecl- lc_collate_cp - unsigned int
				// FieldDecl- lc_time_cp - unsigned int
				// FieldDecl- lc_category - locrefcount [6]
					// TypeRef- locrefcount - locrefcount
					// IntegerLiteral-  - int [Literal: 6]
				// FieldDecl- lc_clike - int
				// FieldDecl- mb_cur_max - int
				// FieldDecl- lconv_intl_refcount - int *
				// FieldDecl- lconv_num_refcount - int *
				// FieldDecl- lconv_mon_refcount - int *
				// StructDecl- lconv - struct lconv
				// FieldDecl- lconv - struct lconv *
					// TypeRef- struct lconv - struct lconv
				// FieldDecl- ctype1_refcount - int *
				// FieldDecl- ctype1 - unsigned short *
				// FieldDecl- pctype - const unsigned short *
				// FieldDecl- pclmap - const unsigned char *
				// FieldDecl- pcumap - const unsigned char *
				// FieldDecl- lc_time_curr - struct __lc_time_data *
					// TypeRef- struct __lc_time_data - struct __lc_time_data
				// FieldDecl- locale_name - wchar_t *[6]
					// TypeRef- wchar_t - wchar_t
					// IntegerLiteral-  - int [Literal: 6]
		// StructDecl- _exception - struct _exception
			// UnexposedAttr-  - 
			// FieldDecl- type - int
			// FieldDecl- name - char *
			// FieldDecl- arg1 - double
			// FieldDecl- arg2 - double
			// FieldDecl- retval - double
		// StructDecl- _complex - struct _complex
			// UnexposedAttr-  - 
			// FieldDecl- x - double
			// FieldDecl- y - double
		// TypedefDecl- float_t - float_t
		// TypedefDecl- double_t - double_t
		// VarDecl- _HUGE - double
		// FunctionDecl- _fperrraise - void (int)
			// ParmDecl- _Except - int
		// FunctionDecl- _dclass - short (double)
			// ParmDecl- _X - double
		// FunctionDecl- _ldclass - short (long double)
			// ParmDecl- _X - long double
		// FunctionDecl- _fdclass - short (float)
			// ParmDecl- _X - float
		// FunctionDecl- _dsign - int (double)
			// ParmDecl- _X - double
		// FunctionDecl- _ldsign - int (long double)
			// ParmDecl- _X - long double
		// FunctionDecl- _fdsign - int (float)
			// ParmDecl- _X - float
		// FunctionDecl- _dpcomp - int (double, double)
			// ParmDecl- _X - double
			// ParmDecl- _Y - double
		// FunctionDecl- _ldpcomp - int (long double, long double)
			// ParmDecl- _X - long double
			// ParmDecl- _Y - long double
		// FunctionDecl- _fdpcomp - int (float, float)
			// ParmDecl- _X - float
			// ParmDecl- _Y - float
		// FunctionDecl- _dtest - short (double *)
			// ParmDecl- _Px - double *
		// FunctionDecl- _ldtest - short (long double *)
			// ParmDecl- _Px - long double *
		// FunctionDecl- _fdtest - short (float *)
			// ParmDecl- _Px - float *
		// FunctionDecl- _d_int - short (double *, short)
			// ParmDecl- _Px - double *
			// ParmDecl- _Xexp - short
		// FunctionDecl- _ld_int - short (long double *, short)
			// ParmDecl- _Px - long double *
			// ParmDecl- _Xexp - short
		// FunctionDecl- _fd_int - short (float *, short)
			// ParmDecl- _Px - float *
			// ParmDecl- _Xexp - short
		// FunctionDecl- _dscale - short (double *, long)
			// ParmDecl- _Px - double *
			// ParmDecl- _Lexp - long
		// FunctionDecl- _ldscale - short (long double *, long)
			// ParmDecl- _Px - long double *
			// ParmDecl- _Lexp - long
		// FunctionDecl- _fdscale - short (float *, long)
			// ParmDecl- _Px - float *
			// ParmDecl- _Lexp - long
		// FunctionDecl- _dunscale - short (short *, double *)
			// ParmDecl- _Pex - short *
			// ParmDecl- _Px - double *
		// FunctionDecl- _ldunscale - short (short *, long double *)
			// ParmDecl- _Pex - short *
			// ParmDecl- _Px - long double *
		// FunctionDecl- _fdunscale - short (short *, float *)
			// ParmDecl- _Pex - short *
			// ParmDecl- _Px - float *
		// FunctionDecl- _dexp - short (double *, double, long)
			// ParmDecl- _Px - double *
			// ParmDecl- _Y - double
			// ParmDecl- _Eoff - long
		// FunctionDecl- _ldexp - short (long double *, long double, long)
			// ParmDecl- _Px - long double *
			// ParmDecl- _Y - long double
			// ParmDecl- _Eoff - long
		// FunctionDecl- _fdexp - short (float *, float, long)
			// ParmDecl- _Px - float *
			// ParmDecl- _Y - float
			// ParmDecl- _Eoff - long
		// FunctionDecl- _dnorm - short (unsigned short *)
			// ParmDecl- _Ps - unsigned short *
		// FunctionDecl- _fdnorm - short (unsigned short *)
			// ParmDecl- _Ps - unsigned short *
		// FunctionDecl- _dpoly - double (double, const double *, int)
			// ParmDecl- _X - double
			// ParmDecl- _Tab - const double *
			// ParmDecl- _N - int
		// FunctionDecl- _ldpoly - long double (long double, const long double *, int)
			// ParmDecl- _X - long double
			// ParmDecl- _Tab - const long double *
			// ParmDecl- _N - int
		// FunctionDecl- _fdpoly - float (float, const float *, int)
			// ParmDecl- _X - float
			// ParmDecl- _Tab - const float *
			// ParmDecl- _N - int
		// FunctionDecl- _dlog - double (double, int)
			// ParmDecl- _X - double
			// ParmDecl- _Baseflag - int
		// FunctionDecl- _ldlog - long double (long double, int)
			// ParmDecl- _X - long double
			// ParmDecl- _Baseflag - int
		// FunctionDecl- _fdlog - float (float, int)
			// ParmDecl- _X - float
			// ParmDecl- _Baseflag - int
		// FunctionDecl- _dsin - double (double, unsigned int)
			// ParmDecl- _X - double
			// ParmDecl- _Qoff - unsigned int
		// FunctionDecl- _ldsin - long double (long double, unsigned int)
			// ParmDecl- _X - long double
			// ParmDecl- _Qoff - unsigned int
		// FunctionDecl- _fdsin - float (float, unsigned int)
			// ParmDecl- _X - float
			// ParmDecl- _Qoff - unsigned int
		// UnionDecl-  - _double_val
			// UnexposedAttr-  - 
			// FieldDecl- _Sh - unsigned short [8]
				// IntegerLiteral-  - int [Literal: 8]
			// FieldDecl- _Val - double
		// TypedefDecl- _double_val - _double_val
			// UnionDecl-  - _double_val
				// UnexposedAttr-  - 
				// FieldDecl- _Sh - unsigned short [8]
					// IntegerLiteral-  - int [Literal: 8]
				// FieldDecl- _Val - double
		// UnionDecl-  - _float_val
			// UnexposedAttr-  - 
			// FieldDecl- _Sh - unsigned short [8]
				// IntegerLiteral-  - int [Literal: 8]
			// FieldDecl- _Val - float
		// TypedefDecl- _float_val - _float_val
			// UnionDecl-  - _float_val
				// UnexposedAttr-  - 
				// FieldDecl- _Sh - unsigned short [8]
					// IntegerLiteral-  - int [Literal: 8]
				// FieldDecl- _Val - float
		// UnionDecl-  - _ldouble_val
			// UnexposedAttr-  - 
			// FieldDecl- _Sh - unsigned short [8]
				// IntegerLiteral-  - int [Literal: 8]
			// FieldDecl- _Val - long double
		// TypedefDecl- _ldouble_val - _ldouble_val
			// UnionDecl-  - _ldouble_val
				// UnexposedAttr-  - 
				// FieldDecl- _Sh - unsigned short [8]
					// IntegerLiteral-  - int [Literal: 8]
				// FieldDecl- _Val - long double
		// UnionDecl-  - _float_const
			// UnexposedAttr-  - 
			// FieldDecl- _Word - unsigned short [8]
				// IntegerLiteral-  - int [Literal: 8]
			// FieldDecl- _Float - float
			// FieldDecl- _Double - double
			// FieldDecl- _Long_double - long double
		// TypedefDecl- _float_const - _float_const
			// UnionDecl-  - _float_const
				// UnexposedAttr-  - 
				// FieldDecl- _Word - unsigned short [8]
					// IntegerLiteral-  - int [Literal: 8]
				// FieldDecl- _Float - float
				// FieldDecl- _Double - double
				// FieldDecl- _Long_double - long double
		// VarDecl- _Denorm_C - const _float_const
			// TypeRef- _float_const - _float_const
		// VarDecl- _Inf_C - const _float_const
			// TypeRef- _float_const - _float_const
		// VarDecl- _Nan_C - const _float_const
			// TypeRef- _float_const - _float_const
		// VarDecl- _Snan_C - const _float_const
			// TypeRef- _float_const - _float_const
		// VarDecl- _Hugeval_C - const _float_const
			// TypeRef- _float_const - _float_const
		// VarDecl- _FDenorm_C - const _float_const
			// TypeRef- _float_const - _float_const
		// VarDecl- _FInf_C - const _float_const
			// TypeRef- _float_const - _float_const
		// VarDecl- _FNan_C - const _float_const
			// TypeRef- _float_const - _float_const
		// VarDecl- _FSnan_C - const _float_const
			// TypeRef- _float_const - _float_const
		// VarDecl- _LDenorm_C - const _float_const
			// TypeRef- _float_const - _float_const
		// VarDecl- _LInf_C - const _float_const
			// TypeRef- _float_const - _float_const
		// VarDecl- _LNan_C - const _float_const
			// TypeRef- _float_const - _float_const
		// VarDecl- _LSnan_C - const _float_const
			// TypeRef- _float_const - _float_const
		// VarDecl- _Eps_C - const _float_const
			// TypeRef- _float_const - _float_const
		// VarDecl- _Rteps_C - const _float_const
			// TypeRef- _float_const - _float_const
		// VarDecl- _FEps_C - const _float_const
			// TypeRef- _float_const - _float_const
		// VarDecl- _FRteps_C - const _float_const
			// TypeRef- _float_const - _float_const
		// VarDecl- _LEps_C - const _float_const
			// TypeRef- _float_const - _float_const
		// VarDecl- _LRteps_C - const _float_const
			// TypeRef- _float_const - _float_const
		// VarDecl- _Zero_C - const double
		// VarDecl- _Xbig_C - const double
		// VarDecl- _FZero_C - const float
		// VarDecl- _FXbig_C - const float
		// VarDecl- _LZero_C - const long double
		// VarDecl- _LXbig_C - const long double
		// FunctionDecl- abs - int (int)
			// UnexposedAttr-  - 
			// attribute(const)-  - 
			// ParmDecl- _X - int
		// FunctionDecl- labs - long (long)
			// UnexposedAttr-  - 
			// attribute(const)-  - 
			// ParmDecl- _X - long
		// FunctionDecl- llabs - long long (long long)
			// UnexposedAttr-  - 
			// attribute(const)-  - 
			// ParmDecl- _X - long long
		// FunctionDecl- acos - double (double)
			// UnexposedAttr-  - 
			// ParmDecl- _X - double
		// FunctionDecl- acosh - double (double)
			// UnexposedAttr-  - 
			// ParmDecl- _X - double
		// FunctionDecl- asin - double (double)
			// UnexposedAttr-  - 
			// ParmDecl- _X - double
		// FunctionDecl- asinh - double (double)
			// UnexposedAttr-  - 
			// ParmDecl- _X - double
		// FunctionDecl- atan - double (double)
			// UnexposedAttr-  - 
			// ParmDecl- _X - double
		// FunctionDecl- atanh - double (double)
			// UnexposedAttr-  - 
			// ParmDecl- _X - double
		// FunctionDecl- atan2 - double (double, double)
			// UnexposedAttr-  - 
			// ParmDecl- _Y - double
			// ParmDecl- _X - double
		// FunctionDecl- cbrt - double (double)
			// UnexposedAttr-  - 
			// ParmDecl- _X - double
		// FunctionDecl- copysign - double (double, double)
			// UnexposedAttr-  - 
			// attribute(const)-  - 
			// ParmDecl- _X - double
			// ParmDecl- _Y - double
		// FunctionDecl- cos - double (double)
			// UnexposedAttr-  - 
			// ParmDecl- _X - double
		// FunctionDecl- cosh - double (double)
			// UnexposedAttr-  - 
			// ParmDecl- _X - double
		// FunctionDecl- erf - double (double)
			// UnexposedAttr-  - 
			// ParmDecl- _X - double
		// FunctionDecl- erfc - double (double)
			// UnexposedAttr-  - 
			// ParmDecl- _X - double
		// FunctionDecl- exp - double (double)
			// UnexposedAttr-  - 
			// ParmDecl- _X - double
		// FunctionDecl- exp2 - double (double)
			// UnexposedAttr-  - 
			// ParmDecl- _X - double
		// FunctionDecl- expm1 - double (double)
			// UnexposedAttr-  - 
			// ParmDecl- _X - double
		// FunctionDecl- fabs - double (double)
			// UnexposedAttr-  - 
			// attribute(const)-  - 
			// ParmDecl- _X - double
		// FunctionDecl- fdim - double (double, double)
			// UnexposedAttr-  - 
			// ParmDecl- _X - double
			// ParmDecl- _Y - double
		// FunctionDecl- fma - double (double, double, double)
			// UnexposedAttr-  - 
			// ParmDecl- _X - double
			// ParmDecl- _Y - double
			// ParmDecl- _Z - double
		// FunctionDecl- fmax - double (double, double)
			// UnexposedAttr-  - 
			// attribute(const)-  - 
			// ParmDecl- _X - double
			// ParmDecl- _Y - double
		// FunctionDecl- fmin - double (double, double)
			// UnexposedAttr-  - 
			// attribute(const)-  - 
			// ParmDecl- _X - double
			// ParmDecl- _Y - double
		// FunctionDecl- fmod - double (double, double)
			// UnexposedAttr-  - 
			// ParmDecl- _X - double
			// ParmDecl- _Y - double
		// FunctionDecl- ilogb - int (double)
			// UnexposedAttr-  - 
			// ParmDecl- _X - double
		// FunctionDecl- lgamma - double (double)
			// UnexposedAttr-  - 
			// ParmDecl- _X - double
		// FunctionDecl- llrint - long long (double)
			// UnexposedAttr-  - 
			// ParmDecl- _X - double
		// FunctionDecl- llround - long long (double)
			// UnexposedAttr-  - 
			// ParmDecl- _X - double
		// FunctionDecl- log - double (double)
			// UnexposedAttr-  - 
			// ParmDecl- _X - double
		// FunctionDecl- log10 - double (double)
			// UnexposedAttr-  - 
			// ParmDecl- _X - double
		// FunctionDecl- log1p - double (double)
			// UnexposedAttr-  - 
			// ParmDecl- _X - double
		// FunctionDecl- log2 - double (double)
			// UnexposedAttr-  - 
			// ParmDecl- _X - double
		// FunctionDecl- logb - double (double)
			// UnexposedAttr-  - 
			// ParmDecl- _X - double
		// FunctionDecl- lrint - long (double)
			// UnexposedAttr-  - 
			// ParmDecl- _X - double
		// FunctionDecl- lround - long (double)
			// UnexposedAttr-  - 
			// ParmDecl- _X - double
		// FunctionDecl- nan - double (const char *)
			// UnexposedAttr-  - 
			// attribute(const)-  - 
			// ParmDecl-  - const char *
		// FunctionDecl- nearbyint - double (double)
			// UnexposedAttr-  - 
			// attribute(const)-  - 
			// ParmDecl- _X - double
		// FunctionDecl- nextafter - double (double, double)
			// UnexposedAttr-  - 
			// ParmDecl- _X - double
			// ParmDecl- _Y - double
		// FunctionDecl- nexttoward - double (double, long double)
			// UnexposedAttr-  - 
			// ParmDecl- _X - double
			// ParmDecl- _Y - long double
		// FunctionDecl- pow - double (double, double)
			// UnexposedAttr-  - 
			// ParmDecl- _X - double
			// ParmDecl- _Y - double
		// FunctionDecl- remainder - double (double, double)
			// UnexposedAttr-  - 
			// ParmDecl- _X - double
			// ParmDecl- _Y - double
		// FunctionDecl- remquo - double (double, double, int *)
			// ParmDecl- _X - double
			// ParmDecl- _Y - double
			// ParmDecl- _Z - int *
		// FunctionDecl- rint - double (double)
			// UnexposedAttr-  - 
			// attribute(const)-  - 
			// ParmDecl- _X - double
		// FunctionDecl- round - double (double)
			// UnexposedAttr-  - 
			// attribute(const)-  - 
			// ParmDecl- _X - double
		// FunctionDecl- scalbln - double (double, long)
			// UnexposedAttr-  - 
			// ParmDecl- _X - double
			// ParmDecl- _Y - long
		// FunctionDecl- scalbn - double (double, int)
			// UnexposedAttr-  - 
			// ParmDecl- _X - double
			// ParmDecl- _Y - int
		// FunctionDecl- sin - double (double)
			// UnexposedAttr-  - 
			// ParmDecl- _X - double
		// FunctionDecl- sinh - double (double)
			// UnexposedAttr-  - 
			// ParmDecl- _X - double
		// FunctionDecl- sqrt - double (double)
			// UnexposedAttr-  - 
			// ParmDecl- _X - double
		// FunctionDecl- tan - double (double)
			// UnexposedAttr-  - 
			// ParmDecl- _X - double
		// FunctionDecl- tanh - double (double)
			// UnexposedAttr-  - 
			// ParmDecl- _X - double
		// FunctionDecl- tgamma - double (double)
			// UnexposedAttr-  - 
			// ParmDecl- _X - double
		// FunctionDecl- trunc - double (double)
			// UnexposedAttr-  - 
			// attribute(const)-  - 
			// ParmDecl- _X - double
		// FunctionDecl- atof - double (const char *)
			// ParmDecl- _String - const char *
		// FunctionDecl- _atof_l - double (const char *, _locale_t)
			// ParmDecl- _String - const char *
			// ParmDecl- _Locale - _locale_t
				// TypeRef- _locale_t - _locale_t
		// FunctionDecl- _cabs - double (struct _complex)
			// ParmDecl- _Complex_value - struct _complex
				// TypeRef- struct _complex - struct _complex
		// FunctionDecl- ceil - double (double)
			// UnexposedAttr-  - 
			// attribute(const)-  - 
			// ParmDecl- _X - double
		// FunctionDecl- _chgsign - double (double)
			// ParmDecl- _X - double
		// FunctionDecl- _copysign - double (double, double)
			// ParmDecl- _Number - double
			// ParmDecl- _Sign - double
		// FunctionDecl- floor - double (double)
			// UnexposedAttr-  - 
			// attribute(const)-  - 
			// ParmDecl- _X - double
		// FunctionDecl- frexp - double (double, int *)
			// UnexposedAttr-  - 
			// ParmDecl- _X - double
			// ParmDecl- _Y - int *
		// FunctionDecl- _hypot - double (double, double)
			// ParmDecl- _X - double
			// ParmDecl- _Y - double
		// FunctionDecl- _j0 - double (double)
			// ParmDecl- _X - double
		// FunctionDecl- _j1 - double (double)
			// ParmDecl- _X - double
		// FunctionDecl- _jn - double (int, double)
			// ParmDecl- _X - int
			// ParmDecl- _Y - double
		// FunctionDecl- ldexp - double (double, int)
			// UnexposedAttr-  - 
			// ParmDecl- _X - double
			// ParmDecl- _Y - int
		// FunctionDecl- _matherr - int (struct _exception *)
			// ParmDecl- _Except - struct _exception *
				// TypeRef- struct _exception - struct _exception
		// FunctionDecl- modf - double (double, double *)
			// UnexposedAttr-  - 
			// ParmDecl- _X - double
			// ParmDecl- _Y - double *
		// FunctionDecl- _y0 - double (double)
			// ParmDecl- _X - double
		// FunctionDecl- _y1 - double (double)
			// ParmDecl- _X - double
		// FunctionDecl- _yn - double (int, double)
			// ParmDecl- _X - int
			// ParmDecl- _Y - double
		// FunctionDecl- hypot - double (double, double)
			// UnexposedAttr-  - 
			// ParmDecl- _X - double
			// ParmDecl- _Y - double
			// CompoundStmt-  - 
				// ReturnStmt-  - 
					// CallExpr- _hypot - double
						// UnexposedExpr- _hypot - double (*)(double, double) __attribute__((cdecl))
							// DeclRefExpr- _hypot - double (double, double)
						// UnexposedExpr- _X - double
							// DeclRefExpr- _X - double
						// UnexposedExpr- _Y - double
							// DeclRefExpr- _Y - double
		// FunctionDecl- acoshf - float (float)
			// UnexposedAttr-  - 
			// ParmDecl- _X - float
		// FunctionDecl- asinhf - float (float)
			// UnexposedAttr-  - 
			// ParmDecl- _X - float
		// FunctionDecl- atanhf - float (float)
			// UnexposedAttr-  - 
			// ParmDecl- _X - float
		// FunctionDecl- cbrtf - float (float)
			// UnexposedAttr-  - 
			// ParmDecl- _X - float
		// FunctionDecl- _chgsignf - float (float)
			// ParmDecl- _X - float
		// FunctionDecl- copysignf - float (float, float)
			// UnexposedAttr-  - 
			// attribute(const)-  - 
			// ParmDecl- _X - float
			// ParmDecl- _Y - float
		// FunctionDecl- _copysignf - float (float, float)
			// ParmDecl- _Number - float
			// ParmDecl- _Sign - float
		// FunctionDecl- erff - float (float)
			// UnexposedAttr-  - 
			// ParmDecl- _X - float
		// FunctionDecl- erfcf - float (float)
			// UnexposedAttr-  - 
			// ParmDecl- _X - float
		// FunctionDecl- expm1f - float (float)
			// UnexposedAttr-  - 
			// ParmDecl- _X - float
		// FunctionDecl- exp2f - float (float)
			// UnexposedAttr-  - 
			// ParmDecl- _X - float
		// FunctionDecl- fdimf - float (float, float)
			// UnexposedAttr-  - 
			// ParmDecl- _X - float
			// ParmDecl- _Y - float
		// FunctionDecl- fmaf - float (float, float, float)
			// UnexposedAttr-  - 
			// ParmDecl- _X - float
			// ParmDecl- _Y - float
			// ParmDecl- _Z - float
		// FunctionDecl- fmaxf - float (float, float)
			// UnexposedAttr-  - 
			// attribute(const)-  - 
			// ParmDecl- _X - float
			// ParmDecl- _Y - float
		// FunctionDecl- fminf - float (float, float)
			// UnexposedAttr-  - 
			// attribute(const)-  - 
			// ParmDecl- _X - float
			// ParmDecl- _Y - float
		// FunctionDecl- _hypotf - float (float, float)
			// ParmDecl- _X - float
			// ParmDecl- _Y - float
		// FunctionDecl- ilogbf - int (float)
			// UnexposedAttr-  - 
			// ParmDecl- _X - float
		// FunctionDecl- lgammaf - float (float)
			// UnexposedAttr-  - 
			// ParmDecl- _X - float
		// FunctionDecl- llrintf - long long (float)
			// UnexposedAttr-  - 
			// ParmDecl- _X - float
		// FunctionDecl- llroundf - long long (float)
			// UnexposedAttr-  - 
			// ParmDecl- _X - float
		// FunctionDecl- log1pf - float (float)
			// UnexposedAttr-  - 
			// ParmDecl- _X - float
		// FunctionDecl- log2f - float (float)
			// UnexposedAttr-  - 
			// ParmDecl- _X - float
		// FunctionDecl- logbf - float (float)
			// UnexposedAttr-  - 
			// ParmDecl- _X - float
		// FunctionDecl- lrintf - long (float)
			// UnexposedAttr-  - 
			// ParmDecl- _X - float
		// FunctionDecl- lroundf - long (float)
			// UnexposedAttr-  - 
			// ParmDecl- _X - float
		// FunctionDecl- nanf - float (const char *)
			// UnexposedAttr-  - 
			// attribute(const)-  - 
			// ParmDecl-  - const char *
		// FunctionDecl- nearbyintf - float (float)
			// UnexposedAttr-  - 
			// attribute(const)-  - 
			// ParmDecl- _X - float
		// FunctionDecl- nextafterf - float (float, float)
			// UnexposedAttr-  - 
			// ParmDecl- _X - float
			// ParmDecl- _Y - float
		// FunctionDecl- nexttowardf - float (float, long double)
			// UnexposedAttr-  - 
			// ParmDecl- _X - float
			// ParmDecl- _Y - long double
		// FunctionDecl- remainderf - float (float, float)
			// UnexposedAttr-  - 
			// ParmDecl- _X - float
			// ParmDecl- _Y - float
		// FunctionDecl- remquof - float (float, float, int *)
			// ParmDecl- _X - float
			// ParmDecl- _Y - float
			// ParmDecl- _Z - int *
		// FunctionDecl- rintf - float (float)
			// UnexposedAttr-  - 
			// attribute(const)-  - 
			// ParmDecl- _X - float
		// FunctionDecl- roundf - float (float)
			// UnexposedAttr-  - 
			// attribute(const)-  - 
			// ParmDecl- _X - float
		// FunctionDecl- scalblnf - float (float, long)
			// UnexposedAttr-  - 
			// ParmDecl- _X - float
			// ParmDecl- _Y - long
		// FunctionDecl- scalbnf - float (float, int)
			// UnexposedAttr-  - 
			// ParmDecl- _X - float
			// ParmDecl- _Y - int
		// FunctionDecl- tgammaf - float (float)
			// UnexposedAttr-  - 
			// ParmDecl- _X - float
		// FunctionDecl- truncf - float (float)
			// UnexposedAttr-  - 
			// attribute(const)-  - 
			// ParmDecl- _X - float
		// FunctionDecl- _logbf - float (float)
			// ParmDecl- _X - float
		// FunctionDecl- _nextafterf - float (float, float)
			// ParmDecl- _X - float
			// ParmDecl- _Y - float
		// FunctionDecl- _finitef - int (float)
			// ParmDecl- _X - float
		// FunctionDecl- _isnanf - int (float)
			// ParmDecl- _X - float
		// FunctionDecl- _fpclassf - int (float)
			// ParmDecl- _X - float
		// FunctionDecl- _set_FMA3_enable - int (int)
			// ParmDecl- _Flag - int
		// FunctionDecl- acosf - float (float)
			// UnexposedAttr-  - 
			// ParmDecl- _X - float
		// FunctionDecl- asinf - float (float)
			// UnexposedAttr-  - 
			// ParmDecl- _X - float
		// FunctionDecl- atan2f - float (float, float)
			// UnexposedAttr-  - 
			// ParmDecl- _Y - float
			// ParmDecl- _X - float
		// FunctionDecl- atanf - float (float)
			// UnexposedAttr-  - 
			// ParmDecl- _X - float
		// FunctionDecl- ceilf - float (float)
			// UnexposedAttr-  - 
			// attribute(const)-  - 
			// ParmDecl- _X - float
		// FunctionDecl- cosf - float (float)
			// UnexposedAttr-  - 
			// ParmDecl- _X - float
		// FunctionDecl- coshf - float (float)
			// UnexposedAttr-  - 
			// ParmDecl- _X - float
		// FunctionDecl- expf - float (float)
			// UnexposedAttr-  - 
			// ParmDecl- _X - float
		// FunctionDecl- fabsf - float (float)
			// UnexposedAttr-  - 
			// attribute(const)-  - 
			// ParmDecl- _X - float
			// CompoundStmt-  - 
				// ReturnStmt-  - 
					// CStyleCastExpr-  - float
						// CallExpr- fabs - double
							// UnexposedExpr- fabs - double (*)(double)
								// DeclRefExpr- fabs - double (double)
							// UnexposedExpr- _X - double
								// UnexposedExpr- _X - float
									// DeclRefExpr- _X - float
		// FunctionDecl- floorf - float (float)
			// UnexposedAttr-  - 
			// attribute(const)-  - 
			// ParmDecl- _X - float
		// FunctionDecl- fmodf - float (float, float)
			// UnexposedAttr-  - 
			// ParmDecl- _X - float
			// ParmDecl- _Y - float
		// FunctionDecl- frexpf - float (float, int *)
			// UnexposedAttr-  - 
			// ParmDecl- _X - float
			// ParmDecl- _Y - int *
			// CompoundStmt-  - 
				// ReturnStmt-  - 
					// CStyleCastExpr-  - float
						// CallExpr- frexp - double
							// UnexposedExpr- frexp - double (*)(double, int *)
								// DeclRefExpr- frexp - double (double, int *)
							// UnexposedExpr- _X - double
								// UnexposedExpr- _X - float
									// DeclRefExpr- _X - float
							// UnexposedExpr- _Y - int *
								// DeclRefExpr- _Y - int *
		// FunctionDecl- hypotf - float (float, float)
			// UnexposedAttr-  - 
			// ParmDecl- _X - float
			// ParmDecl- _Y - float
			// CompoundStmt-  - 
				// ReturnStmt-  - 
					// CallExpr- _hypotf - float
						// UnexposedExpr- _hypotf - float (*)(float, float) __attribute__((cdecl))
							// DeclRefExpr- _hypotf - float (float, float)
						// UnexposedExpr- _X - float
							// DeclRefExpr- _X - float
						// UnexposedExpr- _Y - float
							// DeclRefExpr- _Y - float
		// FunctionDecl- ldexpf - float (float, int)
			// UnexposedAttr-  - 
			// ParmDecl- _X - float
			// ParmDecl- _Y - int
			// CompoundStmt-  - 
				// ReturnStmt-  - 
					// CStyleCastExpr-  - float
						// CallExpr- ldexp - double
							// UnexposedExpr- ldexp - double (*)(double, int)
								// DeclRefExpr- ldexp - double (double, int)
							// UnexposedExpr- _X - double
								// UnexposedExpr- _X - float
									// DeclRefExpr- _X - float
							// UnexposedExpr- _Y - int
								// DeclRefExpr- _Y - int
		// FunctionDecl- log10f - float (float)
			// UnexposedAttr-  - 
			// ParmDecl- _X - float
		// FunctionDecl- logf - float (float)
			// UnexposedAttr-  - 
			// ParmDecl- _X - float
		// FunctionDecl- modff - float (float, float *)
			// UnexposedAttr-  - 
			// ParmDecl- _X - float
			// ParmDecl- _Y - float *
		// FunctionDecl- powf - float (float, float)
			// UnexposedAttr-  - 
			// ParmDecl- _X - float
			// ParmDecl- _Y - float
		// FunctionDecl- sinf - float (float)
			// UnexposedAttr-  - 
			// ParmDecl- _X - float
		// FunctionDecl- sinhf - float (float)
			// UnexposedAttr-  - 
			// ParmDecl- _X - float
		// FunctionDecl- sqrtf - float (float)
			// UnexposedAttr-  - 
			// ParmDecl- _X - float
		// FunctionDecl- tanf - float (float)
			// UnexposedAttr-  - 
			// ParmDecl- _X - float
		// FunctionDecl- tanhf - float (float)
			// UnexposedAttr-  - 
			// ParmDecl- _X - float
		// FunctionDecl- acoshl - long double (long double)
			// UnexposedAttr-  - 
			// ParmDecl- _X - long double
		// FunctionDecl- acosl - long double (long double)
			// UnexposedAttr-  - 
			// ParmDecl- _X - long double
			// CompoundStmt-  - 
				// ReturnStmt-  - 
					// UnexposedExpr- acos - long double
						// CallExpr- acos - double
							// UnexposedExpr- acos - double (*)(double)
								// DeclRefExpr- acos - double (double)
							// CStyleCastExpr-  - double
								// UnexposedExpr- _X - long double
									// DeclRefExpr- _X - long double
		// FunctionDecl- asinhl - long double (long double)
			// UnexposedAttr-  - 
			// ParmDecl- _X - long double
		// FunctionDecl- asinl - long double (long double)
			// UnexposedAttr-  - 
			// ParmDecl- _X - long double
			// CompoundStmt-  - 
				// ReturnStmt-  - 
					// UnexposedExpr- asin - long double
						// CallExpr- asin - double
							// UnexposedExpr- asin - double (*)(double)
								// DeclRefExpr- asin - double (double)
							// CStyleCastExpr-  - double
								// UnexposedExpr- _X - long double
									// DeclRefExpr- _X - long double
		// FunctionDecl- atan2l - long double (long double, long double)
			// UnexposedAttr-  - 
			// ParmDecl- _Y - long double
			// ParmDecl- _X - long double
			// CompoundStmt-  - 
				// ReturnStmt-  - 
					// UnexposedExpr- atan2 - long double
						// CallExpr- atan2 - double
							// UnexposedExpr- atan2 - double (*)(double, double)
								// DeclRefExpr- atan2 - double (double, double)
							// CStyleCastExpr-  - double
								// UnexposedExpr- _Y - long double
									// DeclRefExpr- _Y - long double
							// CStyleCastExpr-  - double
								// UnexposedExpr- _X - long double
									// DeclRefExpr- _X - long double
		// FunctionDecl- atanhl - long double (long double)
			// UnexposedAttr-  - 
			// ParmDecl- _X - long double
		// FunctionDecl- atanl - long double (long double)
			// UnexposedAttr-  - 
			// ParmDecl- _X - long double
			// CompoundStmt-  - 
				// ReturnStmt-  - 
					// UnexposedExpr- atan - long double
						// CallExpr- atan - double
							// UnexposedExpr- atan - double (*)(double)
								// DeclRefExpr- atan - double (double)
							// CStyleCastExpr-  - double
								// UnexposedExpr- _X - long double
									// DeclRefExpr- _X - long double
		// FunctionDecl- cbrtl - long double (long double)
			// UnexposedAttr-  - 
			// ParmDecl- _X - long double
		// FunctionDecl- ceill - long double (long double)
			// UnexposedAttr-  - 
			// attribute(const)-  - 
			// ParmDecl- _X - long double
			// CompoundStmt-  - 
				// ReturnStmt-  - 
					// UnexposedExpr- ceil - long double
						// CallExpr- ceil - double
							// UnexposedExpr- ceil - double (*)(double)
								// DeclRefExpr- ceil - double (double)
							// CStyleCastExpr-  - double
								// UnexposedExpr- _X - long double
									// DeclRefExpr- _X - long double
		// FunctionDecl- _chgsignl - long double (long double)
			// ParmDecl- _X - long double
			// CompoundStmt-  - 
				// ReturnStmt-  - 
					// UnexposedExpr- _chgsign - long double
						// CallExpr- _chgsign - double
							// UnexposedExpr- _chgsign - double (*)(double) __attribute__((cdecl))
								// DeclRefExpr- _chgsign - double (double)
							// CStyleCastExpr-  - double
								// UnexposedExpr- _X - long double
									// DeclRefExpr- _X - long double
		// FunctionDecl- copysignl - long double (long double, long double)
			// UnexposedAttr-  - 
			// attribute(const)-  - 
			// ParmDecl- _X - long double
			// ParmDecl- _Y - long double
		// FunctionDecl- _copysignl - long double (long double, long double)
			// ParmDecl- _X - long double
			// ParmDecl- _Y - long double
			// CompoundStmt-  - 
				// ReturnStmt-  - 
					// UnexposedExpr- _copysign - long double
						// CallExpr- _copysign - double
							// UnexposedExpr- _copysign - double (*)(double, double) __attribute__((cdecl))
								// DeclRefExpr- _copysign - double (double, double)
							// CStyleCastExpr-  - double
								// UnexposedExpr- _X - long double
									// DeclRefExpr- _X - long double
							// CStyleCastExpr-  - double
								// UnexposedExpr- _Y - long double
									// DeclRefExpr- _Y - long double
		// FunctionDecl- coshl - long double (long double)
			// UnexposedAttr-  - 
			// ParmDecl- _X - long double
			// CompoundStmt-  - 
				// ReturnStmt-  - 
					// UnexposedExpr- cosh - long double
						// CallExpr- cosh - double
							// UnexposedExpr- cosh - double (*)(double)
								// DeclRefExpr- cosh - double (double)
							// CStyleCastExpr-  - double
								// UnexposedExpr- _X - long double
									// DeclRefExpr- _X - long double
		// FunctionDecl- cosl - long double (long double)
			// UnexposedAttr-  - 
			// ParmDecl- _X - long double
			// CompoundStmt-  - 
				// ReturnStmt-  - 
					// UnexposedExpr- cos - long double
						// CallExpr- cos - double
							// UnexposedExpr- cos - double (*)(double)
								// DeclRefExpr- cos - double (double)
							// CStyleCastExpr-  - double
								// UnexposedExpr- _X - long double
									// DeclRefExpr- _X - long double
		// FunctionDecl- erfl - long double (long double)
			// UnexposedAttr-  - 
			// ParmDecl- _X - long double
		// FunctionDecl- erfcl - long double (long double)
			// UnexposedAttr-  - 
			// ParmDecl- _X - long double
		// FunctionDecl- expl - long double (long double)
			// UnexposedAttr-  - 
			// ParmDecl- _X - long double
			// CompoundStmt-  - 
				// ReturnStmt-  - 
					// UnexposedExpr- exp - long double
						// CallExpr- exp - double
							// UnexposedExpr- exp - double (*)(double)
								// DeclRefExpr- exp - double (double)
							// CStyleCastExpr-  - double
								// UnexposedExpr- _X - long double
									// DeclRefExpr- _X - long double
		// FunctionDecl- exp2l - long double (long double)
			// UnexposedAttr-  - 
			// ParmDecl- _X - long double
		// FunctionDecl- expm1l - long double (long double)
			// UnexposedAttr-  - 
			// ParmDecl- _X - long double
		// FunctionDecl- fabsl - long double (long double)
			// UnexposedAttr-  - 
			// attribute(const)-  - 
			// ParmDecl- _X - long double
			// CompoundStmt-  - 
				// ReturnStmt-  - 
					// UnexposedExpr- fabs - long double
						// CallExpr- fabs - double
							// UnexposedExpr- fabs - double (*)(double)
								// DeclRefExpr- fabs - double (double)
							// CStyleCastExpr-  - double
								// UnexposedExpr- _X - long double
									// DeclRefExpr- _X - long double
		// FunctionDecl- fdiml - long double (long double, long double)
			// UnexposedAttr-  - 
			// ParmDecl- _X - long double
			// ParmDecl- _Y - long double
		// FunctionDecl- floorl - long double (long double)
			// UnexposedAttr-  - 
			// attribute(const)-  - 
			// ParmDecl- _X - long double
			// CompoundStmt-  - 
				// ReturnStmt-  - 
					// UnexposedExpr- floor - long double
						// CallExpr- floor - double
							// UnexposedExpr- floor - double (*)(double)
								// DeclRefExpr- floor - double (double)
							// CStyleCastExpr-  - double
								// UnexposedExpr- _X - long double
									// DeclRefExpr- _X - long double
		// FunctionDecl- fmal - long double (long double, long double, long double)
			// UnexposedAttr-  - 
			// ParmDecl- _X - long double
			// ParmDecl- _Y - long double
			// ParmDecl- _Z - long double
		// FunctionDecl- fmaxl - long double (long double, long double)
			// UnexposedAttr-  - 
			// attribute(const)-  - 
			// ParmDecl- _X - long double
			// ParmDecl- _Y - long double
		// FunctionDecl- fminl - long double (long double, long double)
			// UnexposedAttr-  - 
			// attribute(const)-  - 
			// ParmDecl- _X - long double
			// ParmDecl- _Y - long double
		// FunctionDecl- fmodl - long double (long double, long double)
			// UnexposedAttr-  - 
			// ParmDecl- _X - long double
			// ParmDecl- _Y - long double
			// CompoundStmt-  - 
				// ReturnStmt-  - 
					// UnexposedExpr- fmod - long double
						// CallExpr- fmod - double
							// UnexposedExpr- fmod - double (*)(double, double)
								// DeclRefExpr- fmod - double (double, double)
							// CStyleCastExpr-  - double
								// UnexposedExpr- _X - long double
									// DeclRefExpr- _X - long double
							// CStyleCastExpr-  - double
								// UnexposedExpr- _Y - long double
									// DeclRefExpr- _Y - long double
		// FunctionDecl- frexpl - long double (long double, int *)
			// UnexposedAttr-  - 
			// ParmDecl- _X - long double
			// ParmDecl- _Y - int *
			// CompoundStmt-  - 
				// ReturnStmt-  - 
					// UnexposedExpr- frexp - long double
						// CallExpr- frexp - double
							// UnexposedExpr- frexp - double (*)(double, int *)
								// DeclRefExpr- frexp - double (double, int *)
							// CStyleCastExpr-  - double
								// UnexposedExpr- _X - long double
									// DeclRefExpr- _X - long double
							// UnexposedExpr- _Y - int *
								// DeclRefExpr- _Y - int *
		// FunctionDecl- ilogbl - int (long double)
			// UnexposedAttr-  - 
			// ParmDecl- _X - long double
		// FunctionDecl- _hypotl - long double (long double, long double)
			// ParmDecl- _X - long double
			// ParmDecl- _Y - long double
			// CompoundStmt-  - 
				// ReturnStmt-  - 
					// UnexposedExpr- _hypot - long double
						// CallExpr- _hypot - double
							// UnexposedExpr- _hypot - double (*)(double, double) __attribute__((cdecl))
								// DeclRefExpr- _hypot - double (double, double)
							// CStyleCastExpr-  - double
								// UnexposedExpr- _X - long double
									// DeclRefExpr- _X - long double
							// CStyleCastExpr-  - double
								// UnexposedExpr- _Y - long double
									// DeclRefExpr- _Y - long double
		// FunctionDecl- hypotl - long double (long double, long double)
			// UnexposedAttr-  - 
			// ParmDecl- _X - long double
			// ParmDecl- _Y - long double
			// CompoundStmt-  - 
				// ReturnStmt-  - 
					// UnexposedExpr- _hypot - long double
						// CallExpr- _hypot - double
							// UnexposedExpr- _hypot - double (*)(double, double) __attribute__((cdecl))
								// DeclRefExpr- _hypot - double (double, double)
							// CStyleCastExpr-  - double
								// UnexposedExpr- _X - long double
									// DeclRefExpr- _X - long double
							// CStyleCastExpr-  - double
								// UnexposedExpr- _Y - long double
									// DeclRefExpr- _Y - long double
		// FunctionDecl- ldexpl - long double (long double, int)
			// UnexposedAttr-  - 
			// ParmDecl- _X - long double
			// ParmDecl- _Y - int
			// CompoundStmt-  - 
				// ReturnStmt-  - 
					// UnexposedExpr- ldexp - long double
						// CallExpr- ldexp - double
							// UnexposedExpr- ldexp - double (*)(double, int)
								// DeclRefExpr- ldexp - double (double, int)
							// CStyleCastExpr-  - double
								// UnexposedExpr- _X - long double
									// DeclRefExpr- _X - long double
							// UnexposedExpr- _Y - int
								// DeclRefExpr- _Y - int
		// FunctionDecl- lgammal - long double (long double)
			// UnexposedAttr-  - 
			// ParmDecl- _X - long double
		// FunctionDecl- llrintl - long long (long double)
			// UnexposedAttr-  - 
			// ParmDecl- _X - long double
		// FunctionDecl- llroundl - long long (long double)
			// UnexposedAttr-  - 
			// ParmDecl- _X - long double
		// FunctionDecl- logl - long double (long double)
			// UnexposedAttr-  - 
			// ParmDecl- _X - long double
			// CompoundStmt-  - 
				// ReturnStmt-  - 
					// UnexposedExpr- log - long double
						// CallExpr- log - double
							// UnexposedExpr- log - double (*)(double)
								// DeclRefExpr- log - double (double)
							// CStyleCastExpr-  - double
								// UnexposedExpr- _X - long double
									// DeclRefExpr- _X - long double
		// FunctionDecl- log10l - long double (long double)
			// UnexposedAttr-  - 
			// ParmDecl- _X - long double
			// CompoundStmt-  - 
				// ReturnStmt-  - 
					// UnexposedExpr- log10 - long double
						// CallExpr- log10 - double
							// UnexposedExpr- log10 - double (*)(double)
								// DeclRefExpr- log10 - double (double)
							// CStyleCastExpr-  - double
								// UnexposedExpr- _X - long double
									// DeclRefExpr- _X - long double
		// FunctionDecl- log1pl - long double (long double)
			// UnexposedAttr-  - 
			// ParmDecl- _X - long double
		// FunctionDecl- log2l - long double (long double)
			// UnexposedAttr-  - 
			// ParmDecl- _X - long double
		// FunctionDecl- logbl - long double (long double)
			// UnexposedAttr-  - 
			// ParmDecl- _X - long double
		// FunctionDecl- lrintl - long (long double)
			// UnexposedAttr-  - 
			// ParmDecl- _X - long double
		// FunctionDecl- lroundl - long (long double)
			// UnexposedAttr-  - 
			// ParmDecl- _X - long double
		// FunctionDecl- modfl - long double (long double, long double *)
			// UnexposedAttr-  - 
			// ParmDecl- _X - long double
			// ParmDecl- _Y - long double *
			// CompoundStmt-  - 
				// DeclStmt-  - 
					// VarDecl- _F - double
					// VarDecl- _I - double
				// BinaryOperator-  - double [Binary Operator: Assign (=)]
					// DeclRefExpr- _F - double
					// CallExpr- modf - double
						// UnexposedExpr- modf - double (*)(double, double *)
							// DeclRefExpr- modf - double (double, double *)
						// CStyleCastExpr-  - double
							// UnexposedExpr- _X - long double
								// DeclRefExpr- _X - long double
						// UnaryOperator-  - double * [Unary Operator: AddrOf (&)]
							// DeclRefExpr- _I - double
				// BinaryOperator-  - long double [Binary Operator: Assign (=)]
					// UnaryOperator-  - long double [Unary Operator: Deref (*)]
						// UnexposedExpr- _Y - long double *
							// DeclRefExpr- _Y - long double *
					// UnexposedExpr- _I - long double
						// UnexposedExpr- _I - double
							// DeclRefExpr- _I - double
				// ReturnStmt-  - 
					// UnexposedExpr- _F - long double
						// UnexposedExpr- _F - double
							// DeclRefExpr- _F - double
		// FunctionDecl- nanl - long double (const char *)
			// UnexposedAttr-  - 
			// attribute(const)-  - 
			// ParmDecl-  - const char *
		// FunctionDecl- nearbyintl - long double (long double)
			// UnexposedAttr-  - 
			// attribute(const)-  - 
			// ParmDecl- _X - long double
		// FunctionDecl- nextafterl - long double (long double, long double)
			// UnexposedAttr-  - 
			// ParmDecl- _X - long double
			// ParmDecl- _Y - long double
		// FunctionDecl- nexttowardl - long double (long double, long double)
			// UnexposedAttr-  - 
			// ParmDecl- _X - long double
			// ParmDecl- _Y - long double
		// FunctionDecl- powl - long double (long double, long double)
			// UnexposedAttr-  - 
			// ParmDecl- _X - long double
			// ParmDecl- _Y - long double
			// CompoundStmt-  - 
				// ReturnStmt-  - 
					// UnexposedExpr- pow - long double
						// CallExpr- pow - double
							// UnexposedExpr- pow - double (*)(double, double)
								// DeclRefExpr- pow - double (double, double)
							// CStyleCastExpr-  - double
								// UnexposedExpr- _X - long double
									// DeclRefExpr- _X - long double
							// CStyleCastExpr-  - double
								// UnexposedExpr- _Y - long double
									// DeclRefExpr- _Y - long double
		// FunctionDecl- remainderl - long double (long double, long double)
			// UnexposedAttr-  - 
			// ParmDecl- _X - long double
			// ParmDecl- _Y - long double
		// FunctionDecl- remquol - long double (long double, long double, int *)
			// ParmDecl- _X - long double
			// ParmDecl- _Y - long double
			// ParmDecl- _Z - int *
		// FunctionDecl- rintl - long double (long double)
			// UnexposedAttr-  - 
			// attribute(const)-  - 
			// ParmDecl- _X - long double
		// FunctionDecl- roundl - long double (long double)
			// UnexposedAttr-  - 
			// attribute(const)-  - 
			// ParmDecl- _X - long double
		// FunctionDecl- scalblnl - long double (long double, long)
			// UnexposedAttr-  - 
			// ParmDecl- _X - long double
			// ParmDecl- _Y - long
		// FunctionDecl- scalbnl - long double (long double, int)
			// UnexposedAttr-  - 
			// ParmDecl- _X - long double
			// ParmDecl- _Y - int
		// FunctionDecl- sinhl - long double (long double)
			// UnexposedAttr-  - 
			// ParmDecl- _X - long double
			// CompoundStmt-  - 
				// ReturnStmt-  - 
					// UnexposedExpr- sinh - long double
						// CallExpr- sinh - double
							// UnexposedExpr- sinh - double (*)(double)
								// DeclRefExpr- sinh - double (double)
							// CStyleCastExpr-  - double
								// UnexposedExpr- _X - long double
									// DeclRefExpr- _X - long double
		// FunctionDecl- sinl - long double (long double)
			// UnexposedAttr-  - 
			// ParmDecl- _X - long double
			// CompoundStmt-  - 
				// ReturnStmt-  - 
					// UnexposedExpr- sin - long double
						// CallExpr- sin - double
							// UnexposedExpr- sin - double (*)(double)
								// DeclRefExpr- sin - double (double)
							// CStyleCastExpr-  - double
								// UnexposedExpr- _X - long double
									// DeclRefExpr- _X - long double
		// FunctionDecl- sqrtl - long double (long double)
			// UnexposedAttr-  - 
			// ParmDecl- _X - long double
			// CompoundStmt-  - 
				// ReturnStmt-  - 
					// UnexposedExpr- sqrt - long double
						// CallExpr- sqrt - double
							// UnexposedExpr- sqrt - double (*)(double)
								// DeclRefExpr- sqrt - double (double)
							// CStyleCastExpr-  - double
								// UnexposedExpr- _X - long double
									// DeclRefExpr- _X - long double
		// FunctionDecl- tanhl - long double (long double)
			// UnexposedAttr-  - 
			// ParmDecl- _X - long double
			// CompoundStmt-  - 
				// ReturnStmt-  - 
					// UnexposedExpr- tanh - long double
						// CallExpr- tanh - double
							// UnexposedExpr- tanh - double (*)(double)
								// DeclRefExpr- tanh - double (double)
							// CStyleCastExpr-  - double
								// UnexposedExpr- _X - long double
									// DeclRefExpr- _X - long double
		// FunctionDecl- tanl - long double (long double)
			// UnexposedAttr-  - 
			// ParmDecl- _X - long double
			// CompoundStmt-  - 
				// ReturnStmt-  - 
					// UnexposedExpr- tan - long double
						// CallExpr- tan - double
							// UnexposedExpr- tan - double (*)(double)
								// DeclRefExpr- tan - double (double)
							// CStyleCastExpr-  - double
								// UnexposedExpr- _X - long double
									// DeclRefExpr- _X - long double
		// FunctionDecl- tgammal - long double (long double)
			// UnexposedAttr-  - 
			// ParmDecl- _X - long double
		// FunctionDecl- truncl - long double (long double)
			// UnexposedAttr-  - 
			// attribute(const)-  - 
			// ParmDecl- _X - long double
		// VarDecl- HUGE - double
		// FunctionDecl- j0 - double (double)
			// UnexposedAttr-  - 
			// UnexposedAttr-  - 
			// ParmDecl- _X - double
		// FunctionDecl- j1 - double (double)
			// UnexposedAttr-  - 
			// UnexposedAttr-  - 
			// ParmDecl- _X - double
		// FunctionDecl- jn - double (int, double)
			// UnexposedAttr-  - 
			// UnexposedAttr-  - 
			// ParmDecl- _X - int
			// ParmDecl- _Y - double
		// FunctionDecl- y0 - double (double)
			// UnexposedAttr-  - 
			// UnexposedAttr-  - 
			// ParmDecl- _X - double
		// FunctionDecl- y1 - double (double)
			// UnexposedAttr-  - 
			// UnexposedAttr-  - 
			// ParmDecl- _X - double
		// FunctionDecl- yn - double (int, double)
			// UnexposedAttr-  - 
			// UnexposedAttr-  - 
			// ParmDecl- _X - int
			// ParmDecl- _Y - double
		// TypedefDecl- _onexit_t - _onexit_t
		// StructDecl- _div_t - struct _div_t
			// UnexposedAttr-  - 
			// FieldDecl- quot - int
			// FieldDecl- rem - int
		// TypedefDecl- div_t - div_t
			// StructDecl- _div_t - struct _div_t
				// UnexposedAttr-  - 
				// FieldDecl- quot - int
				// FieldDecl- rem - int
		// StructDecl- _ldiv_t - struct _ldiv_t
			// UnexposedAttr-  - 
			// FieldDecl- quot - long
			// FieldDecl- rem - long
		// TypedefDecl- ldiv_t - ldiv_t
			// StructDecl- _ldiv_t - struct _ldiv_t
				// UnexposedAttr-  - 
				// FieldDecl- quot - long
				// FieldDecl- rem - long
		// StructDecl- _lldiv_t - struct _lldiv_t
			// UnexposedAttr-  - 
			// FieldDecl- quot - long long
			// FieldDecl- rem - long long
		// TypedefDecl- lldiv_t - lldiv_t
			// StructDecl- _lldiv_t - struct _lldiv_t
				// UnexposedAttr-  - 
				// FieldDecl- quot - long long
				// FieldDecl- rem - long long
		// StructDecl-  - _LDOUBLE
			// UnexposedAttr-  - 
			// FieldDecl- ld - unsigned char [10]
				// IntegerLiteral-  - int [Literal: 10]
		// TypedefDecl- _LDOUBLE - _LDOUBLE
			// StructDecl-  - _LDOUBLE
				// UnexposedAttr-  - 
				// FieldDecl- ld - unsigned char [10]
					// IntegerLiteral-  - int [Literal: 10]
		// StructDecl-  - _CRT_DOUBLE
			// FieldDecl- x - double
		// TypedefDecl- _CRT_DOUBLE - _CRT_DOUBLE
			// StructDecl-  - _CRT_DOUBLE
				// FieldDecl- x - double
		// StructDecl-  - _CRT_FLOAT
			// FieldDecl- f - float
		// TypedefDecl- _CRT_FLOAT - _CRT_FLOAT
			// StructDecl-  - _CRT_FLOAT
				// FieldDecl- f - float
		// StructDecl-  - _LONGDOUBLE
			// FieldDecl- x - long double
		// TypedefDecl- _LONGDOUBLE - _LONGDOUBLE
			// StructDecl-  - _LONGDOUBLE
				// FieldDecl- x - long double
		// StructDecl-  - _LDBL12
			// UnexposedAttr-  - 
			// FieldDecl- ld12 - unsigned char [12]
				// IntegerLiteral-  - int [Literal: 12]
		// TypedefDecl- _LDBL12 - _LDBL12
			// StructDecl-  - _LDBL12
				// UnexposedAttr-  - 
				// FieldDecl- ld12 - unsigned char [12]
					// IntegerLiteral-  - int [Literal: 12]
		// VarDecl- __mb_cur_max - int
		// FunctionDecl- ___mb_cur_max_func - int (void)
		// FunctionDecl- ___mb_cur_max_l_func - int (_locale_t)
			// ParmDecl-  - _locale_t
				// TypeRef- _locale_t - _locale_t
		// TypedefDecl- _purecall_handler - _purecall_handler
		// FunctionDecl- _set_purecall_handler - _purecall_handler (_purecall_handler)
			// TypeRef- _purecall_handler - _purecall_handler
			// ParmDecl- _Handler - _purecall_handler
				// TypeRef- _purecall_handler - _purecall_handler
		// FunctionDecl- _get_purecall_handler - _purecall_handler (void)
			// TypeRef- _purecall_handler - _purecall_handler
		// TypedefDecl- _invalid_parameter_handler - _invalid_parameter_handler
			// ParmDecl-  - const wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl-  - const wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl-  - const wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl-  - unsigned int
			// ParmDecl-  - uintptr_t
				// TypeRef- uintptr_t - uintptr_t
		// FunctionDecl- _set_invalid_parameter_handler - _invalid_parameter_handler (_invalid_parameter_handler)
			// TypeRef- _invalid_parameter_handler - _invalid_parameter_handler
			// ParmDecl- _Handler - _invalid_parameter_handler
				// TypeRef- _invalid_parameter_handler - _invalid_parameter_handler
		// FunctionDecl- _get_invalid_parameter_handler - _invalid_parameter_handler (void)
			// TypeRef- _invalid_parameter_handler - _invalid_parameter_handler
		// FunctionDecl- _errno - int *(void)
		// FunctionDecl- _set_errno - errno_t (int)
			// TypeRef- errno_t - errno_t
			// ParmDecl- _Value - int
		// FunctionDecl- _get_errno - errno_t (int *)
			// TypeRef- errno_t - errno_t
			// ParmDecl- _Value - int *
		// FunctionDecl- __doserrno - unsigned long *(void)
		// FunctionDecl- _set_doserrno - errno_t (unsigned long)
			// TypeRef- errno_t - errno_t
			// ParmDecl- _Value - unsigned long
		// FunctionDecl- _get_doserrno - errno_t (unsigned long *)
			// TypeRef- errno_t - errno_t
			// ParmDecl- _Value - unsigned long *
		// FunctionDecl- __sys_errlist - char **(void)
			// UnexposedAttr-  - 
		// FunctionDecl- __sys_nerr - int *(void)
			// UnexposedAttr-  - 
		// VarDecl- __argc - int
		// VarDecl- __argv - char **
		// VarDecl- __wargv - wchar_t **
			// TypeRef- wchar_t - wchar_t
		// VarDecl- _environ - char **
		// VarDecl- _wenviron - wchar_t **
			// TypeRef- wchar_t - wchar_t
		// VarDecl- _pgmptr - char *
			// UnexposedAttr-  - 
		// VarDecl- _wpgmptr - wchar_t *
			// UnexposedAttr-  - 
			// TypeRef- wchar_t - wchar_t
		// FunctionDecl- _get_pgmptr - errno_t (char **)
			// TypeRef- errno_t - errno_t
			// ParmDecl- _Value - char **
		// FunctionDecl- _get_wpgmptr - errno_t (wchar_t **)
			// TypeRef- errno_t - errno_t
			// ParmDecl- _Value - wchar_t **
				// TypeRef- wchar_t - wchar_t
		// VarDecl- _fmode - int
			// UnexposedAttr-  - 
		// FunctionDecl- _set_fmode - errno_t (int)
			// TypeRef- errno_t - errno_t
			// ParmDecl- _Mode - int
		// FunctionDecl- _get_fmode - errno_t (int *)
			// TypeRef- errno_t - errno_t
			// ParmDecl- _PMode - int *
		// FunctionDecl- exit - void (int) __attribute__((noreturn))
			// ParmDecl- _Code - int
		// FunctionDecl- _exit - void (int) __attribute__((noreturn))
			// ParmDecl- _Code - int
		// FunctionDecl- abort - void (void) __attribute__((noreturn))
		// FunctionDecl- _set_abort_behavior - unsigned int (unsigned int, unsigned int)
			// ParmDecl- _Flags - unsigned int
			// ParmDecl- _Mask - unsigned int
		// FunctionDecl- abs - int (int)
			// UnexposedAttr-  - 
			// attribute(const)-  - 
			// ParmDecl- _X - int
		// FunctionDecl- labs - long (long)
			// UnexposedAttr-  - 
			// attribute(const)-  - 
			// ParmDecl- _X - long
		// FunctionDecl- llabs - long long (long long)
			// UnexposedAttr-  - 
			// attribute(const)-  - 
			// ParmDecl- _X - long long
		// FunctionDecl- _abs64 - long long (long long)
			// ParmDecl-  - long long
		// FunctionDecl- atexit - int (void (*)(void) __attribute__((cdecl)))
			// ParmDecl-  - void (*)(void) __attribute__((cdecl))
		// FunctionDecl- atof - double (const char *)
			// ParmDecl- _String - const char *
		// FunctionDecl- _atof_l - double (const char *, _locale_t)
			// ParmDecl- _String - const char *
			// ParmDecl- _Locale - _locale_t
				// TypeRef- _locale_t - _locale_t
		// FunctionDecl- atoi - int (const char *)
			// ParmDecl- _Str - const char *
		// FunctionDecl- _atoi_l - int (const char *, _locale_t)
			// ParmDecl- _Str - const char *
			// ParmDecl- _Locale - _locale_t
				// TypeRef- _locale_t - _locale_t
		// FunctionDecl- atol - long (const char *)
			// ParmDecl- _Str - const char *
		// FunctionDecl- _atol_l - long (const char *, _locale_t)
			// ParmDecl- _Str - const char *
			// ParmDecl- _Locale - _locale_t
				// TypeRef- _locale_t - _locale_t
		// FunctionDecl- atoll - long long (const char *)
			// ParmDecl- _Str - const char *
		// FunctionDecl- _atoll_l - long long (const char *, _locale_t)
			// ParmDecl- _Str - const char *
			// ParmDecl- _Locale - _locale_t
				// TypeRef- _locale_t - _locale_t
		// FunctionDecl- bsearch_s - void *(const void *, const void *, rsize_t, rsize_t, int (*)(void *, const void *, const void *) __attribute__((cdecl)), void *)
			// ParmDecl- _Key - const void *
			// ParmDecl- _Base - const void *
			// ParmDecl- _NumOfElements - rsize_t
				// TypeRef- rsize_t - rsize_t
			// ParmDecl- _SizeOfElements - rsize_t
				// TypeRef- rsize_t - rsize_t
			// ParmDecl- _PtFuncCompare - int (*)(void *, const void *, const void *) __attribute__((cdecl))
				// ParmDecl-  - void *
				// ParmDecl-  - const void *
				// ParmDecl-  - const void *
			// ParmDecl- _Context - void *
		// FunctionDecl- bsearch - void *(const void *, const void *, size_t, size_t, int (*)(const void *, const void *) __attribute__((cdecl)))
			// ParmDecl- _Key - const void *
			// ParmDecl- _Base - const void *
			// ParmDecl- _NumOfElements - size_t
				// TypeRef- size_t - size_t
			// ParmDecl- _SizeOfElements - size_t
				// TypeRef- size_t - size_t
			// ParmDecl- _PtFuncCompare - int (*)(const void *, const void *) __attribute__((cdecl))
				// ParmDecl-  - const void *
				// ParmDecl-  - const void *
		// FunctionDecl- qsort_s - void (void *, rsize_t, rsize_t, int (*)(void *, const void *, const void *) __attribute__((cdecl)), void *)
			// ParmDecl- _Base - void *
			// ParmDecl- _NumOfElements - rsize_t
				// TypeRef- rsize_t - rsize_t
			// ParmDecl- _SizeOfElements - rsize_t
				// TypeRef- rsize_t - rsize_t
			// ParmDecl- _PtFuncCompare - int (*)(void *, const void *, const void *) __attribute__((cdecl))
				// ParmDecl-  - void *
				// ParmDecl-  - const void *
				// ParmDecl-  - const void *
			// ParmDecl- _Context - void *
		// FunctionDecl- qsort - void (void *, size_t, size_t, int (*)(const void *, const void *) __attribute__((cdecl)))
			// ParmDecl- _Base - void *
			// ParmDecl- _NumOfElements - size_t
				// TypeRef- size_t - size_t
			// ParmDecl- _SizeOfElements - size_t
				// TypeRef- size_t - size_t
			// ParmDecl- _PtFuncCompare - int (*)(const void *, const void *) __attribute__((cdecl))
				// ParmDecl-  - const void *
				// ParmDecl-  - const void *
		// FunctionDecl- _byteswap_ushort - unsigned short (unsigned short)
			// ParmDecl- _Short - unsigned short
		// FunctionDecl- _byteswap_ulong - unsigned long (unsigned long)
			// ParmDecl- _Long - unsigned long
		// FunctionDecl- _byteswap_uint64 - unsigned long long (unsigned long long)
			// ParmDecl- _Int64 - unsigned long long
		// FunctionDecl- div - div_t (int, int)
			// TypeRef- div_t - div_t
			// ParmDecl- _Numerator - int
			// ParmDecl- _Denominator - int
		// FunctionDecl- getenv - char *(const char *)
			// UnexposedAttr-  - 
			// ParmDecl- _VarName - const char *
		// FunctionDecl- getenv_s - errno_t (size_t *, char *, rsize_t, const char *)
			// TypeRef- errno_t - errno_t
			// ParmDecl- _ReturnSize - size_t *
				// TypeRef- size_t - size_t
			// ParmDecl- _DstBuf - char *
			// ParmDecl- _DstSize - rsize_t
				// TypeRef- rsize_t - rsize_t
			// ParmDecl- _VarName - const char *
		// FunctionDecl- _dupenv_s - errno_t (char **, size_t *, const char *)
			// TypeRef- errno_t - errno_t
			// ParmDecl- _PBuffer - char **
			// ParmDecl- _PBufferSizeInBytes - size_t *
				// TypeRef- size_t - size_t
			// ParmDecl- _VarName - const char *
		// FunctionDecl- _itoa_s - errno_t (int, char *, size_t, int)
			// TypeRef- errno_t - errno_t
			// ParmDecl- _Value - int
			// ParmDecl- _DstBuf - char *
			// ParmDecl- _Size - size_t
				// TypeRef- size_t - size_t
			// ParmDecl- _Radix - int
		// FunctionDecl- _itoa - char *(int, char *, int)
			// UnexposedAttr-  - 
			// ParmDecl- _Value - int
			// ParmDecl- _Dest - char *
			// ParmDecl- _Radix - int
		// FunctionDecl- _i64toa_s - errno_t (long long, char *, size_t, int)
			// TypeRef- errno_t - errno_t
			// ParmDecl- _Val - long long
			// ParmDecl- _DstBuf - char *
			// ParmDecl- _Size - size_t
				// TypeRef- size_t - size_t
			// ParmDecl- _Radix - int
		// FunctionDecl- _i64toa - char *(long long, char *, int)
			// UnexposedAttr-  - 
			// ParmDecl- _Val - long long
			// ParmDecl- _DstBuf - char *
			// ParmDecl- _Radix - int
		// FunctionDecl- _ui64toa_s - errno_t (unsigned long long, char *, size_t, int)
			// TypeRef- errno_t - errno_t
			// ParmDecl- _Val - unsigned long long
			// ParmDecl- _DstBuf - char *
			// ParmDecl- _Size - size_t
				// TypeRef- size_t - size_t
			// ParmDecl- _Radix - int
		// FunctionDecl- _ui64toa - char *(unsigned long long, char *, int)
			// UnexposedAttr-  - 
			// ParmDecl- _Val - unsigned long long
			// ParmDecl- _DstBuf - char *
			// ParmDecl- _Radix - int
		// FunctionDecl- _atoi64 - long long (const char *)
			// ParmDecl- _String - const char *
		// FunctionDecl- _atoi64_l - long long (const char *, _locale_t)
			// ParmDecl- _String - const char *
			// ParmDecl- _Locale - _locale_t
				// TypeRef- _locale_t - _locale_t
		// FunctionDecl- _strtoi64 - long long (const char *, char **, int)
			// ParmDecl- _String - const char *
			// ParmDecl- _EndPtr - char **
			// ParmDecl- _Radix - int
		// FunctionDecl- _strtoi64_l - long long (const char *, char **, int, _locale_t)
			// ParmDecl- _String - const char *
			// ParmDecl- _EndPtr - char **
			// ParmDecl- _Radix - int
			// ParmDecl- _Locale - _locale_t
				// TypeRef- _locale_t - _locale_t
		// FunctionDecl- _strtoui64 - unsigned long long (const char *, char **, int)
			// ParmDecl- _String - const char *
			// ParmDecl- _EndPtr - char **
			// ParmDecl- _Radix - int
		// FunctionDecl- _strtoui64_l - unsigned long long (const char *, char **, int, _locale_t)
			// ParmDecl- _String - const char *
			// ParmDecl- _EndPtr - char **
			// ParmDecl- _Radix - int
			// ParmDecl- _Locale - _locale_t
				// TypeRef- _locale_t - _locale_t
		// FunctionDecl- ldiv - ldiv_t (long, long)
			// TypeRef- ldiv_t - ldiv_t
			// ParmDecl- _Numerator - long
			// ParmDecl- _Denominator - long
		// FunctionDecl- lldiv - lldiv_t (long long, long long)
			// TypeRef- lldiv_t - lldiv_t
			// ParmDecl- _Numerator - long long
			// ParmDecl- _Denominator - long long
		// FunctionDecl- _ltoa_s - errno_t (long, char *, size_t, int)
			// TypeRef- errno_t - errno_t
			// ParmDecl- _Val - long
			// ParmDecl- _DstBuf - char *
			// ParmDecl- _Size - size_t
				// TypeRef- size_t - size_t
			// ParmDecl- _Radix - int
		// FunctionDecl- _ltoa - char *(long, char *, int)
			// UnexposedAttr-  - 
			// ParmDecl- _Value - long
			// ParmDecl- _Dest - char *
			// ParmDecl- _Radix - int
		// FunctionDecl- mblen - int (const char *, size_t)
			// ParmDecl- _Ch - const char *
			// ParmDecl- _MaxCount - size_t
				// TypeRef- size_t - size_t
		// FunctionDecl- _mblen_l - int (const char *, size_t, _locale_t)
			// ParmDecl- _Ch - const char *
			// ParmDecl- _MaxCount - size_t
				// TypeRef- size_t - size_t
			// ParmDecl- _Locale - _locale_t
				// TypeRef- _locale_t - _locale_t
		// FunctionDecl- _mbstrlen - size_t (const char *)
			// TypeRef- size_t - size_t
			// ParmDecl- _Str - const char *
		// FunctionDecl- _mbstrlen_l - size_t (const char *, _locale_t)
			// TypeRef- size_t - size_t
			// ParmDecl- _Str - const char *
			// ParmDecl- _Locale - _locale_t
				// TypeRef- _locale_t - _locale_t
		// FunctionDecl- _mbstrnlen - size_t (const char *, size_t)
			// TypeRef- size_t - size_t
			// ParmDecl- _Str - const char *
			// ParmDecl- _MaxCount - size_t
				// TypeRef- size_t - size_t
		// FunctionDecl- _mbstrnlen_l - size_t (const char *, size_t, _locale_t)
			// TypeRef- size_t - size_t
			// ParmDecl- _Str - const char *
			// ParmDecl- _MaxCount - size_t
				// TypeRef- size_t - size_t
			// ParmDecl- _Locale - _locale_t
				// TypeRef- _locale_t - _locale_t
		// FunctionDecl- mbtowc - int (wchar_t *, const char *, size_t)
			// ParmDecl- _DstCh - wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _SrcCh - const char *
			// ParmDecl- _SrcSizeInBytes - size_t
				// TypeRef- size_t - size_t
		// FunctionDecl- _mbtowc_l - int (wchar_t *, const char *, size_t, _locale_t)
			// ParmDecl- _DstCh - wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _SrcCh - const char *
			// ParmDecl- _SrcSizeInBytes - size_t
				// TypeRef- size_t - size_t
			// ParmDecl- _Locale - _locale_t
				// TypeRef- _locale_t - _locale_t
		// FunctionDecl- mbstowcs_s - errno_t (size_t *, wchar_t *, size_t, const char *, size_t)
			// TypeRef- errno_t - errno_t
			// ParmDecl- _PtNumOfCharConverted - size_t *
				// TypeRef- size_t - size_t
			// ParmDecl- _DstBuf - wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _SizeInWords - size_t
				// TypeRef- size_t - size_t
			// ParmDecl- _SrcBuf - const char *
			// ParmDecl- _MaxCount - size_t
				// TypeRef- size_t - size_t
		// FunctionDecl- mbstowcs - size_t (wchar_t *, const char *, size_t)
			// UnexposedAttr-  - 
			// UnexposedAttr-  - 
			// TypeRef- size_t - size_t
			// ParmDecl- _Dest - wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _Source - const char *
			// ParmDecl- _MaxCount - size_t
				// TypeRef- size_t - size_t
		// FunctionDecl- _mbstowcs_s_l - errno_t (size_t *, wchar_t *, size_t, const char *, size_t, _locale_t)
			// TypeRef- errno_t - errno_t
			// ParmDecl- _PtNumOfCharConverted - size_t *
				// TypeRef- size_t - size_t
			// ParmDecl- _DstBuf - wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _SizeInWords - size_t
				// TypeRef- size_t - size_t
			// ParmDecl- _SrcBuf - const char *
			// ParmDecl- _MaxCount - size_t
				// TypeRef- size_t - size_t
			// ParmDecl- _Locale - _locale_t
				// TypeRef- _locale_t - _locale_t
		// FunctionDecl- _mbstowcs_l - size_t (wchar_t *, const char *, size_t, _locale_t)
			// UnexposedAttr-  - 
			// UnexposedAttr-  - 
			// TypeRef- size_t - size_t
			// ParmDecl- _Dest - wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _Source - const char *
			// ParmDecl- _MaxCount - size_t
				// TypeRef- size_t - size_t
			// ParmDecl- _Locale - _locale_t
				// TypeRef- _locale_t - _locale_t
		// FunctionDecl- rand - int (void)
		// FunctionDecl- _set_error_mode - int (int)
			// ParmDecl- _Mode - int
		// FunctionDecl- srand - void (unsigned int)
			// ParmDecl- _Seed - unsigned int
		// FunctionDecl- strtod - double (const char *, char **)
			// ParmDecl- _Str - const char *
			// ParmDecl- _EndPtr - char **
		// FunctionDecl- _strtod_l - double (const char *, char **, _locale_t)
			// ParmDecl- _Str - const char *
			// ParmDecl- _EndPtr - char **
			// ParmDecl- _Locale - _locale_t
				// TypeRef- _locale_t - _locale_t
		// FunctionDecl- strtol - long (const char *, char **, int)
			// ParmDecl- _Str - const char *
			// ParmDecl- _EndPtr - char **
			// ParmDecl- _Radix - int
		// FunctionDecl- _strtol_l - long (const char *, char **, int, _locale_t)
			// ParmDecl- _Str - const char *
			// ParmDecl- _EndPtr - char **
			// ParmDecl- _Radix - int
			// ParmDecl- _Locale - _locale_t
				// TypeRef- _locale_t - _locale_t
		// FunctionDecl- strtoll - long long (const char *, char **, int)
			// ParmDecl- _Str - const char *
			// ParmDecl- _EndPtr - char **
			// ParmDecl- _Radix - int
		// FunctionDecl- _strtoll_l - long long (const char *, char **, int, _locale_t)
			// ParmDecl- _Str - const char *
			// ParmDecl- _EndPtr - char **
			// ParmDecl- _Radix - int
			// ParmDecl- _Locale - _locale_t
				// TypeRef- _locale_t - _locale_t
		// FunctionDecl- strtoul - unsigned long (const char *, char **, int)
			// ParmDecl- _Str - const char *
			// ParmDecl- _EndPtr - char **
			// ParmDecl- _Radix - int
		// FunctionDecl- _strtoul_l - unsigned long (const char *, char **, int, _locale_t)
			// ParmDecl- _Str - const char *
			// ParmDecl- _EndPtr - char **
			// ParmDecl- _Radix - int
			// ParmDecl- _Locale - _locale_t
				// TypeRef- _locale_t - _locale_t
		// FunctionDecl- strtoull - unsigned long long (const char *, char **, int)
			// ParmDecl- _Str - const char *
			// ParmDecl- _EndPtr - char **
			// ParmDecl- _Radix - int
		// FunctionDecl- _strtoull_l - unsigned long long (const char *, char **, int, _locale_t)
			// ParmDecl- _Str - const char *
			// ParmDecl- _EndPtr - char **
			// ParmDecl- _Radix - int
			// ParmDecl- _Locale - _locale_t
				// TypeRef- _locale_t - _locale_t
		// FunctionDecl- strtold - long double (const char *, char **)
			// ParmDecl- _Str - const char *
			// ParmDecl- _EndPtr - char **
		// FunctionDecl- _strtold_l - long double (const char *, char **, _locale_t)
			// ParmDecl- _Str - const char *
			// ParmDecl- _EndPtr - char **
			// ParmDecl- _Locale - _locale_t
				// TypeRef- _locale_t - _locale_t
		// FunctionDecl- strtof - float (const char *, char **)
			// ParmDecl- _Str - const char *
			// ParmDecl- _EndPtr - char **
		// FunctionDecl- _strtof_l - float (const char *, char **, _locale_t)
			// ParmDecl- _Str - const char *
			// ParmDecl- _EndPtr - char **
			// ParmDecl- _Locale - _locale_t
				// TypeRef- _locale_t - _locale_t
		// FunctionDecl- system - int (const char *)
			// ParmDecl- _Command - const char *
		// FunctionDecl- _ultoa_s - errno_t (unsigned long, char *, size_t, int)
			// TypeRef- errno_t - errno_t
			// ParmDecl- _Val - unsigned long
			// ParmDecl- _DstBuf - char *
			// ParmDecl- _Size - size_t
				// TypeRef- size_t - size_t
			// ParmDecl- _Radix - int
		// FunctionDecl- _ultoa - char *(unsigned long, char *, int)
			// UnexposedAttr-  - 
			// ParmDecl- _Value - unsigned long
			// ParmDecl- _Dest - char *
			// ParmDecl- _Radix - int
		// FunctionDecl- wctomb - int (char *, wchar_t)
			// UnexposedAttr-  - 
			// UnexposedAttr-  - 
			// ParmDecl- _MbCh - char *
			// ParmDecl- _WCh - wchar_t
				// TypeRef- wchar_t - wchar_t
		// FunctionDecl- _wctomb_l - int (char *, wchar_t, _locale_t)
			// UnexposedAttr-  - 
			// UnexposedAttr-  - 
			// ParmDecl- _MbCh - char *
			// ParmDecl- _WCh - wchar_t
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _Locale - _locale_t
				// TypeRef- _locale_t - _locale_t
		// FunctionDecl- wctomb_s - errno_t (int *, char *, rsize_t, wchar_t)
			// TypeRef- errno_t - errno_t
			// ParmDecl- _SizeConverted - int *
			// ParmDecl- _MbCh - char *
			// ParmDecl- _SizeInBytes - rsize_t
				// TypeRef- rsize_t - rsize_t
			// ParmDecl- _WCh - wchar_t
				// TypeRef- wchar_t - wchar_t
		// FunctionDecl- _wctomb_s_l - errno_t (int *, char *, size_t, wchar_t, _locale_t)
			// TypeRef- errno_t - errno_t
			// ParmDecl- _SizeConverted - int *
			// ParmDecl- _MbCh - char *
			// ParmDecl- _SizeInBytes - size_t
				// TypeRef- size_t - size_t
			// ParmDecl- _WCh - wchar_t
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _Locale - _locale_t
				// TypeRef- _locale_t - _locale_t
		// FunctionDecl- wcstombs_s - errno_t (size_t *, char *, size_t, const wchar_t *, size_t)
			// TypeRef- errno_t - errno_t
			// ParmDecl- _PtNumOfCharConverted - size_t *
				// TypeRef- size_t - size_t
			// ParmDecl- _Dst - char *
			// ParmDecl- _DstSizeInBytes - size_t
				// TypeRef- size_t - size_t
			// ParmDecl- _Src - const wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _MaxCountInBytes - size_t
				// TypeRef- size_t - size_t
		// FunctionDecl- wcstombs - size_t (char *, const wchar_t *, size_t)
			// UnexposedAttr-  - 
			// UnexposedAttr-  - 
			// TypeRef- size_t - size_t
			// ParmDecl- _Dest - char *
			// ParmDecl- _Source - const wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _MaxCount - size_t
				// TypeRef- size_t - size_t
		// FunctionDecl- _wcstombs_s_l - errno_t (size_t *, char *, size_t, const wchar_t *, size_t, _locale_t)
			// TypeRef- errno_t - errno_t
			// ParmDecl- _PtNumOfCharConverted - size_t *
				// TypeRef- size_t - size_t
			// ParmDecl- _Dst - char *
			// ParmDecl- _DstSizeInBytes - size_t
				// TypeRef- size_t - size_t
			// ParmDecl- _Src - const wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _MaxCountInBytes - size_t
				// TypeRef- size_t - size_t
			// ParmDecl- _Locale - _locale_t
				// TypeRef- _locale_t - _locale_t
		// FunctionDecl- _wcstombs_l - size_t (char *, const wchar_t *, size_t, _locale_t)
			// UnexposedAttr-  - 
			// UnexposedAttr-  - 
			// TypeRef- size_t - size_t
			// ParmDecl- _Dest - char *
			// ParmDecl- _Source - const wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _MaxCount - size_t
				// TypeRef- size_t - size_t
			// ParmDecl- _Locale - _locale_t
				// TypeRef- _locale_t - _locale_t
		// FunctionDecl- calloc - void *(unsigned long long, unsigned long long)
			// UnexposedAttr-  - 
			// UnexposedAttr-  - 
			// ParmDecl- _Count - size_t
				// TypeRef- size_t - size_t
			// ParmDecl- _Size - size_t
				// TypeRef- size_t - size_t
		// FunctionDecl- free - void (void *)
			// UnexposedAttr-  - 
			// UnexposedAttr-  - 
			// ParmDecl- _Memory - void *
		// FunctionDecl- malloc - void *(unsigned long long)
			// UnexposedAttr-  - 
			// UnexposedAttr-  - 
			// ParmDecl- _Size - size_t
				// TypeRef- size_t - size_t
		// FunctionDecl- realloc - void *(void *, unsigned long long)
			// UnexposedAttr-  - 
			// UnexposedAttr-  - 
			// ParmDecl- _Memory - void *
			// ParmDecl- _NewSize - size_t
				// TypeRef- size_t - size_t
		// FunctionDecl- _recalloc - void *(void *, size_t, size_t)
			// UnexposedAttr-  - 
			// UnexposedAttr-  - 
			// ParmDecl- _Memory - void *
			// ParmDecl- _Count - size_t
				// TypeRef- size_t - size_t
			// ParmDecl- _Size - size_t
				// TypeRef- size_t - size_t
		// FunctionDecl- _aligned_free - void (void *)
			// UnexposedAttr-  - 
			// UnexposedAttr-  - 
			// ParmDecl- _Memory - void *
		// FunctionDecl- _aligned_malloc - void *(size_t, size_t)
			// UnexposedAttr-  - 
			// UnexposedAttr-  - 
			// ParmDecl- _Size - size_t
				// TypeRef- size_t - size_t
			// ParmDecl- _Alignment - size_t
				// TypeRef- size_t - size_t
		// FunctionDecl- _aligned_offset_malloc - void *(size_t, size_t, size_t)
			// UnexposedAttr-  - 
			// UnexposedAttr-  - 
			// ParmDecl- _Size - size_t
				// TypeRef- size_t - size_t
			// ParmDecl- _Alignment - size_t
				// TypeRef- size_t - size_t
			// ParmDecl- _Offset - size_t
				// TypeRef- size_t - size_t
		// FunctionDecl- _aligned_realloc - void *(void *, size_t, size_t)
			// UnexposedAttr-  - 
			// UnexposedAttr-  - 
			// ParmDecl- _Memory - void *
			// ParmDecl- _NewSize - size_t
				// TypeRef- size_t - size_t
			// ParmDecl- _Alignment - size_t
				// TypeRef- size_t - size_t
		// FunctionDecl- _aligned_recalloc - void *(void *, size_t, size_t, size_t)
			// UnexposedAttr-  - 
			// UnexposedAttr-  - 
			// ParmDecl- _Memory - void *
			// ParmDecl- _Count - size_t
				// TypeRef- size_t - size_t
			// ParmDecl- _Size - size_t
				// TypeRef- size_t - size_t
			// ParmDecl- _Alignment - size_t
				// TypeRef- size_t - size_t
		// FunctionDecl- _aligned_offset_realloc - void *(void *, size_t, size_t, size_t)
			// UnexposedAttr-  - 
			// UnexposedAttr-  - 
			// ParmDecl- _Memory - void *
			// ParmDecl- _NewSize - size_t
				// TypeRef- size_t - size_t
			// ParmDecl- _Alignment - size_t
				// TypeRef- size_t - size_t
			// ParmDecl- _Offset - size_t
				// TypeRef- size_t - size_t
		// FunctionDecl- _aligned_offset_recalloc - void *(void *, size_t, size_t, size_t, size_t)
			// UnexposedAttr-  - 
			// UnexposedAttr-  - 
			// ParmDecl- _Memory - void *
			// ParmDecl- _Count - size_t
				// TypeRef- size_t - size_t
			// ParmDecl- _Size - size_t
				// TypeRef- size_t - size_t
			// ParmDecl- _Alignment - size_t
				// TypeRef- size_t - size_t
			// ParmDecl- _Offset - size_t
				// TypeRef- size_t - size_t
		// FunctionDecl- _aligned_msize - size_t (void *, size_t, size_t)
			// TypeRef- size_t - size_t
			// ParmDecl- _Memory - void *
			// ParmDecl- _Alignment - size_t
				// TypeRef- size_t - size_t
			// ParmDecl- _Offset - size_t
				// TypeRef- size_t - size_t
		// FunctionDecl- _itow_s - errno_t (int, wchar_t *, size_t, int)
			// TypeRef- errno_t - errno_t
			// ParmDecl- _Val - int
			// ParmDecl- _DstBuf - wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _SizeInWords - size_t
				// TypeRef- size_t - size_t
			// ParmDecl- _Radix - int
		// FunctionDecl- _itow - wchar_t *(int, wchar_t *, int)
			// UnexposedAttr-  - 
			// TypeRef- wchar_t - wchar_t
			// ParmDecl- _Value - int
			// ParmDecl- _Dest - wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _Radix - int
		// FunctionDecl- _ltow_s - errno_t (long, wchar_t *, size_t, int)
			// TypeRef- errno_t - errno_t
			// ParmDecl- _Val - long
			// ParmDecl- _DstBuf - wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _SizeInWords - size_t
				// TypeRef- size_t - size_t
			// ParmDecl- _Radix - int
		// FunctionDecl- _ltow - wchar_t *(long, wchar_t *, int)
			// UnexposedAttr-  - 
			// TypeRef- wchar_t - wchar_t
			// ParmDecl- _Value - long
			// ParmDecl- _Dest - wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _Radix - int
		// FunctionDecl- _ultow_s - errno_t (unsigned long, wchar_t *, size_t, int)
			// TypeRef- errno_t - errno_t
			// ParmDecl- _Val - unsigned long
			// ParmDecl- _DstBuf - wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _SizeInWords - size_t
				// TypeRef- size_t - size_t
			// ParmDecl- _Radix - int
		// FunctionDecl- _ultow - wchar_t *(unsigned long, wchar_t *, int)
			// UnexposedAttr-  - 
			// TypeRef- wchar_t - wchar_t
			// ParmDecl- _Value - unsigned long
			// ParmDecl- _Dest - wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _Radix - int
		// FunctionDecl- wcstod - double (const wchar_t *, wchar_t **)
			// ParmDecl- _Str - const wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _EndPtr - wchar_t **
				// TypeRef- wchar_t - wchar_t
		// FunctionDecl- _wcstod_l - double (const wchar_t *, wchar_t **, _locale_t)
			// ParmDecl- _Str - const wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _EndPtr - wchar_t **
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _Locale - _locale_t
				// TypeRef- _locale_t - _locale_t
		// FunctionDecl- wcstol - long (const wchar_t *, wchar_t **, int)
			// ParmDecl- _Str - const wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _EndPtr - wchar_t **
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _Radix - int
		// FunctionDecl- _wcstol_l - long (const wchar_t *, wchar_t **, int, _locale_t)
			// ParmDecl- _Str - const wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _EndPtr - wchar_t **
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _Radix - int
			// ParmDecl- _Locale - _locale_t
				// TypeRef- _locale_t - _locale_t
		// FunctionDecl- wcstoll - long long (const wchar_t *, wchar_t **, int)
			// ParmDecl- _Str - const wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _EndPtr - wchar_t **
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _Radix - int
		// FunctionDecl- _wcstoll_l - long long (const wchar_t *, wchar_t **, int, _locale_t)
			// ParmDecl- _Str - const wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _EndPtr - wchar_t **
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _Radix - int
			// ParmDecl- _Locale - _locale_t
				// TypeRef- _locale_t - _locale_t
		// FunctionDecl- wcstoul - unsigned long (const wchar_t *, wchar_t **, int)
			// ParmDecl- _Str - const wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _EndPtr - wchar_t **
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _Radix - int
		// FunctionDecl- _wcstoul_l - unsigned long (const wchar_t *, wchar_t **, int, _locale_t)
			// ParmDecl- _Str - const wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _EndPtr - wchar_t **
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _Radix - int
			// ParmDecl- _Locale - _locale_t
				// TypeRef- _locale_t - _locale_t
		// FunctionDecl- wcstoull - unsigned long long (const wchar_t *, wchar_t **, int)
			// ParmDecl- _Str - const wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _EndPtr - wchar_t **
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _Radix - int
		// FunctionDecl- _wcstoull_l - unsigned long long (const wchar_t *, wchar_t **, int, _locale_t)
			// ParmDecl- _Str - const wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _EndPtr - wchar_t **
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _Radix - int
			// ParmDecl- _Locale - _locale_t
				// TypeRef- _locale_t - _locale_t
		// FunctionDecl- wcstold - long double (const wchar_t *, wchar_t **)
			// ParmDecl- _Str - const wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _EndPtr - wchar_t **
				// TypeRef- wchar_t - wchar_t
		// FunctionDecl- _wcstold_l - long double (const wchar_t *, wchar_t **, _locale_t)
			// ParmDecl- _Str - const wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _EndPtr - wchar_t **
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _Locale - _locale_t
				// TypeRef- _locale_t - _locale_t
		// FunctionDecl- wcstof - float (const wchar_t *, wchar_t **)
			// ParmDecl- _Str - const wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _EndPtr - wchar_t **
				// TypeRef- wchar_t - wchar_t
		// FunctionDecl- _wcstof_l - float (const wchar_t *, wchar_t **, _locale_t)
			// ParmDecl- _Str - const wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _EndPtr - wchar_t **
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _Locale - _locale_t
				// TypeRef- _locale_t - _locale_t
		// FunctionDecl- _wgetenv - wchar_t *(const wchar_t *)
			// UnexposedAttr-  - 
			// TypeRef- wchar_t - wchar_t
			// ParmDecl- _VarName - const wchar_t *
				// TypeRef- wchar_t - wchar_t
		// FunctionDecl- _wgetenv_s - errno_t (size_t *, wchar_t *, size_t, const wchar_t *)
			// TypeRef- errno_t - errno_t
			// ParmDecl- _ReturnSize - size_t *
				// TypeRef- size_t - size_t
			// ParmDecl- _DstBuf - wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _DstSizeInWords - size_t
				// TypeRef- size_t - size_t
			// ParmDecl- _VarName - const wchar_t *
				// TypeRef- wchar_t - wchar_t
		// FunctionDecl- _wdupenv_s - errno_t (wchar_t **, size_t *, const wchar_t *)
			// TypeRef- errno_t - errno_t
			// ParmDecl- _Buffer - wchar_t **
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _BufferSizeInWords - size_t *
				// TypeRef- size_t - size_t
			// ParmDecl- _VarName - const wchar_t *
				// TypeRef- wchar_t - wchar_t
		// FunctionDecl- _wsystem - int (const wchar_t *)
			// ParmDecl- _Command - const wchar_t *
				// TypeRef- wchar_t - wchar_t
		// FunctionDecl- _wtof - double (const wchar_t *)
			// ParmDecl- _Str - const wchar_t *
				// TypeRef- wchar_t - wchar_t
		// FunctionDecl- _wtof_l - double (const wchar_t *, _locale_t)
			// ParmDecl- _Str - const wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _Locale - _locale_t
				// TypeRef- _locale_t - _locale_t
		// FunctionDecl- _wtoi - int (const wchar_t *)
			// ParmDecl- _Str - const wchar_t *
				// TypeRef- wchar_t - wchar_t
		// FunctionDecl- _wtoi_l - int (const wchar_t *, _locale_t)
			// ParmDecl- _Str - const wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _Locale - _locale_t
				// TypeRef- _locale_t - _locale_t
		// FunctionDecl- _wtol - long (const wchar_t *)
			// ParmDecl- _Str - const wchar_t *
				// TypeRef- wchar_t - wchar_t
		// FunctionDecl- _wtol_l - long (const wchar_t *, _locale_t)
			// ParmDecl- _Str - const wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _Locale - _locale_t
				// TypeRef- _locale_t - _locale_t
		// FunctionDecl- _wtoll - long long (const wchar_t *)
			// ParmDecl- _Str - const wchar_t *
				// TypeRef- wchar_t - wchar_t
		// FunctionDecl- _wtoll_l - long long (const wchar_t *, _locale_t)
			// ParmDecl- _Str - const wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _Locale - _locale_t
				// TypeRef- _locale_t - _locale_t
		// FunctionDecl- _i64tow_s - errno_t (long long, wchar_t *, size_t, int)
			// TypeRef- errno_t - errno_t
			// ParmDecl- _Val - long long
			// ParmDecl- _DstBuf - wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _SizeInWords - size_t
				// TypeRef- size_t - size_t
			// ParmDecl- _Radix - int
		// FunctionDecl- _i64tow - wchar_t *(long long, wchar_t *, int)
			// UnexposedAttr-  - 
			// TypeRef- wchar_t - wchar_t
			// ParmDecl- _Val - long long
			// ParmDecl- _DstBuf - wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _Radix - int
		// FunctionDecl- _ui64tow_s - errno_t (unsigned long long, wchar_t *, size_t, int)
			// TypeRef- errno_t - errno_t
			// ParmDecl- _Val - unsigned long long
			// ParmDecl- _DstBuf - wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _SizeInWords - size_t
				// TypeRef- size_t - size_t
			// ParmDecl- _Radix - int
		// FunctionDecl- _ui64tow - wchar_t *(unsigned long long, wchar_t *, int)
			// UnexposedAttr-  - 
			// TypeRef- wchar_t - wchar_t
			// ParmDecl- _Val - unsigned long long
			// ParmDecl- _DstBuf - wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _Radix - int
		// FunctionDecl- _wtoi64 - long long (const wchar_t *)
			// ParmDecl- _Str - const wchar_t *
				// TypeRef- wchar_t - wchar_t
		// FunctionDecl- _wtoi64_l - long long (const wchar_t *, _locale_t)
			// ParmDecl- _Str - const wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _Locale - _locale_t
				// TypeRef- _locale_t - _locale_t
		// FunctionDecl- _wcstoi64 - long long (const wchar_t *, wchar_t **, int)
			// ParmDecl- _Str - const wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _EndPtr - wchar_t **
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _Radix - int
		// FunctionDecl- _wcstoi64_l - long long (const wchar_t *, wchar_t **, int, _locale_t)
			// ParmDecl- _Str - const wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _EndPtr - wchar_t **
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _Radix - int
			// ParmDecl- _Locale - _locale_t
				// TypeRef- _locale_t - _locale_t
		// FunctionDecl- _wcstoui64 - unsigned long long (const wchar_t *, wchar_t **, int)
			// ParmDecl- _Str - const wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _EndPtr - wchar_t **
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _Radix - int
		// FunctionDecl- _wcstoui64_l - unsigned long long (const wchar_t *, wchar_t **, int, _locale_t)
			// ParmDecl- _Str - const wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _EndPtr - wchar_t **
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _Radix - int
			// ParmDecl- _Locale - _locale_t
				// TypeRef- _locale_t - _locale_t
		// FunctionDecl- _fullpath - char *(char *, const char *, size_t)
			// ParmDecl- _FullPath - char *
			// ParmDecl- _Path - const char *
			// ParmDecl- _SizeInBytes - size_t
				// TypeRef- size_t - size_t
		// FunctionDecl- _ecvt_s - errno_t (char *, size_t, double, int, int *, int *)
			// TypeRef- errno_t - errno_t
			// ParmDecl- _DstBuf - char *
			// ParmDecl- _Size - size_t
				// TypeRef- size_t - size_t
			// ParmDecl- _Val - double
			// ParmDecl- _NumOfDights - int
			// ParmDecl- _PtDec - int *
			// ParmDecl- _PtSign - int *
		// FunctionDecl- _ecvt - char *(double, int, int *, int *)
			// UnexposedAttr-  - 
			// ParmDecl- _Val - double
			// ParmDecl- _NumOfDigits - int
			// ParmDecl- _PtDec - int *
			// ParmDecl- _PtSign - int *
		// FunctionDecl- _fcvt_s - errno_t (char *, size_t, double, int, int *, int *)
			// TypeRef- errno_t - errno_t
			// ParmDecl- _DstBuf - char *
			// ParmDecl- _Size - size_t
				// TypeRef- size_t - size_t
			// ParmDecl- _Val - double
			// ParmDecl- _NumOfDec - int
			// ParmDecl- _PtDec - int *
			// ParmDecl- _PtSign - int *
		// FunctionDecl- _fcvt - char *(double, int, int *, int *)
			// UnexposedAttr-  - 
			// ParmDecl- _Val - double
			// ParmDecl- _NumOfDec - int
			// ParmDecl- _PtDec - int *
			// ParmDecl- _PtSign - int *
		// FunctionDecl- _gcvt_s - errno_t (char *, size_t, double, int)
			// TypeRef- errno_t - errno_t
			// ParmDecl- _DstBuf - char *
			// ParmDecl- _Size - size_t
				// TypeRef- size_t - size_t
			// ParmDecl- _Val - double
			// ParmDecl- _NumOfDigits - int
		// FunctionDecl- _gcvt - char *(double, int, char *)
			// UnexposedAttr-  - 
			// ParmDecl- _Val - double
			// ParmDecl- _NumOfDigits - int
			// ParmDecl- _DstBuf - char *
		// FunctionDecl- _atodbl - int (_CRT_DOUBLE *, char *)
			// ParmDecl- _Result - _CRT_DOUBLE *
				// TypeRef- _CRT_DOUBLE - _CRT_DOUBLE
			// ParmDecl- _Str - char *
		// FunctionDecl- _atoldbl - int (_LDOUBLE *, char *)
			// ParmDecl- _Result - _LDOUBLE *
				// TypeRef- _LDOUBLE - _LDOUBLE
			// ParmDecl- _Str - char *
		// FunctionDecl- _atoflt - int (_CRT_FLOAT *, const char *)
			// ParmDecl- _Result - _CRT_FLOAT *
				// TypeRef- _CRT_FLOAT - _CRT_FLOAT
			// ParmDecl- _Str - const char *
		// FunctionDecl- _atodbl_l - int (_CRT_DOUBLE *, char *, _locale_t)
			// ParmDecl- _Result - _CRT_DOUBLE *
				// TypeRef- _CRT_DOUBLE - _CRT_DOUBLE
			// ParmDecl- _Str - char *
			// ParmDecl- _Locale - _locale_t
				// TypeRef- _locale_t - _locale_t
		// FunctionDecl- _atoldbl_l - int (_LDOUBLE *, char *, _locale_t)
			// ParmDecl- _Result - _LDOUBLE *
				// TypeRef- _LDOUBLE - _LDOUBLE
			// ParmDecl- _Str - char *
			// ParmDecl- _Locale - _locale_t
				// TypeRef- _locale_t - _locale_t
		// FunctionDecl- _atoflt_l - int (_CRT_FLOAT *, const char *, _locale_t)
			// ParmDecl- _Result - _CRT_FLOAT *
				// TypeRef- _CRT_FLOAT - _CRT_FLOAT
			// ParmDecl- _Str - const char *
			// ParmDecl- _Locale - _locale_t
				// TypeRef- _locale_t - _locale_t
		// FunctionDecl- _lrotl - unsigned long (unsigned long, int)
			// ParmDecl- _Val - unsigned long
			// ParmDecl- _Shift - int
		// FunctionDecl- _lrotr - unsigned long (unsigned long, int)
			// ParmDecl- _Val - unsigned long
			// ParmDecl- _Shift - int
		// FunctionDecl- _makepath_s - errno_t (char *, size_t, const char *, const char *, const char *, const char *)
			// TypeRef- errno_t - errno_t
			// ParmDecl- _PathResult - char *
			// ParmDecl- _SizeInWords - size_t
				// TypeRef- size_t - size_t
			// ParmDecl- _Drive - const char *
			// ParmDecl- _Dir - const char *
			// ParmDecl- _Filename - const char *
			// ParmDecl- _Ext - const char *
		// FunctionDecl- _makepath - void (char *, const char *, const char *, const char *, const char *)
			// UnexposedAttr-  - 
			// UnexposedAttr-  - 
			// ParmDecl- _Path - char *
			// ParmDecl- _Drive - const char *
			// ParmDecl- _Dir - const char *
			// ParmDecl- _Filename - const char *
			// ParmDecl- _Ext - const char *
		// FunctionDecl- _onexit - _onexit_t (_onexit_t)
			// TypeRef- _onexit_t - _onexit_t
			// ParmDecl- _Func - _onexit_t
				// TypeRef- _onexit_t - _onexit_t
		// FunctionDecl- perror - void (const char *)
			// ParmDecl- _ErrMsg - const char *
		// FunctionDecl- _putenv - int (const char *)
			// ParmDecl- _EnvString - const char *
		// FunctionDecl- _putenv_s - errno_t (const char *, const char *)
			// TypeRef- errno_t - errno_t
			// ParmDecl- _Name - const char *
			// ParmDecl- _Value - const char *
		// FunctionDecl- _rotl - unsigned int (unsigned int, int)
			// ParmDecl- _Val - unsigned int
			// ParmDecl- _Shift - int
		// FunctionDecl- _rotl64 - unsigned long long (unsigned long long, int)
			// ParmDecl- _Val - unsigned long long
			// ParmDecl- _Shift - int
		// FunctionDecl- _rotr - unsigned int (unsigned int, int)
			// ParmDecl- _Val - unsigned int
			// ParmDecl- _Shift - int
		// FunctionDecl- _rotr64 - unsigned long long (unsigned long long, int)
			// ParmDecl- _Val - unsigned long long
			// ParmDecl- _Shift - int
		// FunctionDecl- _searchenv_s - errno_t (const char *, const char *, char *, size_t)
			// TypeRef- errno_t - errno_t
			// ParmDecl- _Filename - const char *
			// ParmDecl- _EnvVar - const char *
			// ParmDecl- _ResultPath - char *
			// ParmDecl- _SizeInBytes - size_t
				// TypeRef- size_t - size_t
		// FunctionDecl- _searchenv - void (const char *, const char *, char *)
			// UnexposedAttr-  - 
			// UnexposedAttr-  - 
			// ParmDecl- _Filename - const char *
			// ParmDecl- _EnvVar - const char *
			// ParmDecl- _ResultPath - char *
		// FunctionDecl- _splitpath - void (const char *, char *, char *, char *, char *)
			// UnexposedAttr-  - 
			// UnexposedAttr-  - 
			// ParmDecl- _FullPath - const char *
			// ParmDecl- _Drive - char *
			// ParmDecl- _Dir - char *
			// ParmDecl- _Filename - char *
			// ParmDecl- _Ext - char *
		// FunctionDecl- _splitpath_s - errno_t (const char *, char *, size_t, char *, size_t, char *, size_t, char *, size_t)
			// TypeRef- errno_t - errno_t
			// ParmDecl- _FullPath - const char *
			// ParmDecl- _Drive - char *
			// ParmDecl- _DriveSize - size_t
				// TypeRef- size_t - size_t
			// ParmDecl- _Dir - char *
			// ParmDecl- _DirSize - size_t
				// TypeRef- size_t - size_t
			// ParmDecl- _Filename - char *
			// ParmDecl- _FilenameSize - size_t
				// TypeRef- size_t - size_t
			// ParmDecl- _Ext - char *
			// ParmDecl- _ExtSize - size_t
				// TypeRef- size_t - size_t
		// FunctionDecl- _swab - void (char *, char *, int)
			// ParmDecl- _Buf1 - char *
			// ParmDecl- _Buf2 - char *
			// ParmDecl- _SizeInBytes - int
		// FunctionDecl- _wfullpath - wchar_t *(wchar_t *, const wchar_t *, size_t)
			// TypeRef- wchar_t - wchar_t
			// ParmDecl- _FullPath - wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _Path - const wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _SizeInWords - size_t
				// TypeRef- size_t - size_t
		// FunctionDecl- _wmakepath_s - errno_t (wchar_t *, size_t, const wchar_t *, const wchar_t *, const wchar_t *, const wchar_t *)
			// TypeRef- errno_t - errno_t
			// ParmDecl- _PathResult - wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _SIZE - size_t
				// TypeRef- size_t - size_t
			// ParmDecl- _Drive - const wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _Dir - const wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _Filename - const wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _Ext - const wchar_t *
				// TypeRef- wchar_t - wchar_t
		// FunctionDecl- _wmakepath - void (wchar_t *, const wchar_t *, const wchar_t *, const wchar_t *, const wchar_t *)
			// UnexposedAttr-  - 
			// UnexposedAttr-  - 
			// ParmDecl- _ResultPath - wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _Drive - const wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _Dir - const wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _Filename - const wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _Ext - const wchar_t *
				// TypeRef- wchar_t - wchar_t
		// FunctionDecl- _wperror - void (const wchar_t *)
			// ParmDecl- _ErrMsg - const wchar_t *
				// TypeRef- wchar_t - wchar_t
		// FunctionDecl- _wputenv - int (const wchar_t *)
			// ParmDecl- _EnvString - const wchar_t *
				// TypeRef- wchar_t - wchar_t
		// FunctionDecl- _wputenv_s - errno_t (const wchar_t *, const wchar_t *)
			// TypeRef- errno_t - errno_t
			// ParmDecl- _Name - const wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _Value - const wchar_t *
				// TypeRef- wchar_t - wchar_t
		// FunctionDecl- _wsearchenv_s - errno_t (const wchar_t *, const wchar_t *, wchar_t *, size_t)
			// TypeRef- errno_t - errno_t
			// ParmDecl- _Filename - const wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _EnvVar - const wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _ResultPath - wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _SizeInWords - size_t
				// TypeRef- size_t - size_t
		// FunctionDecl- _wsearchenv - void (const wchar_t *, const wchar_t *, wchar_t *)
			// UnexposedAttr-  - 
			// UnexposedAttr-  - 
			// ParmDecl- _Filename - const wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _EnvVar - const wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _ResultPath - wchar_t *
				// TypeRef- wchar_t - wchar_t
		// FunctionDecl- _wsplitpath - void (const wchar_t *, wchar_t *, wchar_t *, wchar_t *, wchar_t *)
			// UnexposedAttr-  - 
			// UnexposedAttr-  - 
			// ParmDecl- _FullPath - const wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _Drive - wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _Dir - wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _Filename - wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _Ext - wchar_t *
				// TypeRef- wchar_t - wchar_t
		// FunctionDecl- _wsplitpath_s - errno_t (const wchar_t *, wchar_t *, size_t, wchar_t *, size_t, wchar_t *, size_t, wchar_t *, size_t)
			// TypeRef- errno_t - errno_t
			// ParmDecl- _FullPath - const wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _Drive - wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _DriveSize - size_t
				// TypeRef- size_t - size_t
			// ParmDecl- _Dir - wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _DirSize - size_t
				// TypeRef- size_t - size_t
			// ParmDecl- _Filename - wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _FilenameSize - size_t
				// TypeRef- size_t - size_t
			// ParmDecl- _Ext - wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _ExtSize - size_t
				// TypeRef- size_t - size_t
		// FunctionDecl- _seterrormode - void (int)
			// UnexposedAttr-  - 
			// UnexposedAttr-  - 
			// ParmDecl- _Mode - int
		// FunctionDecl- _beep - void (unsigned int, unsigned int)
			// UnexposedAttr-  - 
			// UnexposedAttr-  - 
			// ParmDecl- _Frequency - unsigned int
			// ParmDecl- _Duration - unsigned int
		// FunctionDecl- _sleep - void (unsigned long)
			// UnexposedAttr-  - 
			// UnexposedAttr-  - 
			// ParmDecl- _Duration - unsigned long
		// FunctionDecl- ecvt - char *(double, int, int *, int *)
			// UnexposedAttr-  - 
			// UnexposedAttr-  - 
			// ParmDecl- _Val - double
			// ParmDecl- _NumOfDigits - int
			// ParmDecl- _PtDec - int *
			// ParmDecl- _PtSign - int *
		// FunctionDecl- fcvt - char *(double, int, int *, int *)
			// UnexposedAttr-  - 
			// UnexposedAttr-  - 
			// ParmDecl- _Val - double
			// ParmDecl- _NumOfDec - int
			// ParmDecl- _PtDec - int *
			// ParmDecl- _PtSign - int *
		// FunctionDecl- gcvt - char *(double, int, char *)
			// UnexposedAttr-  - 
			// UnexposedAttr-  - 
			// ParmDecl- _Val - double
			// ParmDecl- _NumOfDigits - int
			// ParmDecl- _DstBuf - char *
		// FunctionDecl- itoa - char *(int, char *, int)
			// UnexposedAttr-  - 
			// UnexposedAttr-  - 
			// ParmDecl- _Val - int
			// ParmDecl- _DstBuf - char *
			// ParmDecl- _Radix - int
		// FunctionDecl- ltoa - char *(long, char *, int)
			// UnexposedAttr-  - 
			// UnexposedAttr-  - 
			// ParmDecl- _Val - long
			// ParmDecl- _DstBuf - char *
			// ParmDecl- _Radix - int
		// FunctionDecl- putenv - int (const char *)
			// UnexposedAttr-  - 
			// UnexposedAttr-  - 
			// ParmDecl- _EnvString - const char *
		// FunctionDecl- swab - void (char *, char *, int)
			// UnexposedAttr-  - 
			// UnexposedAttr-  - 
			// ParmDecl- _Buf1 - char *
			// ParmDecl- _Buf2 - char *
			// ParmDecl- _SizeInBytes - int
		// FunctionDecl- ultoa - char *(unsigned long, char *, int)
			// UnexposedAttr-  - 
			// UnexposedAttr-  - 
			// ParmDecl- _Val - unsigned long
			// ParmDecl- _Dstbuf - char *
			// ParmDecl- _Radix - int
		// FunctionDecl- onexit - _onexit_t (_onexit_t)
			// TypeRef- _onexit_t - _onexit_t
			// ParmDecl- _Func - _onexit_t
				// TypeRef- _onexit_t - _onexit_t
		// FunctionDecl- _wassert - void (const wchar_t *, const wchar_t *, unsigned int)
			// ParmDecl- _Message - const wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _File - const wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _Line - unsigned int
		// FunctionDecl- _memccpy - void *(void *, const void *, int, size_t)
			// ParmDecl- _Dst - void *
			// ParmDecl- _Src - const void *
			// ParmDecl- _Val - int
			// ParmDecl- _MaxCount - size_t
				// TypeRef- size_t - size_t
		// FunctionDecl- memchr - void *(const void *, int, unsigned long long)
			// ParmDecl- _Buf - const void *
			// ParmDecl- _Val - int
			// ParmDecl- _MaxCount - size_t
				// TypeRef- size_t - size_t
		// FunctionDecl- _memicmp - int (const void *, const void *, size_t)
			// ParmDecl- _Buf1 - const void *
			// ParmDecl- _Buf2 - const void *
			// ParmDecl- _Size - size_t
				// TypeRef- size_t - size_t
		// FunctionDecl- _memicmp_l - int (const void *, const void *, size_t, _locale_t)
			// ParmDecl- _Buf1 - const void *
			// ParmDecl- _Buf2 - const void *
			// ParmDecl- _Size - size_t
				// TypeRef- size_t - size_t
			// ParmDecl- _Locale - _locale_t
				// TypeRef- _locale_t - _locale_t
		// FunctionDecl- memcmp - int (const void *, const void *, unsigned long long)
			// ParmDecl- _Buf1 - const void *
			// ParmDecl- _Buf2 - const void *
			// ParmDecl- _Size - size_t
				// TypeRef- size_t - size_t
		// FunctionDecl- memcpy - void *(void *, const void *, unsigned long long)
			// ParmDecl- _Dst - void *
			// ParmDecl- _Src - const void *
			// ParmDecl- _Size - size_t
				// TypeRef- size_t - size_t
		// FunctionDecl- memcpy_s - errno_t (void *, rsize_t, const void *, rsize_t)
			// TypeRef- errno_t - errno_t
			// ParmDecl- _Dst - void *
			// ParmDecl- _DstSize - rsize_t
				// TypeRef- rsize_t - rsize_t
			// ParmDecl- _Src - const void *
			// ParmDecl- _MaxCount - rsize_t
				// TypeRef- rsize_t - rsize_t
		// FunctionDecl- memset - void *(void *, int, unsigned long long)
			// ParmDecl- _Dst - void *
			// ParmDecl- _Val - int
			// ParmDecl- _Size - size_t
				// TypeRef- size_t - size_t
		// FunctionDecl- memccpy - void *(void *, const void *, int, size_t)
			// UnexposedAttr-  - 
			// ParmDecl- _Dst - void *
			// ParmDecl- _Src - const void *
			// ParmDecl- _Val - int
			// ParmDecl- _Size - size_t
				// TypeRef- size_t - size_t
		// FunctionDecl- memicmp - int (const void *, const void *, size_t)
			// UnexposedAttr-  - 
			// UnexposedAttr-  - 
			// ParmDecl- _Buf1 - const void *
			// ParmDecl- _Buf2 - const void *
			// ParmDecl- _Size - size_t
				// TypeRef- size_t - size_t
		// FunctionDecl- _strset_s - errno_t (char *, size_t, int)
			// TypeRef- errno_t - errno_t
			// ParmDecl- _Dst - char *
			// ParmDecl- _DstSize - size_t
				// TypeRef- size_t - size_t
			// ParmDecl- _Value - int
		// FunctionDecl- _strset - char *(char *, int)
			// UnexposedAttr-  - 
			// ParmDecl- _Dest - char *
			// ParmDecl- _Value - int
		// FunctionDecl- strcpy_s - errno_t (char *, rsize_t, const char *)
			// TypeRef- errno_t - errno_t
			// ParmDecl- _Dst - char *
			// ParmDecl- _SizeInBytes - rsize_t
				// TypeRef- rsize_t - rsize_t
			// ParmDecl- _Src - const char *
		// FunctionDecl- strcpy - char *(char *, const char *)
			// UnexposedAttr-  - 
			// ParmDecl- _Dest - char *
			// ParmDecl- _Source - const char *
		// FunctionDecl- strcat_s - errno_t (char *, rsize_t, const char *)
			// TypeRef- errno_t - errno_t
			// ParmDecl- _Dst - char *
			// ParmDecl- _SizeInBytes - rsize_t
				// TypeRef- rsize_t - rsize_t
			// ParmDecl- _Src - const char *
		// FunctionDecl- strcat - char *(char *, const char *)
			// UnexposedAttr-  - 
			// ParmDecl- _Dest - char *
			// ParmDecl- _Source - const char *
		// FunctionDecl- strcmp - int (const char *, const char *)
			// ParmDecl- _Str1 - const char *
			// ParmDecl- _Str2 - const char *
		// FunctionDecl- strlen - unsigned long long (const char *)
			// TypeRef- size_t - size_t
			// ParmDecl- _Str - const char *
		// FunctionDecl- strnlen - size_t (const char *, size_t)
			// TypeRef- size_t - size_t
			// ParmDecl- _Str - const char *
			// ParmDecl- _MaxCount - size_t
				// TypeRef- size_t - size_t
		// FunctionDecl- strnlen_s - size_t (const char *, size_t)
			// TypeRef- size_t - size_t
			// ParmDecl- _Str - const char *
			// ParmDecl- _MaxCount - size_t
				// TypeRef- size_t - size_t
			// CompoundStmt-  - 
				// ReturnStmt-  - 
					// ConditionalOperator-  - unsigned long long
						// ParenExpr-  - int
							// BinaryOperator-  - int [Binary Operator: EQ (==)]
								// UnexposedExpr- _Str - const char *
									// DeclRefExpr- _Str - const char *
								// UnexposedExpr-  - const char *
									// IntegerLiteral-  - int [Literal: 0]
						// UnexposedExpr-  - unsigned long long
							// IntegerLiteral-  - int [Literal: 0]
						// CallExpr- strnlen - size_t
							// UnexposedExpr- strnlen - size_t (*)(const char *, size_t) __attribute__((cdecl))
								// DeclRefExpr- strnlen - size_t (const char *, size_t)
							// UnexposedExpr- _Str - const char *
								// DeclRefExpr- _Str - const char *
							// UnexposedExpr- _MaxCount - size_t
								// DeclRefExpr- _MaxCount - size_t
		// FunctionDecl- memmove_s - errno_t (void *, rsize_t, const void *, rsize_t)
			// TypeRef- errno_t - errno_t
			// ParmDecl- _Dst - void *
			// ParmDecl- _DstSize - rsize_t
				// TypeRef- rsize_t - rsize_t
			// ParmDecl- _Src - const void *
			// ParmDecl- _MaxCount - rsize_t
				// TypeRef- rsize_t - rsize_t
		// FunctionDecl- memmove - void *(void *, const void *, unsigned long long)
			// ParmDecl- _Dst - void *
			// ParmDecl- _Src - const void *
			// ParmDecl- _Size - size_t
				// TypeRef- size_t - size_t
		// FunctionDecl- _strdup - char *(const char *)
			// ParmDecl- _Src - const char *
		// FunctionDecl- strchr - char *(const char *, int)
			// ParmDecl- _Str - const char *
			// ParmDecl- _Val - int
		// FunctionDecl- _stricmp - int (const char *, const char *)
			// ParmDecl- _Str1 - const char *
			// ParmDecl- _Str2 - const char *
		// FunctionDecl- _strcmpi - int (const char *, const char *)
			// ParmDecl- _Str1 - const char *
			// ParmDecl- _Str2 - const char *
		// FunctionDecl- _stricmp_l - int (const char *, const char *, _locale_t)
			// ParmDecl- _Str1 - const char *
			// ParmDecl- _Str2 - const char *
			// ParmDecl- _Locale - _locale_t
				// TypeRef- _locale_t - _locale_t
		// FunctionDecl- strcoll - int (const char *, const char *)
			// ParmDecl- _Str1 - const char *
			// ParmDecl- _Str2 - const char *
		// FunctionDecl- _strcoll_l - int (const char *, const char *, _locale_t)
			// ParmDecl- _Str1 - const char *
			// ParmDecl- _Str2 - const char *
			// ParmDecl- _Locale - _locale_t
				// TypeRef- _locale_t - _locale_t
		// FunctionDecl- _stricoll - int (const char *, const char *)
			// ParmDecl- _Str1 - const char *
			// ParmDecl- _Str2 - const char *
		// FunctionDecl- _stricoll_l - int (const char *, const char *, _locale_t)
			// ParmDecl- _Str1 - const char *
			// ParmDecl- _Str2 - const char *
			// ParmDecl- _Locale - _locale_t
				// TypeRef- _locale_t - _locale_t
		// FunctionDecl- _strncoll - int (const char *, const char *, size_t)
			// ParmDecl- _Str1 - const char *
			// ParmDecl- _Str2 - const char *
			// ParmDecl- _MaxCount - size_t
				// TypeRef- size_t - size_t
		// FunctionDecl- _strncoll_l - int (const char *, const char *, size_t, _locale_t)
			// ParmDecl- _Str1 - const char *
			// ParmDecl- _Str2 - const char *
			// ParmDecl- _MaxCount - size_t
				// TypeRef- size_t - size_t
			// ParmDecl- _Locale - _locale_t
				// TypeRef- _locale_t - _locale_t
		// FunctionDecl- _strnicoll - int (const char *, const char *, size_t)
			// ParmDecl- _Str1 - const char *
			// ParmDecl- _Str2 - const char *
			// ParmDecl- _MaxCount - size_t
				// TypeRef- size_t - size_t
		// FunctionDecl- _strnicoll_l - int (const char *, const char *, size_t, _locale_t)
			// ParmDecl- _Str1 - const char *
			// ParmDecl- _Str2 - const char *
			// ParmDecl- _MaxCount - size_t
				// TypeRef- size_t - size_t
			// ParmDecl- _Locale - _locale_t
				// TypeRef- _locale_t - _locale_t
		// FunctionDecl- strcspn - unsigned long long (const char *, const char *)
			// TypeRef- size_t - size_t
			// ParmDecl- _Str - const char *
			// ParmDecl- _Control - const char *
		// FunctionDecl- _strerror - char *(const char *)
			// UnexposedAttr-  - 
			// ParmDecl- _ErrMsg - const char *
		// FunctionDecl- _strerror_s - errno_t (char *, size_t, const char *)
			// TypeRef- errno_t - errno_t
			// ParmDecl- _Buf - char *
			// ParmDecl- _SizeInBytes - size_t
				// TypeRef- size_t - size_t
			// ParmDecl- _ErrMsg - const char *
		// FunctionDecl- strerror - char *(int)
			// UnexposedAttr-  - 
			// ParmDecl-  - int
		// FunctionDecl- strerror_s - errno_t (char *, size_t, int)
			// TypeRef- errno_t - errno_t
			// ParmDecl- _Buf - char *
			// ParmDecl- _SizeInBytes - size_t
				// TypeRef- size_t - size_t
			// ParmDecl- _ErrNum - int
		// FunctionDecl- _strlwr_s - errno_t (char *, size_t)
			// TypeRef- errno_t - errno_t
			// ParmDecl- _Str - char *
			// ParmDecl- _Size - size_t
				// TypeRef- size_t - size_t
		// FunctionDecl- _strlwr - char *(char *)
			// UnexposedAttr-  - 
			// ParmDecl- _String - char *
		// FunctionDecl- _strlwr_s_l - errno_t (char *, size_t, _locale_t)
			// TypeRef- errno_t - errno_t
			// ParmDecl- _Str - char *
			// ParmDecl- _Size - size_t
				// TypeRef- size_t - size_t
			// ParmDecl- _Locale - _locale_t
				// TypeRef- _locale_t - _locale_t
		// FunctionDecl- _strlwr_l - char *(char *, _locale_t)
			// UnexposedAttr-  - 
			// ParmDecl- _String - char *
			// ParmDecl- _Locale - _locale_t
				// TypeRef- _locale_t - _locale_t
		// FunctionDecl- strncat_s - errno_t (char *, rsize_t, const char *, rsize_t)
			// TypeRef- errno_t - errno_t
			// ParmDecl- _Dst - char *
			// ParmDecl- _SizeInBytes - rsize_t
				// TypeRef- rsize_t - rsize_t
			// ParmDecl- _Src - const char *
			// ParmDecl- _MaxCount - rsize_t
				// TypeRef- rsize_t - rsize_t
		// FunctionDecl- strncat - char *(char *, const char *, unsigned long long)
			// UnexposedAttr-  - 
			// ParmDecl- _Dest - char *
			// ParmDecl- _Source - const char *
			// ParmDecl- _Count - size_t
				// TypeRef- size_t - size_t
		// FunctionDecl- strncmp - int (const char *, const char *, unsigned long long)
			// ParmDecl- _Str1 - const char *
			// ParmDecl- _Str2 - const char *
			// ParmDecl- _MaxCount - size_t
				// TypeRef- size_t - size_t
		// FunctionDecl- _strnicmp - int (const char *, const char *, size_t)
			// ParmDecl- _Str1 - const char *
			// ParmDecl- _Str2 - const char *
			// ParmDecl- _MaxCount - size_t
				// TypeRef- size_t - size_t
		// FunctionDecl- _strnicmp_l - int (const char *, const char *, size_t, _locale_t)
			// ParmDecl- _Str1 - const char *
			// ParmDecl- _Str2 - const char *
			// ParmDecl- _MaxCount - size_t
				// TypeRef- size_t - size_t
			// ParmDecl- _Locale - _locale_t
				// TypeRef- _locale_t - _locale_t
		// FunctionDecl- strncpy_s - errno_t (char *, rsize_t, const char *, rsize_t)
			// TypeRef- errno_t - errno_t
			// ParmDecl- _Dst - char *
			// ParmDecl- _SizeInBytes - rsize_t
				// TypeRef- rsize_t - rsize_t
			// ParmDecl- _Src - const char *
			// ParmDecl- _MaxCount - rsize_t
				// TypeRef- rsize_t - rsize_t
		// FunctionDecl- strncpy - char *(char *, const char *, unsigned long long)
			// UnexposedAttr-  - 
			// ParmDecl- _Dest - char *
			// ParmDecl- _Source - const char *
			// ParmDecl- _Count - size_t
				// TypeRef- size_t - size_t
		// FunctionDecl- _strnset_s - errno_t (char *, size_t, int, size_t)
			// TypeRef- errno_t - errno_t
			// ParmDecl- _Str - char *
			// ParmDecl- _SizeInBytes - size_t
				// TypeRef- size_t - size_t
			// ParmDecl- _Val - int
			// ParmDecl- _MaxCount - size_t
				// TypeRef- size_t - size_t
		// FunctionDecl- _strnset - char *(char *, int, size_t)
			// UnexposedAttr-  - 
			// ParmDecl- _Dest - char *
			// ParmDecl- _Val - int
			// ParmDecl- _Count - size_t
				// TypeRef- size_t - size_t
		// FunctionDecl- strpbrk - char *(const char *, const char *)
			// ParmDecl- _Str - const char *
			// ParmDecl- _Control - const char *
		// FunctionDecl- strrchr - char *(const char *, int)
			// ParmDecl- _Str - const char *
			// ParmDecl- _Ch - int
		// FunctionDecl- _strrev - char *(char *)
			// ParmDecl- _Str - char *
		// FunctionDecl- strspn - unsigned long long (const char *, const char *)
			// TypeRef- size_t - size_t
			// ParmDecl- _Str - const char *
			// ParmDecl- _Control - const char *
		// FunctionDecl- strstr - char *(const char *, const char *)
			// ParmDecl- _Str - const char *
			// ParmDecl- _SubStr - const char *
		// FunctionDecl- strtok - char *(char *, const char *)
			// UnexposedAttr-  - 
			// ParmDecl- _Str - char *
			// ParmDecl- _Delim - const char *
		// FunctionDecl- strtok_s - char *(char *, const char *, char **)
			// ParmDecl- _Str - char *
			// ParmDecl- _Delim - const char *
			// ParmDecl- _Context - char **
		// FunctionDecl- _strupr_s - errno_t (char *, size_t)
			// TypeRef- errno_t - errno_t
			// ParmDecl- _Str - char *
			// ParmDecl- _Size - size_t
				// TypeRef- size_t - size_t
		// FunctionDecl- _strupr - char *(char *)
			// UnexposedAttr-  - 
			// ParmDecl- _String - char *
		// FunctionDecl- _strupr_s_l - errno_t (char *, size_t, _locale_t)
			// TypeRef- errno_t - errno_t
			// ParmDecl- _Str - char *
			// ParmDecl- _Size - size_t
				// TypeRef- size_t - size_t
			// ParmDecl- _Locale - _locale_t
				// TypeRef- _locale_t - _locale_t
		// FunctionDecl- _strupr_l - char *(char *, _locale_t)
			// UnexposedAttr-  - 
			// ParmDecl- _String - char *
			// ParmDecl- _Locale - _locale_t
				// TypeRef- _locale_t - _locale_t
		// FunctionDecl- strxfrm - unsigned long long (char *, const char *, unsigned long long)
			// TypeRef- size_t - size_t
			// ParmDecl- _Dst - char *
			// ParmDecl- _Src - const char *
			// ParmDecl- _MaxCount - size_t
				// TypeRef- size_t - size_t
		// FunctionDecl- _strxfrm_l - size_t (char *, const char *, size_t, _locale_t)
			// TypeRef- size_t - size_t
			// ParmDecl- _Dst - char *
			// ParmDecl- _Src - const char *
			// ParmDecl- _MaxCount - size_t
				// TypeRef- size_t - size_t
			// ParmDecl- _Locale - _locale_t
				// TypeRef- _locale_t - _locale_t
		// FunctionDecl- strdup - char *(const char *)
			// UnexposedAttr-  - 
			// ParmDecl- _Src - const char *
		// FunctionDecl- strcmpi - int (const char *, const char *)
			// UnexposedAttr-  - 
			// UnexposedAttr-  - 
			// ParmDecl- _Str1 - const char *
			// ParmDecl- _Str2 - const char *
		// FunctionDecl- stricmp - int (const char *, const char *)
			// UnexposedAttr-  - 
			// UnexposedAttr-  - 
			// ParmDecl- _Str1 - const char *
			// ParmDecl- _Str2 - const char *
		// FunctionDecl- strlwr - char *(char *)
			// UnexposedAttr-  - 
			// ParmDecl- _Str - char *
		// FunctionDecl- strnicmp - int (const char *, const char *, size_t)
			// UnexposedAttr-  - 
			// UnexposedAttr-  - 
			// ParmDecl- _Str1 - const char *
			// ParmDecl- _Str - const char *
			// ParmDecl- _MaxCount - size_t
				// TypeRef- size_t - size_t
		// FunctionDecl- strnset - char *(char *, int, size_t)
			// UnexposedAttr-  - 
			// ParmDecl- _Str - char *
			// ParmDecl- _Val - int
			// ParmDecl- _MaxCount - size_t
				// TypeRef- size_t - size_t
		// FunctionDecl- strrev - char *(char *)
			// UnexposedAttr-  - 
			// ParmDecl- _Str - char *
		// FunctionDecl- strset - char *(char *, int)
			// UnexposedAttr-  - 
			// ParmDecl- _Str - char *
			// ParmDecl- _Val - int
		// FunctionDecl- strupr - char *(char *)
			// UnexposedAttr-  - 
			// ParmDecl- _Str - char *
		// FunctionDecl- _wcsdup - wchar_t *(const wchar_t *)
			// TypeRef- wchar_t - wchar_t
			// ParmDecl- _Str - const wchar_t *
				// TypeRef- wchar_t - wchar_t
		// FunctionDecl- wcscat_s - errno_t (wchar_t *, rsize_t, const wchar_t *)
			// TypeRef- errno_t - errno_t
			// ParmDecl- _Dst - wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _SizeInWords - rsize_t
				// TypeRef- rsize_t - rsize_t
			// ParmDecl- _Src - const wchar_t *
				// TypeRef- wchar_t - wchar_t
		// FunctionDecl- wcscat - wchar_t *(wchar_t *, const wchar_t *)
			// UnexposedAttr-  - 
			// TypeRef- wchar_t - wchar_t
			// ParmDecl- _Dest - wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _Source - const wchar_t *
				// TypeRef- wchar_t - wchar_t
		// FunctionDecl- wcschr - wchar_t *(const wchar_t *, wchar_t)
			// TypeRef- wchar_t - wchar_t
			// ParmDecl- _Str - const wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _Ch - wchar_t
				// TypeRef- wchar_t - wchar_t
		// FunctionDecl- wcscmp - int (const wchar_t *, const wchar_t *)
			// ParmDecl- _Str1 - const wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _Str2 - const wchar_t *
				// TypeRef- wchar_t - wchar_t
		// FunctionDecl- wcscpy_s - errno_t (wchar_t *, rsize_t, const wchar_t *)
			// TypeRef- errno_t - errno_t
			// ParmDecl- _Dst - wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _SizeInWords - rsize_t
				// TypeRef- rsize_t - rsize_t
			// ParmDecl- _Src - const wchar_t *
				// TypeRef- wchar_t - wchar_t
		// FunctionDecl- wcscpy - wchar_t *(wchar_t *, const wchar_t *)
			// UnexposedAttr-  - 
			// TypeRef- wchar_t - wchar_t
			// ParmDecl- _Dest - wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _Source - const wchar_t *
				// TypeRef- wchar_t - wchar_t
		// FunctionDecl- wcscspn - size_t (const wchar_t *, const wchar_t *)
			// TypeRef- size_t - size_t
			// ParmDecl- _Str - const wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _Control - const wchar_t *
				// TypeRef- wchar_t - wchar_t
		// FunctionDecl- wcslen - size_t (const wchar_t *)
			// TypeRef- size_t - size_t
			// ParmDecl- _Str - const wchar_t *
				// TypeRef- wchar_t - wchar_t
		// FunctionDecl- wcsnlen - size_t (const wchar_t *, size_t)
			// TypeRef- size_t - size_t
			// ParmDecl- _Src - const wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _MaxCount - size_t
				// TypeRef- size_t - size_t
		// FunctionDecl- wcsnlen_s - size_t (const wchar_t *, size_t)
			// TypeRef- size_t - size_t
			// ParmDecl- _Src - const wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _MaxCount - size_t
				// TypeRef- size_t - size_t
			// CompoundStmt-  - 
				// ReturnStmt-  - 
					// ConditionalOperator-  - unsigned long long
						// ParenExpr-  - int
							// BinaryOperator-  - int [Binary Operator: EQ (==)]
								// UnexposedExpr- _Src - const wchar_t *
									// DeclRefExpr- _Src - const wchar_t *
								// UnexposedExpr-  - const wchar_t *
									// ParenExpr-  - void *
										// CStyleCastExpr-  - void *
											// IntegerLiteral-  - int [Literal: 0]
						// UnexposedExpr-  - unsigned long long
							// IntegerLiteral-  - int [Literal: 0]
						// CallExpr- wcsnlen - size_t
							// UnexposedExpr- wcsnlen - size_t (*)(const wchar_t *, size_t) __attribute__((cdecl))
								// DeclRefExpr- wcsnlen - size_t (const wchar_t *, size_t)
							// UnexposedExpr- _Src - const wchar_t *
								// DeclRefExpr- _Src - const wchar_t *
							// UnexposedExpr- _MaxCount - size_t
								// DeclRefExpr- _MaxCount - size_t
		// FunctionDecl- wcsncat_s - errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)
			// TypeRef- errno_t - errno_t
			// ParmDecl- _Dst - wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _SizeInWords - rsize_t
				// TypeRef- rsize_t - rsize_t
			// ParmDecl- _Src - const wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _MaxCount - rsize_t
				// TypeRef- rsize_t - rsize_t
		// FunctionDecl- wcsncat - wchar_t *(wchar_t *, const wchar_t *, size_t)
			// UnexposedAttr-  - 
			// TypeRef- wchar_t - wchar_t
			// ParmDecl- _Dest - wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _Source - const wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _Count - size_t
				// TypeRef- size_t - size_t
		// FunctionDecl- wcsncmp - int (const wchar_t *, const wchar_t *, size_t)
			// ParmDecl- _Str1 - const wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _Str2 - const wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _MaxCount - size_t
				// TypeRef- size_t - size_t
		// FunctionDecl- wcsncpy_s - errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)
			// TypeRef- errno_t - errno_t
			// ParmDecl- _Dst - wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _SizeInWords - rsize_t
				// TypeRef- rsize_t - rsize_t
			// ParmDecl- _Src - const wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _MaxCount - rsize_t
				// TypeRef- rsize_t - rsize_t
		// FunctionDecl- wcsncpy - wchar_t *(wchar_t *, const wchar_t *, size_t)
			// UnexposedAttr-  - 
			// TypeRef- wchar_t - wchar_t
			// ParmDecl- _Dest - wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _Source - const wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _Count - size_t
				// TypeRef- size_t - size_t
		// FunctionDecl- wcspbrk - wchar_t *(const wchar_t *, const wchar_t *)
			// TypeRef- wchar_t - wchar_t
			// ParmDecl- _Str - const wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _Control - const wchar_t *
				// TypeRef- wchar_t - wchar_t
		// FunctionDecl- wcsrchr - wchar_t *(const wchar_t *, wchar_t)
			// TypeRef- wchar_t - wchar_t
			// ParmDecl- _Str - const wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _Ch - wchar_t
				// TypeRef- wchar_t - wchar_t
		// FunctionDecl- wcsspn - size_t (const wchar_t *, const wchar_t *)
			// TypeRef- size_t - size_t
			// ParmDecl- _Str - const wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _Control - const wchar_t *
				// TypeRef- wchar_t - wchar_t
		// FunctionDecl- wcsstr - wchar_t *(const wchar_t *, const wchar_t *)
			// TypeRef- wchar_t - wchar_t
			// ParmDecl- _Str - const wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _SubStr - const wchar_t *
				// TypeRef- wchar_t - wchar_t
		// FunctionDecl- wcstok - wchar_t *(wchar_t *, const wchar_t *)
			// UnexposedAttr-  - 
			// TypeRef- wchar_t - wchar_t
			// ParmDecl- _Str - wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _Delim - const wchar_t *
				// TypeRef- wchar_t - wchar_t
		// FunctionDecl- wcstok_s - wchar_t *(wchar_t *, const wchar_t *, wchar_t **)
			// TypeRef- wchar_t - wchar_t
			// ParmDecl- _Str - wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _Delim - const wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _Context - wchar_t **
				// TypeRef- wchar_t - wchar_t
		// FunctionDecl- _wcserror - wchar_t *(int)
			// UnexposedAttr-  - 
			// TypeRef- wchar_t - wchar_t
			// ParmDecl- _ErrNum - int
		// FunctionDecl- _wcserror_s - errno_t (wchar_t *, size_t, int)
			// TypeRef- errno_t - errno_t
			// ParmDecl- _Buf - wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _SizeInWords - size_t
				// TypeRef- size_t - size_t
			// ParmDecl- _ErrNum - int
		// FunctionDecl- __wcserror - wchar_t *(const wchar_t *)
			// UnexposedAttr-  - 
			// TypeRef- wchar_t - wchar_t
			// ParmDecl- _Str - const wchar_t *
				// TypeRef- wchar_t - wchar_t
		// FunctionDecl- __wcserror_s - errno_t (wchar_t *, size_t, const wchar_t *)
			// TypeRef- errno_t - errno_t
			// ParmDecl- _Buffer - wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _SizeInWords - size_t
				// TypeRef- size_t - size_t
			// ParmDecl- _ErrMsg - const wchar_t *
				// TypeRef- wchar_t - wchar_t
		// FunctionDecl- _wcsicmp - int (const wchar_t *, const wchar_t *)
			// ParmDecl- _Str1 - const wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _Str2 - const wchar_t *
				// TypeRef- wchar_t - wchar_t
		// FunctionDecl- _wcsicmp_l - int (const wchar_t *, const wchar_t *, _locale_t)
			// ParmDecl- _Str1 - const wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _Str2 - const wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _Locale - _locale_t
				// TypeRef- _locale_t - _locale_t
		// FunctionDecl- _wcsnicmp - int (const wchar_t *, const wchar_t *, size_t)
			// ParmDecl- _Str1 - const wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _Str2 - const wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _MaxCount - size_t
				// TypeRef- size_t - size_t
		// FunctionDecl- _wcsnicmp_l - int (const wchar_t *, const wchar_t *, size_t, _locale_t)
			// ParmDecl- _Str1 - const wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _Str2 - const wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _MaxCount - size_t
				// TypeRef- size_t - size_t
			// ParmDecl- _Locale - _locale_t
				// TypeRef- _locale_t - _locale_t
		// FunctionDecl- _wcsnset_s - errno_t (wchar_t *, size_t, wchar_t, size_t)
			// TypeRef- errno_t - errno_t
			// ParmDecl- _Dst - wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _SizeInWords - size_t
				// TypeRef- size_t - size_t
			// ParmDecl- _Val - wchar_t
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _MaxCount - size_t
				// TypeRef- size_t - size_t
		// FunctionDecl- _wcsnset - wchar_t *(wchar_t *, wchar_t, size_t)
			// UnexposedAttr-  - 
			// TypeRef- wchar_t - wchar_t
			// ParmDecl- _Str - wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _Val - wchar_t
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _MaxCount - size_t
				// TypeRef- size_t - size_t
		// FunctionDecl- _wcsrev - wchar_t *(wchar_t *)
			// TypeRef- wchar_t - wchar_t
			// ParmDecl- _Str - wchar_t *
				// TypeRef- wchar_t - wchar_t
		// FunctionDecl- _wcsset_s - errno_t (wchar_t *, size_t, wchar_t)
			// TypeRef- errno_t - errno_t
			// ParmDecl- _Dst - wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _SizeInWords - size_t
				// TypeRef- size_t - size_t
			// ParmDecl- _Value - wchar_t
				// TypeRef- wchar_t - wchar_t
		// FunctionDecl- _wcsset - wchar_t *(wchar_t *, wchar_t)
			// UnexposedAttr-  - 
			// TypeRef- wchar_t - wchar_t
			// ParmDecl- _Str - wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _Val - wchar_t
				// TypeRef- wchar_t - wchar_t
		// FunctionDecl- _wcslwr_s - errno_t (wchar_t *, size_t)
			// TypeRef- errno_t - errno_t
			// ParmDecl- _Str - wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _SizeInWords - size_t
				// TypeRef- size_t - size_t
		// FunctionDecl- _wcslwr - wchar_t *(wchar_t *)
			// UnexposedAttr-  - 
			// TypeRef- wchar_t - wchar_t
			// ParmDecl- _String - wchar_t *
				// TypeRef- wchar_t - wchar_t
		// FunctionDecl- _wcslwr_s_l - errno_t (wchar_t *, size_t, _locale_t)
			// TypeRef- errno_t - errno_t
			// ParmDecl- _Str - wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _SizeInWords - size_t
				// TypeRef- size_t - size_t
			// ParmDecl- _Locale - _locale_t
				// TypeRef- _locale_t - _locale_t
		// FunctionDecl- _wcslwr_l - wchar_t *(wchar_t *, _locale_t)
			// UnexposedAttr-  - 
			// TypeRef- wchar_t - wchar_t
			// ParmDecl- _String - wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _Locale - _locale_t
				// TypeRef- _locale_t - _locale_t
		// FunctionDecl- _wcsupr_s - errno_t (wchar_t *, size_t)
			// TypeRef- errno_t - errno_t
			// ParmDecl- _Str - wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _Size - size_t
				// TypeRef- size_t - size_t
		// FunctionDecl- _wcsupr - wchar_t *(wchar_t *)
			// UnexposedAttr-  - 
			// TypeRef- wchar_t - wchar_t
			// ParmDecl- _String - wchar_t *
				// TypeRef- wchar_t - wchar_t
		// FunctionDecl- _wcsupr_s_l - errno_t (wchar_t *, size_t, _locale_t)
			// TypeRef- errno_t - errno_t
			// ParmDecl- _Str - wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _Size - size_t
				// TypeRef- size_t - size_t
			// ParmDecl- _Locale - _locale_t
				// TypeRef- _locale_t - _locale_t
		// FunctionDecl- _wcsupr_l - wchar_t *(wchar_t *, _locale_t)
			// UnexposedAttr-  - 
			// TypeRef- wchar_t - wchar_t
			// ParmDecl- _String - wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _Locale - _locale_t
				// TypeRef- _locale_t - _locale_t
		// FunctionDecl- wcsxfrm - size_t (wchar_t *, const wchar_t *, size_t)
			// TypeRef- size_t - size_t
			// ParmDecl- _Dst - wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _Src - const wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _MaxCount - size_t
				// TypeRef- size_t - size_t
		// FunctionDecl- _wcsxfrm_l - size_t (wchar_t *, const wchar_t *, size_t, _locale_t)
			// TypeRef- size_t - size_t
			// ParmDecl- _Dst - wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _Src - const wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _MaxCount - size_t
				// TypeRef- size_t - size_t
			// ParmDecl- _Locale - _locale_t
				// TypeRef- _locale_t - _locale_t
		// FunctionDecl- wcscoll - int (const wchar_t *, const wchar_t *)
			// ParmDecl- _Str1 - const wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _Str2 - const wchar_t *
				// TypeRef- wchar_t - wchar_t
		// FunctionDecl- _wcscoll_l - int (const wchar_t *, const wchar_t *, _locale_t)
			// ParmDecl- _Str1 - const wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _Str2 - const wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _Locale - _locale_t
				// TypeRef- _locale_t - _locale_t
		// FunctionDecl- _wcsicoll - int (const wchar_t *, const wchar_t *)
			// ParmDecl- _Str1 - const wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _Str2 - const wchar_t *
				// TypeRef- wchar_t - wchar_t
		// FunctionDecl- _wcsicoll_l - int (const wchar_t *, const wchar_t *, _locale_t)
			// ParmDecl- _Str1 - const wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _Str2 - const wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _Locale - _locale_t
				// TypeRef- _locale_t - _locale_t
		// FunctionDecl- _wcsncoll - int (const wchar_t *, const wchar_t *, size_t)
			// ParmDecl- _Str1 - const wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _Str2 - const wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _MaxCount - size_t
				// TypeRef- size_t - size_t
		// FunctionDecl- _wcsncoll_l - int (const wchar_t *, const wchar_t *, size_t, _locale_t)
			// ParmDecl- _Str1 - const wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _Str2 - const wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _MaxCount - size_t
				// TypeRef- size_t - size_t
			// ParmDecl- _Locale - _locale_t
				// TypeRef- _locale_t - _locale_t
		// FunctionDecl- _wcsnicoll - int (const wchar_t *, const wchar_t *, size_t)
			// ParmDecl- _Str1 - const wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _Str2 - const wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _MaxCount - size_t
				// TypeRef- size_t - size_t
		// FunctionDecl- _wcsnicoll_l - int (const wchar_t *, const wchar_t *, size_t, _locale_t)
			// ParmDecl- _Str1 - const wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _Str2 - const wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _MaxCount - size_t
				// TypeRef- size_t - size_t
			// ParmDecl- _Locale - _locale_t
				// TypeRef- _locale_t - _locale_t
		// FunctionDecl- wcsdup - wchar_t *(const wchar_t *)
			// UnexposedAttr-  - 
			// TypeRef- wchar_t - wchar_t
			// ParmDecl- _Str - const wchar_t *
				// TypeRef- wchar_t - wchar_t
		// FunctionDecl- wcsicmp - int (const wchar_t *, const wchar_t *)
			// UnexposedAttr-  - 
			// UnexposedAttr-  - 
			// ParmDecl- _Str1 - const wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _Str2 - const wchar_t *
				// TypeRef- wchar_t - wchar_t
		// FunctionDecl- wcsnicmp - int (const wchar_t *, const wchar_t *, size_t)
			// UnexposedAttr-  - 
			// UnexposedAttr-  - 
			// ParmDecl- _Str1 - const wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _Str2 - const wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _MaxCount - size_t
				// TypeRef- size_t - size_t
		// FunctionDecl- wcsnset - wchar_t *(wchar_t *, wchar_t, size_t)
			// UnexposedAttr-  - 
			// TypeRef- wchar_t - wchar_t
			// ParmDecl- _Str - wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _Val - wchar_t
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _MaxCount - size_t
				// TypeRef- size_t - size_t
		// FunctionDecl- wcsrev - wchar_t *(wchar_t *)
			// UnexposedAttr-  - 
			// TypeRef- wchar_t - wchar_t
			// ParmDecl- _Str - wchar_t *
				// TypeRef- wchar_t - wchar_t
		// FunctionDecl- wcsset - wchar_t *(wchar_t *, wchar_t)
			// UnexposedAttr-  - 
			// TypeRef- wchar_t - wchar_t
			// ParmDecl- _Str - wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _Val - wchar_t
				// TypeRef- wchar_t - wchar_t
		// FunctionDecl- wcslwr - wchar_t *(wchar_t *)
			// UnexposedAttr-  - 
			// TypeRef- wchar_t - wchar_t
			// ParmDecl- _Str - wchar_t *
				// TypeRef- wchar_t - wchar_t
		// FunctionDecl- wcsupr - wchar_t *(wchar_t *)
			// UnexposedAttr-  - 
			// TypeRef- wchar_t - wchar_t
			// ParmDecl- _Str - wchar_t *
				// TypeRef- wchar_t - wchar_t
		// FunctionDecl- wcsicoll - int (const wchar_t *, const wchar_t *)
			// UnexposedAttr-  - 
			// UnexposedAttr-  - 
			// ParmDecl- _Str1 - const wchar_t *
				// TypeRef- wchar_t - wchar_t
			// ParmDecl- _Str2 - const wchar_t *
				// TypeRef- wchar_t - wchar_t
		// StructDecl-  - stbtt__buf
			// FieldDecl- data - unsigned char *
			// FieldDecl- cursor - int
			// FieldDecl- size - int
		// TypedefDecl- stbtt__buf - stbtt__buf
			// StructDecl-  - stbtt__buf
				// FieldDecl- data - unsigned char *
				// FieldDecl- cursor - int
				// FieldDecl- size - int
		// StructDecl-  - stbtt_bakedchar
			// FieldDecl- x0 - unsigned short
			// FieldDecl- y0 - unsigned short
			// FieldDecl- x1 - unsigned short
			// FieldDecl- y1 - unsigned short
			// FieldDecl- xoff - float
			// FieldDecl- yoff - float
			// FieldDecl- xadvance - float
		// TypedefDecl- stbtt_bakedchar - stbtt_bakedchar
			// StructDecl-  - stbtt_bakedchar
				// FieldDecl- x0 - unsigned short
				// FieldDecl- y0 - unsigned short
				// FieldDecl- x1 - unsigned short
				// FieldDecl- y1 - unsigned short
				// FieldDecl- xoff - float
				// FieldDecl- yoff - float
				// FieldDecl- xadvance - float
		// FunctionDecl- stbtt_BakeFontBitmap - int (const unsigned char *, int, float, unsigned char *, int, int, int, int, stbtt_bakedchar *)
			// ParmDecl- data - const unsigned char *
			// ParmDecl- offset - int
			// ParmDecl- pixel_height - float
			// ParmDecl- pixels - unsigned char *
			// ParmDecl- pw - int
			// ParmDecl- ph - int
			// ParmDecl- first_char - int
			// ParmDecl- num_chars - int
			// ParmDecl- chardata - stbtt_bakedchar *
				// TypeRef- stbtt_bakedchar - stbtt_bakedchar
		// StructDecl-  - stbtt_aligned_quad
			// FieldDecl- x0 - float
			// FieldDecl- y0 - float
			// FieldDecl- s0 - float
			// FieldDecl- t0 - float
			// FieldDecl- x1 - float
			// FieldDecl- y1 - float
			// FieldDecl- s1 - float
			// FieldDecl- t1 - float
		// TypedefDecl- stbtt_aligned_quad - stbtt_aligned_quad
			// StructDecl-  - stbtt_aligned_quad
				// FieldDecl- x0 - float
				// FieldDecl- y0 - float
				// FieldDecl- s0 - float
				// FieldDecl- t0 - float
				// FieldDecl- x1 - float
				// FieldDecl- y1 - float
				// FieldDecl- s1 - float
				// FieldDecl- t1 - float
		// FunctionDecl- stbtt_GetBakedQuad - void (const stbtt_bakedchar *, int, int, int, float *, float *, stbtt_aligned_quad *, int)
			// ParmDecl- chardata - const stbtt_bakedchar *
				// TypeRef- stbtt_bakedchar - stbtt_bakedchar
			// ParmDecl- pw - int
			// ParmDecl- ph - int
			// ParmDecl- char_index - int
			// ParmDecl- xpos - float *
			// ParmDecl- ypos - float *
			// ParmDecl- q - stbtt_aligned_quad *
				// TypeRef- stbtt_aligned_quad - stbtt_aligned_quad
			// ParmDecl- opengl_fillrule - int
		// StructDecl-  - stbtt_packedchar
			// FieldDecl- x0 - unsigned short
			// FieldDecl- y0 - unsigned short
			// FieldDecl- x1 - unsigned short
			// FieldDecl- y1 - unsigned short
			// FieldDecl- xoff - float
			// FieldDecl- yoff - float
			// FieldDecl- xadvance - float
			// FieldDecl- xoff2 - float
			// FieldDecl- yoff2 - float
		// TypedefDecl- stbtt_packedchar - stbtt_packedchar
			// StructDecl-  - stbtt_packedchar
				// FieldDecl- x0 - unsigned short
				// FieldDecl- y0 - unsigned short
				// FieldDecl- x1 - unsigned short
				// FieldDecl- y1 - unsigned short
				// FieldDecl- xoff - float
				// FieldDecl- yoff - float
				// FieldDecl- xadvance - float
				// FieldDecl- xoff2 - float
				// FieldDecl- yoff2 - float
		// StructDecl- stbtt_pack_context - struct stbtt_pack_context
		// TypedefDecl- stbtt_pack_context - stbtt_pack_context
			// TypeRef- struct stbtt_pack_context - struct stbtt_pack_context
		// StructDecl- stbtt_fontinfo - struct stbtt_fontinfo
		// TypedefDecl- stbtt_fontinfo - stbtt_fontinfo
			// TypeRef- struct stbtt_fontinfo - struct stbtt_fontinfo
		// StructDecl- stbrp_rect - struct stbrp_rect
		// TypedefDecl- stbrp_rect - stbrp_rect
			// TypeRef- struct stbrp_rect - struct stbrp_rect
		// FunctionDecl- stbtt_PackBegin - int (stbtt_pack_context *, unsigned char *, int, int, int, int, void *)
			// ParmDecl- spc - stbtt_pack_context *
				// TypeRef- stbtt_pack_context - stbtt_pack_context
			// ParmDecl- pixels - unsigned char *
			// ParmDecl- width - int
			// ParmDecl- height - int
			// ParmDecl- stride_in_bytes - int
			// ParmDecl- padding - int
			// ParmDecl- alloc_context - void *
		// FunctionDecl- stbtt_PackEnd - void (stbtt_pack_context *)
			// ParmDecl- spc - stbtt_pack_context *
				// TypeRef- stbtt_pack_context - stbtt_pack_context
		// FunctionDecl- stbtt_PackFontRange - int (stbtt_pack_context *, const unsigned char *, int, float, int, int, stbtt_packedchar *)
			// ParmDecl- spc - stbtt_pack_context *
				// TypeRef- stbtt_pack_context - stbtt_pack_context
			// ParmDecl- fontdata - const unsigned char *
			// ParmDecl- font_index - int
			// ParmDecl- font_size - float
			// ParmDecl- first_unicode_char_in_range - int
			// ParmDecl- num_chars_in_range - int
			// ParmDecl- chardata_for_range - stbtt_packedchar *
				// TypeRef- stbtt_packedchar - stbtt_packedchar
		// StructDecl-  - stbtt_pack_range
			// FieldDecl- font_size - float
			// FieldDecl- first_unicode_codepoint_in_range - int
			// FieldDecl- array_of_unicode_codepoints - int *
			// FieldDecl- num_chars - int
			// FieldDecl- chardata_for_range - stbtt_packedchar *
				// TypeRef- stbtt_packedchar - stbtt_packedchar
			// FieldDecl- h_oversample - unsigned char
			// FieldDecl- v_oversample - unsigned char
		// TypedefDecl- stbtt_pack_range - stbtt_pack_range
			// StructDecl-  - stbtt_pack_range
				// FieldDecl- font_size - float
				// FieldDecl- first_unicode_codepoint_in_range - int
				// FieldDecl- array_of_unicode_codepoints - int *
				// FieldDecl- num_chars - int
				// FieldDecl- chardata_for_range - stbtt_packedchar *
					// TypeRef- stbtt_packedchar - stbtt_packedchar
				// FieldDecl- h_oversample - unsigned char
				// FieldDecl- v_oversample - unsigned char
		// FunctionDecl- stbtt_PackFontRanges - int (stbtt_pack_context *, const unsigned char *, int, stbtt_pack_range *, int)
			// ParmDecl- spc - stbtt_pack_context *
				// TypeRef- stbtt_pack_context - stbtt_pack_context
			// ParmDecl- fontdata - const unsigned char *
			// ParmDecl- font_index - int
			// ParmDecl- ranges - stbtt_pack_range *
				// TypeRef- stbtt_pack_range - stbtt_pack_range
			// ParmDecl- num_ranges - int
		// FunctionDecl- stbtt_PackSetOversampling - void (stbtt_pack_context *, unsigned int, unsigned int)
			// ParmDecl- spc - stbtt_pack_context *
				// TypeRef- stbtt_pack_context - stbtt_pack_context
			// ParmDecl- h_oversample - unsigned int
			// ParmDecl- v_oversample - unsigned int
		// FunctionDecl- stbtt_GetPackedQuad - void (const stbtt_packedchar *, int, int, int, float *, float *, stbtt_aligned_quad *, int)
			// ParmDecl- chardata - const stbtt_packedchar *
				// TypeRef- stbtt_packedchar - stbtt_packedchar
			// ParmDecl- pw - int
			// ParmDecl- ph - int
			// ParmDecl- char_index - int
			// ParmDecl- xpos - float *
			// ParmDecl- ypos - float *
			// ParmDecl- q - stbtt_aligned_quad *
				// TypeRef- stbtt_aligned_quad - stbtt_aligned_quad
			// ParmDecl- align_to_integer - int
		// FunctionDecl- stbtt_PackFontRangesGatherRects - int (stbtt_pack_context *, const stbtt_fontinfo *, stbtt_pack_range *, int, stbrp_rect *)
			// ParmDecl- spc - stbtt_pack_context *
				// TypeRef- stbtt_pack_context - stbtt_pack_context
			// ParmDecl- info - const stbtt_fontinfo *
				// TypeRef- stbtt_fontinfo - stbtt_fontinfo
			// ParmDecl- ranges - stbtt_pack_range *
				// TypeRef- stbtt_pack_range - stbtt_pack_range
			// ParmDecl- num_ranges - int
			// ParmDecl- rects - stbrp_rect *
				// TypeRef- stbrp_rect - stbrp_rect
		// FunctionDecl- stbtt_PackFontRangesPackRects - void (stbtt_pack_context *, stbrp_rect *, int)
			// ParmDecl- spc - stbtt_pack_context *
				// TypeRef- stbtt_pack_context - stbtt_pack_context
			// ParmDecl- rects - stbrp_rect *
				// TypeRef- stbrp_rect - stbrp_rect
			// ParmDecl- num_rects - int
		// FunctionDecl- stbtt_PackFontRangesRenderIntoRects - int (stbtt_pack_context *, const stbtt_fontinfo *, stbtt_pack_range *, int, stbrp_rect *)
			// ParmDecl- spc - stbtt_pack_context *
				// TypeRef- stbtt_pack_context - stbtt_pack_context
			// ParmDecl- info - const stbtt_fontinfo *
				// TypeRef- stbtt_fontinfo - stbtt_fontinfo
			// ParmDecl- ranges - stbtt_pack_range *
				// TypeRef- stbtt_pack_range - stbtt_pack_range
			// ParmDecl- num_ranges - int
			// ParmDecl- rects - stbrp_rect *
				// TypeRef- stbrp_rect - stbrp_rect
		// StructDecl- stbtt_pack_context - struct stbtt_pack_context
			// FieldDecl- user_allocator_context - void *
			// FieldDecl- pack_info - void *
			// FieldDecl- width - int
			// FieldDecl- height - int
			// FieldDecl- stride_in_bytes - int
			// FieldDecl- padding - int
			// FieldDecl- h_oversample - unsigned int
			// FieldDecl- v_oversample - unsigned int
			// FieldDecl- pixels - unsigned char *
			// FieldDecl- nodes - void *
		// FunctionDecl- stbtt_GetNumberOfFonts - int (const unsigned char *)
			// ParmDecl- data - const unsigned char *
		// FunctionDecl- stbtt_GetFontOffsetForIndex - int (const unsigned char *, int)
			// ParmDecl- data - const unsigned char *
			// ParmDecl- index - int
		// StructDecl- stbtt_fontinfo - struct stbtt_fontinfo
			// FieldDecl- userdata - void *
			// FieldDecl- data - unsigned char *
			// FieldDecl- fontstart - int
			// FieldDecl- numGlyphs - int
			// FieldDecl- loca - int
			// FieldDecl- head - int
			// FieldDecl- glyf - int
			// FieldDecl- hhea - int
			// FieldDecl- hmtx - int
			// FieldDecl- kern - int
			// FieldDecl- gpos - int
			// FieldDecl- index_map - int
			// FieldDecl- indexToLocFormat - int
			// FieldDecl- cff - stbtt__buf
				// TypeRef- stbtt__buf - stbtt__buf
			// FieldDecl- charstrings - stbtt__buf
				// TypeRef- stbtt__buf - stbtt__buf
			// FieldDecl- gsubrs - stbtt__buf
				// TypeRef- stbtt__buf - stbtt__buf
			// FieldDecl- subrs - stbtt__buf
				// TypeRef- stbtt__buf - stbtt__buf
			// FieldDecl- fontdicts - stbtt__buf
				// TypeRef- stbtt__buf - stbtt__buf
			// FieldDecl- fdselect - stbtt__buf
				// TypeRef- stbtt__buf - stbtt__buf
		// FunctionDecl- stbtt_InitFont - int (stbtt_fontinfo *, const unsigned char *, int)
			// ParmDecl- info - stbtt_fontinfo *
				// TypeRef- stbtt_fontinfo - stbtt_fontinfo
			// ParmDecl- data - const unsigned char *
			// ParmDecl- offset - int
		// FunctionDecl- stbtt_FindGlyphIndex - int (const stbtt_fontinfo *, int)
			// ParmDecl- info - const stbtt_fontinfo *
				// TypeRef- stbtt_fontinfo - stbtt_fontinfo
			// ParmDecl- unicode_codepoint - int
		// FunctionDecl- stbtt_ScaleForPixelHeight - float (const stbtt_fontinfo *, float)
			// ParmDecl- info - const stbtt_fontinfo *
				// TypeRef- stbtt_fontinfo - stbtt_fontinfo
			// ParmDecl- pixels - float
		// FunctionDecl- stbtt_ScaleForMappingEmToPixels - float (const stbtt_fontinfo *, float)
			// ParmDecl- info - const stbtt_fontinfo *
				// TypeRef- stbtt_fontinfo - stbtt_fontinfo
			// ParmDecl- pixels - float
		// FunctionDecl- stbtt_GetFontVMetrics - void (const stbtt_fontinfo *, int *, int *, int *)
			// ParmDecl- info - const stbtt_fontinfo *
				// TypeRef- stbtt_fontinfo - stbtt_fontinfo
			// ParmDecl- ascent - int *
			// ParmDecl- descent - int *
			// ParmDecl- lineGap - int *
		// FunctionDecl- stbtt_GetFontVMetricsOS2 - int (const stbtt_fontinfo *, int *, int *, int *)
			// ParmDecl- info - const stbtt_fontinfo *
				// TypeRef- stbtt_fontinfo - stbtt_fontinfo
			// ParmDecl- typoAscent - int *
			// ParmDecl- typoDescent - int *
			// ParmDecl- typoLineGap - int *
		// FunctionDecl- stbtt_GetFontBoundingBox - void (const stbtt_fontinfo *, int *, int *, int *, int *)
			// ParmDecl- info - const stbtt_fontinfo *
				// TypeRef- stbtt_fontinfo - stbtt_fontinfo
			// ParmDecl- x0 - int *
			// ParmDecl- y0 - int *
			// ParmDecl- x1 - int *
			// ParmDecl- y1 - int *
		// FunctionDecl- stbtt_GetCodepointHMetrics - void (const stbtt_fontinfo *, int, int *, int *)
			// ParmDecl- info - const stbtt_fontinfo *
				// TypeRef- stbtt_fontinfo - stbtt_fontinfo
			// ParmDecl- codepoint - int
			// ParmDecl- advanceWidth - int *
			// ParmDecl- leftSideBearing - int *
		// FunctionDecl- stbtt_GetCodepointKernAdvance - int (const stbtt_fontinfo *, int, int)
			// ParmDecl- info - const stbtt_fontinfo *
				// TypeRef- stbtt_fontinfo - stbtt_fontinfo
			// ParmDecl- ch1 - int
			// ParmDecl- ch2 - int
		// FunctionDecl- stbtt_GetCodepointBox - int (const stbtt_fontinfo *, int, int *, int *, int *, int *)
			// ParmDecl- info - const stbtt_fontinfo *
				// TypeRef- stbtt_fontinfo - stbtt_fontinfo
			// ParmDecl- codepoint - int
			// ParmDecl- x0 - int *
			// ParmDecl- y0 - int *
			// ParmDecl- x1 - int *
			// ParmDecl- y1 - int *
		// FunctionDecl- stbtt_GetGlyphHMetrics - void (const stbtt_fontinfo *, int, int *, int *)
			// ParmDecl- info - const stbtt_fontinfo *
				// TypeRef- stbtt_fontinfo - stbtt_fontinfo
			// ParmDecl- glyph_index - int
			// ParmDecl- advanceWidth - int *
			// ParmDecl- leftSideBearing - int *
		// FunctionDecl- stbtt_GetGlyphKernAdvance - int (const stbtt_fontinfo *, int, int)
			// ParmDecl- info - const stbtt_fontinfo *
				// TypeRef- stbtt_fontinfo - stbtt_fontinfo
			// ParmDecl- glyph1 - int
			// ParmDecl- glyph2 - int
		// FunctionDecl- stbtt_GetGlyphBox - int (const stbtt_fontinfo *, int, int *, int *, int *, int *)
			// ParmDecl- info - const stbtt_fontinfo *
				// TypeRef- stbtt_fontinfo - stbtt_fontinfo
			// ParmDecl- glyph_index - int
			// ParmDecl- x0 - int *
			// ParmDecl- y0 - int *
			// ParmDecl- x1 - int *
			// ParmDecl- y1 - int *
		// EnumDecl-  - enum (anonymous at stb_truetype.h:797:4)
			// EnumConstantDecl- STBTT_vmove - int
				// IntegerLiteral-  - int [Literal: 1]
			// EnumConstantDecl- STBTT_vline - int
			// EnumConstantDecl- STBTT_vcurve - int
			// EnumConstantDecl- STBTT_vcubic - int
		// StructDecl-  - stbtt_vertex
			// FieldDecl- x - short
			// FieldDecl- y - short
			// FieldDecl- cx - short
			// FieldDecl- cy - short
			// FieldDecl- cx1 - short
			// FieldDecl- cy1 - short
			// FieldDecl- type - unsigned char
			// FieldDecl- padding - unsigned char
		// TypedefDecl- stbtt_vertex - stbtt_vertex
			// StructDecl-  - stbtt_vertex
				// FieldDecl- x - short
				// FieldDecl- y - short
				// FieldDecl- cx - short
				// FieldDecl- cy - short
				// FieldDecl- cx1 - short
				// FieldDecl- cy1 - short
				// FieldDecl- type - unsigned char
				// FieldDecl- padding - unsigned char
		// FunctionDecl- stbtt_IsGlyphEmpty - int (const stbtt_fontinfo *, int)
			// ParmDecl- info - const stbtt_fontinfo *
				// TypeRef- stbtt_fontinfo - stbtt_fontinfo
			// ParmDecl- glyph_index - int
		// FunctionDecl- stbtt_GetCodepointShape - int (const stbtt_fontinfo *, int, stbtt_vertex **)
			// ParmDecl- info - const stbtt_fontinfo *
				// TypeRef- stbtt_fontinfo - stbtt_fontinfo
			// ParmDecl- unicode_codepoint - int
			// ParmDecl- vertices - stbtt_vertex **
				// TypeRef- stbtt_vertex - stbtt_vertex
		// FunctionDecl- stbtt_GetGlyphShape - int (const stbtt_fontinfo *, int, stbtt_vertex **)
			// ParmDecl- info - const stbtt_fontinfo *
				// TypeRef- stbtt_fontinfo - stbtt_fontinfo
			// ParmDecl- glyph_index - int
			// ParmDecl- vertices - stbtt_vertex **
				// TypeRef- stbtt_vertex - stbtt_vertex
		// FunctionDecl- stbtt_FreeShape - void (const stbtt_fontinfo *, stbtt_vertex *)
			// ParmDecl- info - const stbtt_fontinfo *
				// TypeRef- stbtt_fontinfo - stbtt_fontinfo
			// ParmDecl- vertices - stbtt_vertex *
				// TypeRef- stbtt_vertex - stbtt_vertex
		// FunctionDecl- stbtt_FreeBitmap - void (unsigned char *, void *)
			// ParmDecl- bitmap - unsigned char *
			// ParmDecl- userdata - void *
		// FunctionDecl- stbtt_GetCodepointBitmap - unsigned char *(const stbtt_fontinfo *, float, float, int, int *, int *, int *, int *)
			// ParmDecl- info - const stbtt_fontinfo *
				// TypeRef- stbtt_fontinfo - stbtt_fontinfo
			// ParmDecl- scale_x - float
			// ParmDecl- scale_y - float
			// ParmDecl- codepoint - int
			// ParmDecl- width - int *
			// ParmDecl- height - int *
			// ParmDecl- xoff - int *
			// ParmDecl- yoff - int *
		// FunctionDecl- stbtt_GetCodepointBitmapSubpixel - unsigned char *(const stbtt_fontinfo *, float, float, float, float, int, int *, int *, int *, int *)
			// ParmDecl- info - const stbtt_fontinfo *
				// TypeRef- stbtt_fontinfo - stbtt_fontinfo
			// ParmDecl- scale_x - float
			// ParmDecl- scale_y - float
			// ParmDecl- shift_x - float
			// ParmDecl- shift_y - float
			// ParmDecl- codepoint - int
			// ParmDecl- width - int *
			// ParmDecl- height - int *
			// ParmDecl- xoff - int *
			// ParmDecl- yoff - int *
		// FunctionDecl- stbtt_MakeCodepointBitmap - void (const stbtt_fontinfo *, unsigned char *, int, int, int, float, float, int)
			// ParmDecl- info - const stbtt_fontinfo *
				// TypeRef- stbtt_fontinfo - stbtt_fontinfo
			// ParmDecl- output - unsigned char *
			// ParmDecl- out_w - int
			// ParmDecl- out_h - int
			// ParmDecl- out_stride - int
			// ParmDecl- scale_x - float
			// ParmDecl- scale_y - float
			// ParmDecl- codepoint - int
		// FunctionDecl- stbtt_MakeCodepointBitmapSubpixel - void (const stbtt_fontinfo *, unsigned char *, int, int, int, float, float, float, float, int)
			// ParmDecl- info - const stbtt_fontinfo *
				// TypeRef- stbtt_fontinfo - stbtt_fontinfo
			// ParmDecl- output - unsigned char *
			// ParmDecl- out_w - int
			// ParmDecl- out_h - int
			// ParmDecl- out_stride - int
			// ParmDecl- scale_x - float
			// ParmDecl- scale_y - float
			// ParmDecl- shift_x - float
			// ParmDecl- shift_y - float
			// ParmDecl- codepoint - int
		// FunctionDecl- stbtt_MakeCodepointBitmapSubpixelPrefilter - void (const stbtt_fontinfo *, unsigned char *, int, int, int, float, float, float, float, int, int, float *, float *, int)
			// ParmDecl- info - const stbtt_fontinfo *
				// TypeRef- stbtt_fontinfo - stbtt_fontinfo
			// ParmDecl- output - unsigned char *
			// ParmDecl- out_w - int
			// ParmDecl- out_h - int
			// ParmDecl- out_stride - int
			// ParmDecl- scale_x - float
			// ParmDecl- scale_y - float
			// ParmDecl- shift_x - float
			// ParmDecl- shift_y - float
			// ParmDecl- oversample_x - int
			// ParmDecl- oversample_y - int
			// ParmDecl- sub_x - float *
			// ParmDecl- sub_y - float *
			// ParmDecl- codepoint - int
		// FunctionDecl- stbtt_GetCodepointBitmapBox - void (const stbtt_fontinfo *, int, float, float, int *, int *, int *, int *)
			// ParmDecl- font - const stbtt_fontinfo *
				// TypeRef- stbtt_fontinfo - stbtt_fontinfo
			// ParmDecl- codepoint - int
			// ParmDecl- scale_x - float
			// ParmDecl- scale_y - float
			// ParmDecl- ix0 - int *
			// ParmDecl- iy0 - int *
			// ParmDecl- ix1 - int *
			// ParmDecl- iy1 - int *
		// FunctionDecl- stbtt_GetCodepointBitmapBoxSubpixel - void (const stbtt_fontinfo *, int, float, float, float, float, int *, int *, int *, int *)
			// ParmDecl- font - const stbtt_fontinfo *
				// TypeRef- stbtt_fontinfo - stbtt_fontinfo
			// ParmDecl- codepoint - int
			// ParmDecl- scale_x - float
			// ParmDecl- scale_y - float
			// ParmDecl- shift_x - float
			// ParmDecl- shift_y - float
			// ParmDecl- ix0 - int *
			// ParmDecl- iy0 - int *
			// ParmDecl- ix1 - int *
			// ParmDecl- iy1 - int *
		// FunctionDecl- stbtt_GetGlyphBitmap - unsigned char *(const stbtt_fontinfo *, float, float, int, int *, int *, int *, int *)
			// ParmDecl- info - const stbtt_fontinfo *
				// TypeRef- stbtt_fontinfo - stbtt_fontinfo
			// ParmDecl- scale_x - float
			// ParmDecl- scale_y - float
			// ParmDecl- glyph - int
			// ParmDecl- width - int *
			// ParmDecl- height - int *
			// ParmDecl- xoff - int *
			// ParmDecl- yoff - int *
		// FunctionDecl- stbtt_GetGlyphBitmapSubpixel - unsigned char *(const stbtt_fontinfo *, float, float, float, float, int, int *, int *, int *, int *)
			// ParmDecl- info - const stbtt_fontinfo *
				// TypeRef- stbtt_fontinfo - stbtt_fontinfo
			// ParmDecl- scale_x - float
			// ParmDecl- scale_y - float
			// ParmDecl- shift_x - float
			// ParmDecl- shift_y - float
			// ParmDecl- glyph - int
			// ParmDecl- width - int *
			// ParmDecl- height - int *
			// ParmDecl- xoff - int *
			// ParmDecl- yoff - int *
		// FunctionDecl- stbtt_MakeGlyphBitmap - void (const stbtt_fontinfo *, unsigned char *, int, int, int, float, float, int)
			// ParmDecl- info - const stbtt_fontinfo *
				// TypeRef- stbtt_fontinfo - stbtt_fontinfo
			// ParmDecl- output - unsigned char *
			// ParmDecl- out_w - int
			// ParmDecl- out_h - int
			// ParmDecl- out_stride - int
			// ParmDecl- scale_x - float
			// ParmDecl- scale_y - float
			// ParmDecl- glyph - int
		// FunctionDecl- stbtt_MakeGlyphBitmapSubpixel - void (const stbtt_fontinfo *, unsigned char *, int, int, int, float, float, float, float, int)
			// ParmDecl- info - const stbtt_fontinfo *
				// TypeRef- stbtt_fontinfo - stbtt_fontinfo
			// ParmDecl- output - unsigned char *
			// ParmDecl- out_w - int
			// ParmDecl- out_h - int
			// ParmDecl- out_stride - int
			// ParmDecl- scale_x - float
			// ParmDecl- scale_y - float
			// ParmDecl- shift_x - float
			// ParmDecl- shift_y - float
			// ParmDecl- glyph - int
		// FunctionDecl- stbtt_MakeGlyphBitmapSubpixelPrefilter - void (const stbtt_fontinfo *, unsigned char *, int, int, int, float, float, float, float, int, int, float *, float *, int)
			// ParmDecl- info - const stbtt_fontinfo *
				// TypeRef- stbtt_fontinfo - stbtt_fontinfo
			// ParmDecl- output - unsigned char *
			// ParmDecl- out_w - int
			// ParmDecl- out_h - int
			// ParmDecl- out_stride - int
			// ParmDecl- scale_x - float
			// ParmDecl- scale_y - float
			// ParmDecl- shift_x - float
			// ParmDecl- shift_y - float
			// ParmDecl- oversample_x - int
			// ParmDecl- oversample_y - int
			// ParmDecl- sub_x - float *
			// ParmDecl- sub_y - float *
			// ParmDecl- glyph - int
		// FunctionDecl- stbtt_GetGlyphBitmapBox - void (const stbtt_fontinfo *, int, float, float, int *, int *, int *, int *)
			// ParmDecl- font - const stbtt_fontinfo *
				// TypeRef- stbtt_fontinfo - stbtt_fontinfo
			// ParmDecl- glyph - int
			// ParmDecl- scale_x - float
			// ParmDecl- scale_y - float
			// ParmDecl- ix0 - int *
			// ParmDecl- iy0 - int *
			// ParmDecl- ix1 - int *
			// ParmDecl- iy1 - int *
		// FunctionDecl- stbtt_GetGlyphBitmapBoxSubpixel - void (const stbtt_fontinfo *, int, float, float, float, float, int *, int *, int *, int *)
			// ParmDecl- font - const stbtt_fontinfo *
				// TypeRef- stbtt_fontinfo - stbtt_fontinfo
			// ParmDecl- glyph - int
			// ParmDecl- scale_x - float
			// ParmDecl- scale_y - float
			// ParmDecl- shift_x - float
			// ParmDecl- shift_y - float
			// ParmDecl- ix0 - int *
			// ParmDecl- iy0 - int *
			// ParmDecl- ix1 - int *
			// ParmDecl- iy1 - int *
		// StructDecl-  - stbtt__bitmap
			// FieldDecl- w - int
			// FieldDecl- h - int
			// FieldDecl- stride - int
			// FieldDecl- pixels - unsigned char *
		// TypedefDecl- stbtt__bitmap - stbtt__bitmap
			// StructDecl-  - stbtt__bitmap
				// FieldDecl- w - int
				// FieldDecl- h - int
				// FieldDecl- stride - int
				// FieldDecl- pixels - unsigned char *
		// FunctionDecl- stbtt_Rasterize - void (stbtt__bitmap *, float, stbtt_vertex *, int, float, float, float, float, int, int, int, void *)
			// ParmDecl- result - stbtt__bitmap *
				// TypeRef- stbtt__bitmap - stbtt__bitmap
			// ParmDecl- flatness_in_pixels - float
			// ParmDecl- vertices - stbtt_vertex *
				// TypeRef- stbtt_vertex - stbtt_vertex
			// ParmDecl- num_verts - int
			// ParmDecl- scale_x - float
			// ParmDecl- scale_y - float
			// ParmDecl- shift_x - float
			// ParmDecl- shift_y - float
			// ParmDecl- x_off - int
			// ParmDecl- y_off - int
			// ParmDecl- invert - int
			// ParmDecl- userdata - void *
		// FunctionDecl- stbtt_FreeSDF - void (unsigned char *, void *)
			// ParmDecl- bitmap - unsigned char *
			// ParmDecl- userdata - void *
		// FunctionDecl- stbtt_GetGlyphSDF - unsigned char *(const stbtt_fontinfo *, float, int, int, unsigned char, float, int *, int *, int *, int *)
			// ParmDecl- info - const stbtt_fontinfo *
				// TypeRef- stbtt_fontinfo - stbtt_fontinfo
			// ParmDecl- scale - float
			// ParmDecl- glyph - int
			// ParmDecl- padding - int
			// ParmDecl- onedge_value - unsigned char
			// ParmDecl- pixel_dist_scale - float
			// ParmDecl- width - int *
			// ParmDecl- height - int *
			// ParmDecl- xoff - int *
			// ParmDecl- yoff - int *
		// FunctionDecl- stbtt_GetCodepointSDF - unsigned char *(const stbtt_fontinfo *, float, int, int, unsigned char, float, int *, int *, int *, int *)
			// ParmDecl- info - const stbtt_fontinfo *
				// TypeRef- stbtt_fontinfo - stbtt_fontinfo
			// ParmDecl- scale - float
			// ParmDecl- codepoint - int
			// ParmDecl- padding - int
			// ParmDecl- onedge_value - unsigned char
			// ParmDecl- pixel_dist_scale - float
			// ParmDecl- width - int *
			// ParmDecl- height - int *
			// ParmDecl- xoff - int *
			// ParmDecl- yoff - int *
		// FunctionDecl- stbtt_FindMatchingFont - int (const unsigned char *, const char *, int)
			// ParmDecl- fontdata - const unsigned char *
			// ParmDecl- name - const char *
			// ParmDecl- flags - int
		// FunctionDecl- stbtt_CompareUTF8toUTF16_bigendian - int (const char *, int, const char *, int)
			// ParmDecl- s1 - const char *
			// ParmDecl- len1 - int
			// ParmDecl- s2 - const char *
			// ParmDecl- len2 - int
		// FunctionDecl- stbtt_GetFontNameString - const char *(const stbtt_fontinfo *, int *, int, int, int, int)
			// ParmDecl- font - const stbtt_fontinfo *
				// TypeRef- stbtt_fontinfo - stbtt_fontinfo
			// ParmDecl- length - int *
			// ParmDecl- platformID - int
			// ParmDecl- encodingID - int
			// ParmDecl- languageID - int
			// ParmDecl- nameID - int
		// EnumDecl-  - enum (anonymous at stb_truetype.h:1011:1)
			// EnumConstantDecl- STBTT_PLATFORM_ID_UNICODE - int
				// IntegerLiteral-  - int [Literal: 0]
			// EnumConstantDecl- STBTT_PLATFORM_ID_MAC - int
				// IntegerLiteral-  - int [Literal: 1]
			// EnumConstantDecl- STBTT_PLATFORM_ID_ISO - int
				// IntegerLiteral-  - int [Literal: 2]
			// EnumConstantDecl- STBTT_PLATFORM_ID_MICROSOFT - int
				// IntegerLiteral-  - int [Literal: 3]
		// EnumDecl-  - enum (anonymous at stb_truetype.h:1018:1)
			// EnumConstantDecl- STBTT_UNICODE_EID_UNICODE_1_0 - int
				// IntegerLiteral-  - int [Literal: 0]
			// EnumConstantDecl- STBTT_UNICODE_EID_UNICODE_1_1 - int
				// IntegerLiteral-  - int [Literal: 1]
			// EnumConstantDecl- STBTT_UNICODE_EID_ISO_10646 - int
				// IntegerLiteral-  - int [Literal: 2]
			// EnumConstantDecl- STBTT_UNICODE_EID_UNICODE_2_0_BMP - int
				// IntegerLiteral-  - int [Literal: 3]
			// EnumConstantDecl- STBTT_UNICODE_EID_UNICODE_2_0_FULL - int
				// IntegerLiteral-  - int [Literal: 4]
		// EnumDecl-  - enum (anonymous at stb_truetype.h:1026:1)
			// EnumConstantDecl- STBTT_MS_EID_SYMBOL - int
				// IntegerLiteral-  - int [Literal: 0]
			// EnumConstantDecl- STBTT_MS_EID_UNICODE_BMP - int
				// IntegerLiteral-  - int [Literal: 1]
			// EnumConstantDecl- STBTT_MS_EID_SHIFTJIS - int
				// IntegerLiteral-  - int [Literal: 2]
			// EnumConstantDecl- STBTT_MS_EID_UNICODE_FULL - int
				// IntegerLiteral-  - int [Literal: 10]
		// EnumDecl-  - enum (anonymous at stb_truetype.h:1033:1)
			// EnumConstantDecl- STBTT_MAC_EID_ROMAN - int
				// IntegerLiteral-  - int [Literal: 0]
			// EnumConstantDecl- STBTT_MAC_EID_ARABIC - int
				// IntegerLiteral-  - int [Literal: 4]
			// EnumConstantDecl- STBTT_MAC_EID_JAPANESE - int
				// IntegerLiteral-  - int [Literal: 1]
			// EnumConstantDecl- STBTT_MAC_EID_HEBREW - int
				// IntegerLiteral-  - int [Literal: 5]
			// EnumConstantDecl- STBTT_MAC_EID_CHINESE_TRAD - int
				// IntegerLiteral-  - int [Literal: 2]
			// EnumConstantDecl- STBTT_MAC_EID_GREEK - int
				// IntegerLiteral-  - int [Literal: 6]
			// EnumConstantDecl- STBTT_MAC_EID_KOREAN - int
				// IntegerLiteral-  - int [Literal: 3]
			// EnumConstantDecl- STBTT_MAC_EID_RUSSIAN - int
				// IntegerLiteral-  - int [Literal: 7]
		// EnumDecl-  - enum (anonymous at stb_truetype.h:1040:1)
			// EnumConstantDecl- STBTT_MS_LANG_ENGLISH - int
				// IntegerLiteral-  - int [Literal: 1033]
			// EnumConstantDecl- STBTT_MS_LANG_ITALIAN - int
				// IntegerLiteral-  - int [Literal: 1040]
			// EnumConstantDecl- STBTT_MS_LANG_CHINESE - int
				// IntegerLiteral-  - int [Literal: 2052]
			// EnumConstantDecl- STBTT_MS_LANG_JAPANESE - int
				// IntegerLiteral-  - int [Literal: 1041]
			// EnumConstantDecl- STBTT_MS_LANG_DUTCH - int
				// IntegerLiteral-  - int [Literal: 1043]
			// EnumConstantDecl- STBTT_MS_LANG_KOREAN - int
				// IntegerLiteral-  - int [Literal: 1042]
			// EnumConstantDecl- STBTT_MS_LANG_FRENCH - int
				// IntegerLiteral-  - int [Literal: 1036]
			// EnumConstantDecl- STBTT_MS_LANG_RUSSIAN - int
				// IntegerLiteral-  - int [Literal: 1049]
			// EnumConstantDecl- STBTT_MS_LANG_GERMAN - int
				// IntegerLiteral-  - int [Literal: 1031]
			// EnumConstantDecl- STBTT_MS_LANG_SPANISH - int
				// IntegerLiteral-  - int [Literal: 1033]
			// EnumConstantDecl- STBTT_MS_LANG_HEBREW - int
				// IntegerLiteral-  - int [Literal: 1037]
			// EnumConstantDecl- STBTT_MS_LANG_SWEDISH - int
				// IntegerLiteral-  - int [Literal: 1053]
		// EnumDecl-  - enum (anonymous at stb_truetype.h:1050:1)
			// EnumConstantDecl- STBTT_MAC_LANG_ENGLISH - int
				// IntegerLiteral-  - int [Literal: 0]
			// EnumConstantDecl- STBTT_MAC_LANG_JAPANESE - int
				// IntegerLiteral-  - int [Literal: 11]
			// EnumConstantDecl- STBTT_MAC_LANG_ARABIC - int
				// IntegerLiteral-  - int [Literal: 12]
			// EnumConstantDecl- STBTT_MAC_LANG_KOREAN - int
				// IntegerLiteral-  - int [Literal: 23]
			// EnumConstantDecl- STBTT_MAC_LANG_DUTCH - int
				// IntegerLiteral-  - int [Literal: 4]
			// EnumConstantDecl- STBTT_MAC_LANG_RUSSIAN - int
				// IntegerLiteral-  - int [Literal: 32]
			// EnumConstantDecl- STBTT_MAC_LANG_FRENCH - int
				// IntegerLiteral-  - int [Literal: 1]
			// EnumConstantDecl- STBTT_MAC_LANG_SPANISH - int
				// IntegerLiteral-  - int [Literal: 6]
			// EnumConstantDecl- STBTT_MAC_LANG_GERMAN - int
				// IntegerLiteral-  - int [Literal: 2]
			// EnumConstantDecl- STBTT_MAC_LANG_SWEDISH - int
				// IntegerLiteral-  - int [Literal: 5]
			// EnumConstantDecl- STBTT_MAC_LANG_HEBREW - int
				// IntegerLiteral-  - int [Literal: 10]
			// EnumConstantDecl- STBTT_MAC_LANG_CHINESE_SIMPLIFIED - int
				// IntegerLiteral-  - int [Literal: 33]
			// EnumConstantDecl- STBTT_MAC_LANG_ITALIAN - int
				// IntegerLiteral-  - int [Literal: 3]
			// EnumConstantDecl- STBTT_MAC_LANG_CHINESE_TRAD - int
				// IntegerLiteral-  - int [Literal: 19]
		// TypedefDecl- stbtt__test_oversample_pow2 - stbtt__test_oversample_pow2
			// ConditionalOperator-  - int
				// BinaryOperator-  - int [Binary Operator: EQ (==)]
					// ParenExpr-  - int
						// BinaryOperator-  - int [Binary Operator: And (&)]
							// IntegerLiteral-  - int [Literal: 8]
							// ParenExpr-  - int
								// BinaryOperator-  - int [Binary Operator: Sub (-)]
									// IntegerLiteral-  - int [Literal: 8]
									// IntegerLiteral-  - int [Literal: 1]
					// IntegerLiteral-  - int [Literal: 0]
				// IntegerLiteral-  - int [Literal: 1]
				// UnaryOperator-  - int [Unary Operator: Minus (-)]
					// IntegerLiteral-  - int [Literal: 1]
		// FunctionDecl- stbtt__buf_get8 - stbtt_uint8 (stbtt__buf *)
			// TypeRef- stbtt_uint8 - stbtt_uint8
			// ParmDecl- b - stbtt__buf *
				// TypeRef- stbtt__buf - stbtt__buf
			// CompoundStmt-  - 
				// IfStmt-  - 
					// BinaryOperator-  - int [Binary Operator: GE (>=)]
						// UnexposedExpr- cursor - int
							// MemberRefExpr- cursor - int
								// UnexposedExpr- b - stbtt__buf *
									// DeclRefExpr- b - stbtt__buf *
						// UnexposedExpr- size - int
							// MemberRefExpr- size - int
								// UnexposedExpr- b - stbtt__buf *
									// DeclRefExpr- b - stbtt__buf *
					// ReturnStmt-  - 
						// UnexposedExpr-  - stbtt_uint8
							// IntegerLiteral-  - int [Literal: 0]
				// ReturnStmt-  - 
					// UnexposedExpr-  - unsigned char
						// ArraySubscriptExpr-  - unsigned char
							// UnexposedExpr- data - unsigned char *
								// MemberRefExpr- data - unsigned char *
									// UnexposedExpr- b - stbtt__buf *
										// DeclRefExpr- b - stbtt__buf *
							// UnaryOperator-  - int [Unary Operator: PostInc (++)]
								// MemberRefExpr- cursor - int
									// UnexposedExpr- b - stbtt__buf *
										// DeclRefExpr- b - stbtt__buf *
		// FunctionDecl- stbtt__buf_peek8 - stbtt_uint8 (stbtt__buf *)
			// TypeRef- stbtt_uint8 - stbtt_uint8
			// ParmDecl- b - stbtt__buf *
				// TypeRef- stbtt__buf - stbtt__buf
			// CompoundStmt-  - 
				// IfStmt-  - 
					// BinaryOperator-  - int [Binary Operator: GE (>=)]
						// UnexposedExpr- cursor - int
							// MemberRefExpr- cursor - int
								// UnexposedExpr- b - stbtt__buf *
									// DeclRefExpr- b - stbtt__buf *
						// UnexposedExpr- size - int
							// MemberRefExpr- size - int
								// UnexposedExpr- b - stbtt__buf *
									// DeclRefExpr- b - stbtt__buf *
					// ReturnStmt-  - 
						// UnexposedExpr-  - stbtt_uint8
							// IntegerLiteral-  - int [Literal: 0]
				// ReturnStmt-  - 
					// UnexposedExpr-  - unsigned char
						// ArraySubscriptExpr-  - unsigned char
							// UnexposedExpr- data - unsigned char *
								// MemberRefExpr- data - unsigned char *
									// UnexposedExpr- b - stbtt__buf *
										// DeclRefExpr- b - stbtt__buf *
							// UnexposedExpr- cursor - int
								// MemberRefExpr- cursor - int
									// UnexposedExpr- b - stbtt__buf *
										// DeclRefExpr- b - stbtt__buf *
		// FunctionDecl- stbtt__buf_seek - void (stbtt__buf *, int)
			// ParmDecl- b - stbtt__buf *
				// TypeRef- stbtt__buf - stbtt__buf
			// ParmDecl- o - int
			// CompoundStmt-  - 
				// NullStmt-  - 
				// BinaryOperator-  - int [Binary Operator: Assign (=)]
					// MemberRefExpr- cursor - int
						// UnexposedExpr- b - stbtt__buf *
							// DeclRefExpr- b - stbtt__buf *
					// ConditionalOperator-  - int
						// ParenExpr-  - int
							// BinaryOperator-  - int [Binary Operator: LOr (||)]
								// BinaryOperator-  - int [Binary Operator: GT (>)]
									// UnexposedExpr- o - int
										// DeclRefExpr- o - int
									// UnexposedExpr- size - int
										// MemberRefExpr- size - int
											// UnexposedExpr- b - stbtt__buf *
												// DeclRefExpr- b - stbtt__buf *
								// BinaryOperator-  - int [Binary Operator: LT (<)]
									// UnexposedExpr- o - int
										// DeclRefExpr- o - int
									// IntegerLiteral-  - int [Literal: 0]
						// UnexposedExpr- size - int
							// MemberRefExpr- size - int
								// UnexposedExpr- b - stbtt__buf *
									// DeclRefExpr- b - stbtt__buf *
						// UnexposedExpr- o - int
							// DeclRefExpr- o - int
		// FunctionDecl- stbtt__buf_skip - void (stbtt__buf *, int)
			// ParmDecl- b - stbtt__buf *
				// TypeRef- stbtt__buf - stbtt__buf
			// ParmDecl- o - int
			// CompoundStmt-  - 
				// CallExpr- stbtt__buf_seek - void
					// UnexposedExpr- stbtt__buf_seek - void (*)(stbtt__buf *, int)
						// DeclRefExpr- stbtt__buf_seek - void (stbtt__buf *, int)
					// UnexposedExpr- b - stbtt__buf *
						// DeclRefExpr- b - stbtt__buf *
					// BinaryOperator-  - int [Binary Operator: Add (+)]
						// UnexposedExpr- cursor - int
							// MemberRefExpr- cursor - int
								// UnexposedExpr- b - stbtt__buf *
									// DeclRefExpr- b - stbtt__buf *
						// UnexposedExpr- o - int
							// DeclRefExpr- o - int
		// FunctionDecl- stbtt__buf_get - stbtt_uint32 (stbtt__buf *, int)
			// TypeRef- stbtt_uint32 - stbtt_uint32
			// ParmDecl- b - stbtt__buf *
				// TypeRef- stbtt__buf - stbtt__buf
			// ParmDecl- n - int
			// CompoundStmt-  - 
				// DeclStmt-  - 
					// VarDecl- v - stbtt_uint32
						// TypeRef- stbtt_uint32 - stbtt_uint32
						// UnexposedExpr-  - stbtt_uint32
							// IntegerLiteral-  - int [Literal: 0]
				// DeclStmt-  - 
					// VarDecl- i - int
				// NullStmt-  - 
				// ForStmt-  - 
					// BinaryOperator-  - int [Binary Operator: Assign (=)]
						// DeclRefExpr- i - int
						// IntegerLiteral-  - int [Literal: 0]
					// BinaryOperator-  - int [Binary Operator: LT (<)]
						// UnexposedExpr- i - int
							// DeclRefExpr- i - int
						// UnexposedExpr- n - int
							// DeclRefExpr- n - int
					// UnaryOperator-  - int [Unary Operator: PostInc (++)]
						// DeclRefExpr- i - int
					// BinaryOperator-  - stbtt_uint32 [Binary Operator: Assign (=)]
						// DeclRefExpr- v - stbtt_uint32
						// BinaryOperator-  - unsigned int [Binary Operator: Or (|)]
							// ParenExpr-  - stbtt_uint32
								// BinaryOperator-  - stbtt_uint32 [Binary Operator: Shl (<<)]
									// UnexposedExpr- v - stbtt_uint32
										// DeclRefExpr- v - stbtt_uint32
									// IntegerLiteral-  - int [Literal: 8]
							// UnexposedExpr- stbtt__buf_get8 - unsigned int
								// CallExpr- stbtt__buf_get8 - stbtt_uint8
									// UnexposedExpr- stbtt__buf_get8 - stbtt_uint8 (*)(stbtt__buf *)
										// DeclRefExpr- stbtt__buf_get8 - stbtt_uint8 (stbtt__buf *)
									// UnexposedExpr- b - stbtt__buf *
										// DeclRefExpr- b - stbtt__buf *
				// ReturnStmt-  - 
					// UnexposedExpr- v - stbtt_uint32
						// DeclRefExpr- v - stbtt_uint32
		// FunctionDecl- stbtt__new_buf - stbtt__buf (const void *, size_t)
			// TypeRef- stbtt__buf - stbtt__buf
			// ParmDecl- p - const void *
			// ParmDecl- size - size_t
				// TypeRef- size_t - size_t
			// CompoundStmt-  - 
				// DeclStmt-  - 
					// VarDecl- r - stbtt__buf
						// TypeRef- stbtt__buf - stbtt__buf
				// NullStmt-  - 
				// BinaryOperator-  - unsigned char * [Binary Operator: Assign (=)]
					// MemberRefExpr- data - unsigned char *
						// DeclRefExpr- r - stbtt__buf
					// CStyleCastExpr-  - stbtt_uint8 *
						// TypeRef- stbtt_uint8 - stbtt_uint8
						// UnexposedExpr- p - const void *
							// DeclRefExpr- p - const void *
				// BinaryOperator-  - int [Binary Operator: Assign (=)]
					// MemberRefExpr- size - int
						// DeclRefExpr- r - stbtt__buf
					// CStyleCastExpr-  - int
						// UnexposedExpr- size - size_t
							// DeclRefExpr- size - size_t
				// BinaryOperator-  - int [Binary Operator: Assign (=)]
					// MemberRefExpr- cursor - int
						// DeclRefExpr- r - stbtt__buf
					// IntegerLiteral-  - int [Literal: 0]
				// ReturnStmt-  - 
					// UnexposedExpr- r - stbtt__buf
						// DeclRefExpr- r - stbtt__buf
		// FunctionDecl- stbtt__buf_range - stbtt__buf (const stbtt__buf *, int, int)
			// TypeRef- stbtt__buf - stbtt__buf
			// ParmDecl- b - const stbtt__buf *
				// TypeRef- stbtt__buf - stbtt__buf
			// ParmDecl- o - int
			// ParmDecl- s - int
			// CompoundStmt-  - 
				// DeclStmt-  - 
					// VarDecl- r - stbtt__buf
						// TypeRef- stbtt__buf - stbtt__buf
						// CallExpr- stbtt__new_buf - stbtt__buf
							// UnexposedExpr- stbtt__new_buf - stbtt__buf (*)(const void *, size_t)
								// DeclRefExpr- stbtt__new_buf - stbtt__buf (const void *, size_t)
							// UnexposedExpr-  - const void *
								// ParenExpr-  - void *
									// CStyleCastExpr-  - void *
										// IntegerLiteral-  - int [Literal: 0]
							// UnexposedExpr-  - size_t
								// IntegerLiteral-  - int [Literal: 0]
				// IfStmt-  - 
					// BinaryOperator-  - int [Binary Operator: LOr (||)]
						// BinaryOperator-  - int [Binary Operator: LOr (||)]
							// BinaryOperator-  - int [Binary Operator: LOr (||)]
								// BinaryOperator-  - int [Binary Operator: LT (<)]
									// UnexposedExpr- o - int
										// DeclRefExpr- o - int
									// IntegerLiteral-  - int [Literal: 0]
								// BinaryOperator-  - int [Binary Operator: LT (<)]
									// UnexposedExpr- s - int
										// DeclRefExpr- s - int
									// IntegerLiteral-  - int [Literal: 0]
							// BinaryOperator-  - int [Binary Operator: GT (>)]
								// UnexposedExpr- o - int
									// DeclRefExpr- o - int
								// UnexposedExpr- size - int
									// MemberRefExpr- size - const int
										// UnexposedExpr- b - const stbtt__buf *
											// DeclRefExpr- b - const stbtt__buf *
						// BinaryOperator-  - int [Binary Operator: GT (>)]
							// UnexposedExpr- s - int
								// DeclRefExpr- s - int
							// BinaryOperator-  - int [Binary Operator: Sub (-)]
								// UnexposedExpr- size - int
									// MemberRefExpr- size - const int
										// UnexposedExpr- b - const stbtt__buf *
											// DeclRefExpr- b - const stbtt__buf *
								// UnexposedExpr- o - int
									// DeclRefExpr- o - int
					// ReturnStmt-  - 
						// UnexposedExpr- r - stbtt__buf
							// DeclRefExpr- r - stbtt__buf
				// BinaryOperator-  - unsigned char * [Binary Operator: Assign (=)]
					// MemberRefExpr- data - unsigned char *
						// DeclRefExpr- r - stbtt__buf
					// BinaryOperator-  - unsigned char * [Binary Operator: Add (+)]
						// UnexposedExpr- data - unsigned char *
							// MemberRefExpr- data - unsigned char *const
								// UnexposedExpr- b - const stbtt__buf *
									// DeclRefExpr- b - const stbtt__buf *
						// UnexposedExpr- o - int
							// DeclRefExpr- o - int
				// BinaryOperator-  - int [Binary Operator: Assign (=)]
					// MemberRefExpr- size - int
						// DeclRefExpr- r - stbtt__buf
					// UnexposedExpr- s - int
						// DeclRefExpr- s - int
				// ReturnStmt-  - 
					// UnexposedExpr- r - stbtt__buf
						// DeclRefExpr- r - stbtt__buf
		// FunctionDecl- stbtt__cff_get_index - stbtt__buf (stbtt__buf *)
			// TypeRef- stbtt__buf - stbtt__buf
			// ParmDecl- b - stbtt__buf *
				// TypeRef- stbtt__buf - stbtt__buf
			// CompoundStmt-  - 
				// DeclStmt-  - 
					// VarDecl- count - int
					// VarDecl- start - int
					// VarDecl- offsize - int
				// BinaryOperator-  - int [Binary Operator: Assign (=)]
					// DeclRefExpr- start - int
					// UnexposedExpr- cursor - int
						// MemberRefExpr- cursor - int
							// UnexposedExpr- b - stbtt__buf *
								// DeclRefExpr- b - stbtt__buf *
				// BinaryOperator-  - int [Binary Operator: Assign (=)]
					// DeclRefExpr- count - int
					// UnexposedExpr- stbtt__buf_get - int
						// CallExpr- stbtt__buf_get - stbtt_uint32
							// UnexposedExpr- stbtt__buf_get - stbtt_uint32 (*)(stbtt__buf *, int)
								// DeclRefExpr- stbtt__buf_get - stbtt_uint32 (stbtt__buf *, int)
							// UnexposedExpr-  - stbtt__buf *
								// ParenExpr-  - stbtt__buf *
									// DeclRefExpr- b - stbtt__buf *
							// IntegerLiteral-  - int [Literal: 2]
				// IfStmt-  - 
					// UnexposedExpr- count - int
						// DeclRefExpr- count - int
					// CompoundStmt-  - 
						// BinaryOperator-  - int [Binary Operator: Assign (=)]
							// DeclRefExpr- offsize - int
							// UnexposedExpr- stbtt__buf_get8 - int
								// CallExpr- stbtt__buf_get8 - stbtt_uint8
									// UnexposedExpr- stbtt__buf_get8 - stbtt_uint8 (*)(stbtt__buf *)
										// DeclRefExpr- stbtt__buf_get8 - stbtt_uint8 (stbtt__buf *)
									// UnexposedExpr- b - stbtt__buf *
										// DeclRefExpr- b - stbtt__buf *
						// NullStmt-  - 
						// CallExpr- stbtt__buf_skip - void
							// UnexposedExpr- stbtt__buf_skip - void (*)(stbtt__buf *, int)
								// DeclRefExpr- stbtt__buf_skip - void (stbtt__buf *, int)
							// UnexposedExpr- b - stbtt__buf *
								// DeclRefExpr- b - stbtt__buf *
							// BinaryOperator-  - int [Binary Operator: Mul (*)]
								// UnexposedExpr- offsize - int
									// DeclRefExpr- offsize - int
								// UnexposedExpr- count - int
									// DeclRefExpr- count - int
						// CallExpr- stbtt__buf_skip - void
							// UnexposedExpr- stbtt__buf_skip - void (*)(stbtt__buf *, int)
								// DeclRefExpr- stbtt__buf_skip - void (stbtt__buf *, int)
							// UnexposedExpr- b - stbtt__buf *
								// DeclRefExpr- b - stbtt__buf *
							// UnexposedExpr-  - int
								// BinaryOperator-  - unsigned int [Binary Operator: Sub (-)]
									// CallExpr- stbtt__buf_get - stbtt_uint32
										// UnexposedExpr- stbtt__buf_get - stbtt_uint32 (*)(stbtt__buf *, int)
											// DeclRefExpr- stbtt__buf_get - stbtt_uint32 (stbtt__buf *, int)
										// UnexposedExpr- b - stbtt__buf *
											// DeclRefExpr- b - stbtt__buf *
										// UnexposedExpr- offsize - int
											// DeclRefExpr- offsize - int
									// UnexposedExpr-  - unsigned int
										// IntegerLiteral-  - int [Literal: 1]
				// ReturnStmt-  - 
					// CallExpr- stbtt__buf_range - stbtt__buf
						// UnexposedExpr- stbtt__buf_range - stbtt__buf (*)(const stbtt__buf *, int, int)
							// DeclRefExpr- stbtt__buf_range - stbtt__buf (const stbtt__buf *, int, int)
						// UnexposedExpr- b - const stbtt__buf *
							// UnexposedExpr- b - stbtt__buf *
								// DeclRefExpr- b - stbtt__buf *
						// UnexposedExpr- start - int
							// DeclRefExpr- start - int
						// BinaryOperator-  - int [Binary Operator: Sub (-)]
							// UnexposedExpr- cursor - int
								// MemberRefExpr- cursor - int
									// UnexposedExpr- b - stbtt__buf *
										// DeclRefExpr- b - stbtt__buf *
							// UnexposedExpr- start - int
								// DeclRefExpr- start - int
		// FunctionDecl- stbtt__cff_int - stbtt_uint32 (stbtt__buf *)
			// TypeRef- stbtt_uint32 - stbtt_uint32
			// ParmDecl- b - stbtt__buf *
				// TypeRef- stbtt__buf - stbtt__buf
			// CompoundStmt-  - 
				// DeclStmt-  - 
					// VarDecl- b0 - int
						// UnexposedExpr- stbtt__buf_get8 - int
							// CallExpr- stbtt__buf_get8 - stbtt_uint8
								// UnexposedExpr- stbtt__buf_get8 - stbtt_uint8 (*)(stbtt__buf *)
									// DeclRefExpr- stbtt__buf_get8 - stbtt_uint8 (stbtt__buf *)
								// UnexposedExpr- b - stbtt__buf *
									// DeclRefExpr- b - stbtt__buf *
				// IfStmt-  - 
					// BinaryOperator-  - int [Binary Operator: LAnd (&&)]
						// BinaryOperator-  - int [Binary Operator: GE (>=)]
							// UnexposedExpr- b0 - int
								// DeclRefExpr- b0 - int
							// IntegerLiteral-  - int [Literal: 32]
						// BinaryOperator-  - int [Binary Operator: LE (<=)]
							// UnexposedExpr- b0 - int
								// DeclRefExpr- b0 - int
							// IntegerLiteral-  - int [Literal: 246]
					// ReturnStmt-  - 
						// UnexposedExpr-  - stbtt_uint32
							// BinaryOperator-  - int [Binary Operator: Sub (-)]
								// UnexposedExpr- b0 - int
									// DeclRefExpr- b0 - int
								// IntegerLiteral-  - int [Literal: 139]
					// IfStmt-  - 
						// BinaryOperator-  - int [Binary Operator: LAnd (&&)]
							// BinaryOperator-  - int [Binary Operator: GE (>=)]
								// UnexposedExpr- b0 - int
									// DeclRefExpr- b0 - int
								// IntegerLiteral-  - int [Literal: 247]
							// BinaryOperator-  - int [Binary Operator: LE (<=)]
								// UnexposedExpr- b0 - int
									// DeclRefExpr- b0 - int
								// IntegerLiteral-  - int [Literal: 250]
						// ReturnStmt-  - 
							// UnexposedExpr-  - stbtt_uint32
								// BinaryOperator-  - int [Binary Operator: Add (+)]
									// BinaryOperator-  - int [Binary Operator: Add (+)]
										// BinaryOperator-  - int [Binary Operator: Mul (*)]
											// ParenExpr-  - int
												// BinaryOperator-  - int [Binary Operator: Sub (-)]
													// UnexposedExpr- b0 - int
														// DeclRefExpr- b0 - int
													// IntegerLiteral-  - int [Literal: 247]
											// IntegerLiteral-  - int [Literal: 256]
										// UnexposedExpr- stbtt__buf_get8 - int
											// CallExpr- stbtt__buf_get8 - stbtt_uint8
												// UnexposedExpr- stbtt__buf_get8 - stbtt_uint8 (*)(stbtt__buf *)
													// DeclRefExpr- stbtt__buf_get8 - stbtt_uint8 (stbtt__buf *)
												// UnexposedExpr- b - stbtt__buf *
													// DeclRefExpr- b - stbtt__buf *
									// IntegerLiteral-  - int [Literal: 108]
						// IfStmt-  - 
							// BinaryOperator-  - int [Binary Operator: LAnd (&&)]
								// BinaryOperator-  - int [Binary Operator: GE (>=)]
									// UnexposedExpr- b0 - int
										// DeclRefExpr- b0 - int
									// IntegerLiteral-  - int [Literal: 251]
								// BinaryOperator-  - int [Binary Operator: LE (<=)]
									// UnexposedExpr- b0 - int
										// DeclRefExpr- b0 - int
									// IntegerLiteral-  - int [Literal: 254]
							// ReturnStmt-  - 
								// UnexposedExpr-  - stbtt_uint32
									// BinaryOperator-  - int [Binary Operator: Sub (-)]
										// BinaryOperator-  - int [Binary Operator: Sub (-)]
											// BinaryOperator-  - int [Binary Operator: Mul (*)]
												// UnaryOperator-  - int [Unary Operator: Minus (-)]
													// ParenExpr-  - int
														// BinaryOperator-  - int [Binary Operator: Sub (-)]
															// UnexposedExpr- b0 - int
																// DeclRefExpr- b0 - int
															// IntegerLiteral-  - int [Literal: 251]
												// IntegerLiteral-  - int [Literal: 256]
											// UnexposedExpr- stbtt__buf_get8 - int
												// CallExpr- stbtt__buf_get8 - stbtt_uint8
													// UnexposedExpr- stbtt__buf_get8 - stbtt_uint8 (*)(stbtt__buf *)
														// DeclRefExpr- stbtt__buf_get8 - stbtt_uint8 (stbtt__buf *)
													// UnexposedExpr- b - stbtt__buf *
														// DeclRefExpr- b - stbtt__buf *
										// IntegerLiteral-  - int [Literal: 108]
							// IfStmt-  - 
								// BinaryOperator-  - int [Binary Operator: EQ (==)]
									// UnexposedExpr- b0 - int
										// DeclRefExpr- b0 - int
									// IntegerLiteral-  - int [Literal: 28]
								// ReturnStmt-  - 
									// CallExpr- stbtt__buf_get - stbtt_uint32
										// UnexposedExpr- stbtt__buf_get - stbtt_uint32 (*)(stbtt__buf *, int)
											// DeclRefExpr- stbtt__buf_get - stbtt_uint32 (stbtt__buf *, int)
										// UnexposedExpr-  - stbtt__buf *
											// ParenExpr-  - stbtt__buf *
												// DeclRefExpr- b - stbtt__buf *
										// IntegerLiteral-  - int [Literal: 2]
								// IfStmt-  - 
									// BinaryOperator-  - int [Binary Operator: EQ (==)]
										// UnexposedExpr- b0 - int
											// DeclRefExpr- b0 - int
										// IntegerLiteral-  - int [Literal: 29]
									// ReturnStmt-  - 
										// CallExpr- stbtt__buf_get - stbtt_uint32
											// UnexposedExpr- stbtt__buf_get - stbtt_uint32 (*)(stbtt__buf *, int)
												// DeclRefExpr- stbtt__buf_get - stbtt_uint32 (stbtt__buf *, int)
											// UnexposedExpr-  - stbtt__buf *
												// ParenExpr-  - stbtt__buf *
													// DeclRefExpr- b - stbtt__buf *
											// IntegerLiteral-  - int [Literal: 4]
				// NullStmt-  - 
				// ReturnStmt-  - 
					// UnexposedExpr-  - stbtt_uint32
						// IntegerLiteral-  - int [Literal: 0]
		// FunctionDecl- stbtt__cff_skip_operand - void (stbtt__buf *)
			// ParmDecl- b - stbtt__buf *
				// TypeRef- stbtt__buf - stbtt__buf
			// CompoundStmt-  - 
				// DeclStmt-  - 
					// VarDecl- v - int
					// VarDecl- b0 - int
						// UnexposedExpr- stbtt__buf_peek8 - int
							// CallExpr- stbtt__buf_peek8 - stbtt_uint8
								// UnexposedExpr- stbtt__buf_peek8 - stbtt_uint8 (*)(stbtt__buf *)
									// DeclRefExpr- stbtt__buf_peek8 - stbtt_uint8 (stbtt__buf *)
								// UnexposedExpr- b - stbtt__buf *
									// DeclRefExpr- b - stbtt__buf *
				// NullStmt-  - 
				// IfStmt-  - 
					// BinaryOperator-  - int [Binary Operator: EQ (==)]
						// UnexposedExpr- b0 - int
							// DeclRefExpr- b0 - int
						// IntegerLiteral-  - int [Literal: 30]
					// CompoundStmt-  - 
						// CallExpr- stbtt__buf_skip - void
							// UnexposedExpr- stbtt__buf_skip - void (*)(stbtt__buf *, int)
								// DeclRefExpr- stbtt__buf_skip - void (stbtt__buf *, int)
							// UnexposedExpr- b - stbtt__buf *
								// DeclRefExpr- b - stbtt__buf *
							// IntegerLiteral-  - int [Literal: 1]
						// WhileStmt-  - 
							// BinaryOperator-  - int [Binary Operator: LT (<)]
								// UnexposedExpr- cursor - int
									// MemberRefExpr- cursor - int
										// UnexposedExpr- b - stbtt__buf *
											// DeclRefExpr- b - stbtt__buf *
								// UnexposedExpr- size - int
									// MemberRefExpr- size - int
										// UnexposedExpr- b - stbtt__buf *
											// DeclRefExpr- b - stbtt__buf *
							// CompoundStmt-  - 
								// BinaryOperator-  - int [Binary Operator: Assign (=)]
									// DeclRefExpr- v - int
									// UnexposedExpr- stbtt__buf_get8 - int
										// CallExpr- stbtt__buf_get8 - stbtt_uint8
											// UnexposedExpr- stbtt__buf_get8 - stbtt_uint8 (*)(stbtt__buf *)
												// DeclRefExpr- stbtt__buf_get8 - stbtt_uint8 (stbtt__buf *)
											// UnexposedExpr- b - stbtt__buf *
												// DeclRefExpr- b - stbtt__buf *
								// IfStmt-  - 
									// BinaryOperator-  - int [Binary Operator: LOr (||)]
										// BinaryOperator-  - int [Binary Operator: EQ (==)]
											// ParenExpr-  - int
												// BinaryOperator-  - int [Binary Operator: And (&)]
													// UnexposedExpr- v - int
														// DeclRefExpr- v - int
													// IntegerLiteral-  - int [Literal: 15]
											// IntegerLiteral-  - int [Literal: 15]
										// BinaryOperator-  - int [Binary Operator: EQ (==)]
											// ParenExpr-  - int
												// BinaryOperator-  - int [Binary Operator: Shr (>>)]
													// UnexposedExpr- v - int
														// DeclRefExpr- v - int
													// IntegerLiteral-  - int [Literal: 4]
											// IntegerLiteral-  - int [Literal: 15]
									// BreakStmt-  - 
					// CompoundStmt-  - 
						// CallExpr- stbtt__cff_int - stbtt_uint32
							// UnexposedExpr- stbtt__cff_int - stbtt_uint32 (*)(stbtt__buf *)
								// DeclRefExpr- stbtt__cff_int - stbtt_uint32 (stbtt__buf *)
							// UnexposedExpr- b - stbtt__buf *
								// DeclRefExpr- b - stbtt__buf *
		// FunctionDecl- stbtt__dict_get - stbtt__buf (stbtt__buf *, int)
			// TypeRef- stbtt__buf - stbtt__buf
			// ParmDecl- b - stbtt__buf *
				// TypeRef- stbtt__buf - stbtt__buf
			// ParmDecl- key - int
			// CompoundStmt-  - 
				// CallExpr- stbtt__buf_seek - void
					// UnexposedExpr- stbtt__buf_seek - void (*)(stbtt__buf *, int)
						// DeclRefExpr- stbtt__buf_seek - void (stbtt__buf *, int)
					// UnexposedExpr- b - stbtt__buf *
						// DeclRefExpr- b - stbtt__buf *
					// IntegerLiteral-  - int [Literal: 0]
				// WhileStmt-  - 
					// BinaryOperator-  - int [Binary Operator: LT (<)]
						// UnexposedExpr- cursor - int
							// MemberRefExpr- cursor - int
								// UnexposedExpr- b - stbtt__buf *
									// DeclRefExpr- b - stbtt__buf *
						// UnexposedExpr- size - int
							// MemberRefExpr- size - int
								// UnexposedExpr- b - stbtt__buf *
									// DeclRefExpr- b - stbtt__buf *
					// CompoundStmt-  - 
						// DeclStmt-  - 
							// VarDecl- start - int
								// UnexposedExpr- cursor - int
									// MemberRefExpr- cursor - int
										// UnexposedExpr- b - stbtt__buf *
											// DeclRefExpr- b - stbtt__buf *
							// VarDecl- end - int
							// VarDecl- op - int
						// WhileStmt-  - 
							// BinaryOperator-  - int [Binary Operator: GE (>=)]
								// UnexposedExpr- stbtt__buf_peek8 - int
									// CallExpr- stbtt__buf_peek8 - stbtt_uint8
										// UnexposedExpr- stbtt__buf_peek8 - stbtt_uint8 (*)(stbtt__buf *)
											// DeclRefExpr- stbtt__buf_peek8 - stbtt_uint8 (stbtt__buf *)
										// UnexposedExpr- b - stbtt__buf *
											// DeclRefExpr- b - stbtt__buf *
								// IntegerLiteral-  - int [Literal: 28]
							// CallExpr- stbtt__cff_skip_operand - void
								// UnexposedExpr- stbtt__cff_skip_operand - void (*)(stbtt__buf *)
									// DeclRefExpr- stbtt__cff_skip_operand - void (stbtt__buf *)
								// UnexposedExpr- b - stbtt__buf *
									// DeclRefExpr- b - stbtt__buf *
						// BinaryOperator-  - int [Binary Operator: Assign (=)]
							// DeclRefExpr- end - int
							// UnexposedExpr- cursor - int
								// MemberRefExpr- cursor - int
									// UnexposedExpr- b - stbtt__buf *
										// DeclRefExpr- b - stbtt__buf *
						// BinaryOperator-  - int [Binary Operator: Assign (=)]
							// DeclRefExpr- op - int
							// UnexposedExpr- stbtt__buf_get8 - int
								// CallExpr- stbtt__buf_get8 - stbtt_uint8
									// UnexposedExpr- stbtt__buf_get8 - stbtt_uint8 (*)(stbtt__buf *)
										// DeclRefExpr- stbtt__buf_get8 - stbtt_uint8 (stbtt__buf *)
									// UnexposedExpr- b - stbtt__buf *
										// DeclRefExpr- b - stbtt__buf *
						// IfStmt-  - 
							// BinaryOperator-  - int [Binary Operator: EQ (==)]
								// UnexposedExpr- op - int
									// DeclRefExpr- op - int
								// IntegerLiteral-  - int [Literal: 12]
							// BinaryOperator-  - int [Binary Operator: Assign (=)]
								// DeclRefExpr- op - int
								// BinaryOperator-  - int [Binary Operator: Or (|)]
									// UnexposedExpr- stbtt__buf_get8 - int
										// CallExpr- stbtt__buf_get8 - stbtt_uint8
											// UnexposedExpr- stbtt__buf_get8 - stbtt_uint8 (*)(stbtt__buf *)
												// DeclRefExpr- stbtt__buf_get8 - stbtt_uint8 (stbtt__buf *)
											// UnexposedExpr- b - stbtt__buf *
												// DeclRefExpr- b - stbtt__buf *
									// IntegerLiteral-  - int [Literal: 256]
						// IfStmt-  - 
							// BinaryOperator-  - int [Binary Operator: EQ (==)]
								// UnexposedExpr- op - int
									// DeclRefExpr- op - int
								// UnexposedExpr- key - int
									// DeclRefExpr- key - int
							// ReturnStmt-  - 
								// CallExpr- stbtt__buf_range - stbtt__buf
									// UnexposedExpr- stbtt__buf_range - stbtt__buf (*)(const stbtt__buf *, int, int)
										// DeclRefExpr- stbtt__buf_range - stbtt__buf (const stbtt__buf *, int, int)
									// UnexposedExpr- b - const stbtt__buf *
										// UnexposedExpr- b - stbtt__buf *
											// DeclRefExpr- b - stbtt__buf *
									// UnexposedExpr- start - int
										// DeclRefExpr- start - int
									// BinaryOperator-  - int [Binary Operator: Sub (-)]
										// UnexposedExpr- end - int
											// DeclRefExpr- end - int
										// UnexposedExpr- start - int
											// DeclRefExpr- start - int
				// ReturnStmt-  - 
					// CallExpr- stbtt__buf_range - stbtt__buf
						// UnexposedExpr- stbtt__buf_range - stbtt__buf (*)(const stbtt__buf *, int, int)
							// DeclRefExpr- stbtt__buf_range - stbtt__buf (const stbtt__buf *, int, int)
						// UnexposedExpr- b - const stbtt__buf *
							// UnexposedExpr- b - stbtt__buf *
								// DeclRefExpr- b - stbtt__buf *
						// IntegerLiteral-  - int [Literal: 0]
						// IntegerLiteral-  - int [Literal: 0]
		// FunctionDecl- stbtt__dict_get_ints - void (stbtt__buf *, int, int, stbtt_uint32 *)
			// ParmDecl- b - stbtt__buf *
				// TypeRef- stbtt__buf - stbtt__buf
			// ParmDecl- key - int
			// ParmDecl- outcount - int
			// ParmDecl- out - stbtt_uint32 *
				// TypeRef- stbtt_uint32 - stbtt_uint32
			// CompoundStmt-  - 
				// DeclStmt-  - 
					// VarDecl- i - int
				// DeclStmt-  - 
					// VarDecl- operands - stbtt__buf
						// TypeRef- stbtt__buf - stbtt__buf
						// CallExpr- stbtt__dict_get - stbtt__buf
							// UnexposedExpr- stbtt__dict_get - stbtt__buf (*)(stbtt__buf *, int)
								// DeclRefExpr- stbtt__dict_get - stbtt__buf (stbtt__buf *, int)
							// UnexposedExpr- b - stbtt__buf *
								// DeclRefExpr- b - stbtt__buf *
							// UnexposedExpr- key - int
								// DeclRefExpr- key - int
				// ForStmt-  - 
					// BinaryOperator-  - int [Binary Operator: Assign (=)]
						// DeclRefExpr- i - int
						// IntegerLiteral-  - int [Literal: 0]
					// BinaryOperator-  - int [Binary Operator: LAnd (&&)]
						// BinaryOperator-  - int [Binary Operator: LT (<)]
							// UnexposedExpr- i - int
								// DeclRefExpr- i - int
							// UnexposedExpr- outcount - int
								// DeclRefExpr- outcount - int
						// BinaryOperator-  - int [Binary Operator: LT (<)]
							// UnexposedExpr- cursor - int
								// MemberRefExpr- cursor - int
									// DeclRefExpr- operands - stbtt__buf
							// UnexposedExpr- size - int
								// MemberRefExpr- size - int
									// DeclRefExpr- operands - stbtt__buf
					// UnaryOperator-  - int [Unary Operator: PostInc (++)]
						// DeclRefExpr- i - int
					// BinaryOperator-  - stbtt_uint32 [Binary Operator: Assign (=)]
						// ArraySubscriptExpr-  - stbtt_uint32
							// UnexposedExpr- out - stbtt_uint32 *
								// DeclRefExpr- out - stbtt_uint32 *
							// UnexposedExpr- i - int
								// DeclRefExpr- i - int
						// CallExpr- stbtt__cff_int - stbtt_uint32
							// UnexposedExpr- stbtt__cff_int - stbtt_uint32 (*)(stbtt__buf *)
								// DeclRefExpr- stbtt__cff_int - stbtt_uint32 (stbtt__buf *)
							// UnaryOperator-  - stbtt__buf * [Unary Operator: AddrOf (&)]
								// DeclRefExpr- operands - stbtt__buf
		// FunctionDecl- stbtt__cff_index_count - int (stbtt__buf *)
			// ParmDecl- b - stbtt__buf *
				// TypeRef- stbtt__buf - stbtt__buf
			// CompoundStmt-  - 
				// CallExpr- stbtt__buf_seek - void
					// UnexposedExpr- stbtt__buf_seek - void (*)(stbtt__buf *, int)
						// DeclRefExpr- stbtt__buf_seek - void (stbtt__buf *, int)
					// UnexposedExpr- b - stbtt__buf *
						// DeclRefExpr- b - stbtt__buf *
					// IntegerLiteral-  - int [Literal: 0]
				// ReturnStmt-  - 
					// UnexposedExpr- stbtt__buf_get - int
						// CallExpr- stbtt__buf_get - stbtt_uint32
							// UnexposedExpr- stbtt__buf_get - stbtt_uint32 (*)(stbtt__buf *, int)
								// DeclRefExpr- stbtt__buf_get - stbtt_uint32 (stbtt__buf *, int)
							// UnexposedExpr-  - stbtt__buf *
								// ParenExpr-  - stbtt__buf *
									// DeclRefExpr- b - stbtt__buf *
							// IntegerLiteral-  - int [Literal: 2]
		// FunctionDecl- stbtt__cff_index_get - stbtt__buf (stbtt__buf, int)
			// TypeRef- stbtt__buf - stbtt__buf
			// ParmDecl- b - stbtt__buf
				// TypeRef- stbtt__buf - stbtt__buf
			// ParmDecl- i - int
			// CompoundStmt-  - 
				// DeclStmt-  - 
					// VarDecl- count - int
					// VarDecl- offsize - int
					// VarDecl- start - int
					// VarDecl- end - int
				// CallExpr- stbtt__buf_seek - void
					// UnexposedExpr- stbtt__buf_seek - void (*)(stbtt__buf *, int)
						// DeclRefExpr- stbtt__buf_seek - void (stbtt__buf *, int)
					// UnaryOperator-  - stbtt__buf * [Unary Operator: AddrOf (&)]
						// DeclRefExpr- b - stbtt__buf
					// IntegerLiteral-  - int [Literal: 0]
				// BinaryOperator-  - int [Binary Operator: Assign (=)]
					// DeclRefExpr- count - int
					// UnexposedExpr- stbtt__buf_get - int
						// CallExpr- stbtt__buf_get - stbtt_uint32
							// UnexposedExpr- stbtt__buf_get - stbtt_uint32 (*)(stbtt__buf *, int)
								// DeclRefExpr- stbtt__buf_get - stbtt_uint32 (stbtt__buf *, int)
							// ParenExpr-  - stbtt__buf *
								// UnaryOperator-  - stbtt__buf * [Unary Operator: AddrOf (&)]
									// DeclRefExpr- b - stbtt__buf
							// IntegerLiteral-  - int [Literal: 2]
				// BinaryOperator-  - int [Binary Operator: Assign (=)]
					// DeclRefExpr- offsize - int
					// UnexposedExpr- stbtt__buf_get8 - int
						// CallExpr- stbtt__buf_get8 - stbtt_uint8
							// UnexposedExpr- stbtt__buf_get8 - stbtt_uint8 (*)(stbtt__buf *)
								// DeclRefExpr- stbtt__buf_get8 - stbtt_uint8 (stbtt__buf *)
							// UnaryOperator-  - stbtt__buf * [Unary Operator: AddrOf (&)]
								// DeclRefExpr- b - stbtt__buf
				// NullStmt-  - 
				// NullStmt-  - 
				// CallExpr- stbtt__buf_skip - void
					// UnexposedExpr- stbtt__buf_skip - void (*)(stbtt__buf *, int)
						// DeclRefExpr- stbtt__buf_skip - void (stbtt__buf *, int)
					// UnaryOperator-  - stbtt__buf * [Unary Operator: AddrOf (&)]
						// DeclRefExpr- b - stbtt__buf
					// BinaryOperator-  - int [Binary Operator: Mul (*)]
						// UnexposedExpr- i - int
							// DeclRefExpr- i - int
						// UnexposedExpr- offsize - int
							// DeclRefExpr- offsize - int
				// BinaryOperator-  - int [Binary Operator: Assign (=)]
					// DeclRefExpr- start - int
					// UnexposedExpr- stbtt__buf_get - int
						// CallExpr- stbtt__buf_get - stbtt_uint32
							// UnexposedExpr- stbtt__buf_get - stbtt_uint32 (*)(stbtt__buf *, int)
								// DeclRefExpr- stbtt__buf_get - stbtt_uint32 (stbtt__buf *, int)
							// UnaryOperator-  - stbtt__buf * [Unary Operator: AddrOf (&)]
								// DeclRefExpr- b - stbtt__buf
							// UnexposedExpr- offsize - int
								// DeclRefExpr- offsize - int
				// BinaryOperator-  - int [Binary Operator: Assign (=)]
					// DeclRefExpr- end - int
					// UnexposedExpr- stbtt__buf_get - int
						// CallExpr- stbtt__buf_get - stbtt_uint32
							// UnexposedExpr- stbtt__buf_get - stbtt_uint32 (*)(stbtt__buf *, int)
								// DeclRefExpr- stbtt__buf_get - stbtt_uint32 (stbtt__buf *, int)
							// UnaryOperator-  - stbtt__buf * [Unary Operator: AddrOf (&)]
								// DeclRefExpr- b - stbtt__buf
							// UnexposedExpr- offsize - int
								// DeclRefExpr- offsize - int
				// ReturnStmt-  - 
					// CallExpr- stbtt__buf_range - stbtt__buf
						// UnexposedExpr- stbtt__buf_range - stbtt__buf (*)(const stbtt__buf *, int, int)
							// DeclRefExpr- stbtt__buf_range - stbtt__buf (const stbtt__buf *, int, int)
						// UnexposedExpr-  - const stbtt__buf *
							// UnaryOperator-  - stbtt__buf * [Unary Operator: AddrOf (&)]
								// DeclRefExpr- b - stbtt__buf
						// BinaryOperator-  - int [Binary Operator: Add (+)]
							// BinaryOperator-  - int [Binary Operator: Add (+)]
								// IntegerLiteral-  - int [Literal: 2]
								// BinaryOperator-  - int [Binary Operator: Mul (*)]
									// ParenExpr-  - int
										// BinaryOperator-  - int [Binary Operator: Add (+)]
											// UnexposedExpr- count - int
												// DeclRefExpr- count - int
											// IntegerLiteral-  - int [Literal: 1]
									// UnexposedExpr- offsize - int
										// DeclRefExpr- offsize - int
							// UnexposedExpr- start - int
								// DeclRefExpr- start - int
						// BinaryOperator-  - int [Binary Operator: Sub (-)]
							// UnexposedExpr- end - int
								// DeclRefExpr- end - int
							// UnexposedExpr- start - int
								// DeclRefExpr- start - int
		// FunctionDecl- ttUSHORT - stbtt_uint16 (stbtt_uint8 *)
			// TypeRef- stbtt_uint16 - stbtt_uint16
			// ParmDecl- p - stbtt_uint8 *
				// TypeRef- stbtt_uint8 - stbtt_uint8
			// CompoundStmt-  - 
				// ReturnStmt-  - 
					// UnexposedExpr-  - stbtt_uint16
						// BinaryOperator-  - int [Binary Operator: Add (+)]
							// BinaryOperator-  - int [Binary Operator: Mul (*)]
								// UnexposedExpr-  - int
									// UnexposedExpr-  - stbtt_uint8
										// ArraySubscriptExpr-  - stbtt_uint8
											// UnexposedExpr- p - stbtt_uint8 *
												// DeclRefExpr- p - stbtt_uint8 *
											// IntegerLiteral-  - int [Literal: 0]
								// IntegerLiteral-  - int [Literal: 256]
							// UnexposedExpr-  - int
								// UnexposedExpr-  - stbtt_uint8
									// ArraySubscriptExpr-  - stbtt_uint8
										// UnexposedExpr- p - stbtt_uint8 *
											// DeclRefExpr- p - stbtt_uint8 *
										// IntegerLiteral-  - int [Literal: 1]
		// FunctionDecl- ttSHORT - stbtt_int16 (stbtt_uint8 *)
			// TypeRef- stbtt_int16 - stbtt_int16
			// ParmDecl- p - stbtt_uint8 *
				// TypeRef- stbtt_uint8 - stbtt_uint8
			// CompoundStmt-  - 
				// ReturnStmt-  - 
					// UnexposedExpr-  - stbtt_int16
						// BinaryOperator-  - int [Binary Operator: Add (+)]
							// BinaryOperator-  - int [Binary Operator: Mul (*)]
								// UnexposedExpr-  - int
									// UnexposedExpr-  - stbtt_uint8
										// ArraySubscriptExpr-  - stbtt_uint8
											// UnexposedExpr- p - stbtt_uint8 *
												// DeclRefExpr- p - stbtt_uint8 *
											// IntegerLiteral-  - int [Literal: 0]
								// IntegerLiteral-  - int [Literal: 256]
							// UnexposedExpr-  - int
								// UnexposedExpr-  - stbtt_uint8
									// ArraySubscriptExpr-  - stbtt_uint8
										// UnexposedExpr- p - stbtt_uint8 *
											// DeclRefExpr- p - stbtt_uint8 *
										// IntegerLiteral-  - int [Literal: 1]
		// FunctionDecl- ttULONG - stbtt_uint32 (stbtt_uint8 *)
			// TypeRef- stbtt_uint32 - stbtt_uint32
			// ParmDecl- p - stbtt_uint8 *
				// TypeRef- stbtt_uint8 - stbtt_uint8
			// CompoundStmt-  - 
				// ReturnStmt-  - 
					// UnexposedExpr-  - stbtt_uint32
						// BinaryOperator-  - int [Binary Operator: Add (+)]
							// BinaryOperator-  - int [Binary Operator: Add (+)]
								// BinaryOperator-  - int [Binary Operator: Add (+)]
									// ParenExpr-  - int
										// BinaryOperator-  - int [Binary Operator: Shl (<<)]
											// UnexposedExpr-  - int
												// UnexposedExpr-  - stbtt_uint8
													// ArraySubscriptExpr-  - stbtt_uint8
														// UnexposedExpr- p - stbtt_uint8 *
															// DeclRefExpr- p - stbtt_uint8 *
														// IntegerLiteral-  - int [Literal: 0]
											// IntegerLiteral-  - int [Literal: 24]
									// ParenExpr-  - int
										// BinaryOperator-  - int [Binary Operator: Shl (<<)]
											// UnexposedExpr-  - int
												// UnexposedExpr-  - stbtt_uint8
													// ArraySubscriptExpr-  - stbtt_uint8
														// UnexposedExpr- p - stbtt_uint8 *
															// DeclRefExpr- p - stbtt_uint8 *
														// IntegerLiteral-  - int [Literal: 1]
											// IntegerLiteral-  - int [Literal: 16]
								// ParenExpr-  - int
									// BinaryOperator-  - int [Binary Operator: Shl (<<)]
										// UnexposedExpr-  - int
											// UnexposedExpr-  - stbtt_uint8
												// ArraySubscriptExpr-  - stbtt_uint8
													// UnexposedExpr- p - stbtt_uint8 *
														// DeclRefExpr- p - stbtt_uint8 *
													// IntegerLiteral-  - int [Literal: 2]
										// IntegerLiteral-  - int [Literal: 8]
							// UnexposedExpr-  - int
								// UnexposedExpr-  - stbtt_uint8
									// ArraySubscriptExpr-  - stbtt_uint8
										// UnexposedExpr- p - stbtt_uint8 *
											// DeclRefExpr- p - stbtt_uint8 *
										// IntegerLiteral-  - int [Literal: 3]
		// FunctionDecl- ttLONG - stbtt_int32 (stbtt_uint8 *)
			// TypeRef- stbtt_int32 - stbtt_int32
			// ParmDecl- p - stbtt_uint8 *
				// TypeRef- stbtt_uint8 - stbtt_uint8
			// CompoundStmt-  - 
				// ReturnStmt-  - 
					// BinaryOperator-  - int [Binary Operator: Add (+)]
						// BinaryOperator-  - int [Binary Operator: Add (+)]
							// BinaryOperator-  - int [Binary Operator: Add (+)]
								// ParenExpr-  - int
									// BinaryOperator-  - int [Binary Operator: Shl (<<)]
										// UnexposedExpr-  - int
											// UnexposedExpr-  - stbtt_uint8
												// ArraySubscriptExpr-  - stbtt_uint8
													// UnexposedExpr- p - stbtt_uint8 *
														// DeclRefExpr- p - stbtt_uint8 *
													// IntegerLiteral-  - int [Literal: 0]
										// IntegerLiteral-  - int [Literal: 24]
								// ParenExpr-  - int
									// BinaryOperator-  - int [Binary Operator: Shl (<<)]
										// UnexposedExpr-  - int
											// UnexposedExpr-  - stbtt_uint8
												// ArraySubscriptExpr-  - stbtt_uint8
													// UnexposedExpr- p - stbtt_uint8 *
														// DeclRefExpr- p - stbtt_uint8 *
													// IntegerLiteral-  - int [Literal: 1]
										// IntegerLiteral-  - int [Literal: 16]
							// ParenExpr-  - int
								// BinaryOperator-  - int [Binary Operator: Shl (<<)]
									// UnexposedExpr-  - int
										// UnexposedExpr-  - stbtt_uint8
											// ArraySubscriptExpr-  - stbtt_uint8
												// UnexposedExpr- p - stbtt_uint8 *
													// DeclRefExpr- p - stbtt_uint8 *
												// IntegerLiteral-  - int [Literal: 2]
									// IntegerLiteral-  - int [Literal: 8]
						// UnexposedExpr-  - int
							// UnexposedExpr-  - stbtt_uint8
								// ArraySubscriptExpr-  - stbtt_uint8
									// UnexposedExpr- p - stbtt_uint8 *
										// DeclRefExpr- p - stbtt_uint8 *
									// IntegerLiteral-  - int [Literal: 3]
		// FunctionDecl- stbtt__isfont - int (stbtt_uint8 *)
			// ParmDecl- font - stbtt_uint8 *
				// TypeRef- stbtt_uint8 - stbtt_uint8
			// CompoundStmt-  - 
				// IfStmt-  - 
					// ParenExpr-  - int
						// BinaryOperator-  - int [Binary Operator: LAnd (&&)]
							// BinaryOperator-  - int [Binary Operator: LAnd (&&)]
								// BinaryOperator-  - int [Binary Operator: LAnd (&&)]
									// BinaryOperator-  - int [Binary Operator: EQ (==)]
										// UnexposedExpr-  - int
											// UnexposedExpr-  - stbtt_uint8
												// ArraySubscriptExpr-  - stbtt_uint8
													// UnexposedExpr-  - stbtt_uint8 *
														// ParenExpr-  - stbtt_uint8 *
															// DeclRefExpr- font - stbtt_uint8 *
													// IntegerLiteral-  - int [Literal: 0]
										// ParenExpr-  - int
											// CharacterLiteral-  - int [Literal: 1]
									// BinaryOperator-  - int [Binary Operator: EQ (==)]
										// UnexposedExpr-  - int
											// UnexposedExpr-  - stbtt_uint8
												// ArraySubscriptExpr-  - stbtt_uint8
													// UnexposedExpr-  - stbtt_uint8 *
														// ParenExpr-  - stbtt_uint8 *
															// DeclRefExpr- font - stbtt_uint8 *
													// IntegerLiteral-  - int [Literal: 1]
										// ParenExpr-  - int
											// IntegerLiteral-  - int [Literal: 0]
								// BinaryOperator-  - int [Binary Operator: EQ (==)]
									// UnexposedExpr-  - int
										// UnexposedExpr-  - stbtt_uint8
											// ArraySubscriptExpr-  - stbtt_uint8
												// UnexposedExpr-  - stbtt_uint8 *
													// ParenExpr-  - stbtt_uint8 *
														// DeclRefExpr- font - stbtt_uint8 *
												// IntegerLiteral-  - int [Literal: 2]
									// ParenExpr-  - int
										// IntegerLiteral-  - int [Literal: 0]
							// BinaryOperator-  - int [Binary Operator: EQ (==)]
								// UnexposedExpr-  - int
									// UnexposedExpr-  - stbtt_uint8
										// ArraySubscriptExpr-  - stbtt_uint8
											// UnexposedExpr-  - stbtt_uint8 *
												// ParenExpr-  - stbtt_uint8 *
													// DeclRefExpr- font - stbtt_uint8 *
											// IntegerLiteral-  - int [Literal: 3]
								// ParenExpr-  - int
									// IntegerLiteral-  - int [Literal: 0]
					// ReturnStmt-  - 
						// IntegerLiteral-  - int [Literal: 1]
				// IfStmt-  - 
					// ParenExpr-  - int
						// BinaryOperator-  - int [Binary Operator: LAnd (&&)]
							// BinaryOperator-  - int [Binary Operator: LAnd (&&)]
								// BinaryOperator-  - int [Binary Operator: LAnd (&&)]
									// BinaryOperator-  - int [Binary Operator: EQ (==)]
										// UnexposedExpr-  - int
											// UnexposedExpr-  - stbtt_uint8
												// ArraySubscriptExpr-  - stbtt_uint8
													// UnexposedExpr-  - stbtt_uint8 *
														// ParenExpr-  - stbtt_uint8 *
															// DeclRefExpr- font - stbtt_uint8 *
													// IntegerLiteral-  - int [Literal: 0]
										// UnexposedExpr-  - int
											// UnexposedExpr-  - char
												// ParenExpr-  - char
													// ArraySubscriptExpr-  - char
														// UnexposedExpr-  - char *
															// StringLiteral- "typ1" - char [5] [Literal: typ1]
														// IntegerLiteral-  - int [Literal: 0]
									// BinaryOperator-  - int [Binary Operator: EQ (==)]
										// UnexposedExpr-  - int
											// UnexposedExpr-  - stbtt_uint8
												// ArraySubscriptExpr-  - stbtt_uint8
													// UnexposedExpr-  - stbtt_uint8 *
														// ParenExpr-  - stbtt_uint8 *
															// DeclRefExpr- font - stbtt_uint8 *
													// IntegerLiteral-  - int [Literal: 1]
										// UnexposedExpr-  - int
											// UnexposedExpr-  - char
												// ParenExpr-  - char
													// ArraySubscriptExpr-  - char
														// UnexposedExpr-  - char *
															// StringLiteral- "typ1" - char [5] [Literal: typ1]
														// IntegerLiteral-  - int [Literal: 1]
								// BinaryOperator-  - int [Binary Operator: EQ (==)]
									// UnexposedExpr-  - int
										// UnexposedExpr-  - stbtt_uint8
											// ArraySubscriptExpr-  - stbtt_uint8
												// UnexposedExpr-  - stbtt_uint8 *
													// ParenExpr-  - stbtt_uint8 *
														// DeclRefExpr- font - stbtt_uint8 *
												// IntegerLiteral-  - int [Literal: 2]
									// UnexposedExpr-  - int
										// UnexposedExpr-  - char
											// ParenExpr-  - char
												// ArraySubscriptExpr-  - char
													// UnexposedExpr-  - char *
														// StringLiteral- "typ1" - char [5] [Literal: typ1]
													// IntegerLiteral-  - int [Literal: 2]
							// BinaryOperator-  - int [Binary Operator: EQ (==)]
								// UnexposedExpr-  - int
									// UnexposedExpr-  - stbtt_uint8
										// ArraySubscriptExpr-  - stbtt_uint8
											// UnexposedExpr-  - stbtt_uint8 *
												// ParenExpr-  - stbtt_uint8 *
													// DeclRefExpr- font - stbtt_uint8 *
											// IntegerLiteral-  - int [Literal: 3]
								// UnexposedExpr-  - int
									// UnexposedExpr-  - char
										// ParenExpr-  - char
											// ArraySubscriptExpr-  - char
												// UnexposedExpr-  - char *
													// StringLiteral- "typ1" - char [5] [Literal: typ1]
												// IntegerLiteral-  - int [Literal: 3]
					// ReturnStmt-  - 
						// IntegerLiteral-  - int [Literal: 1]
				// IfStmt-  - 
					// ParenExpr-  - int
						// BinaryOperator-  - int [Binary Operator: LAnd (&&)]
							// BinaryOperator-  - int [Binary Operator: LAnd (&&)]
								// BinaryOperator-  - int [Binary Operator: LAnd (&&)]
									// BinaryOperator-  - int [Binary Operator: EQ (==)]
										// UnexposedExpr-  - int
											// UnexposedExpr-  - stbtt_uint8
												// ArraySubscriptExpr-  - stbtt_uint8
													// UnexposedExpr-  - stbtt_uint8 *
														// ParenExpr-  - stbtt_uint8 *
															// DeclRefExpr- font - stbtt_uint8 *
													// IntegerLiteral-  - int [Literal: 0]
										// UnexposedExpr-  - int
											// UnexposedExpr-  - char
												// ParenExpr-  - char
													// ArraySubscriptExpr-  - char
														// UnexposedExpr-  - char *
															// StringLiteral- "OTTO" - char [5] [Literal: OTTO]
														// IntegerLiteral-  - int [Literal: 0]
									// BinaryOperator-  - int [Binary Operator: EQ (==)]
										// UnexposedExpr-  - int
											// UnexposedExpr-  - stbtt_uint8
												// ArraySubscriptExpr-  - stbtt_uint8
													// UnexposedExpr-  - stbtt_uint8 *
														// ParenExpr-  - stbtt_uint8 *
															// DeclRefExpr- font - stbtt_uint8 *
													// IntegerLiteral-  - int [Literal: 1]
										// UnexposedExpr-  - int
											// UnexposedExpr-  - char
												// ParenExpr-  - char
													// ArraySubscriptExpr-  - char
														// UnexposedExpr-  - char *
															// StringLiteral- "OTTO" - char [5] [Literal: OTTO]
														// IntegerLiteral-  - int [Literal: 1]
								// BinaryOperator-  - int [Binary Operator: EQ (==)]
									// UnexposedExpr-  - int
										// UnexposedExpr-  - stbtt_uint8
											// ArraySubscriptExpr-  - stbtt_uint8
												// UnexposedExpr-  - stbtt_uint8 *
													// ParenExpr-  - stbtt_uint8 *
														// DeclRefExpr- font - stbtt_uint8 *
												// IntegerLiteral-  - int [Literal: 2]
									// UnexposedExpr-  - int
										// UnexposedExpr-  - char
											// ParenExpr-  - char
												// ArraySubscriptExpr-  - char
													// UnexposedExpr-  - char *
														// StringLiteral- "OTTO" - char [5] [Literal: OTTO]
													// IntegerLiteral-  - int [Literal: 2]
							// BinaryOperator-  - int [Binary Operator: EQ (==)]
								// UnexposedExpr-  - int
									// UnexposedExpr-  - stbtt_uint8
										// ArraySubscriptExpr-  - stbtt_uint8
											// UnexposedExpr-  - stbtt_uint8 *
												// ParenExpr-  - stbtt_uint8 *
													// DeclRefExpr- font - stbtt_uint8 *
											// IntegerLiteral-  - int [Literal: 3]
								// UnexposedExpr-  - int
									// UnexposedExpr-  - char
										// ParenExpr-  - char
											// ArraySubscriptExpr-  - char
												// UnexposedExpr-  - char *
													// StringLiteral- "OTTO" - char [5] [Literal: OTTO]
												// IntegerLiteral-  - int [Literal: 3]
					// ReturnStmt-  - 
						// IntegerLiteral-  - int [Literal: 1]
				// IfStmt-  - 
					// ParenExpr-  - int
						// BinaryOperator-  - int [Binary Operator: LAnd (&&)]
							// BinaryOperator-  - int [Binary Operator: LAnd (&&)]
								// BinaryOperator-  - int [Binary Operator: LAnd (&&)]
									// BinaryOperator-  - int [Binary Operator: EQ (==)]
										// UnexposedExpr-  - int
											// UnexposedExpr-  - stbtt_uint8
												// ArraySubscriptExpr-  - stbtt_uint8
													// UnexposedExpr-  - stbtt_uint8 *
														// ParenExpr-  - stbtt_uint8 *
															// DeclRefExpr- font - stbtt_uint8 *
													// IntegerLiteral-  - int [Literal: 0]
										// ParenExpr-  - int
											// IntegerLiteral-  - int [Literal: 0]
									// BinaryOperator-  - int [Binary Operator: EQ (==)]
										// UnexposedExpr-  - int
											// UnexposedExpr-  - stbtt_uint8
												// ArraySubscriptExpr-  - stbtt_uint8
													// UnexposedExpr-  - stbtt_uint8 *
														// ParenExpr-  - stbtt_uint8 *
															// DeclRefExpr- font - stbtt_uint8 *
													// IntegerLiteral-  - int [Literal: 1]
										// ParenExpr-  - int
											// IntegerLiteral-  - int [Literal: 1]
								// BinaryOperator-  - int [Binary Operator: EQ (==)]
									// UnexposedExpr-  - int
										// UnexposedExpr-  - stbtt_uint8
											// ArraySubscriptExpr-  - stbtt_uint8
												// UnexposedExpr-  - stbtt_uint8 *
													// ParenExpr-  - stbtt_uint8 *
														// DeclRefExpr- font - stbtt_uint8 *
												// IntegerLiteral-  - int [Literal: 2]
									// ParenExpr-  - int
										// IntegerLiteral-  - int [Literal: 0]
							// BinaryOperator-  - int [Binary Operator: EQ (==)]
								// UnexposedExpr-  - int
									// UnexposedExpr-  - stbtt_uint8
										// ArraySubscriptExpr-  - stbtt_uint8
											// UnexposedExpr-  - stbtt_uint8 *
												// ParenExpr-  - stbtt_uint8 *
													// DeclRefExpr- font - stbtt_uint8 *
											// IntegerLiteral-  - int [Literal: 3]
								// ParenExpr-  - int
									// IntegerLiteral-  - int [Literal: 0]
					// ReturnStmt-  - 
						// IntegerLiteral-  - int [Literal: 1]
				// IfStmt-  - 
					// ParenExpr-  - int
						// BinaryOperator-  - int [Binary Operator: LAnd (&&)]
							// BinaryOperator-  - int [Binary Operator: LAnd (&&)]
								// BinaryOperator-  - int [Binary Operator: LAnd (&&)]
									// BinaryOperator-  - int [Binary Operator: EQ (==)]
										// UnexposedExpr-  - int
											// UnexposedExpr-  - stbtt_uint8
												// ArraySubscriptExpr-  - stbtt_uint8
													// UnexposedExpr-  - stbtt_uint8 *
														// ParenExpr-  - stbtt_uint8 *
															// DeclRefExpr- font - stbtt_uint8 *
													// IntegerLiteral-  - int [Literal: 0]
										// UnexposedExpr-  - int
											// UnexposedExpr-  - char
												// ParenExpr-  - char
													// ArraySubscriptExpr-  - char
														// UnexposedExpr-  - char *
															// StringLiteral- "true" - char [5] [Literal: true]
														// IntegerLiteral-  - int [Literal: 0]
									// BinaryOperator-  - int [Binary Operator: EQ (==)]
										// UnexposedExpr-  - int
											// UnexposedExpr-  - stbtt_uint8
												// ArraySubscriptExpr-  - stbtt_uint8
													// UnexposedExpr-  - stbtt_uint8 *
														// ParenExpr-  - stbtt_uint8 *
															// DeclRefExpr- font - stbtt_uint8 *
													// IntegerLiteral-  - int [Literal: 1]
										// UnexposedExpr-  - int
											// UnexposedExpr-  - char
												// ParenExpr-  - char
													// ArraySubscriptExpr-  - char
														// UnexposedExpr-  - char *
															// StringLiteral- "true" - char [5] [Literal: true]
														// IntegerLiteral-  - int [Literal: 1]
								// BinaryOperator-  - int [Binary Operator: EQ (==)]
									// UnexposedExpr-  - int
										// UnexposedExpr-  - stbtt_uint8
											// ArraySubscriptExpr-  - stbtt_uint8
												// UnexposedExpr-  - stbtt_uint8 *
													// ParenExpr-  - stbtt_uint8 *
														// DeclRefExpr- font - stbtt_uint8 *
												// IntegerLiteral-  - int [Literal: 2]
									// UnexposedExpr-  - int
										// UnexposedExpr-  - char
											// ParenExpr-  - char
												// ArraySubscriptExpr-  - char
													// UnexposedExpr-  - char *
														// StringLiteral- "true" - char [5] [Literal: true]
													// IntegerLiteral-  - int [Literal: 2]
							// BinaryOperator-  - int [Binary Operator: EQ (==)]
								// UnexposedExpr-  - int
									// UnexposedExpr-  - stbtt_uint8
										// ArraySubscriptExpr-  - stbtt_uint8
											// UnexposedExpr-  - stbtt_uint8 *
												// ParenExpr-  - stbtt_uint8 *
													// DeclRefExpr- font - stbtt_uint8 *
											// IntegerLiteral-  - int [Literal: 3]
								// UnexposedExpr-  - int
									// UnexposedExpr-  - char
										// ParenExpr-  - char
											// ArraySubscriptExpr-  - char
												// UnexposedExpr-  - char *
													// StringLiteral- "true" - char [5] [Literal: true]
												// IntegerLiteral-  - int [Literal: 3]
					// ReturnStmt-  - 
						// IntegerLiteral-  - int [Literal: 1]
				// ReturnStmt-  - 
					// IntegerLiteral-  - int [Literal: 0]
		// FunctionDecl- stbtt__find_table - stbtt_uint32 (stbtt_uint8 *, stbtt_uint32, const char *)
			// TypeRef- stbtt_uint32 - stbtt_uint32
			// ParmDecl- data - stbtt_uint8 *
				// TypeRef- stbtt_uint8 - stbtt_uint8
			// ParmDecl- fontstart - stbtt_uint32
				// TypeRef- stbtt_uint32 - stbtt_uint32
			// ParmDecl- tag - const char *
			// CompoundStmt-  - 
				// DeclStmt-  - 
					// VarDecl- num_tables - stbtt_int32
						// TypeRef- stbtt_int32 - stbtt_int32
						// UnexposedExpr- ttUSHORT - stbtt_int32
							// CallExpr- ttUSHORT - stbtt_uint16
								// UnexposedExpr- ttUSHORT - stbtt_uint16 (*)(stbtt_uint8 *)
									// DeclRefExpr- ttUSHORT - stbtt_uint16 (stbtt_uint8 *)
								// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
									// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
										// UnexposedExpr- data - stbtt_uint8 *
											// DeclRefExpr- data - stbtt_uint8 *
										// UnexposedExpr- fontstart - stbtt_uint32
											// DeclRefExpr- fontstart - stbtt_uint32
									// IntegerLiteral-  - int [Literal: 4]
				// DeclStmt-  - 
					// VarDecl- tabledir - stbtt_uint32
						// TypeRef- stbtt_uint32 - stbtt_uint32
						// BinaryOperator-  - unsigned int [Binary Operator: Add (+)]
							// UnexposedExpr- fontstart - stbtt_uint32
								// DeclRefExpr- fontstart - stbtt_uint32
							// UnexposedExpr-  - unsigned int
								// IntegerLiteral-  - int [Literal: 12]
				// DeclStmt-  - 
					// VarDecl- i - stbtt_int32
						// TypeRef- stbtt_int32 - stbtt_int32
				// ForStmt-  - 
					// BinaryOperator-  - stbtt_int32 [Binary Operator: Assign (=)]
						// DeclRefExpr- i - stbtt_int32
						// IntegerLiteral-  - int [Literal: 0]
					// BinaryOperator-  - int [Binary Operator: LT (<)]
						// UnexposedExpr- i - stbtt_int32
							// DeclRefExpr- i - stbtt_int32
						// UnexposedExpr- num_tables - stbtt_int32
							// DeclRefExpr- num_tables - stbtt_int32
					// UnaryOperator-  - stbtt_int32 [Unary Operator: PreInc (++)]
						// DeclRefExpr- i - stbtt_int32
					// CompoundStmt-  - 
						// DeclStmt-  - 
							// VarDecl- loc - stbtt_uint32
								// TypeRef- stbtt_uint32 - stbtt_uint32
								// BinaryOperator-  - unsigned int [Binary Operator: Add (+)]
									// UnexposedExpr- tabledir - stbtt_uint32
										// DeclRefExpr- tabledir - stbtt_uint32
									// UnexposedExpr-  - unsigned int
										// BinaryOperator-  - int [Binary Operator: Mul (*)]
											// IntegerLiteral-  - int [Literal: 16]
											// UnexposedExpr- i - stbtt_int32
												// DeclRefExpr- i - stbtt_int32
						// IfStmt-  - 
							// ParenExpr-  - int
								// BinaryOperator-  - int [Binary Operator: LAnd (&&)]
									// BinaryOperator-  - int [Binary Operator: LAnd (&&)]
										// BinaryOperator-  - int [Binary Operator: LAnd (&&)]
											// BinaryOperator-  - int [Binary Operator: EQ (==)]
												// UnexposedExpr-  - int
													// UnexposedExpr-  - stbtt_uint8
														// ArraySubscriptExpr-  - stbtt_uint8
															// ParenExpr-  - stbtt_uint8 *
																// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
																	// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
																		// UnexposedExpr- data - stbtt_uint8 *
																			// DeclRefExpr- data - stbtt_uint8 *
																		// UnexposedExpr- loc - stbtt_uint32
																			// DeclRefExpr- loc - stbtt_uint32
																	// IntegerLiteral-  - int [Literal: 0]
															// IntegerLiteral-  - int [Literal: 0]
												// UnexposedExpr-  - int
													// UnexposedExpr-  - char
														// ParenExpr-  - const char
															// ArraySubscriptExpr-  - const char
																// UnexposedExpr- tag - const char *
																	// DeclRefExpr- tag - const char *
																// IntegerLiteral-  - int [Literal: 0]
											// BinaryOperator-  - int [Binary Operator: EQ (==)]
												// UnexposedExpr-  - int
													// UnexposedExpr-  - stbtt_uint8
														// ArraySubscriptExpr-  - stbtt_uint8
															// ParenExpr-  - stbtt_uint8 *
																// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
																	// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
																		// UnexposedExpr- data - stbtt_uint8 *
																			// DeclRefExpr- data - stbtt_uint8 *
																		// UnexposedExpr- loc - stbtt_uint32
																			// DeclRefExpr- loc - stbtt_uint32
																	// IntegerLiteral-  - int [Literal: 0]
															// IntegerLiteral-  - int [Literal: 1]
												// UnexposedExpr-  - int
													// UnexposedExpr-  - char
														// ParenExpr-  - const char
															// ArraySubscriptExpr-  - const char
																// UnexposedExpr- tag - const char *
																	// DeclRefExpr- tag - const char *
																// IntegerLiteral-  - int [Literal: 1]
										// BinaryOperator-  - int [Binary Operator: EQ (==)]
											// UnexposedExpr-  - int
												// UnexposedExpr-  - stbtt_uint8
													// ArraySubscriptExpr-  - stbtt_uint8
														// ParenExpr-  - stbtt_uint8 *
															// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
																// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
																	// UnexposedExpr- data - stbtt_uint8 *
																		// DeclRefExpr- data - stbtt_uint8 *
																	// UnexposedExpr- loc - stbtt_uint32
																		// DeclRefExpr- loc - stbtt_uint32
																// IntegerLiteral-  - int [Literal: 0]
														// IntegerLiteral-  - int [Literal: 2]
											// UnexposedExpr-  - int
												// UnexposedExpr-  - char
													// ParenExpr-  - const char
														// ArraySubscriptExpr-  - const char
															// UnexposedExpr- tag - const char *
																// DeclRefExpr- tag - const char *
															// IntegerLiteral-  - int [Literal: 2]
									// BinaryOperator-  - int [Binary Operator: EQ (==)]
										// UnexposedExpr-  - int
											// UnexposedExpr-  - stbtt_uint8
												// ArraySubscriptExpr-  - stbtt_uint8
													// ParenExpr-  - stbtt_uint8 *
														// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
															// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
																// UnexposedExpr- data - stbtt_uint8 *
																	// DeclRefExpr- data - stbtt_uint8 *
																// UnexposedExpr- loc - stbtt_uint32
																	// DeclRefExpr- loc - stbtt_uint32
															// IntegerLiteral-  - int [Literal: 0]
													// IntegerLiteral-  - int [Literal: 3]
										// UnexposedExpr-  - int
											// UnexposedExpr-  - char
												// ParenExpr-  - const char
													// ArraySubscriptExpr-  - const char
														// UnexposedExpr- tag - const char *
															// DeclRefExpr- tag - const char *
														// IntegerLiteral-  - int [Literal: 3]
							// ReturnStmt-  - 
								// CallExpr- ttULONG - stbtt_uint32
									// UnexposedExpr- ttULONG - stbtt_uint32 (*)(stbtt_uint8 *)
										// DeclRefExpr- ttULONG - stbtt_uint32 (stbtt_uint8 *)
									// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
										// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
											// UnexposedExpr- data - stbtt_uint8 *
												// DeclRefExpr- data - stbtt_uint8 *
											// UnexposedExpr- loc - stbtt_uint32
												// DeclRefExpr- loc - stbtt_uint32
										// IntegerLiteral-  - int [Literal: 8]
				// ReturnStmt-  - 
					// UnexposedExpr-  - stbtt_uint32
						// IntegerLiteral-  - int [Literal: 0]
		// FunctionDecl- stbtt_GetFontOffsetForIndex_internal - int (unsigned char *, int)
			// ParmDecl- font_collection - unsigned char *
			// ParmDecl- index - int
			// CompoundStmt-  - 
				// IfStmt-  - 
					// CallExpr- stbtt__isfont - int
						// UnexposedExpr- stbtt__isfont - int (*)(stbtt_uint8 *)
							// DeclRefExpr- stbtt__isfont - int (stbtt_uint8 *)
						// UnexposedExpr- font_collection - unsigned char *
							// DeclRefExpr- font_collection - unsigned char *
					// ReturnStmt-  - 
						// ConditionalOperator-  - int
							// BinaryOperator-  - int [Binary Operator: EQ (==)]
								// UnexposedExpr- index - int
									// DeclRefExpr- index - int
								// IntegerLiteral-  - int [Literal: 0]
							// IntegerLiteral-  - int [Literal: 0]
							// UnaryOperator-  - int [Unary Operator: Minus (-)]
								// IntegerLiteral-  - int [Literal: 1]
				// IfStmt-  - 
					// ParenExpr-  - int
						// BinaryOperator-  - int [Binary Operator: LAnd (&&)]
							// BinaryOperator-  - int [Binary Operator: LAnd (&&)]
								// BinaryOperator-  - int [Binary Operator: LAnd (&&)]
									// BinaryOperator-  - int [Binary Operator: EQ (==)]
										// UnexposedExpr-  - int
											// UnexposedExpr-  - unsigned char
												// ArraySubscriptExpr-  - unsigned char
													// UnexposedExpr-  - unsigned char *
														// ParenExpr-  - unsigned char *
															// DeclRefExpr- font_collection - unsigned char *
													// IntegerLiteral-  - int [Literal: 0]
										// UnexposedExpr-  - int
											// UnexposedExpr-  - char
												// ParenExpr-  - char
													// ArraySubscriptExpr-  - char
														// UnexposedExpr-  - char *
															// StringLiteral- "ttcf" - char [5] [Literal: ttcf]
														// IntegerLiteral-  - int [Literal: 0]
									// BinaryOperator-  - int [Binary Operator: EQ (==)]
										// UnexposedExpr-  - int
											// UnexposedExpr-  - unsigned char
												// ArraySubscriptExpr-  - unsigned char
													// UnexposedExpr-  - unsigned char *
														// ParenExpr-  - unsigned char *
															// DeclRefExpr- font_collection - unsigned char *
													// IntegerLiteral-  - int [Literal: 1]
										// UnexposedExpr-  - int
											// UnexposedExpr-  - char
												// ParenExpr-  - char
													// ArraySubscriptExpr-  - char
														// UnexposedExpr-  - char *
															// StringLiteral- "ttcf" - char [5] [Literal: ttcf]
														// IntegerLiteral-  - int [Literal: 1]
								// BinaryOperator-  - int [Binary Operator: EQ (==)]
									// UnexposedExpr-  - int
										// UnexposedExpr-  - unsigned char
											// ArraySubscriptExpr-  - unsigned char
												// UnexposedExpr-  - unsigned char *
													// ParenExpr-  - unsigned char *
														// DeclRefExpr- font_collection - unsigned char *
												// IntegerLiteral-  - int [Literal: 2]
									// UnexposedExpr-  - int
										// UnexposedExpr-  - char
											// ParenExpr-  - char
												// ArraySubscriptExpr-  - char
													// UnexposedExpr-  - char *
														// StringLiteral- "ttcf" - char [5] [Literal: ttcf]
													// IntegerLiteral-  - int [Literal: 2]
							// BinaryOperator-  - int [Binary Operator: EQ (==)]
								// UnexposedExpr-  - int
									// UnexposedExpr-  - unsigned char
										// ArraySubscriptExpr-  - unsigned char
											// UnexposedExpr-  - unsigned char *
												// ParenExpr-  - unsigned char *
													// DeclRefExpr- font_collection - unsigned char *
											// IntegerLiteral-  - int [Literal: 3]
								// UnexposedExpr-  - int
									// UnexposedExpr-  - char
										// ParenExpr-  - char
											// ArraySubscriptExpr-  - char
												// UnexposedExpr-  - char *
													// StringLiteral- "ttcf" - char [5] [Literal: ttcf]
												// IntegerLiteral-  - int [Literal: 3]
					// CompoundStmt-  - 
						// IfStmt-  - 
							// BinaryOperator-  - int [Binary Operator: LOr (||)]
								// BinaryOperator-  - int [Binary Operator: EQ (==)]
									// CallExpr- ttULONG - stbtt_uint32
										// UnexposedExpr- ttULONG - stbtt_uint32 (*)(stbtt_uint8 *)
											// DeclRefExpr- ttULONG - stbtt_uint32 (stbtt_uint8 *)
										// BinaryOperator-  - unsigned char * [Binary Operator: Add (+)]
											// UnexposedExpr- font_collection - unsigned char *
												// DeclRefExpr- font_collection - unsigned char *
											// IntegerLiteral-  - int [Literal: 4]
									// UnexposedExpr-  - unsigned int
										// IntegerLiteral-  - int [Literal: 65536]
								// BinaryOperator-  - int [Binary Operator: EQ (==)]
									// CallExpr- ttULONG - stbtt_uint32
										// UnexposedExpr- ttULONG - stbtt_uint32 (*)(stbtt_uint8 *)
											// DeclRefExpr- ttULONG - stbtt_uint32 (stbtt_uint8 *)
										// BinaryOperator-  - unsigned char * [Binary Operator: Add (+)]
											// UnexposedExpr- font_collection - unsigned char *
												// DeclRefExpr- font_collection - unsigned char *
											// IntegerLiteral-  - int [Literal: 4]
									// UnexposedExpr-  - unsigned int
										// IntegerLiteral-  - int [Literal: 131072]
							// CompoundStmt-  - 
								// DeclStmt-  - 
									// VarDecl- n - stbtt_int32
										// TypeRef- stbtt_int32 - stbtt_int32
										// CallExpr- ttLONG - stbtt_int32
											// UnexposedExpr- ttLONG - stbtt_int32 (*)(stbtt_uint8 *)
												// DeclRefExpr- ttLONG - stbtt_int32 (stbtt_uint8 *)
											// BinaryOperator-  - unsigned char * [Binary Operator: Add (+)]
												// UnexposedExpr- font_collection - unsigned char *
													// DeclRefExpr- font_collection - unsigned char *
												// IntegerLiteral-  - int [Literal: 8]
								// IfStmt-  - 
									// BinaryOperator-  - int [Binary Operator: GE (>=)]
										// UnexposedExpr- index - int
											// DeclRefExpr- index - int
										// UnexposedExpr- n - stbtt_int32
											// DeclRefExpr- n - stbtt_int32
									// ReturnStmt-  - 
										// UnaryOperator-  - int [Unary Operator: Minus (-)]
											// IntegerLiteral-  - int [Literal: 1]
								// ReturnStmt-  - 
									// UnexposedExpr- ttULONG - int
										// CallExpr- ttULONG - stbtt_uint32
											// UnexposedExpr- ttULONG - stbtt_uint32 (*)(stbtt_uint8 *)
												// DeclRefExpr- ttULONG - stbtt_uint32 (stbtt_uint8 *)
											// BinaryOperator-  - unsigned char * [Binary Operator: Add (+)]
												// BinaryOperator-  - unsigned char * [Binary Operator: Add (+)]
													// UnexposedExpr- font_collection - unsigned char *
														// DeclRefExpr- font_collection - unsigned char *
													// IntegerLiteral-  - int [Literal: 12]
												// BinaryOperator-  - int [Binary Operator: Mul (*)]
													// UnexposedExpr- index - int
														// DeclRefExpr- index - int
													// IntegerLiteral-  - int [Literal: 4]
				// ReturnStmt-  - 
					// UnaryOperator-  - int [Unary Operator: Minus (-)]
						// IntegerLiteral-  - int [Literal: 1]
		// FunctionDecl- stbtt_GetNumberOfFonts_internal - int (unsigned char *)
			// ParmDecl- font_collection - unsigned char *
			// CompoundStmt-  - 
				// IfStmt-  - 
					// CallExpr- stbtt__isfont - int
						// UnexposedExpr- stbtt__isfont - int (*)(stbtt_uint8 *)
							// DeclRefExpr- stbtt__isfont - int (stbtt_uint8 *)
						// UnexposedExpr- font_collection - unsigned char *
							// DeclRefExpr- font_collection - unsigned char *
					// ReturnStmt-  - 
						// IntegerLiteral-  - int [Literal: 1]
				// IfStmt-  - 
					// ParenExpr-  - int
						// BinaryOperator-  - int [Binary Operator: LAnd (&&)]
							// BinaryOperator-  - int [Binary Operator: LAnd (&&)]
								// BinaryOperator-  - int [Binary Operator: LAnd (&&)]
									// BinaryOperator-  - int [Binary Operator: EQ (==)]
										// UnexposedExpr-  - int
											// UnexposedExpr-  - unsigned char
												// ArraySubscriptExpr-  - unsigned char
													// UnexposedExpr-  - unsigned char *
														// ParenExpr-  - unsigned char *
															// DeclRefExpr- font_collection - unsigned char *
													// IntegerLiteral-  - int [Literal: 0]
										// UnexposedExpr-  - int
											// UnexposedExpr-  - char
												// ParenExpr-  - char
													// ArraySubscriptExpr-  - char
														// UnexposedExpr-  - char *
															// StringLiteral- "ttcf" - char [5] [Literal: ttcf]
														// IntegerLiteral-  - int [Literal: 0]
									// BinaryOperator-  - int [Binary Operator: EQ (==)]
										// UnexposedExpr-  - int
											// UnexposedExpr-  - unsigned char
												// ArraySubscriptExpr-  - unsigned char
													// UnexposedExpr-  - unsigned char *
														// ParenExpr-  - unsigned char *
															// DeclRefExpr- font_collection - unsigned char *
													// IntegerLiteral-  - int [Literal: 1]
										// UnexposedExpr-  - int
											// UnexposedExpr-  - char
												// ParenExpr-  - char
													// ArraySubscriptExpr-  - char
														// UnexposedExpr-  - char *
															// StringLiteral- "ttcf" - char [5] [Literal: ttcf]
														// IntegerLiteral-  - int [Literal: 1]
								// BinaryOperator-  - int [Binary Operator: EQ (==)]
									// UnexposedExpr-  - int
										// UnexposedExpr-  - unsigned char
											// ArraySubscriptExpr-  - unsigned char
												// UnexposedExpr-  - unsigned char *
													// ParenExpr-  - unsigned char *
														// DeclRefExpr- font_collection - unsigned char *
												// IntegerLiteral-  - int [Literal: 2]
									// UnexposedExpr-  - int
										// UnexposedExpr-  - char
											// ParenExpr-  - char
												// ArraySubscriptExpr-  - char
													// UnexposedExpr-  - char *
														// StringLiteral- "ttcf" - char [5] [Literal: ttcf]
													// IntegerLiteral-  - int [Literal: 2]
							// BinaryOperator-  - int [Binary Operator: EQ (==)]
								// UnexposedExpr-  - int
									// UnexposedExpr-  - unsigned char
										// ArraySubscriptExpr-  - unsigned char
											// UnexposedExpr-  - unsigned char *
												// ParenExpr-  - unsigned char *
													// DeclRefExpr- font_collection - unsigned char *
											// IntegerLiteral-  - int [Literal: 3]
								// UnexposedExpr-  - int
									// UnexposedExpr-  - char
										// ParenExpr-  - char
											// ArraySubscriptExpr-  - char
												// UnexposedExpr-  - char *
													// StringLiteral- "ttcf" - char [5] [Literal: ttcf]
												// IntegerLiteral-  - int [Literal: 3]
					// CompoundStmt-  - 
						// IfStmt-  - 
							// BinaryOperator-  - int [Binary Operator: LOr (||)]
								// BinaryOperator-  - int [Binary Operator: EQ (==)]
									// CallExpr- ttULONG - stbtt_uint32
										// UnexposedExpr- ttULONG - stbtt_uint32 (*)(stbtt_uint8 *)
											// DeclRefExpr- ttULONG - stbtt_uint32 (stbtt_uint8 *)
										// BinaryOperator-  - unsigned char * [Binary Operator: Add (+)]
											// UnexposedExpr- font_collection - unsigned char *
												// DeclRefExpr- font_collection - unsigned char *
											// IntegerLiteral-  - int [Literal: 4]
									// UnexposedExpr-  - unsigned int
										// IntegerLiteral-  - int [Literal: 65536]
								// BinaryOperator-  - int [Binary Operator: EQ (==)]
									// CallExpr- ttULONG - stbtt_uint32
										// UnexposedExpr- ttULONG - stbtt_uint32 (*)(stbtt_uint8 *)
											// DeclRefExpr- ttULONG - stbtt_uint32 (stbtt_uint8 *)
										// BinaryOperator-  - unsigned char * [Binary Operator: Add (+)]
											// UnexposedExpr- font_collection - unsigned char *
												// DeclRefExpr- font_collection - unsigned char *
											// IntegerLiteral-  - int [Literal: 4]
									// UnexposedExpr-  - unsigned int
										// IntegerLiteral-  - int [Literal: 131072]
							// CompoundStmt-  - 
								// ReturnStmt-  - 
									// CallExpr- ttLONG - stbtt_int32
										// UnexposedExpr- ttLONG - stbtt_int32 (*)(stbtt_uint8 *)
											// DeclRefExpr- ttLONG - stbtt_int32 (stbtt_uint8 *)
										// BinaryOperator-  - unsigned char * [Binary Operator: Add (+)]
											// UnexposedExpr- font_collection - unsigned char *
												// DeclRefExpr- font_collection - unsigned char *
											// IntegerLiteral-  - int [Literal: 8]
				// ReturnStmt-  - 
					// IntegerLiteral-  - int [Literal: 0]
		// FunctionDecl- stbtt__get_subrs - stbtt__buf (stbtt__buf, stbtt__buf)
			// TypeRef- stbtt__buf - stbtt__buf
			// ParmDecl- cff - stbtt__buf
				// TypeRef- stbtt__buf - stbtt__buf
			// ParmDecl- fontdict - stbtt__buf
				// TypeRef- stbtt__buf - stbtt__buf
			// CompoundStmt-  - 
				// DeclStmt-  - 
					// VarDecl- subrsoff - stbtt_uint32
						// TypeRef- stbtt_uint32 - stbtt_uint32
						// UnexposedExpr-  - stbtt_uint32
							// IntegerLiteral-  - int [Literal: 0]
					// VarDecl- private_loc - stbtt_uint32 [2]
						// TypeRef- stbtt_uint32 - stbtt_uint32
						// IntegerLiteral-  - int [Literal: 2]
						// InitListExpr-  - stbtt_uint32 [2]
							// UnexposedExpr-  - stbtt_uint32
								// IntegerLiteral-  - int [Literal: 0]
							// UnexposedExpr-  - stbtt_uint32
								// IntegerLiteral-  - int [Literal: 0]
				// DeclStmt-  - 
					// VarDecl- pdict - stbtt__buf
						// TypeRef- stbtt__buf - stbtt__buf
				// CallExpr- stbtt__dict_get_ints - void
					// UnexposedExpr- stbtt__dict_get_ints - void (*)(stbtt__buf *, int, int, stbtt_uint32 *)
						// DeclRefExpr- stbtt__dict_get_ints - void (stbtt__buf *, int, int, stbtt_uint32 *)
					// UnaryOperator-  - stbtt__buf * [Unary Operator: AddrOf (&)]
						// DeclRefExpr- fontdict - stbtt__buf
					// IntegerLiteral-  - int [Literal: 18]
					// IntegerLiteral-  - int [Literal: 2]
					// UnexposedExpr- private_loc - stbtt_uint32 *
						// DeclRefExpr- private_loc - stbtt_uint32 [2]
				// IfStmt-  - 
					// BinaryOperator-  - int [Binary Operator: LOr (||)]
						// UnaryOperator-  - int [Unary Operator: LNot (!)]
							// UnexposedExpr-  - stbtt_uint32
								// ArraySubscriptExpr-  - stbtt_uint32
									// UnexposedExpr- private_loc - stbtt_uint32 *
										// DeclRefExpr- private_loc - stbtt_uint32 [2]
									// IntegerLiteral-  - int [Literal: 1]
						// UnaryOperator-  - int [Unary Operator: LNot (!)]
							// UnexposedExpr-  - stbtt_uint32
								// ArraySubscriptExpr-  - stbtt_uint32
									// UnexposedExpr- private_loc - stbtt_uint32 *
										// DeclRefExpr- private_loc - stbtt_uint32 [2]
									// IntegerLiteral-  - int [Literal: 0]
					// ReturnStmt-  - 
						// CallExpr- stbtt__new_buf - stbtt__buf
							// UnexposedExpr- stbtt__new_buf - stbtt__buf (*)(const void *, size_t)
								// DeclRefExpr- stbtt__new_buf - stbtt__buf (const void *, size_t)
							// UnexposedExpr-  - const void *
								// ParenExpr-  - void *
									// CStyleCastExpr-  - void *
										// IntegerLiteral-  - int [Literal: 0]
							// UnexposedExpr-  - size_t
								// IntegerLiteral-  - int [Literal: 0]
				// BinaryOperator-  - stbtt__buf [Binary Operator: Assign (=)]
					// DeclRefExpr- pdict - stbtt__buf
					// CallExpr- stbtt__buf_range - stbtt__buf
						// UnexposedExpr- stbtt__buf_range - stbtt__buf (*)(const stbtt__buf *, int, int)
							// DeclRefExpr- stbtt__buf_range - stbtt__buf (const stbtt__buf *, int, int)
						// UnexposedExpr-  - const stbtt__buf *
							// UnaryOperator-  - stbtt__buf * [Unary Operator: AddrOf (&)]
								// DeclRefExpr- cff - stbtt__buf
						// UnexposedExpr-  - int
							// UnexposedExpr-  - stbtt_uint32
								// ArraySubscriptExpr-  - stbtt_uint32
									// UnexposedExpr- private_loc - stbtt_uint32 *
										// DeclRefExpr- private_loc - stbtt_uint32 [2]
									// IntegerLiteral-  - int [Literal: 1]
						// UnexposedExpr-  - int
							// UnexposedExpr-  - stbtt_uint32
								// ArraySubscriptExpr-  - stbtt_uint32
									// UnexposedExpr- private_loc - stbtt_uint32 *
										// DeclRefExpr- private_loc - stbtt_uint32 [2]
									// IntegerLiteral-  - int [Literal: 0]
				// CallExpr- stbtt__dict_get_ints - void
					// UnexposedExpr- stbtt__dict_get_ints - void (*)(stbtt__buf *, int, int, stbtt_uint32 *)
						// DeclRefExpr- stbtt__dict_get_ints - void (stbtt__buf *, int, int, stbtt_uint32 *)
					// UnaryOperator-  - stbtt__buf * [Unary Operator: AddrOf (&)]
						// DeclRefExpr- pdict - stbtt__buf
					// IntegerLiteral-  - int [Literal: 19]
					// IntegerLiteral-  - int [Literal: 1]
					// UnaryOperator-  - stbtt_uint32 * [Unary Operator: AddrOf (&)]
						// DeclRefExpr- subrsoff - stbtt_uint32
				// IfStmt-  - 
					// UnaryOperator-  - int [Unary Operator: LNot (!)]
						// UnexposedExpr- subrsoff - stbtt_uint32
							// DeclRefExpr- subrsoff - stbtt_uint32
					// ReturnStmt-  - 
						// CallExpr- stbtt__new_buf - stbtt__buf
							// UnexposedExpr- stbtt__new_buf - stbtt__buf (*)(const void *, size_t)
								// DeclRefExpr- stbtt__new_buf - stbtt__buf (const void *, size_t)
							// UnexposedExpr-  - const void *
								// ParenExpr-  - void *
									// CStyleCastExpr-  - void *
										// IntegerLiteral-  - int [Literal: 0]
							// UnexposedExpr-  - size_t
								// IntegerLiteral-  - int [Literal: 0]
				// CallExpr- stbtt__buf_seek - void
					// UnexposedExpr- stbtt__buf_seek - void (*)(stbtt__buf *, int)
						// DeclRefExpr- stbtt__buf_seek - void (stbtt__buf *, int)
					// UnaryOperator-  - stbtt__buf * [Unary Operator: AddrOf (&)]
						// DeclRefExpr- cff - stbtt__buf
					// UnexposedExpr-  - int
						// BinaryOperator-  - unsigned int [Binary Operator: Add (+)]
							// UnexposedExpr-  - stbtt_uint32
								// ArraySubscriptExpr-  - stbtt_uint32
									// UnexposedExpr- private_loc - stbtt_uint32 *
										// DeclRefExpr- private_loc - stbtt_uint32 [2]
									// IntegerLiteral-  - int [Literal: 1]
							// UnexposedExpr- subrsoff - stbtt_uint32
								// DeclRefExpr- subrsoff - stbtt_uint32
				// ReturnStmt-  - 
					// CallExpr- stbtt__cff_get_index - stbtt__buf
						// UnexposedExpr- stbtt__cff_get_index - stbtt__buf (*)(stbtt__buf *)
							// DeclRefExpr- stbtt__cff_get_index - stbtt__buf (stbtt__buf *)
						// UnaryOperator-  - stbtt__buf * [Unary Operator: AddrOf (&)]
							// DeclRefExpr- cff - stbtt__buf
		// FunctionDecl- stbtt_InitFont_internal - int (stbtt_fontinfo *, unsigned char *, int)
			// ParmDecl- info - stbtt_fontinfo *
				// TypeRef- stbtt_fontinfo - stbtt_fontinfo
			// ParmDecl- data - unsigned char *
			// ParmDecl- fontstart - int
			// CompoundStmt-  - 
				// DeclStmt-  - 
					// VarDecl- cmap - stbtt_uint32
						// TypeRef- stbtt_uint32 - stbtt_uint32
					// VarDecl- t - stbtt_uint32
						// TypeRef- stbtt_uint32 - stbtt_uint32
				// DeclStmt-  - 
					// VarDecl- i - stbtt_int32
						// TypeRef- stbtt_int32 - stbtt_int32
					// VarDecl- numTables - stbtt_int32
						// TypeRef- stbtt_int32 - stbtt_int32
				// BinaryOperator-  - unsigned char * [Binary Operator: Assign (=)]
					// MemberRefExpr- data - unsigned char *
						// UnexposedExpr- info - stbtt_fontinfo *
							// DeclRefExpr- info - stbtt_fontinfo *
					// UnexposedExpr- data - unsigned char *
						// DeclRefExpr- data - unsigned char *
				// BinaryOperator-  - int [Binary Operator: Assign (=)]
					// MemberRefExpr- fontstart - int
						// UnexposedExpr- info - stbtt_fontinfo *
							// DeclRefExpr- info - stbtt_fontinfo *
					// UnexposedExpr- fontstart - int
						// DeclRefExpr- fontstart - int
				// BinaryOperator-  - stbtt__buf [Binary Operator: Assign (=)]
					// MemberRefExpr- cff - stbtt__buf
						// UnexposedExpr- info - stbtt_fontinfo *
							// DeclRefExpr- info - stbtt_fontinfo *
					// CallExpr- stbtt__new_buf - stbtt__buf
						// UnexposedExpr- stbtt__new_buf - stbtt__buf (*)(const void *, size_t)
							// DeclRefExpr- stbtt__new_buf - stbtt__buf (const void *, size_t)
						// UnexposedExpr-  - const void *
							// ParenExpr-  - void *
								// CStyleCastExpr-  - void *
									// IntegerLiteral-  - int [Literal: 0]
						// UnexposedExpr-  - size_t
							// IntegerLiteral-  - int [Literal: 0]
				// BinaryOperator-  - stbtt_uint32 [Binary Operator: Assign (=)]
					// DeclRefExpr- cmap - stbtt_uint32
					// CallExpr- stbtt__find_table - stbtt_uint32
						// UnexposedExpr- stbtt__find_table - stbtt_uint32 (*)(stbtt_uint8 *, stbtt_uint32, const char *)
							// DeclRefExpr- stbtt__find_table - stbtt_uint32 (stbtt_uint8 *, stbtt_uint32, const char *)
						// UnexposedExpr- data - unsigned char *
							// DeclRefExpr- data - unsigned char *
						// UnexposedExpr- fontstart - stbtt_uint32
							// UnexposedExpr- fontstart - int
								// DeclRefExpr- fontstart - int
						// UnexposedExpr-  - const char *
							// UnexposedExpr-  - char *
								// StringLiteral- "cmap" - char [5] [Literal: cmap]
				// BinaryOperator-  - int [Binary Operator: Assign (=)]
					// MemberRefExpr- loca - int
						// UnexposedExpr- info - stbtt_fontinfo *
							// DeclRefExpr- info - stbtt_fontinfo *
					// UnexposedExpr- stbtt__find_table - int
						// CallExpr- stbtt__find_table - stbtt_uint32
							// UnexposedExpr- stbtt__find_table - stbtt_uint32 (*)(stbtt_uint8 *, stbtt_uint32, const char *)
								// DeclRefExpr- stbtt__find_table - stbtt_uint32 (stbtt_uint8 *, stbtt_uint32, const char *)
							// UnexposedExpr- data - unsigned char *
								// DeclRefExpr- data - unsigned char *
							// UnexposedExpr- fontstart - stbtt_uint32
								// UnexposedExpr- fontstart - int
									// DeclRefExpr- fontstart - int
							// UnexposedExpr-  - const char *
								// UnexposedExpr-  - char *
									// StringLiteral- "loca" - char [5] [Literal: loca]
				// BinaryOperator-  - int [Binary Operator: Assign (=)]
					// MemberRefExpr- head - int
						// UnexposedExpr- info - stbtt_fontinfo *
							// DeclRefExpr- info - stbtt_fontinfo *
					// UnexposedExpr- stbtt__find_table - int
						// CallExpr- stbtt__find_table - stbtt_uint32
							// UnexposedExpr- stbtt__find_table - stbtt_uint32 (*)(stbtt_uint8 *, stbtt_uint32, const char *)
								// DeclRefExpr- stbtt__find_table - stbtt_uint32 (stbtt_uint8 *, stbtt_uint32, const char *)
							// UnexposedExpr- data - unsigned char *
								// DeclRefExpr- data - unsigned char *
							// UnexposedExpr- fontstart - stbtt_uint32
								// UnexposedExpr- fontstart - int
									// DeclRefExpr- fontstart - int
							// UnexposedExpr-  - const char *
								// UnexposedExpr-  - char *
									// StringLiteral- "head" - char [5] [Literal: head]
				// BinaryOperator-  - int [Binary Operator: Assign (=)]
					// MemberRefExpr- glyf - int
						// UnexposedExpr- info - stbtt_fontinfo *
							// DeclRefExpr- info - stbtt_fontinfo *
					// UnexposedExpr- stbtt__find_table - int
						// CallExpr- stbtt__find_table - stbtt_uint32
							// UnexposedExpr- stbtt__find_table - stbtt_uint32 (*)(stbtt_uint8 *, stbtt_uint32, const char *)
								// DeclRefExpr- stbtt__find_table - stbtt_uint32 (stbtt_uint8 *, stbtt_uint32, const char *)
							// UnexposedExpr- data - unsigned char *
								// DeclRefExpr- data - unsigned char *
							// UnexposedExpr- fontstart - stbtt_uint32
								// UnexposedExpr- fontstart - int
									// DeclRefExpr- fontstart - int
							// UnexposedExpr-  - const char *
								// UnexposedExpr-  - char *
									// StringLiteral- "glyf" - char [5] [Literal: glyf]
				// BinaryOperator-  - int [Binary Operator: Assign (=)]
					// MemberRefExpr- hhea - int
						// UnexposedExpr- info - stbtt_fontinfo *
							// DeclRefExpr- info - stbtt_fontinfo *
					// UnexposedExpr- stbtt__find_table - int
						// CallExpr- stbtt__find_table - stbtt_uint32
							// UnexposedExpr- stbtt__find_table - stbtt_uint32 (*)(stbtt_uint8 *, stbtt_uint32, const char *)
								// DeclRefExpr- stbtt__find_table - stbtt_uint32 (stbtt_uint8 *, stbtt_uint32, const char *)
							// UnexposedExpr- data - unsigned char *
								// DeclRefExpr- data - unsigned char *
							// UnexposedExpr- fontstart - stbtt_uint32
								// UnexposedExpr- fontstart - int
									// DeclRefExpr- fontstart - int
							// UnexposedExpr-  - const char *
								// UnexposedExpr-  - char *
									// StringLiteral- "hhea" - char [5] [Literal: hhea]
				// BinaryOperator-  - int [Binary Operator: Assign (=)]
					// MemberRefExpr- hmtx - int
						// UnexposedExpr- info - stbtt_fontinfo *
							// DeclRefExpr- info - stbtt_fontinfo *
					// UnexposedExpr- stbtt__find_table - int
						// CallExpr- stbtt__find_table - stbtt_uint32
							// UnexposedExpr- stbtt__find_table - stbtt_uint32 (*)(stbtt_uint8 *, stbtt_uint32, const char *)
								// DeclRefExpr- stbtt__find_table - stbtt_uint32 (stbtt_uint8 *, stbtt_uint32, const char *)
							// UnexposedExpr- data - unsigned char *
								// DeclRefExpr- data - unsigned char *
							// UnexposedExpr- fontstart - stbtt_uint32
								// UnexposedExpr- fontstart - int
									// DeclRefExpr- fontstart - int
							// UnexposedExpr-  - const char *
								// UnexposedExpr-  - char *
									// StringLiteral- "hmtx" - char [5] [Literal: hmtx]
				// BinaryOperator-  - int [Binary Operator: Assign (=)]
					// MemberRefExpr- kern - int
						// UnexposedExpr- info - stbtt_fontinfo *
							// DeclRefExpr- info - stbtt_fontinfo *
					// UnexposedExpr- stbtt__find_table - int
						// CallExpr- stbtt__find_table - stbtt_uint32
							// UnexposedExpr- stbtt__find_table - stbtt_uint32 (*)(stbtt_uint8 *, stbtt_uint32, const char *)
								// DeclRefExpr- stbtt__find_table - stbtt_uint32 (stbtt_uint8 *, stbtt_uint32, const char *)
							// UnexposedExpr- data - unsigned char *
								// DeclRefExpr- data - unsigned char *
							// UnexposedExpr- fontstart - stbtt_uint32
								// UnexposedExpr- fontstart - int
									// DeclRefExpr- fontstart - int
							// UnexposedExpr-  - const char *
								// UnexposedExpr-  - char *
									// StringLiteral- "kern" - char [5] [Literal: kern]
				// BinaryOperator-  - int [Binary Operator: Assign (=)]
					// MemberRefExpr- gpos - int
						// UnexposedExpr- info - stbtt_fontinfo *
							// DeclRefExpr- info - stbtt_fontinfo *
					// UnexposedExpr- stbtt__find_table - int
						// CallExpr- stbtt__find_table - stbtt_uint32
							// UnexposedExpr- stbtt__find_table - stbtt_uint32 (*)(stbtt_uint8 *, stbtt_uint32, const char *)
								// DeclRefExpr- stbtt__find_table - stbtt_uint32 (stbtt_uint8 *, stbtt_uint32, const char *)
							// UnexposedExpr- data - unsigned char *
								// DeclRefExpr- data - unsigned char *
							// UnexposedExpr- fontstart - stbtt_uint32
								// UnexposedExpr- fontstart - int
									// DeclRefExpr- fontstart - int
							// UnexposedExpr-  - const char *
								// UnexposedExpr-  - char *
									// StringLiteral- "GPOS" - char [5] [Literal: GPOS]
				// IfStmt-  - 
					// BinaryOperator-  - int [Binary Operator: LOr (||)]
						// BinaryOperator-  - int [Binary Operator: LOr (||)]
							// BinaryOperator-  - int [Binary Operator: LOr (||)]
								// UnaryOperator-  - int [Unary Operator: LNot (!)]
									// UnexposedExpr- cmap - stbtt_uint32
										// DeclRefExpr- cmap - stbtt_uint32
								// UnaryOperator-  - int [Unary Operator: LNot (!)]
									// UnexposedExpr- head - int
										// MemberRefExpr- head - int
											// UnexposedExpr- info - stbtt_fontinfo *
												// DeclRefExpr- info - stbtt_fontinfo *
							// UnaryOperator-  - int [Unary Operator: LNot (!)]
								// UnexposedExpr- hhea - int
									// MemberRefExpr- hhea - int
										// UnexposedExpr- info - stbtt_fontinfo *
											// DeclRefExpr- info - stbtt_fontinfo *
						// UnaryOperator-  - int [Unary Operator: LNot (!)]
							// UnexposedExpr- hmtx - int
								// MemberRefExpr- hmtx - int
									// UnexposedExpr- info - stbtt_fontinfo *
										// DeclRefExpr- info - stbtt_fontinfo *
					// ReturnStmt-  - 
						// IntegerLiteral-  - int [Literal: 0]
				// IfStmt-  - 
					// UnexposedExpr- glyf - int
						// MemberRefExpr- glyf - int
							// UnexposedExpr- info - stbtt_fontinfo *
								// DeclRefExpr- info - stbtt_fontinfo *
					// CompoundStmt-  - 
						// IfStmt-  - 
							// UnaryOperator-  - int [Unary Operator: LNot (!)]
								// UnexposedExpr- loca - int
									// MemberRefExpr- loca - int
										// UnexposedExpr- info - stbtt_fontinfo *
											// DeclRefExpr- info - stbtt_fontinfo *
							// ReturnStmt-  - 
								// IntegerLiteral-  - int [Literal: 0]
					// CompoundStmt-  - 
						// DeclStmt-  - 
							// VarDecl- b - stbtt__buf
								// TypeRef- stbtt__buf - stbtt__buf
							// VarDecl- topdict - stbtt__buf
								// TypeRef- stbtt__buf - stbtt__buf
							// VarDecl- topdictidx - stbtt__buf
								// TypeRef- stbtt__buf - stbtt__buf
						// DeclStmt-  - 
							// VarDecl- cstype - stbtt_uint32
								// TypeRef- stbtt_uint32 - stbtt_uint32
								// UnexposedExpr-  - stbtt_uint32
									// IntegerLiteral-  - int [Literal: 2]
							// VarDecl- charstrings - stbtt_uint32
								// TypeRef- stbtt_uint32 - stbtt_uint32
								// UnexposedExpr-  - stbtt_uint32
									// IntegerLiteral-  - int [Literal: 0]
							// VarDecl- fdarrayoff - stbtt_uint32
								// TypeRef- stbtt_uint32 - stbtt_uint32
								// UnexposedExpr-  - stbtt_uint32
									// IntegerLiteral-  - int [Literal: 0]
							// VarDecl- fdselectoff - stbtt_uint32
								// TypeRef- stbtt_uint32 - stbtt_uint32
								// UnexposedExpr-  - stbtt_uint32
									// IntegerLiteral-  - int [Literal: 0]
						// DeclStmt-  - 
							// VarDecl- cff - stbtt_uint32
								// TypeRef- stbtt_uint32 - stbtt_uint32
						// BinaryOperator-  - stbtt_uint32 [Binary Operator: Assign (=)]
							// DeclRefExpr- cff - stbtt_uint32
							// CallExpr- stbtt__find_table - stbtt_uint32
								// UnexposedExpr- stbtt__find_table - stbtt_uint32 (*)(stbtt_uint8 *, stbtt_uint32, const char *)
									// DeclRefExpr- stbtt__find_table - stbtt_uint32 (stbtt_uint8 *, stbtt_uint32, const char *)
								// UnexposedExpr- data - unsigned char *
									// DeclRefExpr- data - unsigned char *
								// UnexposedExpr- fontstart - stbtt_uint32
									// UnexposedExpr- fontstart - int
										// DeclRefExpr- fontstart - int
								// UnexposedExpr-  - const char *
									// UnexposedExpr-  - char *
										// StringLiteral- "CFF " - char [5] [Literal: CFF ]
						// IfStmt-  - 
							// UnaryOperator-  - int [Unary Operator: LNot (!)]
								// UnexposedExpr- cff - stbtt_uint32
									// DeclRefExpr- cff - stbtt_uint32
							// ReturnStmt-  - 
								// IntegerLiteral-  - int [Literal: 0]
						// BinaryOperator-  - stbtt__buf [Binary Operator: Assign (=)]
							// MemberRefExpr- fontdicts - stbtt__buf
								// UnexposedExpr- info - stbtt_fontinfo *
									// DeclRefExpr- info - stbtt_fontinfo *
							// CallExpr- stbtt__new_buf - stbtt__buf
								// UnexposedExpr- stbtt__new_buf - stbtt__buf (*)(const void *, size_t)
									// DeclRefExpr- stbtt__new_buf - stbtt__buf (const void *, size_t)
								// UnexposedExpr-  - const void *
									// ParenExpr-  - void *
										// CStyleCastExpr-  - void *
											// IntegerLiteral-  - int [Literal: 0]
								// UnexposedExpr-  - size_t
									// IntegerLiteral-  - int [Literal: 0]
						// BinaryOperator-  - stbtt__buf [Binary Operator: Assign (=)]
							// MemberRefExpr- fdselect - stbtt__buf
								// UnexposedExpr- info - stbtt_fontinfo *
									// DeclRefExpr- info - stbtt_fontinfo *
							// CallExpr- stbtt__new_buf - stbtt__buf
								// UnexposedExpr- stbtt__new_buf - stbtt__buf (*)(const void *, size_t)
									// DeclRefExpr- stbtt__new_buf - stbtt__buf (const void *, size_t)
								// UnexposedExpr-  - const void *
									// ParenExpr-  - void *
										// CStyleCastExpr-  - void *
											// IntegerLiteral-  - int [Literal: 0]
								// UnexposedExpr-  - size_t
									// IntegerLiteral-  - int [Literal: 0]
						// BinaryOperator-  - stbtt__buf [Binary Operator: Assign (=)]
							// MemberRefExpr- cff - stbtt__buf
								// UnexposedExpr- info - stbtt_fontinfo *
									// DeclRefExpr- info - stbtt_fontinfo *
							// CallExpr- stbtt__new_buf - stbtt__buf
								// UnexposedExpr- stbtt__new_buf - stbtt__buf (*)(const void *, size_t)
									// DeclRefExpr- stbtt__new_buf - stbtt__buf (const void *, size_t)
								// UnexposedExpr-  - const void *
									// BinaryOperator-  - unsigned char * [Binary Operator: Add (+)]
										// UnexposedExpr- data - unsigned char *
											// DeclRefExpr- data - unsigned char *
										// UnexposedExpr- cff - stbtt_uint32
											// DeclRefExpr- cff - stbtt_uint32
								// UnexposedExpr-  - size_t
									// BinaryOperator-  - int [Binary Operator: Mul (*)]
										// BinaryOperator-  - int [Binary Operator: Mul (*)]
											// IntegerLiteral-  - int [Literal: 512]
											// IntegerLiteral-  - int [Literal: 1024]
										// IntegerLiteral-  - int [Literal: 1024]
						// BinaryOperator-  - stbtt__buf [Binary Operator: Assign (=)]
							// DeclRefExpr- b - stbtt__buf
							// UnexposedExpr- cff - stbtt__buf
								// MemberRefExpr- cff - stbtt__buf
									// UnexposedExpr- info - stbtt_fontinfo *
										// DeclRefExpr- info - stbtt_fontinfo *
						// CallExpr- stbtt__buf_skip - void
							// UnexposedExpr- stbtt__buf_skip - void (*)(stbtt__buf *, int)
								// DeclRefExpr- stbtt__buf_skip - void (stbtt__buf *, int)
							// UnaryOperator-  - stbtt__buf * [Unary Operator: AddrOf (&)]
								// DeclRefExpr- b - stbtt__buf
							// IntegerLiteral-  - int [Literal: 2]
						// CallExpr- stbtt__buf_seek - void
							// UnexposedExpr- stbtt__buf_seek - void (*)(stbtt__buf *, int)
								// DeclRefExpr- stbtt__buf_seek - void (stbtt__buf *, int)
							// UnaryOperator-  - stbtt__buf * [Unary Operator: AddrOf (&)]
								// DeclRefExpr- b - stbtt__buf
							// UnexposedExpr- stbtt__buf_get8 - int
								// CallExpr- stbtt__buf_get8 - stbtt_uint8
									// UnexposedExpr- stbtt__buf_get8 - stbtt_uint8 (*)(stbtt__buf *)
										// DeclRefExpr- stbtt__buf_get8 - stbtt_uint8 (stbtt__buf *)
									// UnaryOperator-  - stbtt__buf * [Unary Operator: AddrOf (&)]
										// DeclRefExpr- b - stbtt__buf
						// CallExpr- stbtt__cff_get_index - stbtt__buf
							// UnexposedExpr- stbtt__cff_get_index - stbtt__buf (*)(stbtt__buf *)
								// DeclRefExpr- stbtt__cff_get_index - stbtt__buf (stbtt__buf *)
							// UnaryOperator-  - stbtt__buf * [Unary Operator: AddrOf (&)]
								// DeclRefExpr- b - stbtt__buf
						// BinaryOperator-  - stbtt__buf [Binary Operator: Assign (=)]
							// DeclRefExpr- topdictidx - stbtt__buf
							// CallExpr- stbtt__cff_get_index - stbtt__buf
								// UnexposedExpr- stbtt__cff_get_index - stbtt__buf (*)(stbtt__buf *)
									// DeclRefExpr- stbtt__cff_get_index - stbtt__buf (stbtt__buf *)
								// UnaryOperator-  - stbtt__buf * [Unary Operator: AddrOf (&)]
									// DeclRefExpr- b - stbtt__buf
						// BinaryOperator-  - stbtt__buf [Binary Operator: Assign (=)]
							// DeclRefExpr- topdict - stbtt__buf
							// CallExpr- stbtt__cff_index_get - stbtt__buf
								// UnexposedExpr- stbtt__cff_index_get - stbtt__buf (*)(stbtt__buf, int)
									// DeclRefExpr- stbtt__cff_index_get - stbtt__buf (stbtt__buf, int)
								// UnexposedExpr- topdictidx - stbtt__buf
									// DeclRefExpr- topdictidx - stbtt__buf
								// IntegerLiteral-  - int [Literal: 0]
						// CallExpr- stbtt__cff_get_index - stbtt__buf
							// UnexposedExpr- stbtt__cff_get_index - stbtt__buf (*)(stbtt__buf *)
								// DeclRefExpr- stbtt__cff_get_index - stbtt__buf (stbtt__buf *)
							// UnaryOperator-  - stbtt__buf * [Unary Operator: AddrOf (&)]
								// DeclRefExpr- b - stbtt__buf
						// BinaryOperator-  - stbtt__buf [Binary Operator: Assign (=)]
							// MemberRefExpr- gsubrs - stbtt__buf
								// UnexposedExpr- info - stbtt_fontinfo *
									// DeclRefExpr- info - stbtt_fontinfo *
							// CallExpr- stbtt__cff_get_index - stbtt__buf
								// UnexposedExpr- stbtt__cff_get_index - stbtt__buf (*)(stbtt__buf *)
									// DeclRefExpr- stbtt__cff_get_index - stbtt__buf (stbtt__buf *)
								// UnaryOperator-  - stbtt__buf * [Unary Operator: AddrOf (&)]
									// DeclRefExpr- b - stbtt__buf
						// CallExpr- stbtt__dict_get_ints - void
							// UnexposedExpr- stbtt__dict_get_ints - void (*)(stbtt__buf *, int, int, stbtt_uint32 *)
								// DeclRefExpr- stbtt__dict_get_ints - void (stbtt__buf *, int, int, stbtt_uint32 *)
							// UnaryOperator-  - stbtt__buf * [Unary Operator: AddrOf (&)]
								// DeclRefExpr- topdict - stbtt__buf
							// IntegerLiteral-  - int [Literal: 17]
							// IntegerLiteral-  - int [Literal: 1]
							// UnaryOperator-  - stbtt_uint32 * [Unary Operator: AddrOf (&)]
								// DeclRefExpr- charstrings - stbtt_uint32
						// CallExpr- stbtt__dict_get_ints - void
							// UnexposedExpr- stbtt__dict_get_ints - void (*)(stbtt__buf *, int, int, stbtt_uint32 *)
								// DeclRefExpr- stbtt__dict_get_ints - void (stbtt__buf *, int, int, stbtt_uint32 *)
							// UnaryOperator-  - stbtt__buf * [Unary Operator: AddrOf (&)]
								// DeclRefExpr- topdict - stbtt__buf
							// BinaryOperator-  - int [Binary Operator: Or (|)]
								// IntegerLiteral-  - int [Literal: 256]
								// IntegerLiteral-  - int [Literal: 6]
							// IntegerLiteral-  - int [Literal: 1]
							// UnaryOperator-  - stbtt_uint32 * [Unary Operator: AddrOf (&)]
								// DeclRefExpr- cstype - stbtt_uint32
						// CallExpr- stbtt__dict_get_ints - void
							// UnexposedExpr- stbtt__dict_get_ints - void (*)(stbtt__buf *, int, int, stbtt_uint32 *)
								// DeclRefExpr- stbtt__dict_get_ints - void (stbtt__buf *, int, int, stbtt_uint32 *)
							// UnaryOperator-  - stbtt__buf * [Unary Operator: AddrOf (&)]
								// DeclRefExpr- topdict - stbtt__buf
							// BinaryOperator-  - int [Binary Operator: Or (|)]
								// IntegerLiteral-  - int [Literal: 256]
								// IntegerLiteral-  - int [Literal: 36]
							// IntegerLiteral-  - int [Literal: 1]
							// UnaryOperator-  - stbtt_uint32 * [Unary Operator: AddrOf (&)]
								// DeclRefExpr- fdarrayoff - stbtt_uint32
						// CallExpr- stbtt__dict_get_ints - void
							// UnexposedExpr- stbtt__dict_get_ints - void (*)(stbtt__buf *, int, int, stbtt_uint32 *)
								// DeclRefExpr- stbtt__dict_get_ints - void (stbtt__buf *, int, int, stbtt_uint32 *)
							// UnaryOperator-  - stbtt__buf * [Unary Operator: AddrOf (&)]
								// DeclRefExpr- topdict - stbtt__buf
							// BinaryOperator-  - int [Binary Operator: Or (|)]
								// IntegerLiteral-  - int [Literal: 256]
								// IntegerLiteral-  - int [Literal: 37]
							// IntegerLiteral-  - int [Literal: 1]
							// UnaryOperator-  - stbtt_uint32 * [Unary Operator: AddrOf (&)]
								// DeclRefExpr- fdselectoff - stbtt_uint32
						// BinaryOperator-  - stbtt__buf [Binary Operator: Assign (=)]
							// MemberRefExpr- subrs - stbtt__buf
								// UnexposedExpr- info - stbtt_fontinfo *
									// DeclRefExpr- info - stbtt_fontinfo *
							// CallExpr- stbtt__get_subrs - stbtt__buf
								// UnexposedExpr- stbtt__get_subrs - stbtt__buf (*)(stbtt__buf, stbtt__buf)
									// DeclRefExpr- stbtt__get_subrs - stbtt__buf (stbtt__buf, stbtt__buf)
								// UnexposedExpr- b - stbtt__buf
									// DeclRefExpr- b - stbtt__buf
								// UnexposedExpr- topdict - stbtt__buf
									// DeclRefExpr- topdict - stbtt__buf
						// IfStmt-  - 
							// BinaryOperator-  - int [Binary Operator: NE (!=)]
								// UnexposedExpr- cstype - stbtt_uint32
									// DeclRefExpr- cstype - stbtt_uint32
								// UnexposedExpr-  - unsigned int
									// IntegerLiteral-  - int [Literal: 2]
							// ReturnStmt-  - 
								// IntegerLiteral-  - int [Literal: 0]
						// IfStmt-  - 
							// BinaryOperator-  - int [Binary Operator: EQ (==)]
								// UnexposedExpr- charstrings - stbtt_uint32
									// DeclRefExpr- charstrings - stbtt_uint32
								// UnexposedExpr-  - unsigned int
									// IntegerLiteral-  - int [Literal: 0]
							// ReturnStmt-  - 
								// IntegerLiteral-  - int [Literal: 0]
						// IfStmt-  - 
							// UnexposedExpr- fdarrayoff - stbtt_uint32
								// DeclRefExpr- fdarrayoff - stbtt_uint32
							// CompoundStmt-  - 
								// IfStmt-  - 
									// UnaryOperator-  - int [Unary Operator: LNot (!)]
										// UnexposedExpr- fdselectoff - stbtt_uint32
											// DeclRefExpr- fdselectoff - stbtt_uint32
									// ReturnStmt-  - 
										// IntegerLiteral-  - int [Literal: 0]
								// CallExpr- stbtt__buf_seek - void
									// UnexposedExpr- stbtt__buf_seek - void (*)(stbtt__buf *, int)
										// DeclRefExpr- stbtt__buf_seek - void (stbtt__buf *, int)
									// UnaryOperator-  - stbtt__buf * [Unary Operator: AddrOf (&)]
										// DeclRefExpr- b - stbtt__buf
									// UnexposedExpr- fdarrayoff - int
										// UnexposedExpr- fdarrayoff - stbtt_uint32
											// DeclRefExpr- fdarrayoff - stbtt_uint32
								// BinaryOperator-  - stbtt__buf [Binary Operator: Assign (=)]
									// MemberRefExpr- fontdicts - stbtt__buf
										// UnexposedExpr- info - stbtt_fontinfo *
											// DeclRefExpr- info - stbtt_fontinfo *
									// CallExpr- stbtt__cff_get_index - stbtt__buf
										// UnexposedExpr- stbtt__cff_get_index - stbtt__buf (*)(stbtt__buf *)
											// DeclRefExpr- stbtt__cff_get_index - stbtt__buf (stbtt__buf *)
										// UnaryOperator-  - stbtt__buf * [Unary Operator: AddrOf (&)]
											// DeclRefExpr- b - stbtt__buf
								// BinaryOperator-  - stbtt__buf [Binary Operator: Assign (=)]
									// MemberRefExpr- fdselect - stbtt__buf
										// UnexposedExpr- info - stbtt_fontinfo *
											// DeclRefExpr- info - stbtt_fontinfo *
									// CallExpr- stbtt__buf_range - stbtt__buf
										// UnexposedExpr- stbtt__buf_range - stbtt__buf (*)(const stbtt__buf *, int, int)
											// DeclRefExpr- stbtt__buf_range - stbtt__buf (const stbtt__buf *, int, int)
										// UnexposedExpr-  - const stbtt__buf *
											// UnaryOperator-  - stbtt__buf * [Unary Operator: AddrOf (&)]
												// DeclRefExpr- b - stbtt__buf
										// UnexposedExpr- fdselectoff - int
											// UnexposedExpr- fdselectoff - stbtt_uint32
												// DeclRefExpr- fdselectoff - stbtt_uint32
										// UnexposedExpr-  - int
											// BinaryOperator-  - unsigned int [Binary Operator: Sub (-)]
												// UnexposedExpr- size - unsigned int
													// UnexposedExpr- size - int
														// MemberRefExpr- size - int
															// DeclRefExpr- b - stbtt__buf
												// UnexposedExpr- fdselectoff - stbtt_uint32
													// DeclRefExpr- fdselectoff - stbtt_uint32
						// CallExpr- stbtt__buf_seek - void
							// UnexposedExpr- stbtt__buf_seek - void (*)(stbtt__buf *, int)
								// DeclRefExpr- stbtt__buf_seek - void (stbtt__buf *, int)
							// UnaryOperator-  - stbtt__buf * [Unary Operator: AddrOf (&)]
								// DeclRefExpr- b - stbtt__buf
							// UnexposedExpr- charstrings - int
								// UnexposedExpr- charstrings - stbtt_uint32
									// DeclRefExpr- charstrings - stbtt_uint32
						// BinaryOperator-  - stbtt__buf [Binary Operator: Assign (=)]
							// MemberRefExpr- charstrings - stbtt__buf
								// UnexposedExpr- info - stbtt_fontinfo *
									// DeclRefExpr- info - stbtt_fontinfo *
							// CallExpr- stbtt__cff_get_index - stbtt__buf
								// UnexposedExpr- stbtt__cff_get_index - stbtt__buf (*)(stbtt__buf *)
									// DeclRefExpr- stbtt__cff_get_index - stbtt__buf (stbtt__buf *)
								// UnaryOperator-  - stbtt__buf * [Unary Operator: AddrOf (&)]
									// DeclRefExpr- b - stbtt__buf
				// BinaryOperator-  - stbtt_uint32 [Binary Operator: Assign (=)]
					// DeclRefExpr- t - stbtt_uint32
					// CallExpr- stbtt__find_table - stbtt_uint32
						// UnexposedExpr- stbtt__find_table - stbtt_uint32 (*)(stbtt_uint8 *, stbtt_uint32, const char *)
							// DeclRefExpr- stbtt__find_table - stbtt_uint32 (stbtt_uint8 *, stbtt_uint32, const char *)
						// UnexposedExpr- data - unsigned char *
							// DeclRefExpr- data - unsigned char *
						// UnexposedExpr- fontstart - stbtt_uint32
							// UnexposedExpr- fontstart - int
								// DeclRefExpr- fontstart - int
						// UnexposedExpr-  - const char *
							// UnexposedExpr-  - char *
								// StringLiteral- "maxp" - char [5] [Literal: maxp]
				// IfStmt-  - 
					// UnexposedExpr- t - stbtt_uint32
						// DeclRefExpr- t - stbtt_uint32
					// BinaryOperator-  - int [Binary Operator: Assign (=)]
						// MemberRefExpr- numGlyphs - int
							// UnexposedExpr- info - stbtt_fontinfo *
								// DeclRefExpr- info - stbtt_fontinfo *
						// UnexposedExpr- ttUSHORT - int
							// CallExpr- ttUSHORT - stbtt_uint16
								// UnexposedExpr- ttUSHORT - stbtt_uint16 (*)(stbtt_uint8 *)
									// DeclRefExpr- ttUSHORT - stbtt_uint16 (stbtt_uint8 *)
								// BinaryOperator-  - unsigned char * [Binary Operator: Add (+)]
									// BinaryOperator-  - unsigned char * [Binary Operator: Add (+)]
										// UnexposedExpr- data - unsigned char *
											// DeclRefExpr- data - unsigned char *
										// UnexposedExpr- t - stbtt_uint32
											// DeclRefExpr- t - stbtt_uint32
									// IntegerLiteral-  - int [Literal: 4]
					// BinaryOperator-  - int [Binary Operator: Assign (=)]
						// MemberRefExpr- numGlyphs - int
							// UnexposedExpr- info - stbtt_fontinfo *
								// DeclRefExpr- info - stbtt_fontinfo *
						// IntegerLiteral-  - int [Literal: 65535]
				// BinaryOperator-  - stbtt_int32 [Binary Operator: Assign (=)]
					// DeclRefExpr- numTables - stbtt_int32
					// UnexposedExpr- ttUSHORT - stbtt_int32
						// CallExpr- ttUSHORT - stbtt_uint16
							// UnexposedExpr- ttUSHORT - stbtt_uint16 (*)(stbtt_uint8 *)
								// DeclRefExpr- ttUSHORT - stbtt_uint16 (stbtt_uint8 *)
							// BinaryOperator-  - unsigned char * [Binary Operator: Add (+)]
								// BinaryOperator-  - unsigned char * [Binary Operator: Add (+)]
									// UnexposedExpr- data - unsigned char *
										// DeclRefExpr- data - unsigned char *
									// UnexposedExpr- cmap - stbtt_uint32
										// DeclRefExpr- cmap - stbtt_uint32
								// IntegerLiteral-  - int [Literal: 2]
				// BinaryOperator-  - int [Binary Operator: Assign (=)]
					// MemberRefExpr- index_map - int
						// UnexposedExpr- info - stbtt_fontinfo *
							// DeclRefExpr- info - stbtt_fontinfo *
					// IntegerLiteral-  - int [Literal: 0]
				// ForStmt-  - 
					// BinaryOperator-  - stbtt_int32 [Binary Operator: Assign (=)]
						// DeclRefExpr- i - stbtt_int32
						// IntegerLiteral-  - int [Literal: 0]
					// BinaryOperator-  - int [Binary Operator: LT (<)]
						// UnexposedExpr- i - stbtt_int32
							// DeclRefExpr- i - stbtt_int32
						// UnexposedExpr- numTables - stbtt_int32
							// DeclRefExpr- numTables - stbtt_int32
					// UnaryOperator-  - stbtt_int32 [Unary Operator: PreInc (++)]
						// DeclRefExpr- i - stbtt_int32
					// CompoundStmt-  - 
						// DeclStmt-  - 
							// VarDecl- encoding_record - stbtt_uint32
								// TypeRef- stbtt_uint32 - stbtt_uint32
								// BinaryOperator-  - unsigned int [Binary Operator: Add (+)]
									// BinaryOperator-  - unsigned int [Binary Operator: Add (+)]
										// UnexposedExpr- cmap - stbtt_uint32
											// DeclRefExpr- cmap - stbtt_uint32
										// UnexposedExpr-  - unsigned int
											// IntegerLiteral-  - int [Literal: 4]
									// UnexposedExpr-  - unsigned int
										// BinaryOperator-  - int [Binary Operator: Mul (*)]
											// IntegerLiteral-  - int [Literal: 8]
											// UnexposedExpr- i - stbtt_int32
												// DeclRefExpr- i - stbtt_int32
						// SwitchStmt-  - 
							// UnexposedExpr- ttUSHORT - int
								// CallExpr- ttUSHORT - stbtt_uint16
									// UnexposedExpr- ttUSHORT - stbtt_uint16 (*)(stbtt_uint8 *)
										// DeclRefExpr- ttUSHORT - stbtt_uint16 (stbtt_uint8 *)
									// BinaryOperator-  - unsigned char * [Binary Operator: Add (+)]
										// UnexposedExpr- data - unsigned char *
											// DeclRefExpr- data - unsigned char *
										// UnexposedExpr- encoding_record - stbtt_uint32
											// DeclRefExpr- encoding_record - stbtt_uint32
							// CompoundStmt-  - 
								// CaseStmt-  - 
									// DeclRefExpr- STBTT_PLATFORM_ID_MICROSOFT - int
									// SwitchStmt-  - 
										// UnexposedExpr- ttUSHORT - int
											// CallExpr- ttUSHORT - stbtt_uint16
												// UnexposedExpr- ttUSHORT - stbtt_uint16 (*)(stbtt_uint8 *)
													// DeclRefExpr- ttUSHORT - stbtt_uint16 (stbtt_uint8 *)
												// BinaryOperator-  - unsigned char * [Binary Operator: Add (+)]
													// BinaryOperator-  - unsigned char * [Binary Operator: Add (+)]
														// UnexposedExpr- data - unsigned char *
															// DeclRefExpr- data - unsigned char *
														// UnexposedExpr- encoding_record - stbtt_uint32
															// DeclRefExpr- encoding_record - stbtt_uint32
													// IntegerLiteral-  - int [Literal: 2]
										// CompoundStmt-  - 
											// CaseStmt-  - 
												// DeclRefExpr- STBTT_MS_EID_UNICODE_BMP - int
												// CaseStmt-  - 
													// DeclRefExpr- STBTT_MS_EID_UNICODE_FULL - int
													// BinaryOperator-  - int [Binary Operator: Assign (=)]
														// MemberRefExpr- index_map - int
															// UnexposedExpr- info - stbtt_fontinfo *
																// DeclRefExpr- info - stbtt_fontinfo *
														// UnexposedExpr-  - int
															// BinaryOperator-  - unsigned int [Binary Operator: Add (+)]
																// UnexposedExpr- cmap - stbtt_uint32
																	// DeclRefExpr- cmap - stbtt_uint32
																// CallExpr- ttULONG - stbtt_uint32
																	// UnexposedExpr- ttULONG - stbtt_uint32 (*)(stbtt_uint8 *)
																		// DeclRefExpr- ttULONG - stbtt_uint32 (stbtt_uint8 *)
																	// BinaryOperator-  - unsigned char * [Binary Operator: Add (+)]
																		// BinaryOperator-  - unsigned char * [Binary Operator: Add (+)]
																			// UnexposedExpr- data - unsigned char *
																				// DeclRefExpr- data - unsigned char *
																			// UnexposedExpr- encoding_record - stbtt_uint32
																				// DeclRefExpr- encoding_record - stbtt_uint32
																		// IntegerLiteral-  - int [Literal: 4]
											// BreakStmt-  - 
								// BreakStmt-  - 
								// CaseStmt-  - 
									// DeclRefExpr- STBTT_PLATFORM_ID_UNICODE - int
									// BinaryOperator-  - int [Binary Operator: Assign (=)]
										// MemberRefExpr- index_map - int
											// UnexposedExpr- info - stbtt_fontinfo *
												// DeclRefExpr- info - stbtt_fontinfo *
										// UnexposedExpr-  - int
											// BinaryOperator-  - unsigned int [Binary Operator: Add (+)]
												// UnexposedExpr- cmap - stbtt_uint32
													// DeclRefExpr- cmap - stbtt_uint32
												// CallExpr- ttULONG - stbtt_uint32
													// UnexposedExpr- ttULONG - stbtt_uint32 (*)(stbtt_uint8 *)
														// DeclRefExpr- ttULONG - stbtt_uint32 (stbtt_uint8 *)
													// BinaryOperator-  - unsigned char * [Binary Operator: Add (+)]
														// BinaryOperator-  - unsigned char * [Binary Operator: Add (+)]
															// UnexposedExpr- data - unsigned char *
																// DeclRefExpr- data - unsigned char *
															// UnexposedExpr- encoding_record - stbtt_uint32
																// DeclRefExpr- encoding_record - stbtt_uint32
														// IntegerLiteral-  - int [Literal: 4]
								// BreakStmt-  - 
				// IfStmt-  - 
					// BinaryOperator-  - int [Binary Operator: EQ (==)]
						// UnexposedExpr- index_map - int
							// MemberRefExpr- index_map - int
								// UnexposedExpr- info - stbtt_fontinfo *
									// DeclRefExpr- info - stbtt_fontinfo *
						// IntegerLiteral-  - int [Literal: 0]
					// ReturnStmt-  - 
						// IntegerLiteral-  - int [Literal: 0]
				// BinaryOperator-  - int [Binary Operator: Assign (=)]
					// MemberRefExpr- indexToLocFormat - int
						// UnexposedExpr- info - stbtt_fontinfo *
							// DeclRefExpr- info - stbtt_fontinfo *
					// UnexposedExpr- ttUSHORT - int
						// CallExpr- ttUSHORT - stbtt_uint16
							// UnexposedExpr- ttUSHORT - stbtt_uint16 (*)(stbtt_uint8 *)
								// DeclRefExpr- ttUSHORT - stbtt_uint16 (stbtt_uint8 *)
							// BinaryOperator-  - unsigned char * [Binary Operator: Add (+)]
								// BinaryOperator-  - unsigned char * [Binary Operator: Add (+)]
									// UnexposedExpr- data - unsigned char *
										// DeclRefExpr- data - unsigned char *
									// UnexposedExpr- head - int
										// MemberRefExpr- head - int
											// UnexposedExpr- info - stbtt_fontinfo *
												// DeclRefExpr- info - stbtt_fontinfo *
								// IntegerLiteral-  - int [Literal: 50]
				// ReturnStmt-  - 
					// IntegerLiteral-  - int [Literal: 1]
		// FunctionDecl- stbtt_FindGlyphIndex - int (const stbtt_fontinfo *, int)
			// ParmDecl- info - const stbtt_fontinfo *
				// TypeRef- stbtt_fontinfo - stbtt_fontinfo
			// ParmDecl- unicode_codepoint - int
			// CompoundStmt-  - 
				// DeclStmt-  - 
					// VarDecl- data - stbtt_uint8 *
						// TypeRef- stbtt_uint8 - stbtt_uint8
						// UnexposedExpr- data - unsigned char *
							// MemberRefExpr- data - unsigned char *const
								// UnexposedExpr- info - const stbtt_fontinfo *
									// DeclRefExpr- info - const stbtt_fontinfo *
				// DeclStmt-  - 
					// VarDecl- index_map - stbtt_uint32
						// TypeRef- stbtt_uint32 - stbtt_uint32
						// UnexposedExpr- index_map - stbtt_uint32
							// UnexposedExpr- index_map - int
								// MemberRefExpr- index_map - const int
									// UnexposedExpr- info - const stbtt_fontinfo *
										// DeclRefExpr- info - const stbtt_fontinfo *
				// DeclStmt-  - 
					// VarDecl- format - stbtt_uint16
						// TypeRef- stbtt_uint16 - stbtt_uint16
						// CallExpr- ttUSHORT - stbtt_uint16
							// UnexposedExpr- ttUSHORT - stbtt_uint16 (*)(stbtt_uint8 *)
								// DeclRefExpr- ttUSHORT - stbtt_uint16 (stbtt_uint8 *)
							// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
								// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
									// UnexposedExpr- data - stbtt_uint8 *
										// DeclRefExpr- data - stbtt_uint8 *
									// UnexposedExpr- index_map - stbtt_uint32
										// DeclRefExpr- index_map - stbtt_uint32
								// IntegerLiteral-  - int [Literal: 0]
				// IfStmt-  - 
					// BinaryOperator-  - int [Binary Operator: EQ (==)]
						// UnexposedExpr- format - int
							// UnexposedExpr- format - stbtt_uint16
								// DeclRefExpr- format - stbtt_uint16
						// IntegerLiteral-  - int [Literal: 0]
					// CompoundStmt-  - 
						// DeclStmt-  - 
							// VarDecl- bytes - stbtt_int32
								// TypeRef- stbtt_int32 - stbtt_int32
								// UnexposedExpr- ttUSHORT - stbtt_int32
									// CallExpr- ttUSHORT - stbtt_uint16
										// UnexposedExpr- ttUSHORT - stbtt_uint16 (*)(stbtt_uint8 *)
											// DeclRefExpr- ttUSHORT - stbtt_uint16 (stbtt_uint8 *)
										// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
											// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
												// UnexposedExpr- data - stbtt_uint8 *
													// DeclRefExpr- data - stbtt_uint8 *
												// UnexposedExpr- index_map - stbtt_uint32
													// DeclRefExpr- index_map - stbtt_uint32
											// IntegerLiteral-  - int [Literal: 2]
						// IfStmt-  - 
							// BinaryOperator-  - int [Binary Operator: LT (<)]
								// UnexposedExpr- unicode_codepoint - int
									// DeclRefExpr- unicode_codepoint - int
								// BinaryOperator-  - int [Binary Operator: Sub (-)]
									// UnexposedExpr- bytes - stbtt_int32
										// DeclRefExpr- bytes - stbtt_int32
									// IntegerLiteral-  - int [Literal: 6]
							// ReturnStmt-  - 
								// UnexposedExpr-  - int
									// UnexposedExpr-  - stbtt_uint8
										// ParenExpr-  - stbtt_uint8
											// UnaryOperator-  - stbtt_uint8 [Unary Operator: Deref (*)]
												// CStyleCastExpr-  - stbtt_uint8 *
													// TypeRef- stbtt_uint8 - stbtt_uint8
													// ParenExpr-  - stbtt_uint8 *
														// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
															// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
																// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
																	// UnexposedExpr- data - stbtt_uint8 *
																		// DeclRefExpr- data - stbtt_uint8 *
																	// UnexposedExpr- index_map - stbtt_uint32
																		// DeclRefExpr- index_map - stbtt_uint32
																// IntegerLiteral-  - int [Literal: 6]
															// UnexposedExpr- unicode_codepoint - int
																// DeclRefExpr- unicode_codepoint - int
						// ReturnStmt-  - 
							// IntegerLiteral-  - int [Literal: 0]
					// IfStmt-  - 
						// BinaryOperator-  - int [Binary Operator: EQ (==)]
							// UnexposedExpr- format - int
								// UnexposedExpr- format - stbtt_uint16
									// DeclRefExpr- format - stbtt_uint16
							// IntegerLiteral-  - int [Literal: 6]
						// CompoundStmt-  - 
							// DeclStmt-  - 
								// VarDecl- first - stbtt_uint32
									// TypeRef- stbtt_uint32 - stbtt_uint32
									// UnexposedExpr- ttUSHORT - stbtt_uint32
										// CallExpr- ttUSHORT - stbtt_uint16
											// UnexposedExpr- ttUSHORT - stbtt_uint16 (*)(stbtt_uint8 *)
												// DeclRefExpr- ttUSHORT - stbtt_uint16 (stbtt_uint8 *)
											// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
												// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
													// UnexposedExpr- data - stbtt_uint8 *
														// DeclRefExpr- data - stbtt_uint8 *
													// UnexposedExpr- index_map - stbtt_uint32
														// DeclRefExpr- index_map - stbtt_uint32
												// IntegerLiteral-  - int [Literal: 6]
							// DeclStmt-  - 
								// VarDecl- count - stbtt_uint32
									// TypeRef- stbtt_uint32 - stbtt_uint32
									// UnexposedExpr- ttUSHORT - stbtt_uint32
										// CallExpr- ttUSHORT - stbtt_uint16
											// UnexposedExpr- ttUSHORT - stbtt_uint16 (*)(stbtt_uint8 *)
												// DeclRefExpr- ttUSHORT - stbtt_uint16 (stbtt_uint8 *)
											// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
												// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
													// UnexposedExpr- data - stbtt_uint8 *
														// DeclRefExpr- data - stbtt_uint8 *
													// UnexposedExpr- index_map - stbtt_uint32
														// DeclRefExpr- index_map - stbtt_uint32
												// IntegerLiteral-  - int [Literal: 8]
							// IfStmt-  - 
								// BinaryOperator-  - int [Binary Operator: LAnd (&&)]
									// BinaryOperator-  - int [Binary Operator: GE (>=)]
										// CStyleCastExpr-  - stbtt_uint32
											// TypeRef- stbtt_uint32 - stbtt_uint32
											// UnexposedExpr- unicode_codepoint - int
												// DeclRefExpr- unicode_codepoint - int
										// UnexposedExpr- first - stbtt_uint32
											// DeclRefExpr- first - stbtt_uint32
									// BinaryOperator-  - int [Binary Operator: LT (<)]
										// CStyleCastExpr-  - stbtt_uint32
											// TypeRef- stbtt_uint32 - stbtt_uint32
											// UnexposedExpr- unicode_codepoint - int
												// DeclRefExpr- unicode_codepoint - int
										// BinaryOperator-  - unsigned int [Binary Operator: Add (+)]
											// UnexposedExpr- first - stbtt_uint32
												// DeclRefExpr- first - stbtt_uint32
											// UnexposedExpr- count - stbtt_uint32
												// DeclRefExpr- count - stbtt_uint32
								// ReturnStmt-  - 
									// UnexposedExpr- ttUSHORT - int
										// CallExpr- ttUSHORT - stbtt_uint16
											// UnexposedExpr- ttUSHORT - stbtt_uint16 (*)(stbtt_uint8 *)
												// DeclRefExpr- ttUSHORT - stbtt_uint16 (stbtt_uint8 *)
											// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
												// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
													// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
														// UnexposedExpr- data - stbtt_uint8 *
															// DeclRefExpr- data - stbtt_uint8 *
														// UnexposedExpr- index_map - stbtt_uint32
															// DeclRefExpr- index_map - stbtt_uint32
													// IntegerLiteral-  - int [Literal: 10]
												// BinaryOperator-  - unsigned int [Binary Operator: Mul (*)]
													// ParenExpr-  - unsigned int
														// BinaryOperator-  - unsigned int [Binary Operator: Sub (-)]
															// UnexposedExpr- unicode_codepoint - unsigned int
																// UnexposedExpr- unicode_codepoint - int
																	// DeclRefExpr- unicode_codepoint - int
															// UnexposedExpr- first - stbtt_uint32
																// DeclRefExpr- first - stbtt_uint32
													// UnexposedExpr-  - unsigned int
														// IntegerLiteral-  - int [Literal: 2]
							// ReturnStmt-  - 
								// IntegerLiteral-  - int [Literal: 0]
						// IfStmt-  - 
							// BinaryOperator-  - int [Binary Operator: EQ (==)]
								// UnexposedExpr- format - int
									// UnexposedExpr- format - stbtt_uint16
										// DeclRefExpr- format - stbtt_uint16
								// IntegerLiteral-  - int [Literal: 2]
							// CompoundStmt-  - 
								// NullStmt-  - 
								// ReturnStmt-  - 
									// IntegerLiteral-  - int [Literal: 0]
							// IfStmt-  - 
								// BinaryOperator-  - int [Binary Operator: EQ (==)]
									// UnexposedExpr- format - int
										// UnexposedExpr- format - stbtt_uint16
											// DeclRefExpr- format - stbtt_uint16
									// IntegerLiteral-  - int [Literal: 4]
								// CompoundStmt-  - 
									// DeclStmt-  - 
										// VarDecl- segcount - stbtt_uint16
											// TypeRef- stbtt_uint16 - stbtt_uint16
											// UnexposedExpr-  - stbtt_uint16
												// BinaryOperator-  - int [Binary Operator: Shr (>>)]
													// UnexposedExpr- ttUSHORT - int
														// CallExpr- ttUSHORT - stbtt_uint16
															// UnexposedExpr- ttUSHORT - stbtt_uint16 (*)(stbtt_uint8 *)
																// DeclRefExpr- ttUSHORT - stbtt_uint16 (stbtt_uint8 *)
															// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
																// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
																	// UnexposedExpr- data - stbtt_uint8 *
																		// DeclRefExpr- data - stbtt_uint8 *
																	// UnexposedExpr- index_map - stbtt_uint32
																		// DeclRefExpr- index_map - stbtt_uint32
																// IntegerLiteral-  - int [Literal: 6]
													// IntegerLiteral-  - int [Literal: 1]
									// DeclStmt-  - 
										// VarDecl- searchRange - stbtt_uint16
											// TypeRef- stbtt_uint16 - stbtt_uint16
											// UnexposedExpr-  - stbtt_uint16
												// BinaryOperator-  - int [Binary Operator: Shr (>>)]
													// UnexposedExpr- ttUSHORT - int
														// CallExpr- ttUSHORT - stbtt_uint16
															// UnexposedExpr- ttUSHORT - stbtt_uint16 (*)(stbtt_uint8 *)
																// DeclRefExpr- ttUSHORT - stbtt_uint16 (stbtt_uint8 *)
															// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
																// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
																	// UnexposedExpr- data - stbtt_uint8 *
																		// DeclRefExpr- data - stbtt_uint8 *
																	// UnexposedExpr- index_map - stbtt_uint32
																		// DeclRefExpr- index_map - stbtt_uint32
																// IntegerLiteral-  - int [Literal: 8]
													// IntegerLiteral-  - int [Literal: 1]
									// DeclStmt-  - 
										// VarDecl- entrySelector - stbtt_uint16
											// TypeRef- stbtt_uint16 - stbtt_uint16
											// CallExpr- ttUSHORT - stbtt_uint16
												// UnexposedExpr- ttUSHORT - stbtt_uint16 (*)(stbtt_uint8 *)
													// DeclRefExpr- ttUSHORT - stbtt_uint16 (stbtt_uint8 *)
												// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
													// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
														// UnexposedExpr- data - stbtt_uint8 *
															// DeclRefExpr- data - stbtt_uint8 *
														// UnexposedExpr- index_map - stbtt_uint32
															// DeclRefExpr- index_map - stbtt_uint32
													// IntegerLiteral-  - int [Literal: 10]
									// DeclStmt-  - 
										// VarDecl- rangeShift - stbtt_uint16
											// TypeRef- stbtt_uint16 - stbtt_uint16
											// UnexposedExpr-  - stbtt_uint16
												// BinaryOperator-  - int [Binary Operator: Shr (>>)]
													// UnexposedExpr- ttUSHORT - int
														// CallExpr- ttUSHORT - stbtt_uint16
															// UnexposedExpr- ttUSHORT - stbtt_uint16 (*)(stbtt_uint8 *)
																// DeclRefExpr- ttUSHORT - stbtt_uint16 (stbtt_uint8 *)
															// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
																// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
																	// UnexposedExpr- data - stbtt_uint8 *
																		// DeclRefExpr- data - stbtt_uint8 *
																	// UnexposedExpr- index_map - stbtt_uint32
																		// DeclRefExpr- index_map - stbtt_uint32
																// IntegerLiteral-  - int [Literal: 12]
													// IntegerLiteral-  - int [Literal: 1]
									// DeclStmt-  - 
										// VarDecl- endCount - stbtt_uint32
											// TypeRef- stbtt_uint32 - stbtt_uint32
											// BinaryOperator-  - unsigned int [Binary Operator: Add (+)]
												// UnexposedExpr- index_map - stbtt_uint32
													// DeclRefExpr- index_map - stbtt_uint32
												// UnexposedExpr-  - unsigned int
													// IntegerLiteral-  - int [Literal: 14]
									// DeclStmt-  - 
										// VarDecl- search - stbtt_uint32
											// TypeRef- stbtt_uint32 - stbtt_uint32
											// UnexposedExpr- endCount - stbtt_uint32
												// DeclRefExpr- endCount - stbtt_uint32
									// IfStmt-  - 
										// BinaryOperator-  - int [Binary Operator: GT (>)]
											// UnexposedExpr- unicode_codepoint - int
												// DeclRefExpr- unicode_codepoint - int
											// IntegerLiteral-  - int [Literal: 65535]
										// ReturnStmt-  - 
											// IntegerLiteral-  - int [Literal: 0]
									// IfStmt-  - 
										// BinaryOperator-  - int [Binary Operator: GE (>=)]
											// UnexposedExpr- unicode_codepoint - int
												// DeclRefExpr- unicode_codepoint - int
											// UnexposedExpr- ttUSHORT - int
												// CallExpr- ttUSHORT - stbtt_uint16
													// UnexposedExpr- ttUSHORT - stbtt_uint16 (*)(stbtt_uint8 *)
														// DeclRefExpr- ttUSHORT - stbtt_uint16 (stbtt_uint8 *)
													// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
														// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
															// UnexposedExpr- data - stbtt_uint8 *
																// DeclRefExpr- data - stbtt_uint8 *
															// UnexposedExpr- search - stbtt_uint32
																// DeclRefExpr- search - stbtt_uint32
														// BinaryOperator-  - int [Binary Operator: Mul (*)]
															// UnexposedExpr- rangeShift - int
																// UnexposedExpr- rangeShift - stbtt_uint16
																	// DeclRefExpr- rangeShift - stbtt_uint16
															// IntegerLiteral-  - int [Literal: 2]
										// CompoundAssignOperator-  - stbtt_uint32
											// DeclRefExpr- search - stbtt_uint32
											// UnexposedExpr-  - unsigned int
												// BinaryOperator-  - int [Binary Operator: Mul (*)]
													// UnexposedExpr- rangeShift - int
														// UnexposedExpr- rangeShift - stbtt_uint16
															// DeclRefExpr- rangeShift - stbtt_uint16
													// IntegerLiteral-  - int [Literal: 2]
									// CompoundAssignOperator-  - stbtt_uint32
										// DeclRefExpr- search - stbtt_uint32
										// UnexposedExpr-  - unsigned int
											// IntegerLiteral-  - int [Literal: 2]
									// WhileStmt-  - 
										// UnexposedExpr- entrySelector - stbtt_uint16
											// DeclRefExpr- entrySelector - stbtt_uint16
										// CompoundStmt-  - 
											// DeclStmt-  - 
												// VarDecl- end - stbtt_uint16
													// TypeRef- stbtt_uint16 - stbtt_uint16
											// CompoundAssignOperator-  - stbtt_uint16
												// DeclRefExpr- searchRange - stbtt_uint16
												// IntegerLiteral-  - int [Literal: 1]
											// BinaryOperator-  - stbtt_uint16 [Binary Operator: Assign (=)]
												// DeclRefExpr- end - stbtt_uint16
												// CallExpr- ttUSHORT - stbtt_uint16
													// UnexposedExpr- ttUSHORT - stbtt_uint16 (*)(stbtt_uint8 *)
														// DeclRefExpr- ttUSHORT - stbtt_uint16 (stbtt_uint8 *)
													// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
														// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
															// UnexposedExpr- data - stbtt_uint8 *
																// DeclRefExpr- data - stbtt_uint8 *
															// UnexposedExpr- search - stbtt_uint32
																// DeclRefExpr- search - stbtt_uint32
														// BinaryOperator-  - int [Binary Operator: Mul (*)]
															// UnexposedExpr- searchRange - int
																// UnexposedExpr- searchRange - stbtt_uint16
																	// DeclRefExpr- searchRange - stbtt_uint16
															// IntegerLiteral-  - int [Literal: 2]
											// IfStmt-  - 
												// BinaryOperator-  - int [Binary Operator: GT (>)]
													// UnexposedExpr- unicode_codepoint - int
														// DeclRefExpr- unicode_codepoint - int
													// UnexposedExpr- end - int
														// UnexposedExpr- end - stbtt_uint16
															// DeclRefExpr- end - stbtt_uint16
												// CompoundAssignOperator-  - stbtt_uint32
													// DeclRefExpr- search - stbtt_uint32
													// UnexposedExpr-  - unsigned int
														// BinaryOperator-  - int [Binary Operator: Mul (*)]
															// UnexposedExpr- searchRange - int
																// UnexposedExpr- searchRange - stbtt_uint16
																	// DeclRefExpr- searchRange - stbtt_uint16
															// IntegerLiteral-  - int [Literal: 2]
											// UnaryOperator-  - stbtt_uint16 [Unary Operator: PreDec (--)]
												// DeclRefExpr- entrySelector - stbtt_uint16
									// CompoundAssignOperator-  - stbtt_uint32
										// DeclRefExpr- search - stbtt_uint32
										// UnexposedExpr-  - unsigned int
											// IntegerLiteral-  - int [Literal: 2]
									// CompoundStmt-  - 
										// DeclStmt-  - 
											// VarDecl- offset - stbtt_uint16
												// TypeRef- stbtt_uint16 - stbtt_uint16
											// VarDecl- start - stbtt_uint16
												// TypeRef- stbtt_uint16 - stbtt_uint16
										// DeclStmt-  - 
											// VarDecl- item - stbtt_uint16
												// TypeRef- stbtt_uint16 - stbtt_uint16
												// CStyleCastExpr-  - stbtt_uint16
													// TypeRef- stbtt_uint16 - stbtt_uint16
													// ParenExpr-  - unsigned int
														// BinaryOperator-  - unsigned int [Binary Operator: Shr (>>)]
															// ParenExpr-  - unsigned int
																// BinaryOperator-  - unsigned int [Binary Operator: Sub (-)]
																	// UnexposedExpr- search - stbtt_uint32
																		// DeclRefExpr- search - stbtt_uint32
																	// UnexposedExpr- endCount - stbtt_uint32
																		// DeclRefExpr- endCount - stbtt_uint32
															// IntegerLiteral-  - int [Literal: 1]
										// NullStmt-  - 
										// BinaryOperator-  - stbtt_uint16 [Binary Operator: Assign (=)]
											// DeclRefExpr- start - stbtt_uint16
											// CallExpr- ttUSHORT - stbtt_uint16
												// UnexposedExpr- ttUSHORT - stbtt_uint16 (*)(stbtt_uint8 *)
													// DeclRefExpr- ttUSHORT - stbtt_uint16 (stbtt_uint8 *)
												// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
													// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
														// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
															// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
																// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
																	// UnexposedExpr- data - stbtt_uint8 *
																		// DeclRefExpr- data - stbtt_uint8 *
																	// UnexposedExpr- index_map - stbtt_uint32
																		// DeclRefExpr- index_map - stbtt_uint32
																// IntegerLiteral-  - int [Literal: 14]
															// BinaryOperator-  - int [Binary Operator: Mul (*)]
																// UnexposedExpr- segcount - int
																	// UnexposedExpr- segcount - stbtt_uint16
																		// DeclRefExpr- segcount - stbtt_uint16
																// IntegerLiteral-  - int [Literal: 2]
														// IntegerLiteral-  - int [Literal: 2]
													// BinaryOperator-  - int [Binary Operator: Mul (*)]
														// IntegerLiteral-  - int [Literal: 2]
														// UnexposedExpr- item - int
															// UnexposedExpr- item - stbtt_uint16
																// DeclRefExpr- item - stbtt_uint16
										// IfStmt-  - 
											// BinaryOperator-  - int [Binary Operator: LT (<)]
												// UnexposedExpr- unicode_codepoint - int
													// DeclRefExpr- unicode_codepoint - int
												// UnexposedExpr- start - int
													// UnexposedExpr- start - stbtt_uint16
														// DeclRefExpr- start - stbtt_uint16
											// ReturnStmt-  - 
												// IntegerLiteral-  - int [Literal: 0]
										// BinaryOperator-  - stbtt_uint16 [Binary Operator: Assign (=)]
											// DeclRefExpr- offset - stbtt_uint16
											// CallExpr- ttUSHORT - stbtt_uint16
												// UnexposedExpr- ttUSHORT - stbtt_uint16 (*)(stbtt_uint8 *)
													// DeclRefExpr- ttUSHORT - stbtt_uint16 (stbtt_uint8 *)
												// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
													// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
														// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
															// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
																// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
																	// UnexposedExpr- data - stbtt_uint8 *
																		// DeclRefExpr- data - stbtt_uint8 *
																	// UnexposedExpr- index_map - stbtt_uint32
																		// DeclRefExpr- index_map - stbtt_uint32
																// IntegerLiteral-  - int [Literal: 14]
															// BinaryOperator-  - int [Binary Operator: Mul (*)]
																// UnexposedExpr- segcount - int
																	// UnexposedExpr- segcount - stbtt_uint16
																		// DeclRefExpr- segcount - stbtt_uint16
																// IntegerLiteral-  - int [Literal: 6]
														// IntegerLiteral-  - int [Literal: 2]
													// BinaryOperator-  - int [Binary Operator: Mul (*)]
														// IntegerLiteral-  - int [Literal: 2]
														// UnexposedExpr- item - int
															// UnexposedExpr- item - stbtt_uint16
																// DeclRefExpr- item - stbtt_uint16
										// IfStmt-  - 
											// BinaryOperator-  - int [Binary Operator: EQ (==)]
												// UnexposedExpr- offset - int
													// UnexposedExpr- offset - stbtt_uint16
														// DeclRefExpr- offset - stbtt_uint16
												// IntegerLiteral-  - int [Literal: 0]
											// ReturnStmt-  - 
												// UnexposedExpr-  - int
													// CStyleCastExpr-  - stbtt_uint16
														// TypeRef- stbtt_uint16 - stbtt_uint16
														// ParenExpr-  - int
															// BinaryOperator-  - int [Binary Operator: Add (+)]
																// UnexposedExpr- unicode_codepoint - int
																	// DeclRefExpr- unicode_codepoint - int
																// UnexposedExpr- ttSHORT - int
																	// CallExpr- ttSHORT - stbtt_int16
																		// UnexposedExpr- ttSHORT - stbtt_int16 (*)(stbtt_uint8 *)
																			// DeclRefExpr- ttSHORT - stbtt_int16 (stbtt_uint8 *)
																		// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
																			// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
																				// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
																					// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
																						// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
																							// UnexposedExpr- data - stbtt_uint8 *
																								// DeclRefExpr- data - stbtt_uint8 *
																							// UnexposedExpr- index_map - stbtt_uint32
																								// DeclRefExpr- index_map - stbtt_uint32
																						// IntegerLiteral-  - int [Literal: 14]
																					// BinaryOperator-  - int [Binary Operator: Mul (*)]
																						// UnexposedExpr- segcount - int
																							// UnexposedExpr- segcount - stbtt_uint16
																								// DeclRefExpr- segcount - stbtt_uint16
																						// IntegerLiteral-  - int [Literal: 4]
																				// IntegerLiteral-  - int [Literal: 2]
																			// BinaryOperator-  - int [Binary Operator: Mul (*)]
																				// IntegerLiteral-  - int [Literal: 2]
																				// UnexposedExpr- item - int
																					// UnexposedExpr- item - stbtt_uint16
																						// DeclRefExpr- item - stbtt_uint16
										// ReturnStmt-  - 
											// UnexposedExpr- ttUSHORT - int
												// CallExpr- ttUSHORT - stbtt_uint16
													// UnexposedExpr- ttUSHORT - stbtt_uint16 (*)(stbtt_uint8 *)
														// DeclRefExpr- ttUSHORT - stbtt_uint16 (stbtt_uint8 *)
													// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
														// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
															// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
																// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
																	// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
																		// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
																			// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
																				// UnexposedExpr- data - stbtt_uint8 *
																					// DeclRefExpr- data - stbtt_uint8 *
																				// UnexposedExpr- offset - int
																					// UnexposedExpr- offset - stbtt_uint16
																						// DeclRefExpr- offset - stbtt_uint16
																			// BinaryOperator-  - int [Binary Operator: Mul (*)]
																				// ParenExpr-  - int
																					// BinaryOperator-  - int [Binary Operator: Sub (-)]
																						// UnexposedExpr- unicode_codepoint - int
																							// DeclRefExpr- unicode_codepoint - int
																						// UnexposedExpr- start - int
																							// UnexposedExpr- start - stbtt_uint16
																								// DeclRefExpr- start - stbtt_uint16
																				// IntegerLiteral-  - int [Literal: 2]
																		// UnexposedExpr- index_map - stbtt_uint32
																			// DeclRefExpr- index_map - stbtt_uint32
																	// IntegerLiteral-  - int [Literal: 14]
																// BinaryOperator-  - int [Binary Operator: Mul (*)]
																	// UnexposedExpr- segcount - int
																		// UnexposedExpr- segcount - stbtt_uint16
																			// DeclRefExpr- segcount - stbtt_uint16
																	// IntegerLiteral-  - int [Literal: 6]
															// IntegerLiteral-  - int [Literal: 2]
														// BinaryOperator-  - int [Binary Operator: Mul (*)]
															// IntegerLiteral-  - int [Literal: 2]
															// UnexposedExpr- item - int
																// UnexposedExpr- item - stbtt_uint16
																	// DeclRefExpr- item - stbtt_uint16
								// IfStmt-  - 
									// BinaryOperator-  - int [Binary Operator: LOr (||)]
										// BinaryOperator-  - int [Binary Operator: EQ (==)]
											// UnexposedExpr- format - int
												// UnexposedExpr- format - stbtt_uint16
													// DeclRefExpr- format - stbtt_uint16
											// IntegerLiteral-  - int [Literal: 12]
										// BinaryOperator-  - int [Binary Operator: EQ (==)]
											// UnexposedExpr- format - int
												// UnexposedExpr- format - stbtt_uint16
													// DeclRefExpr- format - stbtt_uint16
											// IntegerLiteral-  - int [Literal: 13]
									// CompoundStmt-  - 
										// DeclStmt-  - 
											// VarDecl- ngroups - stbtt_uint32
												// TypeRef- stbtt_uint32 - stbtt_uint32
												// CallExpr- ttULONG - stbtt_uint32
													// UnexposedExpr- ttULONG - stbtt_uint32 (*)(stbtt_uint8 *)
														// DeclRefExpr- ttULONG - stbtt_uint32 (stbtt_uint8 *)
													// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
														// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
															// UnexposedExpr- data - stbtt_uint8 *
																// DeclRefExpr- data - stbtt_uint8 *
															// UnexposedExpr- index_map - stbtt_uint32
																// DeclRefExpr- index_map - stbtt_uint32
														// IntegerLiteral-  - int [Literal: 12]
										// DeclStmt-  - 
											// VarDecl- low - stbtt_int32
												// TypeRef- stbtt_int32 - stbtt_int32
											// VarDecl- high - stbtt_int32
												// TypeRef- stbtt_int32 - stbtt_int32
										// BinaryOperator-  - stbtt_int32 [Binary Operator: Assign (=)]
											// DeclRefExpr- low - stbtt_int32
											// IntegerLiteral-  - int [Literal: 0]
										// BinaryOperator-  - stbtt_int32 [Binary Operator: Assign (=)]
											// DeclRefExpr- high - stbtt_int32
											// CStyleCastExpr-  - stbtt_int32
												// TypeRef- stbtt_int32 - stbtt_int32
												// UnexposedExpr- ngroups - stbtt_uint32
													// DeclRefExpr- ngroups - stbtt_uint32
										// WhileStmt-  - 
											// BinaryOperator-  - int [Binary Operator: LT (<)]
												// UnexposedExpr- low - stbtt_int32
													// DeclRefExpr- low - stbtt_int32
												// UnexposedExpr- high - stbtt_int32
													// DeclRefExpr- high - stbtt_int32
											// CompoundStmt-  - 
												// DeclStmt-  - 
													// VarDecl- mid - stbtt_int32
														// TypeRef- stbtt_int32 - stbtt_int32
														// BinaryOperator-  - int [Binary Operator: Add (+)]
															// UnexposedExpr- low - stbtt_int32
																// DeclRefExpr- low - stbtt_int32
															// ParenExpr-  - int
																// BinaryOperator-  - int [Binary Operator: Shr (>>)]
																	// ParenExpr-  - int
																		// BinaryOperator-  - int [Binary Operator: Sub (-)]
																			// UnexposedExpr- high - stbtt_int32
																				// DeclRefExpr- high - stbtt_int32
																			// UnexposedExpr- low - stbtt_int32
																				// DeclRefExpr- low - stbtt_int32
																	// IntegerLiteral-  - int [Literal: 1]
												// DeclStmt-  - 
													// VarDecl- start_char - stbtt_uint32
														// TypeRef- stbtt_uint32 - stbtt_uint32
														// CallExpr- ttULONG - stbtt_uint32
															// UnexposedExpr- ttULONG - stbtt_uint32 (*)(stbtt_uint8 *)
																// DeclRefExpr- ttULONG - stbtt_uint32 (stbtt_uint8 *)
															// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
																// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
																	// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
																		// UnexposedExpr- data - stbtt_uint8 *
																			// DeclRefExpr- data - stbtt_uint8 *
																		// UnexposedExpr- index_map - stbtt_uint32
																			// DeclRefExpr- index_map - stbtt_uint32
																	// IntegerLiteral-  - int [Literal: 16]
																// BinaryOperator-  - int [Binary Operator: Mul (*)]
																	// UnexposedExpr- mid - stbtt_int32
																		// DeclRefExpr- mid - stbtt_int32
																	// IntegerLiteral-  - int [Literal: 12]
												// DeclStmt-  - 
													// VarDecl- end_char - stbtt_uint32
														// TypeRef- stbtt_uint32 - stbtt_uint32
														// CallExpr- ttULONG - stbtt_uint32
															// UnexposedExpr- ttULONG - stbtt_uint32 (*)(stbtt_uint8 *)
																// DeclRefExpr- ttULONG - stbtt_uint32 (stbtt_uint8 *)
															// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
																// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
																	// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
																		// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
																			// UnexposedExpr- data - stbtt_uint8 *
																				// DeclRefExpr- data - stbtt_uint8 *
																			// UnexposedExpr- index_map - stbtt_uint32
																				// DeclRefExpr- index_map - stbtt_uint32
																		// IntegerLiteral-  - int [Literal: 16]
																	// BinaryOperator-  - int [Binary Operator: Mul (*)]
																		// UnexposedExpr- mid - stbtt_int32
																			// DeclRefExpr- mid - stbtt_int32
																		// IntegerLiteral-  - int [Literal: 12]
																// IntegerLiteral-  - int [Literal: 4]
												// IfStmt-  - 
													// BinaryOperator-  - int [Binary Operator: LT (<)]
														// CStyleCastExpr-  - stbtt_uint32
															// TypeRef- stbtt_uint32 - stbtt_uint32
															// UnexposedExpr- unicode_codepoint - int
																// DeclRefExpr- unicode_codepoint - int
														// UnexposedExpr- start_char - stbtt_uint32
															// DeclRefExpr- start_char - stbtt_uint32
													// BinaryOperator-  - stbtt_int32 [Binary Operator: Assign (=)]
														// DeclRefExpr- high - stbtt_int32
														// UnexposedExpr- mid - stbtt_int32
															// DeclRefExpr- mid - stbtt_int32
													// IfStmt-  - 
														// BinaryOperator-  - int [Binary Operator: GT (>)]
															// CStyleCastExpr-  - stbtt_uint32
																// TypeRef- stbtt_uint32 - stbtt_uint32
																// UnexposedExpr- unicode_codepoint - int
																	// DeclRefExpr- unicode_codepoint - int
															// UnexposedExpr- end_char - stbtt_uint32
																// DeclRefExpr- end_char - stbtt_uint32
														// BinaryOperator-  - stbtt_int32 [Binary Operator: Assign (=)]
															// DeclRefExpr- low - stbtt_int32
															// BinaryOperator-  - int [Binary Operator: Add (+)]
																// UnexposedExpr- mid - stbtt_int32
																	// DeclRefExpr- mid - stbtt_int32
																// IntegerLiteral-  - int [Literal: 1]
														// CompoundStmt-  - 
															// DeclStmt-  - 
																// VarDecl- start_glyph - stbtt_uint32
																	// TypeRef- stbtt_uint32 - stbtt_uint32
																	// CallExpr- ttULONG - stbtt_uint32
																		// UnexposedExpr- ttULONG - stbtt_uint32 (*)(stbtt_uint8 *)
																			// DeclRefExpr- ttULONG - stbtt_uint32 (stbtt_uint8 *)
																		// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
																			// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
																				// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
																					// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
																						// UnexposedExpr- data - stbtt_uint8 *
																							// DeclRefExpr- data - stbtt_uint8 *
																						// UnexposedExpr- index_map - stbtt_uint32
																							// DeclRefExpr- index_map - stbtt_uint32
																					// IntegerLiteral-  - int [Literal: 16]
																				// BinaryOperator-  - int [Binary Operator: Mul (*)]
																					// UnexposedExpr- mid - stbtt_int32
																						// DeclRefExpr- mid - stbtt_int32
																					// IntegerLiteral-  - int [Literal: 12]
																			// IntegerLiteral-  - int [Literal: 8]
															// IfStmt-  - 
																// BinaryOperator-  - int [Binary Operator: EQ (==)]
																	// UnexposedExpr- format - int
																		// UnexposedExpr- format - stbtt_uint16
																			// DeclRefExpr- format - stbtt_uint16
																	// IntegerLiteral-  - int [Literal: 12]
																// ReturnStmt-  - 
																	// UnexposedExpr-  - int
																		// BinaryOperator-  - unsigned int [Binary Operator: Sub (-)]
																			// BinaryOperator-  - unsigned int [Binary Operator: Add (+)]
																				// UnexposedExpr- start_glyph - stbtt_uint32
																					// DeclRefExpr- start_glyph - stbtt_uint32
																				// UnexposedExpr- unicode_codepoint - unsigned int
																					// UnexposedExpr- unicode_codepoint - int
																						// DeclRefExpr- unicode_codepoint - int
																			// UnexposedExpr- start_char - stbtt_uint32
																				// DeclRefExpr- start_char - stbtt_uint32
																// ReturnStmt-  - 
																	// UnexposedExpr- start_glyph - int
																		// UnexposedExpr- start_glyph - stbtt_uint32
																			// DeclRefExpr- start_glyph - stbtt_uint32
										// ReturnStmt-  - 
											// IntegerLiteral-  - int [Literal: 0]
				// NullStmt-  - 
				// ReturnStmt-  - 
					// IntegerLiteral-  - int [Literal: 0]
		// FunctionDecl- stbtt_GetCodepointShape - int (const stbtt_fontinfo *, int, stbtt_vertex **)
			// ParmDecl- info - const stbtt_fontinfo *
				// TypeRef- stbtt_fontinfo - stbtt_fontinfo
			// ParmDecl- unicode_codepoint - int
			// ParmDecl- vertices - stbtt_vertex **
				// TypeRef- stbtt_vertex - stbtt_vertex
			// CompoundStmt-  - 
				// ReturnStmt-  - 
					// CallExpr- stbtt_GetGlyphShape - int
						// UnexposedExpr- stbtt_GetGlyphShape - int (*)(const stbtt_fontinfo *, int, stbtt_vertex **)
							// DeclRefExpr- stbtt_GetGlyphShape - int (const stbtt_fontinfo *, int, stbtt_vertex **)
						// UnexposedExpr- info - const stbtt_fontinfo *
							// DeclRefExpr- info - const stbtt_fontinfo *
						// CallExpr- stbtt_FindGlyphIndex - int
							// UnexposedExpr- stbtt_FindGlyphIndex - int (*)(const stbtt_fontinfo *, int)
								// DeclRefExpr- stbtt_FindGlyphIndex - int (const stbtt_fontinfo *, int)
							// UnexposedExpr- info - const stbtt_fontinfo *
								// DeclRefExpr- info - const stbtt_fontinfo *
							// UnexposedExpr- unicode_codepoint - int
								// DeclRefExpr- unicode_codepoint - int
						// UnexposedExpr- vertices - stbtt_vertex **
							// DeclRefExpr- vertices - stbtt_vertex **
		// FunctionDecl- stbtt_setvertex - void (stbtt_vertex *, stbtt_uint8, stbtt_int32, stbtt_int32, stbtt_int32, stbtt_int32)
			// ParmDecl- v - stbtt_vertex *
				// TypeRef- stbtt_vertex - stbtt_vertex
			// ParmDecl- type - stbtt_uint8
				// TypeRef- stbtt_uint8 - stbtt_uint8
			// ParmDecl- x - stbtt_int32
				// TypeRef- stbtt_int32 - stbtt_int32
			// ParmDecl- y - stbtt_int32
				// TypeRef- stbtt_int32 - stbtt_int32
			// ParmDecl- cx - stbtt_int32
				// TypeRef- stbtt_int32 - stbtt_int32
			// ParmDecl- cy - stbtt_int32
				// TypeRef- stbtt_int32 - stbtt_int32
			// CompoundStmt-  - 
				// BinaryOperator-  - unsigned char [Binary Operator: Assign (=)]
					// MemberRefExpr- type - unsigned char
						// UnexposedExpr- v - stbtt_vertex *
							// DeclRefExpr- v - stbtt_vertex *
					// UnexposedExpr- type - stbtt_uint8
						// DeclRefExpr- type - stbtt_uint8
				// BinaryOperator-  - short [Binary Operator: Assign (=)]
					// MemberRefExpr- x - short
						// UnexposedExpr- v - stbtt_vertex *
							// DeclRefExpr- v - stbtt_vertex *
					// CStyleCastExpr-  - stbtt_int16
						// TypeRef- stbtt_int16 - stbtt_int16
						// UnexposedExpr- x - stbtt_int32
							// DeclRefExpr- x - stbtt_int32
				// BinaryOperator-  - short [Binary Operator: Assign (=)]
					// MemberRefExpr- y - short
						// UnexposedExpr- v - stbtt_vertex *
							// DeclRefExpr- v - stbtt_vertex *
					// CStyleCastExpr-  - stbtt_int16
						// TypeRef- stbtt_int16 - stbtt_int16
						// UnexposedExpr- y - stbtt_int32
							// DeclRefExpr- y - stbtt_int32
				// BinaryOperator-  - short [Binary Operator: Assign (=)]
					// MemberRefExpr- cx - short
						// UnexposedExpr- v - stbtt_vertex *
							// DeclRefExpr- v - stbtt_vertex *
					// CStyleCastExpr-  - stbtt_int16
						// TypeRef- stbtt_int16 - stbtt_int16
						// UnexposedExpr- cx - stbtt_int32
							// DeclRefExpr- cx - stbtt_int32
				// BinaryOperator-  - short [Binary Operator: Assign (=)]
					// MemberRefExpr- cy - short
						// UnexposedExpr- v - stbtt_vertex *
							// DeclRefExpr- v - stbtt_vertex *
					// CStyleCastExpr-  - stbtt_int16
						// TypeRef- stbtt_int16 - stbtt_int16
						// UnexposedExpr- cy - stbtt_int32
							// DeclRefExpr- cy - stbtt_int32
		// FunctionDecl- stbtt__GetGlyfOffset - int (const stbtt_fontinfo *, int)
			// ParmDecl- info - const stbtt_fontinfo *
				// TypeRef- stbtt_fontinfo - stbtt_fontinfo
			// ParmDecl- glyph_index - int
			// CompoundStmt-  - 
				// DeclStmt-  - 
					// VarDecl- g1 - int
					// VarDecl- g2 - int
				// NullStmt-  - 
				// IfStmt-  - 
					// BinaryOperator-  - int [Binary Operator: GE (>=)]
						// UnexposedExpr- glyph_index - int
							// DeclRefExpr- glyph_index - int
						// UnexposedExpr- numGlyphs - int
							// MemberRefExpr- numGlyphs - const int
								// UnexposedExpr- info - const stbtt_fontinfo *
									// DeclRefExpr- info - const stbtt_fontinfo *
					// ReturnStmt-  - 
						// UnaryOperator-  - int [Unary Operator: Minus (-)]
							// IntegerLiteral-  - int [Literal: 1]
				// IfStmt-  - 
					// BinaryOperator-  - int [Binary Operator: GE (>=)]
						// UnexposedExpr- indexToLocFormat - int
							// MemberRefExpr- indexToLocFormat - const int
								// UnexposedExpr- info - const stbtt_fontinfo *
									// DeclRefExpr- info - const stbtt_fontinfo *
						// IntegerLiteral-  - int [Literal: 2]
					// ReturnStmt-  - 
						// UnaryOperator-  - int [Unary Operator: Minus (-)]
							// IntegerLiteral-  - int [Literal: 1]
				// IfStmt-  - 
					// BinaryOperator-  - int [Binary Operator: EQ (==)]
						// UnexposedExpr- indexToLocFormat - int
							// MemberRefExpr- indexToLocFormat - const int
								// UnexposedExpr- info - const stbtt_fontinfo *
									// DeclRefExpr- info - const stbtt_fontinfo *
						// IntegerLiteral-  - int [Literal: 0]
					// CompoundStmt-  - 
						// BinaryOperator-  - int [Binary Operator: Assign (=)]
							// DeclRefExpr- g1 - int
							// BinaryOperator-  - int [Binary Operator: Add (+)]
								// UnexposedExpr- glyf - int
									// MemberRefExpr- glyf - const int
										// UnexposedExpr- info - const stbtt_fontinfo *
											// DeclRefExpr- info - const stbtt_fontinfo *
								// BinaryOperator-  - int [Binary Operator: Mul (*)]
									// UnexposedExpr- ttUSHORT - int
										// CallExpr- ttUSHORT - stbtt_uint16
											// UnexposedExpr- ttUSHORT - stbtt_uint16 (*)(stbtt_uint8 *)
												// DeclRefExpr- ttUSHORT - stbtt_uint16 (stbtt_uint8 *)
											// BinaryOperator-  - unsigned char * [Binary Operator: Add (+)]
												// BinaryOperator-  - unsigned char * [Binary Operator: Add (+)]
													// UnexposedExpr- data - unsigned char *
														// MemberRefExpr- data - unsigned char *const
															// UnexposedExpr- info - const stbtt_fontinfo *
																// DeclRefExpr- info - const stbtt_fontinfo *
													// UnexposedExpr- loca - int
														// MemberRefExpr- loca - const int
															// UnexposedExpr- info - const stbtt_fontinfo *
																// DeclRefExpr- info - const stbtt_fontinfo *
												// BinaryOperator-  - int [Binary Operator: Mul (*)]
													// UnexposedExpr- glyph_index - int
														// DeclRefExpr- glyph_index - int
													// IntegerLiteral-  - int [Literal: 2]
									// IntegerLiteral-  - int [Literal: 2]
						// BinaryOperator-  - int [Binary Operator: Assign (=)]
							// DeclRefExpr- g2 - int
							// BinaryOperator-  - int [Binary Operator: Add (+)]
								// UnexposedExpr- glyf - int
									// MemberRefExpr- glyf - const int
										// UnexposedExpr- info - const stbtt_fontinfo *
											// DeclRefExpr- info - const stbtt_fontinfo *
								// BinaryOperator-  - int [Binary Operator: Mul (*)]
									// UnexposedExpr- ttUSHORT - int
										// CallExpr- ttUSHORT - stbtt_uint16
											// UnexposedExpr- ttUSHORT - stbtt_uint16 (*)(stbtt_uint8 *)
												// DeclRefExpr- ttUSHORT - stbtt_uint16 (stbtt_uint8 *)
											// BinaryOperator-  - unsigned char * [Binary Operator: Add (+)]
												// BinaryOperator-  - unsigned char * [Binary Operator: Add (+)]
													// BinaryOperator-  - unsigned char * [Binary Operator: Add (+)]
														// UnexposedExpr- data - unsigned char *
															// MemberRefExpr- data - unsigned char *const
																// UnexposedExpr- info - const stbtt_fontinfo *
																	// DeclRefExpr- info - const stbtt_fontinfo *
														// UnexposedExpr- loca - int
															// MemberRefExpr- loca - const int
																// UnexposedExpr- info - const stbtt_fontinfo *
																	// DeclRefExpr- info - const stbtt_fontinfo *
													// BinaryOperator-  - int [Binary Operator: Mul (*)]
														// UnexposedExpr- glyph_index - int
															// DeclRefExpr- glyph_index - int
														// IntegerLiteral-  - int [Literal: 2]
												// IntegerLiteral-  - int [Literal: 2]
									// IntegerLiteral-  - int [Literal: 2]
					// CompoundStmt-  - 
						// BinaryOperator-  - int [Binary Operator: Assign (=)]
							// DeclRefExpr- g1 - int
							// UnexposedExpr-  - int
								// BinaryOperator-  - unsigned int [Binary Operator: Add (+)]
									// UnexposedExpr- glyf - unsigned int
										// UnexposedExpr- glyf - int
											// MemberRefExpr- glyf - const int
												// UnexposedExpr- info - const stbtt_fontinfo *
													// DeclRefExpr- info - const stbtt_fontinfo *
									// CallExpr- ttULONG - stbtt_uint32
										// UnexposedExpr- ttULONG - stbtt_uint32 (*)(stbtt_uint8 *)
											// DeclRefExpr- ttULONG - stbtt_uint32 (stbtt_uint8 *)
										// BinaryOperator-  - unsigned char * [Binary Operator: Add (+)]
											// BinaryOperator-  - unsigned char * [Binary Operator: Add (+)]
												// UnexposedExpr- data - unsigned char *
													// MemberRefExpr- data - unsigned char *const
														// UnexposedExpr- info - const stbtt_fontinfo *
															// DeclRefExpr- info - const stbtt_fontinfo *
												// UnexposedExpr- loca - int
													// MemberRefExpr- loca - const int
														// UnexposedExpr- info - const stbtt_fontinfo *
															// DeclRefExpr- info - const stbtt_fontinfo *
											// BinaryOperator-  - int [Binary Operator: Mul (*)]
												// UnexposedExpr- glyph_index - int
													// DeclRefExpr- glyph_index - int
												// IntegerLiteral-  - int [Literal: 4]
						// BinaryOperator-  - int [Binary Operator: Assign (=)]
							// DeclRefExpr- g2 - int
							// UnexposedExpr-  - int
								// BinaryOperator-  - unsigned int [Binary Operator: Add (+)]
									// UnexposedExpr- glyf - unsigned int
										// UnexposedExpr- glyf - int
											// MemberRefExpr- glyf - const int
												// UnexposedExpr- info - const stbtt_fontinfo *
													// DeclRefExpr- info - const stbtt_fontinfo *
									// CallExpr- ttULONG - stbtt_uint32
										// UnexposedExpr- ttULONG - stbtt_uint32 (*)(stbtt_uint8 *)
											// DeclRefExpr- ttULONG - stbtt_uint32 (stbtt_uint8 *)
										// BinaryOperator-  - unsigned char * [Binary Operator: Add (+)]
											// BinaryOperator-  - unsigned char * [Binary Operator: Add (+)]
												// BinaryOperator-  - unsigned char * [Binary Operator: Add (+)]
													// UnexposedExpr- data - unsigned char *
														// MemberRefExpr- data - unsigned char *const
															// UnexposedExpr- info - const stbtt_fontinfo *
																// DeclRefExpr- info - const stbtt_fontinfo *
													// UnexposedExpr- loca - int
														// MemberRefExpr- loca - const int
															// UnexposedExpr- info - const stbtt_fontinfo *
																// DeclRefExpr- info - const stbtt_fontinfo *
												// BinaryOperator-  - int [Binary Operator: Mul (*)]
													// UnexposedExpr- glyph_index - int
														// DeclRefExpr- glyph_index - int
													// IntegerLiteral-  - int [Literal: 4]
											// IntegerLiteral-  - int [Literal: 4]
				// ReturnStmt-  - 
					// ConditionalOperator-  - int
						// BinaryOperator-  - int [Binary Operator: EQ (==)]
							// UnexposedExpr- g1 - int
								// DeclRefExpr- g1 - int
							// UnexposedExpr- g2 - int
								// DeclRefExpr- g2 - int
						// UnaryOperator-  - int [Unary Operator: Minus (-)]
							// IntegerLiteral-  - int [Literal: 1]
						// UnexposedExpr- g1 - int
							// DeclRefExpr- g1 - int
		// FunctionDecl- stbtt__GetGlyphInfoT2 - int (const stbtt_fontinfo *, int, int *, int *, int *, int *)
			// ParmDecl- info - const stbtt_fontinfo *
				// TypeRef- stbtt_fontinfo - stbtt_fontinfo
			// ParmDecl- glyph_index - int
			// ParmDecl- x0 - int *
			// ParmDecl- y0 - int *
			// ParmDecl- x1 - int *
			// ParmDecl- y1 - int *
		// FunctionDecl- stbtt_GetGlyphBox - int (const stbtt_fontinfo *, int, int *, int *, int *, int *)
			// ParmDecl- info - const stbtt_fontinfo *
				// TypeRef- stbtt_fontinfo - stbtt_fontinfo
			// ParmDecl- glyph_index - int
			// ParmDecl- x0 - int *
			// ParmDecl- y0 - int *
			// ParmDecl- x1 - int *
			// ParmDecl- y1 - int *
			// CompoundStmt-  - 
				// IfStmt-  - 
					// UnexposedExpr- size - int
						// MemberRefExpr- size - const int
							// MemberRefExpr- cff - const stbtt__buf
								// UnexposedExpr- info - const stbtt_fontinfo *
									// DeclRefExpr- info - const stbtt_fontinfo *
					// CompoundStmt-  - 
						// CallExpr- stbtt__GetGlyphInfoT2 - int
							// UnexposedExpr- stbtt__GetGlyphInfoT2 - int (*)(const stbtt_fontinfo *, int, int *, int *, int *, int *)
								// DeclRefExpr- stbtt__GetGlyphInfoT2 - int (const stbtt_fontinfo *, int, int *, int *, int *, int *)
							// UnexposedExpr- info - const stbtt_fontinfo *
								// DeclRefExpr- info - const stbtt_fontinfo *
							// UnexposedExpr- glyph_index - int
								// DeclRefExpr- glyph_index - int
							// UnexposedExpr- x0 - int *
								// DeclRefExpr- x0 - int *
							// UnexposedExpr- y0 - int *
								// DeclRefExpr- y0 - int *
							// UnexposedExpr- x1 - int *
								// DeclRefExpr- x1 - int *
							// UnexposedExpr- y1 - int *
								// DeclRefExpr- y1 - int *
					// CompoundStmt-  - 
						// DeclStmt-  - 
							// VarDecl- g - int
								// CallExpr- stbtt__GetGlyfOffset - int
									// UnexposedExpr- stbtt__GetGlyfOffset - int (*)(const stbtt_fontinfo *, int)
										// DeclRefExpr- stbtt__GetGlyfOffset - int (const stbtt_fontinfo *, int)
									// UnexposedExpr- info - const stbtt_fontinfo *
										// DeclRefExpr- info - const stbtt_fontinfo *
									// UnexposedExpr- glyph_index - int
										// DeclRefExpr- glyph_index - int
						// IfStmt-  - 
							// BinaryOperator-  - int [Binary Operator: LT (<)]
								// UnexposedExpr- g - int
									// DeclRefExpr- g - int
								// IntegerLiteral-  - int [Literal: 0]
							// ReturnStmt-  - 
								// IntegerLiteral-  - int [Literal: 0]
						// IfStmt-  - 
							// UnexposedExpr- x0 - int *
								// DeclRefExpr- x0 - int *
							// BinaryOperator-  - int [Binary Operator: Assign (=)]
								// UnaryOperator-  - int [Unary Operator: Deref (*)]
									// UnexposedExpr- x0 - int *
										// DeclRefExpr- x0 - int *
								// UnexposedExpr- ttSHORT - int
									// CallExpr- ttSHORT - stbtt_int16
										// UnexposedExpr- ttSHORT - stbtt_int16 (*)(stbtt_uint8 *)
											// DeclRefExpr- ttSHORT - stbtt_int16 (stbtt_uint8 *)
										// BinaryOperator-  - unsigned char * [Binary Operator: Add (+)]
											// BinaryOperator-  - unsigned char * [Binary Operator: Add (+)]
												// UnexposedExpr- data - unsigned char *
													// MemberRefExpr- data - unsigned char *const
														// UnexposedExpr- info - const stbtt_fontinfo *
															// DeclRefExpr- info - const stbtt_fontinfo *
												// UnexposedExpr- g - int
													// DeclRefExpr- g - int
											// IntegerLiteral-  - int [Literal: 2]
						// IfStmt-  - 
							// UnexposedExpr- y0 - int *
								// DeclRefExpr- y0 - int *
							// BinaryOperator-  - int [Binary Operator: Assign (=)]
								// UnaryOperator-  - int [Unary Operator: Deref (*)]
									// UnexposedExpr- y0 - int *
										// DeclRefExpr- y0 - int *
								// UnexposedExpr- ttSHORT - int
									// CallExpr- ttSHORT - stbtt_int16
										// UnexposedExpr- ttSHORT - stbtt_int16 (*)(stbtt_uint8 *)
											// DeclRefExpr- ttSHORT - stbtt_int16 (stbtt_uint8 *)
										// BinaryOperator-  - unsigned char * [Binary Operator: Add (+)]
											// BinaryOperator-  - unsigned char * [Binary Operator: Add (+)]
												// UnexposedExpr- data - unsigned char *
													// MemberRefExpr- data - unsigned char *const
														// UnexposedExpr- info - const stbtt_fontinfo *
															// DeclRefExpr- info - const stbtt_fontinfo *
												// UnexposedExpr- g - int
													// DeclRefExpr- g - int
											// IntegerLiteral-  - int [Literal: 4]
						// IfStmt-  - 
							// UnexposedExpr- x1 - int *
								// DeclRefExpr- x1 - int *
							// BinaryOperator-  - int [Binary Operator: Assign (=)]
								// UnaryOperator-  - int [Unary Operator: Deref (*)]
									// UnexposedExpr- x1 - int *
										// DeclRefExpr- x1 - int *
								// UnexposedExpr- ttSHORT - int
									// CallExpr- ttSHORT - stbtt_int16
										// UnexposedExpr- ttSHORT - stbtt_int16 (*)(stbtt_uint8 *)
											// DeclRefExpr- ttSHORT - stbtt_int16 (stbtt_uint8 *)
										// BinaryOperator-  - unsigned char * [Binary Operator: Add (+)]
											// BinaryOperator-  - unsigned char * [Binary Operator: Add (+)]
												// UnexposedExpr- data - unsigned char *
													// MemberRefExpr- data - unsigned char *const
														// UnexposedExpr- info - const stbtt_fontinfo *
															// DeclRefExpr- info - const stbtt_fontinfo *
												// UnexposedExpr- g - int
													// DeclRefExpr- g - int
											// IntegerLiteral-  - int [Literal: 6]
						// IfStmt-  - 
							// UnexposedExpr- y1 - int *
								// DeclRefExpr- y1 - int *
							// BinaryOperator-  - int [Binary Operator: Assign (=)]
								// UnaryOperator-  - int [Unary Operator: Deref (*)]
									// UnexposedExpr- y1 - int *
										// DeclRefExpr- y1 - int *
								// UnexposedExpr- ttSHORT - int
									// CallExpr- ttSHORT - stbtt_int16
										// UnexposedExpr- ttSHORT - stbtt_int16 (*)(stbtt_uint8 *)
											// DeclRefExpr- ttSHORT - stbtt_int16 (stbtt_uint8 *)
										// BinaryOperator-  - unsigned char * [Binary Operator: Add (+)]
											// BinaryOperator-  - unsigned char * [Binary Operator: Add (+)]
												// UnexposedExpr- data - unsigned char *
													// MemberRefExpr- data - unsigned char *const
														// UnexposedExpr- info - const stbtt_fontinfo *
															// DeclRefExpr- info - const stbtt_fontinfo *
												// UnexposedExpr- g - int
													// DeclRefExpr- g - int
											// IntegerLiteral-  - int [Literal: 8]
				// ReturnStmt-  - 
					// IntegerLiteral-  - int [Literal: 1]
		// FunctionDecl- stbtt_GetCodepointBox - int (const stbtt_fontinfo *, int, int *, int *, int *, int *)
			// ParmDecl- info - const stbtt_fontinfo *
				// TypeRef- stbtt_fontinfo - stbtt_fontinfo
			// ParmDecl- codepoint - int
			// ParmDecl- x0 - int *
			// ParmDecl- y0 - int *
			// ParmDecl- x1 - int *
			// ParmDecl- y1 - int *
			// CompoundStmt-  - 
				// ReturnStmt-  - 
					// CallExpr- stbtt_GetGlyphBox - int
						// UnexposedExpr- stbtt_GetGlyphBox - int (*)(const stbtt_fontinfo *, int, int *, int *, int *, int *)
							// DeclRefExpr- stbtt_GetGlyphBox - int (const stbtt_fontinfo *, int, int *, int *, int *, int *)
						// UnexposedExpr- info - const stbtt_fontinfo *
							// DeclRefExpr- info - const stbtt_fontinfo *
						// CallExpr- stbtt_FindGlyphIndex - int
							// UnexposedExpr- stbtt_FindGlyphIndex - int (*)(const stbtt_fontinfo *, int)
								// DeclRefExpr- stbtt_FindGlyphIndex - int (const stbtt_fontinfo *, int)
							// UnexposedExpr- info - const stbtt_fontinfo *
								// DeclRefExpr- info - const stbtt_fontinfo *
							// UnexposedExpr- codepoint - int
								// DeclRefExpr- codepoint - int
						// UnexposedExpr- x0 - int *
							// DeclRefExpr- x0 - int *
						// UnexposedExpr- y0 - int *
							// DeclRefExpr- y0 - int *
						// UnexposedExpr- x1 - int *
							// DeclRefExpr- x1 - int *
						// UnexposedExpr- y1 - int *
							// DeclRefExpr- y1 - int *
		// FunctionDecl- stbtt_IsGlyphEmpty - int (const stbtt_fontinfo *, int)
			// ParmDecl- info - const stbtt_fontinfo *
				// TypeRef- stbtt_fontinfo - stbtt_fontinfo
			// ParmDecl- glyph_index - int
			// CompoundStmt-  - 
				// DeclStmt-  - 
					// VarDecl- numberOfContours - stbtt_int16
						// TypeRef- stbtt_int16 - stbtt_int16
				// DeclStmt-  - 
					// VarDecl- g - int
				// IfStmt-  - 
					// UnexposedExpr- size - int
						// MemberRefExpr- size - const int
							// MemberRefExpr- cff - const stbtt__buf
								// UnexposedExpr- info - const stbtt_fontinfo *
									// DeclRefExpr- info - const stbtt_fontinfo *
					// ReturnStmt-  - 
						// BinaryOperator-  - int [Binary Operator: EQ (==)]
							// CallExpr- stbtt__GetGlyphInfoT2 - int
								// UnexposedExpr- stbtt__GetGlyphInfoT2 - int (*)(const stbtt_fontinfo *, int, int *, int *, int *, int *)
									// DeclRefExpr- stbtt__GetGlyphInfoT2 - int (const stbtt_fontinfo *, int, int *, int *, int *, int *)
								// UnexposedExpr- info - const stbtt_fontinfo *
									// DeclRefExpr- info - const stbtt_fontinfo *
								// UnexposedExpr- glyph_index - int
									// DeclRefExpr- glyph_index - int
								// UnexposedExpr-  - int *
									// ParenExpr-  - void *
										// CStyleCastExpr-  - void *
											// IntegerLiteral-  - int [Literal: 0]
								// UnexposedExpr-  - int *
									// ParenExpr-  - void *
										// CStyleCastExpr-  - void *
											// IntegerLiteral-  - int [Literal: 0]
								// UnexposedExpr-  - int *
									// ParenExpr-  - void *
										// CStyleCastExpr-  - void *
											// IntegerLiteral-  - int [Literal: 0]
								// UnexposedExpr-  - int *
									// ParenExpr-  - void *
										// CStyleCastExpr-  - void *
											// IntegerLiteral-  - int [Literal: 0]
							// IntegerLiteral-  - int [Literal: 0]
				// BinaryOperator-  - int [Binary Operator: Assign (=)]
					// DeclRefExpr- g - int
					// CallExpr- stbtt__GetGlyfOffset - int
						// UnexposedExpr- stbtt__GetGlyfOffset - int (*)(const stbtt_fontinfo *, int)
							// DeclRefExpr- stbtt__GetGlyfOffset - int (const stbtt_fontinfo *, int)
						// UnexposedExpr- info - const stbtt_fontinfo *
							// DeclRefExpr- info - const stbtt_fontinfo *
						// UnexposedExpr- glyph_index - int
							// DeclRefExpr- glyph_index - int
				// IfStmt-  - 
					// BinaryOperator-  - int [Binary Operator: LT (<)]
						// UnexposedExpr- g - int
							// DeclRefExpr- g - int
						// IntegerLiteral-  - int [Literal: 0]
					// ReturnStmt-  - 
						// IntegerLiteral-  - int [Literal: 1]
				// BinaryOperator-  - stbtt_int16 [Binary Operator: Assign (=)]
					// DeclRefExpr- numberOfContours - stbtt_int16
					// CallExpr- ttSHORT - stbtt_int16
						// UnexposedExpr- ttSHORT - stbtt_int16 (*)(stbtt_uint8 *)
							// DeclRefExpr- ttSHORT - stbtt_int16 (stbtt_uint8 *)
						// BinaryOperator-  - unsigned char * [Binary Operator: Add (+)]
							// UnexposedExpr- data - unsigned char *
								// MemberRefExpr- data - unsigned char *const
									// UnexposedExpr- info - const stbtt_fontinfo *
										// DeclRefExpr- info - const stbtt_fontinfo *
							// UnexposedExpr- g - int
								// DeclRefExpr- g - int
				// ReturnStmt-  - 
					// BinaryOperator-  - int [Binary Operator: EQ (==)]
						// UnexposedExpr- numberOfContours - int
							// UnexposedExpr- numberOfContours - stbtt_int16
								// DeclRefExpr- numberOfContours - stbtt_int16
						// IntegerLiteral-  - int [Literal: 0]
		// FunctionDecl- stbtt__close_shape - int (stbtt_vertex *, int, int, int, stbtt_int32, stbtt_int32, stbtt_int32, stbtt_int32, stbtt_int32, stbtt_int32)
			// ParmDecl- vertices - stbtt_vertex *
				// TypeRef- stbtt_vertex - stbtt_vertex
			// ParmDecl- num_vertices - int
			// ParmDecl- was_off - int
			// ParmDecl- start_off - int
			// ParmDecl- sx - stbtt_int32
				// TypeRef- stbtt_int32 - stbtt_int32
			// ParmDecl- sy - stbtt_int32
				// TypeRef- stbtt_int32 - stbtt_int32
			// ParmDecl- scx - stbtt_int32
				// TypeRef- stbtt_int32 - stbtt_int32
			// ParmDecl- scy - stbtt_int32
				// TypeRef- stbtt_int32 - stbtt_int32
			// ParmDecl- cx - stbtt_int32
				// TypeRef- stbtt_int32 - stbtt_int32
			// ParmDecl- cy - stbtt_int32
				// TypeRef- stbtt_int32 - stbtt_int32
			// CompoundStmt-  - 
				// IfStmt-  - 
					// UnexposedExpr- start_off - int
						// DeclRefExpr- start_off - int
					// CompoundStmt-  - 
						// IfStmt-  - 
							// UnexposedExpr- was_off - int
								// DeclRefExpr- was_off - int
							// CallExpr- stbtt_setvertex - void
								// UnexposedExpr- stbtt_setvertex - void (*)(stbtt_vertex *, stbtt_uint8, stbtt_int32, stbtt_int32, stbtt_int32, stbtt_int32)
									// DeclRefExpr- stbtt_setvertex - void (stbtt_vertex *, stbtt_uint8, stbtt_int32, stbtt_int32, stbtt_int32, stbtt_int32)
								// UnaryOperator-  - stbtt_vertex * [Unary Operator: AddrOf (&)]
									// ArraySubscriptExpr-  - stbtt_vertex
										// UnexposedExpr- vertices - stbtt_vertex *
											// DeclRefExpr- vertices - stbtt_vertex *
										// UnaryOperator-  - int [Unary Operator: PostInc (++)]
											// DeclRefExpr- num_vertices - int
								// UnexposedExpr- STBTT_vcurve - stbtt_uint8
									// DeclRefExpr- STBTT_vcurve - int
								// BinaryOperator-  - int [Binary Operator: Shr (>>)]
									// ParenExpr-  - int
										// BinaryOperator-  - int [Binary Operator: Add (+)]
											// UnexposedExpr- cx - stbtt_int32
												// DeclRefExpr- cx - stbtt_int32
											// UnexposedExpr- scx - stbtt_int32
												// DeclRefExpr- scx - stbtt_int32
									// IntegerLiteral-  - int [Literal: 1]
								// BinaryOperator-  - int [Binary Operator: Shr (>>)]
									// ParenExpr-  - int
										// BinaryOperator-  - int [Binary Operator: Add (+)]
											// UnexposedExpr- cy - stbtt_int32
												// DeclRefExpr- cy - stbtt_int32
											// UnexposedExpr- scy - stbtt_int32
												// DeclRefExpr- scy - stbtt_int32
									// IntegerLiteral-  - int [Literal: 1]
								// UnexposedExpr- cx - stbtt_int32
									// DeclRefExpr- cx - stbtt_int32
								// UnexposedExpr- cy - stbtt_int32
									// DeclRefExpr- cy - stbtt_int32
						// CallExpr- stbtt_setvertex - void
							// UnexposedExpr- stbtt_setvertex - void (*)(stbtt_vertex *, stbtt_uint8, stbtt_int32, stbtt_int32, stbtt_int32, stbtt_int32)
								// DeclRefExpr- stbtt_setvertex - void (stbtt_vertex *, stbtt_uint8, stbtt_int32, stbtt_int32, stbtt_int32, stbtt_int32)
							// UnaryOperator-  - stbtt_vertex * [Unary Operator: AddrOf (&)]
								// ArraySubscriptExpr-  - stbtt_vertex
									// UnexposedExpr- vertices - stbtt_vertex *
										// DeclRefExpr- vertices - stbtt_vertex *
									// UnaryOperator-  - int [Unary Operator: PostInc (++)]
										// DeclRefExpr- num_vertices - int
							// UnexposedExpr- STBTT_vcurve - stbtt_uint8
								// DeclRefExpr- STBTT_vcurve - int
							// UnexposedExpr- sx - stbtt_int32
								// DeclRefExpr- sx - stbtt_int32
							// UnexposedExpr- sy - stbtt_int32
								// DeclRefExpr- sy - stbtt_int32
							// UnexposedExpr- scx - stbtt_int32
								// DeclRefExpr- scx - stbtt_int32
							// UnexposedExpr- scy - stbtt_int32
								// DeclRefExpr- scy - stbtt_int32
					// CompoundStmt-  - 
						// IfStmt-  - 
							// UnexposedExpr- was_off - int
								// DeclRefExpr- was_off - int
							// CallExpr- stbtt_setvertex - void
								// UnexposedExpr- stbtt_setvertex - void (*)(stbtt_vertex *, stbtt_uint8, stbtt_int32, stbtt_int32, stbtt_int32, stbtt_int32)
									// DeclRefExpr- stbtt_setvertex - void (stbtt_vertex *, stbtt_uint8, stbtt_int32, stbtt_int32, stbtt_int32, stbtt_int32)
								// UnaryOperator-  - stbtt_vertex * [Unary Operator: AddrOf (&)]
									// ArraySubscriptExpr-  - stbtt_vertex
										// UnexposedExpr- vertices - stbtt_vertex *
											// DeclRefExpr- vertices - stbtt_vertex *
										// UnaryOperator-  - int [Unary Operator: PostInc (++)]
											// DeclRefExpr- num_vertices - int
								// UnexposedExpr- STBTT_vcurve - stbtt_uint8
									// DeclRefExpr- STBTT_vcurve - int
								// UnexposedExpr- sx - stbtt_int32
									// DeclRefExpr- sx - stbtt_int32
								// UnexposedExpr- sy - stbtt_int32
									// DeclRefExpr- sy - stbtt_int32
								// UnexposedExpr- cx - stbtt_int32
									// DeclRefExpr- cx - stbtt_int32
								// UnexposedExpr- cy - stbtt_int32
									// DeclRefExpr- cy - stbtt_int32
							// CallExpr- stbtt_setvertex - void
								// UnexposedExpr- stbtt_setvertex - void (*)(stbtt_vertex *, stbtt_uint8, stbtt_int32, stbtt_int32, stbtt_int32, stbtt_int32)
									// DeclRefExpr- stbtt_setvertex - void (stbtt_vertex *, stbtt_uint8, stbtt_int32, stbtt_int32, stbtt_int32, stbtt_int32)
								// UnaryOperator-  - stbtt_vertex * [Unary Operator: AddrOf (&)]
									// ArraySubscriptExpr-  - stbtt_vertex
										// UnexposedExpr- vertices - stbtt_vertex *
											// DeclRefExpr- vertices - stbtt_vertex *
										// UnaryOperator-  - int [Unary Operator: PostInc (++)]
											// DeclRefExpr- num_vertices - int
								// UnexposedExpr- STBTT_vline - stbtt_uint8
									// DeclRefExpr- STBTT_vline - int
								// UnexposedExpr- sx - stbtt_int32
									// DeclRefExpr- sx - stbtt_int32
								// UnexposedExpr- sy - stbtt_int32
									// DeclRefExpr- sy - stbtt_int32
								// IntegerLiteral-  - int [Literal: 0]
								// IntegerLiteral-  - int [Literal: 0]
				// ReturnStmt-  - 
					// UnexposedExpr- num_vertices - int
						// DeclRefExpr- num_vertices - int
		// FunctionDecl- stbtt__GetGlyphShapeTT - int (const stbtt_fontinfo *, int, stbtt_vertex **)
			// ParmDecl- info - const stbtt_fontinfo *
				// TypeRef- stbtt_fontinfo - stbtt_fontinfo
			// ParmDecl- glyph_index - int
			// ParmDecl- pvertices - stbtt_vertex **
				// TypeRef- stbtt_vertex - stbtt_vertex
			// CompoundStmt-  - 
				// DeclStmt-  - 
					// VarDecl- numberOfContours - stbtt_int16
						// TypeRef- stbtt_int16 - stbtt_int16
				// DeclStmt-  - 
					// VarDecl- endPtsOfContours - stbtt_uint8 *
						// TypeRef- stbtt_uint8 - stbtt_uint8
				// DeclStmt-  - 
					// VarDecl- data - stbtt_uint8 *
						// TypeRef- stbtt_uint8 - stbtt_uint8
						// UnexposedExpr- data - unsigned char *
							// MemberRefExpr- data - unsigned char *const
								// UnexposedExpr- info - const stbtt_fontinfo *
									// DeclRefExpr- info - const stbtt_fontinfo *
				// DeclStmt-  - 
					// VarDecl- vertices - stbtt_vertex *
						// TypeRef- stbtt_vertex - stbtt_vertex
						// UnexposedExpr-  - stbtt_vertex *
							// IntegerLiteral-  - int [Literal: 0]
				// DeclStmt-  - 
					// VarDecl- num_vertices - int
						// IntegerLiteral-  - int [Literal: 0]
				// DeclStmt-  - 
					// VarDecl- g - int
						// CallExpr- stbtt__GetGlyfOffset - int
							// UnexposedExpr- stbtt__GetGlyfOffset - int (*)(const stbtt_fontinfo *, int)
								// DeclRefExpr- stbtt__GetGlyfOffset - int (const stbtt_fontinfo *, int)
							// UnexposedExpr- info - const stbtt_fontinfo *
								// DeclRefExpr- info - const stbtt_fontinfo *
							// UnexposedExpr- glyph_index - int
								// DeclRefExpr- glyph_index - int
				// BinaryOperator-  - stbtt_vertex * [Binary Operator: Assign (=)]
					// UnaryOperator-  - stbtt_vertex * [Unary Operator: Deref (*)]
						// UnexposedExpr- pvertices - stbtt_vertex **
							// DeclRefExpr- pvertices - stbtt_vertex **
					// UnexposedExpr-  - stbtt_vertex *
						// ParenExpr-  - void *
							// CStyleCastExpr-  - void *
								// IntegerLiteral-  - int [Literal: 0]
				// IfStmt-  - 
					// BinaryOperator-  - int [Binary Operator: LT (<)]
						// UnexposedExpr- g - int
							// DeclRefExpr- g - int
						// IntegerLiteral-  - int [Literal: 0]
					// ReturnStmt-  - 
						// IntegerLiteral-  - int [Literal: 0]
				// BinaryOperator-  - stbtt_int16 [Binary Operator: Assign (=)]
					// DeclRefExpr- numberOfContours - stbtt_int16
					// CallExpr- ttSHORT - stbtt_int16
						// UnexposedExpr- ttSHORT - stbtt_int16 (*)(stbtt_uint8 *)
							// DeclRefExpr- ttSHORT - stbtt_int16 (stbtt_uint8 *)
						// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
							// UnexposedExpr- data - stbtt_uint8 *
								// DeclRefExpr- data - stbtt_uint8 *
							// UnexposedExpr- g - int
								// DeclRefExpr- g - int
				// IfStmt-  - 
					// BinaryOperator-  - int [Binary Operator: GT (>)]
						// UnexposedExpr- numberOfContours - int
							// UnexposedExpr- numberOfContours - stbtt_int16
								// DeclRefExpr- numberOfContours - stbtt_int16
						// IntegerLiteral-  - int [Literal: 0]
					// CompoundStmt-  - 
						// DeclStmt-  - 
							// VarDecl- flags - stbtt_uint8
								// TypeRef- stbtt_uint8 - stbtt_uint8
								// UnexposedExpr-  - stbtt_uint8
									// IntegerLiteral-  - int [Literal: 0]
							// VarDecl- flagcount - stbtt_uint8
								// TypeRef- stbtt_uint8 - stbtt_uint8
						// DeclStmt-  - 
							// VarDecl- ins - stbtt_int32
								// TypeRef- stbtt_int32 - stbtt_int32
							// VarDecl- i - stbtt_int32
								// TypeRef- stbtt_int32 - stbtt_int32
							// VarDecl- j - stbtt_int32
								// TypeRef- stbtt_int32 - stbtt_int32
								// IntegerLiteral-  - int [Literal: 0]
							// VarDecl- m - stbtt_int32
								// TypeRef- stbtt_int32 - stbtt_int32
							// VarDecl- n - stbtt_int32
								// TypeRef- stbtt_int32 - stbtt_int32
							// VarDecl- next_move - stbtt_int32
								// TypeRef- stbtt_int32 - stbtt_int32
							// VarDecl- was_off - stbtt_int32
								// TypeRef- stbtt_int32 - stbtt_int32
								// IntegerLiteral-  - int [Literal: 0]
							// VarDecl- off - stbtt_int32
								// TypeRef- stbtt_int32 - stbtt_int32
							// VarDecl- start_off - stbtt_int32
								// TypeRef- stbtt_int32 - stbtt_int32
								// IntegerLiteral-  - int [Literal: 0]
						// DeclStmt-  - 
							// VarDecl- x - stbtt_int32
								// TypeRef- stbtt_int32 - stbtt_int32
							// VarDecl- y - stbtt_int32
								// TypeRef- stbtt_int32 - stbtt_int32
							// VarDecl- cx - stbtt_int32
								// TypeRef- stbtt_int32 - stbtt_int32
							// VarDecl- cy - stbtt_int32
								// TypeRef- stbtt_int32 - stbtt_int32
							// VarDecl- sx - stbtt_int32
								// TypeRef- stbtt_int32 - stbtt_int32
							// VarDecl- sy - stbtt_int32
								// TypeRef- stbtt_int32 - stbtt_int32
							// VarDecl- scx - stbtt_int32
								// TypeRef- stbtt_int32 - stbtt_int32
							// VarDecl- scy - stbtt_int32
								// TypeRef- stbtt_int32 - stbtt_int32
						// DeclStmt-  - 
							// VarDecl- points - stbtt_uint8 *
								// TypeRef- stbtt_uint8 - stbtt_uint8
						// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Assign (=)]
							// DeclRefExpr- endPtsOfContours - stbtt_uint8 *
							// ParenExpr-  - stbtt_uint8 *
								// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
									// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
										// UnexposedExpr- data - stbtt_uint8 *
											// DeclRefExpr- data - stbtt_uint8 *
										// UnexposedExpr- g - int
											// DeclRefExpr- g - int
									// IntegerLiteral-  - int [Literal: 10]
						// BinaryOperator-  - stbtt_int32 [Binary Operator: Assign (=)]
							// DeclRefExpr- ins - stbtt_int32
							// UnexposedExpr- ttUSHORT - stbtt_int32
								// CallExpr- ttUSHORT - stbtt_uint16
									// UnexposedExpr- ttUSHORT - stbtt_uint16 (*)(stbtt_uint8 *)
										// DeclRefExpr- ttUSHORT - stbtt_uint16 (stbtt_uint8 *)
									// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
										// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
											// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
												// UnexposedExpr- data - stbtt_uint8 *
													// DeclRefExpr- data - stbtt_uint8 *
												// UnexposedExpr- g - int
													// DeclRefExpr- g - int
											// IntegerLiteral-  - int [Literal: 10]
										// BinaryOperator-  - int [Binary Operator: Mul (*)]
											// UnexposedExpr- numberOfContours - int
												// UnexposedExpr- numberOfContours - stbtt_int16
													// DeclRefExpr- numberOfContours - stbtt_int16
											// IntegerLiteral-  - int [Literal: 2]
						// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Assign (=)]
							// DeclRefExpr- points - stbtt_uint8 *
							// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
								// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
									// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
										// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
											// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
												// UnexposedExpr- data - stbtt_uint8 *
													// DeclRefExpr- data - stbtt_uint8 *
												// UnexposedExpr- g - int
													// DeclRefExpr- g - int
											// IntegerLiteral-  - int [Literal: 10]
										// BinaryOperator-  - int [Binary Operator: Mul (*)]
											// UnexposedExpr- numberOfContours - int
												// UnexposedExpr- numberOfContours - stbtt_int16
													// DeclRefExpr- numberOfContours - stbtt_int16
											// IntegerLiteral-  - int [Literal: 2]
									// IntegerLiteral-  - int [Literal: 2]
								// UnexposedExpr- ins - stbtt_int32
									// DeclRefExpr- ins - stbtt_int32
						// BinaryOperator-  - stbtt_int32 [Binary Operator: Assign (=)]
							// DeclRefExpr- n - stbtt_int32
							// BinaryOperator-  - int [Binary Operator: Add (+)]
								// IntegerLiteral-  - int [Literal: 1]
								// UnexposedExpr- ttUSHORT - int
									// CallExpr- ttUSHORT - stbtt_uint16
										// UnexposedExpr- ttUSHORT - stbtt_uint16 (*)(stbtt_uint8 *)
											// DeclRefExpr- ttUSHORT - stbtt_uint16 (stbtt_uint8 *)
										// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Sub (-)]
											// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
												// UnexposedExpr- endPtsOfContours - stbtt_uint8 *
													// DeclRefExpr- endPtsOfContours - stbtt_uint8 *
												// BinaryOperator-  - int [Binary Operator: Mul (*)]
													// UnexposedExpr- numberOfContours - int
														// UnexposedExpr- numberOfContours - stbtt_int16
															// DeclRefExpr- numberOfContours - stbtt_int16
													// IntegerLiteral-  - int [Literal: 2]
											// IntegerLiteral-  - int [Literal: 2]
						// BinaryOperator-  - stbtt_int32 [Binary Operator: Assign (=)]
							// DeclRefExpr- m - stbtt_int32
							// BinaryOperator-  - int [Binary Operator: Add (+)]
								// UnexposedExpr- n - stbtt_int32
									// DeclRefExpr- n - stbtt_int32
								// BinaryOperator-  - int [Binary Operator: Mul (*)]
									// IntegerLiteral-  - int [Literal: 2]
									// UnexposedExpr- numberOfContours - int
										// UnexposedExpr- numberOfContours - stbtt_int16
											// DeclRefExpr- numberOfContours - stbtt_int16
						// BinaryOperator-  - stbtt_vertex * [Binary Operator: Assign (=)]
							// DeclRefExpr- vertices - stbtt_vertex *
							// CStyleCastExpr-  - stbtt_vertex *
								// TypeRef- stbtt_vertex - stbtt_vertex
								// CallExpr- malloc - void *
									// UnexposedExpr- malloc - void *(*)(unsigned long long)
										// DeclRefExpr- malloc - void *(unsigned long long)
									// BinaryOperator-  - unsigned long long [Binary Operator: Mul (*)]
										// UnexposedExpr- m - unsigned long long
											// UnexposedExpr- m - stbtt_int32
												// DeclRefExpr- m - stbtt_int32
										// UnaryExpr-  - unsigned long long [Unary Operator: 99999 ()]
											// ParenExpr-  - stbtt_vertex
												// ArraySubscriptExpr-  - stbtt_vertex
													// UnexposedExpr- vertices - stbtt_vertex *
														// DeclRefExpr- vertices - stbtt_vertex *
													// IntegerLiteral-  - int [Literal: 0]
						// IfStmt-  - 
							// BinaryOperator-  - int [Binary Operator: EQ (==)]
								// UnexposedExpr- vertices - stbtt_vertex *
									// DeclRefExpr- vertices - stbtt_vertex *
								// UnexposedExpr-  - stbtt_vertex *
									// IntegerLiteral-  - int [Literal: 0]
							// ReturnStmt-  - 
								// IntegerLiteral-  - int [Literal: 0]
						// BinaryOperator-  - stbtt_int32 [Binary Operator: Assign (=)]
							// DeclRefExpr- next_move - stbtt_int32
							// IntegerLiteral-  - int [Literal: 0]
						// BinaryOperator-  - stbtt_uint8 [Binary Operator: Assign (=)]
							// DeclRefExpr- flagcount - stbtt_uint8
							// UnexposedExpr-  - stbtt_uint8
								// IntegerLiteral-  - int [Literal: 0]
						// BinaryOperator-  - stbtt_int32 [Binary Operator: Assign (=)]
							// DeclRefExpr- off - stbtt_int32
							// BinaryOperator-  - int [Binary Operator: Sub (-)]
								// UnexposedExpr- m - stbtt_int32
									// DeclRefExpr- m - stbtt_int32
								// UnexposedExpr- n - stbtt_int32
									// DeclRefExpr- n - stbtt_int32
						// ForStmt-  - 
							// BinaryOperator-  - stbtt_int32 [Binary Operator: Assign (=)]
								// DeclRefExpr- i - stbtt_int32
								// IntegerLiteral-  - int [Literal: 0]
							// BinaryOperator-  - int [Binary Operator: LT (<)]
								// UnexposedExpr- i - stbtt_int32
									// DeclRefExpr- i - stbtt_int32
								// UnexposedExpr- n - stbtt_int32
									// DeclRefExpr- n - stbtt_int32
							// UnaryOperator-  - stbtt_int32 [Unary Operator: PreInc (++)]
								// DeclRefExpr- i - stbtt_int32
							// CompoundStmt-  - 
								// IfStmt-  - 
									// BinaryOperator-  - int [Binary Operator: EQ (==)]
										// UnexposedExpr- flagcount - int
											// UnexposedExpr- flagcount - stbtt_uint8
												// DeclRefExpr- flagcount - stbtt_uint8
										// IntegerLiteral-  - int [Literal: 0]
									// CompoundStmt-  - 
										// BinaryOperator-  - stbtt_uint8 [Binary Operator: Assign (=)]
											// DeclRefExpr- flags - stbtt_uint8
											// UnexposedExpr-  - stbtt_uint8
												// UnaryOperator-  - stbtt_uint8 [Unary Operator: Deref (*)]
													// UnaryOperator-  - stbtt_uint8 * [Unary Operator: PostInc (++)]
														// DeclRefExpr- points - stbtt_uint8 *
										// IfStmt-  - 
											// BinaryOperator-  - int [Binary Operator: And (&)]
												// UnexposedExpr- flags - int
													// UnexposedExpr- flags - stbtt_uint8
														// DeclRefExpr- flags - stbtt_uint8
												// IntegerLiteral-  - int [Literal: 8]
											// BinaryOperator-  - stbtt_uint8 [Binary Operator: Assign (=)]
												// DeclRefExpr- flagcount - stbtt_uint8
												// UnexposedExpr-  - stbtt_uint8
													// UnaryOperator-  - stbtt_uint8 [Unary Operator: Deref (*)]
														// UnaryOperator-  - stbtt_uint8 * [Unary Operator: PostInc (++)]
															// DeclRefExpr- points - stbtt_uint8 *
									// UnaryOperator-  - stbtt_uint8 [Unary Operator: PreDec (--)]
										// DeclRefExpr- flagcount - stbtt_uint8
								// BinaryOperator-  - unsigned char [Binary Operator: Assign (=)]
									// MemberRefExpr- type - unsigned char
										// ArraySubscriptExpr-  - stbtt_vertex
											// UnexposedExpr- vertices - stbtt_vertex *
												// DeclRefExpr- vertices - stbtt_vertex *
											// BinaryOperator-  - int [Binary Operator: Add (+)]
												// UnexposedExpr- off - stbtt_int32
													// DeclRefExpr- off - stbtt_int32
												// UnexposedExpr- i - stbtt_int32
													// DeclRefExpr- i - stbtt_int32
									// UnexposedExpr- flags - stbtt_uint8
										// DeclRefExpr- flags - stbtt_uint8
						// BinaryOperator-  - stbtt_int32 [Binary Operator: Assign (=)]
							// DeclRefExpr- x - stbtt_int32
							// IntegerLiteral-  - int [Literal: 0]
						// ForStmt-  - 
							// BinaryOperator-  - stbtt_int32 [Binary Operator: Assign (=)]
								// DeclRefExpr- i - stbtt_int32
								// IntegerLiteral-  - int [Literal: 0]
							// BinaryOperator-  - int [Binary Operator: LT (<)]
								// UnexposedExpr- i - stbtt_int32
									// DeclRefExpr- i - stbtt_int32
								// UnexposedExpr- n - stbtt_int32
									// DeclRefExpr- n - stbtt_int32
							// UnaryOperator-  - stbtt_int32 [Unary Operator: PreInc (++)]
								// DeclRefExpr- i - stbtt_int32
							// CompoundStmt-  - 
								// BinaryOperator-  - stbtt_uint8 [Binary Operator: Assign (=)]
									// DeclRefExpr- flags - stbtt_uint8
									// UnexposedExpr- type - unsigned char
										// MemberRefExpr- type - unsigned char
											// ArraySubscriptExpr-  - stbtt_vertex
												// UnexposedExpr- vertices - stbtt_vertex *
													// DeclRefExpr- vertices - stbtt_vertex *
												// BinaryOperator-  - int [Binary Operator: Add (+)]
													// UnexposedExpr- off - stbtt_int32
														// DeclRefExpr- off - stbtt_int32
													// UnexposedExpr- i - stbtt_int32
														// DeclRefExpr- i - stbtt_int32
								// IfStmt-  - 
									// BinaryOperator-  - int [Binary Operator: And (&)]
										// UnexposedExpr- flags - int
											// UnexposedExpr- flags - stbtt_uint8
												// DeclRefExpr- flags - stbtt_uint8
										// IntegerLiteral-  - int [Literal: 2]
									// CompoundStmt-  - 
										// DeclStmt-  - 
											// VarDecl- dx - stbtt_int16
												// TypeRef- stbtt_int16 - stbtt_int16
												// UnexposedExpr-  - stbtt_int16
													// UnexposedExpr-  - stbtt_uint8
														// UnaryOperator-  - stbtt_uint8 [Unary Operator: Deref (*)]
															// UnaryOperator-  - stbtt_uint8 * [Unary Operator: PostInc (++)]
																// DeclRefExpr- points - stbtt_uint8 *
										// CompoundAssignOperator-  - stbtt_int32
											// DeclRefExpr- x - stbtt_int32
											// ConditionalOperator-  - int
												// ParenExpr-  - int
													// BinaryOperator-  - int [Binary Operator: And (&)]
														// UnexposedExpr- flags - int
															// UnexposedExpr- flags - stbtt_uint8
																// DeclRefExpr- flags - stbtt_uint8
														// IntegerLiteral-  - int [Literal: 16]
												// UnexposedExpr- dx - int
													// UnexposedExpr- dx - stbtt_int16
														// DeclRefExpr- dx - stbtt_int16
												// UnaryOperator-  - int [Unary Operator: Minus (-)]
													// UnexposedExpr- dx - int
														// UnexposedExpr- dx - stbtt_int16
															// DeclRefExpr- dx - stbtt_int16
									// CompoundStmt-  - 
										// IfStmt-  - 
											// UnaryOperator-  - int [Unary Operator: LNot (!)]
												// ParenExpr-  - int
													// BinaryOperator-  - int [Binary Operator: And (&)]
														// UnexposedExpr- flags - int
															// UnexposedExpr- flags - stbtt_uint8
																// DeclRefExpr- flags - stbtt_uint8
														// IntegerLiteral-  - int [Literal: 16]
											// CompoundStmt-  - 
												// BinaryOperator-  - stbtt_int32 [Binary Operator: Assign (=)]
													// DeclRefExpr- x - stbtt_int32
													// BinaryOperator-  - int [Binary Operator: Add (+)]
														// UnexposedExpr- x - stbtt_int32
															// DeclRefExpr- x - stbtt_int32
														// UnexposedExpr-  - int
															// CStyleCastExpr-  - stbtt_int16
																// TypeRef- stbtt_int16 - stbtt_int16
																// ParenExpr-  - int
																	// BinaryOperator-  - int [Binary Operator: Add (+)]
																		// BinaryOperator-  - int [Binary Operator: Mul (*)]
																			// UnexposedExpr-  - int
																				// UnexposedExpr-  - stbtt_uint8
																					// ArraySubscriptExpr-  - stbtt_uint8
																						// UnexposedExpr- points - stbtt_uint8 *
																							// DeclRefExpr- points - stbtt_uint8 *
																						// IntegerLiteral-  - int [Literal: 0]
																			// IntegerLiteral-  - int [Literal: 256]
																		// UnexposedExpr-  - int
																			// UnexposedExpr-  - stbtt_uint8
																				// ArraySubscriptExpr-  - stbtt_uint8
																					// UnexposedExpr- points - stbtt_uint8 *
																						// DeclRefExpr- points - stbtt_uint8 *
																					// IntegerLiteral-  - int [Literal: 1]
												// CompoundAssignOperator-  - stbtt_uint8 *
													// DeclRefExpr- points - stbtt_uint8 *
													// IntegerLiteral-  - int [Literal: 2]
								// BinaryOperator-  - short [Binary Operator: Assign (=)]
									// MemberRefExpr- x - short
										// ArraySubscriptExpr-  - stbtt_vertex
											// UnexposedExpr- vertices - stbtt_vertex *
												// DeclRefExpr- vertices - stbtt_vertex *
											// BinaryOperator-  - int [Binary Operator: Add (+)]
												// UnexposedExpr- off - stbtt_int32
													// DeclRefExpr- off - stbtt_int32
												// UnexposedExpr- i - stbtt_int32
													// DeclRefExpr- i - stbtt_int32
									// CStyleCastExpr-  - stbtt_int16
										// TypeRef- stbtt_int16 - stbtt_int16
										// UnexposedExpr- x - stbtt_int32
											// DeclRefExpr- x - stbtt_int32
						// BinaryOperator-  - stbtt_int32 [Binary Operator: Assign (=)]
							// DeclRefExpr- y - stbtt_int32
							// IntegerLiteral-  - int [Literal: 0]
						// ForStmt-  - 
							// BinaryOperator-  - stbtt_int32 [Binary Operator: Assign (=)]
								// DeclRefExpr- i - stbtt_int32
								// IntegerLiteral-  - int [Literal: 0]
							// BinaryOperator-  - int [Binary Operator: LT (<)]
								// UnexposedExpr- i - stbtt_int32
									// DeclRefExpr- i - stbtt_int32
								// UnexposedExpr- n - stbtt_int32
									// DeclRefExpr- n - stbtt_int32
							// UnaryOperator-  - stbtt_int32 [Unary Operator: PreInc (++)]
								// DeclRefExpr- i - stbtt_int32
							// CompoundStmt-  - 
								// BinaryOperator-  - stbtt_uint8 [Binary Operator: Assign (=)]
									// DeclRefExpr- flags - stbtt_uint8
									// UnexposedExpr- type - unsigned char
										// MemberRefExpr- type - unsigned char
											// ArraySubscriptExpr-  - stbtt_vertex
												// UnexposedExpr- vertices - stbtt_vertex *
													// DeclRefExpr- vertices - stbtt_vertex *
												// BinaryOperator-  - int [Binary Operator: Add (+)]
													// UnexposedExpr- off - stbtt_int32
														// DeclRefExpr- off - stbtt_int32
													// UnexposedExpr- i - stbtt_int32
														// DeclRefExpr- i - stbtt_int32
								// IfStmt-  - 
									// BinaryOperator-  - int [Binary Operator: And (&)]
										// UnexposedExpr- flags - int
											// UnexposedExpr- flags - stbtt_uint8
												// DeclRefExpr- flags - stbtt_uint8
										// IntegerLiteral-  - int [Literal: 4]
									// CompoundStmt-  - 
										// DeclStmt-  - 
											// VarDecl- dy - stbtt_int16
												// TypeRef- stbtt_int16 - stbtt_int16
												// UnexposedExpr-  - stbtt_int16
													// UnexposedExpr-  - stbtt_uint8
														// UnaryOperator-  - stbtt_uint8 [Unary Operator: Deref (*)]
															// UnaryOperator-  - stbtt_uint8 * [Unary Operator: PostInc (++)]
																// DeclRefExpr- points - stbtt_uint8 *
										// CompoundAssignOperator-  - stbtt_int32
											// DeclRefExpr- y - stbtt_int32
											// ConditionalOperator-  - int
												// ParenExpr-  - int
													// BinaryOperator-  - int [Binary Operator: And (&)]
														// UnexposedExpr- flags - int
															// UnexposedExpr- flags - stbtt_uint8
																// DeclRefExpr- flags - stbtt_uint8
														// IntegerLiteral-  - int [Literal: 32]
												// UnexposedExpr- dy - int
													// UnexposedExpr- dy - stbtt_int16
														// DeclRefExpr- dy - stbtt_int16
												// UnaryOperator-  - int [Unary Operator: Minus (-)]
													// UnexposedExpr- dy - int
														// UnexposedExpr- dy - stbtt_int16
															// DeclRefExpr- dy - stbtt_int16
									// CompoundStmt-  - 
										// IfStmt-  - 
											// UnaryOperator-  - int [Unary Operator: LNot (!)]
												// ParenExpr-  - int
													// BinaryOperator-  - int [Binary Operator: And (&)]
														// UnexposedExpr- flags - int
															// UnexposedExpr- flags - stbtt_uint8
																// DeclRefExpr- flags - stbtt_uint8
														// IntegerLiteral-  - int [Literal: 32]
											// CompoundStmt-  - 
												// BinaryOperator-  - stbtt_int32 [Binary Operator: Assign (=)]
													// DeclRefExpr- y - stbtt_int32
													// BinaryOperator-  - int [Binary Operator: Add (+)]
														// UnexposedExpr- y - stbtt_int32
															// DeclRefExpr- y - stbtt_int32
														// UnexposedExpr-  - int
															// CStyleCastExpr-  - stbtt_int16
																// TypeRef- stbtt_int16 - stbtt_int16
																// ParenExpr-  - int
																	// BinaryOperator-  - int [Binary Operator: Add (+)]
																		// BinaryOperator-  - int [Binary Operator: Mul (*)]
																			// UnexposedExpr-  - int
																				// UnexposedExpr-  - stbtt_uint8
																					// ArraySubscriptExpr-  - stbtt_uint8
																						// UnexposedExpr- points - stbtt_uint8 *
																							// DeclRefExpr- points - stbtt_uint8 *
																						// IntegerLiteral-  - int [Literal: 0]
																			// IntegerLiteral-  - int [Literal: 256]
																		// UnexposedExpr-  - int
																			// UnexposedExpr-  - stbtt_uint8
																				// ArraySubscriptExpr-  - stbtt_uint8
																					// UnexposedExpr- points - stbtt_uint8 *
																						// DeclRefExpr- points - stbtt_uint8 *
																					// IntegerLiteral-  - int [Literal: 1]
												// CompoundAssignOperator-  - stbtt_uint8 *
													// DeclRefExpr- points - stbtt_uint8 *
													// IntegerLiteral-  - int [Literal: 2]
								// BinaryOperator-  - short [Binary Operator: Assign (=)]
									// MemberRefExpr- y - short
										// ArraySubscriptExpr-  - stbtt_vertex
											// UnexposedExpr- vertices - stbtt_vertex *
												// DeclRefExpr- vertices - stbtt_vertex *
											// BinaryOperator-  - int [Binary Operator: Add (+)]
												// UnexposedExpr- off - stbtt_int32
													// DeclRefExpr- off - stbtt_int32
												// UnexposedExpr- i - stbtt_int32
													// DeclRefExpr- i - stbtt_int32
									// CStyleCastExpr-  - stbtt_int16
										// TypeRef- stbtt_int16 - stbtt_int16
										// UnexposedExpr- y - stbtt_int32
											// DeclRefExpr- y - stbtt_int32
						// BinaryOperator-  - int [Binary Operator: Assign (=)]
							// DeclRefExpr- num_vertices - int
							// IntegerLiteral-  - int [Literal: 0]
						// BinaryOperator-  - stbtt_int32 [Binary Operator: Assign (=)]
							// DeclRefExpr- sx - stbtt_int32
							// BinaryOperator-  - stbtt_int32 [Binary Operator: Assign (=)]
								// DeclRefExpr- sy - stbtt_int32
								// BinaryOperator-  - stbtt_int32 [Binary Operator: Assign (=)]
									// DeclRefExpr- cx - stbtt_int32
									// BinaryOperator-  - stbtt_int32 [Binary Operator: Assign (=)]
										// DeclRefExpr- cy - stbtt_int32
										// BinaryOperator-  - stbtt_int32 [Binary Operator: Assign (=)]
											// DeclRefExpr- scx - stbtt_int32
											// BinaryOperator-  - stbtt_int32 [Binary Operator: Assign (=)]
												// DeclRefExpr- scy - stbtt_int32
												// IntegerLiteral-  - int [Literal: 0]
						// ForStmt-  - 
							// BinaryOperator-  - stbtt_int32 [Binary Operator: Assign (=)]
								// DeclRefExpr- i - stbtt_int32
								// IntegerLiteral-  - int [Literal: 0]
							// BinaryOperator-  - int [Binary Operator: LT (<)]
								// UnexposedExpr- i - stbtt_int32
									// DeclRefExpr- i - stbtt_int32
								// UnexposedExpr- n - stbtt_int32
									// DeclRefExpr- n - stbtt_int32
							// UnaryOperator-  - stbtt_int32 [Unary Operator: PreInc (++)]
								// DeclRefExpr- i - stbtt_int32
							// CompoundStmt-  - 
								// BinaryOperator-  - stbtt_uint8 [Binary Operator: Assign (=)]
									// DeclRefExpr- flags - stbtt_uint8
									// UnexposedExpr- type - unsigned char
										// MemberRefExpr- type - unsigned char
											// ArraySubscriptExpr-  - stbtt_vertex
												// UnexposedExpr- vertices - stbtt_vertex *
													// DeclRefExpr- vertices - stbtt_vertex *
												// BinaryOperator-  - int [Binary Operator: Add (+)]
													// UnexposedExpr- off - stbtt_int32
														// DeclRefExpr- off - stbtt_int32
													// UnexposedExpr- i - stbtt_int32
														// DeclRefExpr- i - stbtt_int32
								// BinaryOperator-  - stbtt_int32 [Binary Operator: Assign (=)]
									// DeclRefExpr- x - stbtt_int32
									// UnexposedExpr-  - stbtt_int32
										// CStyleCastExpr-  - stbtt_int16
											// TypeRef- stbtt_int16 - stbtt_int16
											// UnexposedExpr- x - short
												// MemberRefExpr- x - short
													// ArraySubscriptExpr-  - stbtt_vertex
														// UnexposedExpr- vertices - stbtt_vertex *
															// DeclRefExpr- vertices - stbtt_vertex *
														// BinaryOperator-  - int [Binary Operator: Add (+)]
															// UnexposedExpr- off - stbtt_int32
																// DeclRefExpr- off - stbtt_int32
															// UnexposedExpr- i - stbtt_int32
																// DeclRefExpr- i - stbtt_int32
								// BinaryOperator-  - stbtt_int32 [Binary Operator: Assign (=)]
									// DeclRefExpr- y - stbtt_int32
									// UnexposedExpr-  - stbtt_int32
										// CStyleCastExpr-  - stbtt_int16
											// TypeRef- stbtt_int16 - stbtt_int16
											// UnexposedExpr- y - short
												// MemberRefExpr- y - short
													// ArraySubscriptExpr-  - stbtt_vertex
														// UnexposedExpr- vertices - stbtt_vertex *
															// DeclRefExpr- vertices - stbtt_vertex *
														// BinaryOperator-  - int [Binary Operator: Add (+)]
															// UnexposedExpr- off - stbtt_int32
																// DeclRefExpr- off - stbtt_int32
															// UnexposedExpr- i - stbtt_int32
																// DeclRefExpr- i - stbtt_int32
								// IfStmt-  - 
									// BinaryOperator-  - int [Binary Operator: EQ (==)]
										// UnexposedExpr- next_move - stbtt_int32
											// DeclRefExpr- next_move - stbtt_int32
										// UnexposedExpr- i - stbtt_int32
											// DeclRefExpr- i - stbtt_int32
									// CompoundStmt-  - 
										// IfStmt-  - 
											// BinaryOperator-  - int [Binary Operator: NE (!=)]
												// UnexposedExpr- i - stbtt_int32
													// DeclRefExpr- i - stbtt_int32
												// IntegerLiteral-  - int [Literal: 0]
											// BinaryOperator-  - int [Binary Operator: Assign (=)]
												// DeclRefExpr- num_vertices - int
												// CallExpr- stbtt__close_shape - int
													// UnexposedExpr- stbtt__close_shape - int (*)(stbtt_vertex *, int, int, int, stbtt_int32, stbtt_int32, stbtt_int32, stbtt_int32, stbtt_int32, stbtt_int32)
														// DeclRefExpr- stbtt__close_shape - int (stbtt_vertex *, int, int, int, stbtt_int32, stbtt_int32, stbtt_int32, stbtt_int32, stbtt_int32, stbtt_int32)
													// UnexposedExpr- vertices - stbtt_vertex *
														// DeclRefExpr- vertices - stbtt_vertex *
													// UnexposedExpr- num_vertices - int
														// DeclRefExpr- num_vertices - int
													// UnexposedExpr- was_off - stbtt_int32
														// DeclRefExpr- was_off - stbtt_int32
													// UnexposedExpr- start_off - stbtt_int32
														// DeclRefExpr- start_off - stbtt_int32
													// UnexposedExpr- sx - stbtt_int32
														// DeclRefExpr- sx - stbtt_int32
													// UnexposedExpr- sy - stbtt_int32
														// DeclRefExpr- sy - stbtt_int32
													// UnexposedExpr- scx - stbtt_int32
														// DeclRefExpr- scx - stbtt_int32
													// UnexposedExpr- scy - stbtt_int32
														// DeclRefExpr- scy - stbtt_int32
													// UnexposedExpr- cx - stbtt_int32
														// DeclRefExpr- cx - stbtt_int32
													// UnexposedExpr- cy - stbtt_int32
														// DeclRefExpr- cy - stbtt_int32
										// BinaryOperator-  - stbtt_int32 [Binary Operator: Assign (=)]
											// DeclRefExpr- start_off - stbtt_int32
											// UnaryOperator-  - int [Unary Operator: LNot (!)]
												// ParenExpr-  - int
													// BinaryOperator-  - int [Binary Operator: And (&)]
														// UnexposedExpr- flags - int
															// UnexposedExpr- flags - stbtt_uint8
																// DeclRefExpr- flags - stbtt_uint8
														// IntegerLiteral-  - int [Literal: 1]
										// IfStmt-  - 
											// UnexposedExpr- start_off - stbtt_int32
												// DeclRefExpr- start_off - stbtt_int32
											// CompoundStmt-  - 
												// BinaryOperator-  - stbtt_int32 [Binary Operator: Assign (=)]
													// DeclRefExpr- scx - stbtt_int32
													// UnexposedExpr- x - stbtt_int32
														// DeclRefExpr- x - stbtt_int32
												// BinaryOperator-  - stbtt_int32 [Binary Operator: Assign (=)]
													// DeclRefExpr- scy - stbtt_int32
													// UnexposedExpr- y - stbtt_int32
														// DeclRefExpr- y - stbtt_int32
												// IfStmt-  - 
													// UnaryOperator-  - int [Unary Operator: LNot (!)]
														// ParenExpr-  - int
															// BinaryOperator-  - int [Binary Operator: And (&)]
																// UnexposedExpr- type - int
																	// UnexposedExpr- type - unsigned char
																		// MemberRefExpr- type - unsigned char
																			// ArraySubscriptExpr-  - stbtt_vertex
																				// UnexposedExpr- vertices - stbtt_vertex *
																					// DeclRefExpr- vertices - stbtt_vertex *
																				// BinaryOperator-  - int [Binary Operator: Add (+)]
																					// BinaryOperator-  - int [Binary Operator: Add (+)]
																						// UnexposedExpr- off - stbtt_int32
																							// DeclRefExpr- off - stbtt_int32
																						// UnexposedExpr- i - stbtt_int32
																							// DeclRefExpr- i - stbtt_int32
																					// IntegerLiteral-  - int [Literal: 1]
																// IntegerLiteral-  - int [Literal: 1]
													// CompoundStmt-  - 
														// BinaryOperator-  - stbtt_int32 [Binary Operator: Assign (=)]
															// DeclRefExpr- sx - stbtt_int32
															// BinaryOperator-  - int [Binary Operator: Shr (>>)]
																// ParenExpr-  - int
																	// BinaryOperator-  - int [Binary Operator: Add (+)]
																		// UnexposedExpr- x - stbtt_int32
																			// DeclRefExpr- x - stbtt_int32
																		// CStyleCastExpr-  - stbtt_int32
																			// TypeRef- stbtt_int32 - stbtt_int32
																			// UnexposedExpr- x - short
																				// MemberRefExpr- x - short
																					// ArraySubscriptExpr-  - stbtt_vertex
																						// UnexposedExpr- vertices - stbtt_vertex *
																							// DeclRefExpr- vertices - stbtt_vertex *
																						// BinaryOperator-  - int [Binary Operator: Add (+)]
																							// BinaryOperator-  - int [Binary Operator: Add (+)]
																								// UnexposedExpr- off - stbtt_int32
																									// DeclRefExpr- off - stbtt_int32
																								// UnexposedExpr- i - stbtt_int32
																									// DeclRefExpr- i - stbtt_int32
																							// IntegerLiteral-  - int [Literal: 1]
																// IntegerLiteral-  - int [Literal: 1]
														// BinaryOperator-  - stbtt_int32 [Binary Operator: Assign (=)]
															// DeclRefExpr- sy - stbtt_int32
															// BinaryOperator-  - int [Binary Operator: Shr (>>)]
																// ParenExpr-  - int
																	// BinaryOperator-  - int [Binary Operator: Add (+)]
																		// UnexposedExpr- y - stbtt_int32
																			// DeclRefExpr- y - stbtt_int32
																		// CStyleCastExpr-  - stbtt_int32
																			// TypeRef- stbtt_int32 - stbtt_int32
																			// UnexposedExpr- y - short
																				// MemberRefExpr- y - short
																					// ArraySubscriptExpr-  - stbtt_vertex
																						// UnexposedExpr- vertices - stbtt_vertex *
																							// DeclRefExpr- vertices - stbtt_vertex *
																						// BinaryOperator-  - int [Binary Operator: Add (+)]
																							// BinaryOperator-  - int [Binary Operator: Add (+)]
																								// UnexposedExpr- off - stbtt_int32
																									// DeclRefExpr- off - stbtt_int32
																								// UnexposedExpr- i - stbtt_int32
																									// DeclRefExpr- i - stbtt_int32
																							// IntegerLiteral-  - int [Literal: 1]
																// IntegerLiteral-  - int [Literal: 1]
													// CompoundStmt-  - 
														// BinaryOperator-  - stbtt_int32 [Binary Operator: Assign (=)]
															// DeclRefExpr- sx - stbtt_int32
															// CStyleCastExpr-  - stbtt_int32
																// TypeRef- stbtt_int32 - stbtt_int32
																// UnexposedExpr- x - short
																	// MemberRefExpr- x - short
																		// ArraySubscriptExpr-  - stbtt_vertex
																			// UnexposedExpr- vertices - stbtt_vertex *
																				// DeclRefExpr- vertices - stbtt_vertex *
																			// BinaryOperator-  - int [Binary Operator: Add (+)]
																				// BinaryOperator-  - int [Binary Operator: Add (+)]
																					// UnexposedExpr- off - stbtt_int32
																						// DeclRefExpr- off - stbtt_int32
																					// UnexposedExpr- i - stbtt_int32
																						// DeclRefExpr- i - stbtt_int32
																				// IntegerLiteral-  - int [Literal: 1]
														// BinaryOperator-  - stbtt_int32 [Binary Operator: Assign (=)]
															// DeclRefExpr- sy - stbtt_int32
															// CStyleCastExpr-  - stbtt_int32
																// TypeRef- stbtt_int32 - stbtt_int32
																// UnexposedExpr- y - short
																	// MemberRefExpr- y - short
																		// ArraySubscriptExpr-  - stbtt_vertex
																			// UnexposedExpr- vertices - stbtt_vertex *
																				// DeclRefExpr- vertices - stbtt_vertex *
																			// BinaryOperator-  - int [Binary Operator: Add (+)]
																				// BinaryOperator-  - int [Binary Operator: Add (+)]
																					// UnexposedExpr- off - stbtt_int32
																						// DeclRefExpr- off - stbtt_int32
																					// UnexposedExpr- i - stbtt_int32
																						// DeclRefExpr- i - stbtt_int32
																				// IntegerLiteral-  - int [Literal: 1]
														// UnaryOperator-  - stbtt_int32 [Unary Operator: PreInc (++)]
															// DeclRefExpr- i - stbtt_int32
											// CompoundStmt-  - 
												// BinaryOperator-  - stbtt_int32 [Binary Operator: Assign (=)]
													// DeclRefExpr- sx - stbtt_int32
													// UnexposedExpr- x - stbtt_int32
														// DeclRefExpr- x - stbtt_int32
												// BinaryOperator-  - stbtt_int32 [Binary Operator: Assign (=)]
													// DeclRefExpr- sy - stbtt_int32
													// UnexposedExpr- y - stbtt_int32
														// DeclRefExpr- y - stbtt_int32
										// CallExpr- stbtt_setvertex - void
											// UnexposedExpr- stbtt_setvertex - void (*)(stbtt_vertex *, stbtt_uint8, stbtt_int32, stbtt_int32, stbtt_int32, stbtt_int32)
												// DeclRefExpr- stbtt_setvertex - void (stbtt_vertex *, stbtt_uint8, stbtt_int32, stbtt_int32, stbtt_int32, stbtt_int32)
											// UnaryOperator-  - stbtt_vertex * [Unary Operator: AddrOf (&)]
												// ArraySubscriptExpr-  - stbtt_vertex
													// UnexposedExpr- vertices - stbtt_vertex *
														// DeclRefExpr- vertices - stbtt_vertex *
													// UnaryOperator-  - int [Unary Operator: PostInc (++)]
														// DeclRefExpr- num_vertices - int
											// UnexposedExpr- STBTT_vmove - stbtt_uint8
												// DeclRefExpr- STBTT_vmove - int
											// UnexposedExpr- sx - stbtt_int32
												// DeclRefExpr- sx - stbtt_int32
											// UnexposedExpr- sy - stbtt_int32
												// DeclRefExpr- sy - stbtt_int32
											// IntegerLiteral-  - int [Literal: 0]
											// IntegerLiteral-  - int [Literal: 0]
										// BinaryOperator-  - stbtt_int32 [Binary Operator: Assign (=)]
											// DeclRefExpr- was_off - stbtt_int32
											// IntegerLiteral-  - int [Literal: 0]
										// BinaryOperator-  - stbtt_int32 [Binary Operator: Assign (=)]
											// DeclRefExpr- next_move - stbtt_int32
											// BinaryOperator-  - int [Binary Operator: Add (+)]
												// IntegerLiteral-  - int [Literal: 1]
												// UnexposedExpr- ttUSHORT - int
													// CallExpr- ttUSHORT - stbtt_uint16
														// UnexposedExpr- ttUSHORT - stbtt_uint16 (*)(stbtt_uint8 *)
															// DeclRefExpr- ttUSHORT - stbtt_uint16 (stbtt_uint8 *)
														// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
															// UnexposedExpr- endPtsOfContours - stbtt_uint8 *
																// DeclRefExpr- endPtsOfContours - stbtt_uint8 *
															// BinaryOperator-  - int [Binary Operator: Mul (*)]
																// UnexposedExpr- j - stbtt_int32
																	// DeclRefExpr- j - stbtt_int32
																// IntegerLiteral-  - int [Literal: 2]
										// UnaryOperator-  - stbtt_int32 [Unary Operator: PreInc (++)]
											// DeclRefExpr- j - stbtt_int32
									// CompoundStmt-  - 
										// IfStmt-  - 
											// UnaryOperator-  - int [Unary Operator: LNot (!)]
												// ParenExpr-  - int
													// BinaryOperator-  - int [Binary Operator: And (&)]
														// UnexposedExpr- flags - int
															// UnexposedExpr- flags - stbtt_uint8
																// DeclRefExpr- flags - stbtt_uint8
														// IntegerLiteral-  - int [Literal: 1]
											// CompoundStmt-  - 
												// IfStmt-  - 
													// UnexposedExpr- was_off - stbtt_int32
														// DeclRefExpr- was_off - stbtt_int32
													// CallExpr- stbtt_setvertex - void
														// UnexposedExpr- stbtt_setvertex - void (*)(stbtt_vertex *, stbtt_uint8, stbtt_int32, stbtt_int32, stbtt_int32, stbtt_int32)
															// DeclRefExpr- stbtt_setvertex - void (stbtt_vertex *, stbtt_uint8, stbtt_int32, stbtt_int32, stbtt_int32, stbtt_int32)
														// UnaryOperator-  - stbtt_vertex * [Unary Operator: AddrOf (&)]
															// ArraySubscriptExpr-  - stbtt_vertex
																// UnexposedExpr- vertices - stbtt_vertex *
																	// DeclRefExpr- vertices - stbtt_vertex *
																// UnaryOperator-  - int [Unary Operator: PostInc (++)]
																	// DeclRefExpr- num_vertices - int
														// UnexposedExpr- STBTT_vcurve - stbtt_uint8
															// DeclRefExpr- STBTT_vcurve - int
														// BinaryOperator-  - int [Binary Operator: Shr (>>)]
															// ParenExpr-  - int
																// BinaryOperator-  - int [Binary Operator: Add (+)]
																	// UnexposedExpr- cx - stbtt_int32
																		// DeclRefExpr- cx - stbtt_int32
																	// UnexposedExpr- x - stbtt_int32
																		// DeclRefExpr- x - stbtt_int32
															// IntegerLiteral-  - int [Literal: 1]
														// BinaryOperator-  - int [Binary Operator: Shr (>>)]
															// ParenExpr-  - int
																// BinaryOperator-  - int [Binary Operator: Add (+)]
																	// UnexposedExpr- cy - stbtt_int32
																		// DeclRefExpr- cy - stbtt_int32
																	// UnexposedExpr- y - stbtt_int32
																		// DeclRefExpr- y - stbtt_int32
															// IntegerLiteral-  - int [Literal: 1]
														// UnexposedExpr- cx - stbtt_int32
															// DeclRefExpr- cx - stbtt_int32
														// UnexposedExpr- cy - stbtt_int32
															// DeclRefExpr- cy - stbtt_int32
												// BinaryOperator-  - stbtt_int32 [Binary Operator: Assign (=)]
													// DeclRefExpr- cx - stbtt_int32
													// UnexposedExpr- x - stbtt_int32
														// DeclRefExpr- x - stbtt_int32
												// BinaryOperator-  - stbtt_int32 [Binary Operator: Assign (=)]
													// DeclRefExpr- cy - stbtt_int32
													// UnexposedExpr- y - stbtt_int32
														// DeclRefExpr- y - stbtt_int32
												// BinaryOperator-  - stbtt_int32 [Binary Operator: Assign (=)]
													// DeclRefExpr- was_off - stbtt_int32
													// IntegerLiteral-  - int [Literal: 1]
											// CompoundStmt-  - 
												// IfStmt-  - 
													// UnexposedExpr- was_off - stbtt_int32
														// DeclRefExpr- was_off - stbtt_int32
													// CallExpr- stbtt_setvertex - void
														// UnexposedExpr- stbtt_setvertex - void (*)(stbtt_vertex *, stbtt_uint8, stbtt_int32, stbtt_int32, stbtt_int32, stbtt_int32)
															// DeclRefExpr- stbtt_setvertex - void (stbtt_vertex *, stbtt_uint8, stbtt_int32, stbtt_int32, stbtt_int32, stbtt_int32)
														// UnaryOperator-  - stbtt_vertex * [Unary Operator: AddrOf (&)]
															// ArraySubscriptExpr-  - stbtt_vertex
																// UnexposedExpr- vertices - stbtt_vertex *
																	// DeclRefExpr- vertices - stbtt_vertex *
																// UnaryOperator-  - int [Unary Operator: PostInc (++)]
																	// DeclRefExpr- num_vertices - int
														// UnexposedExpr- STBTT_vcurve - stbtt_uint8
															// DeclRefExpr- STBTT_vcurve - int
														// UnexposedExpr- x - stbtt_int32
															// DeclRefExpr- x - stbtt_int32
														// UnexposedExpr- y - stbtt_int32
															// DeclRefExpr- y - stbtt_int32
														// UnexposedExpr- cx - stbtt_int32
															// DeclRefExpr- cx - stbtt_int32
														// UnexposedExpr- cy - stbtt_int32
															// DeclRefExpr- cy - stbtt_int32
													// CallExpr- stbtt_setvertex - void
														// UnexposedExpr- stbtt_setvertex - void (*)(stbtt_vertex *, stbtt_uint8, stbtt_int32, stbtt_int32, stbtt_int32, stbtt_int32)
															// DeclRefExpr- stbtt_setvertex - void (stbtt_vertex *, stbtt_uint8, stbtt_int32, stbtt_int32, stbtt_int32, stbtt_int32)
														// UnaryOperator-  - stbtt_vertex * [Unary Operator: AddrOf (&)]
															// ArraySubscriptExpr-  - stbtt_vertex
																// UnexposedExpr- vertices - stbtt_vertex *
																	// DeclRefExpr- vertices - stbtt_vertex *
																// UnaryOperator-  - int [Unary Operator: PostInc (++)]
																	// DeclRefExpr- num_vertices - int
														// UnexposedExpr- STBTT_vline - stbtt_uint8
															// DeclRefExpr- STBTT_vline - int
														// UnexposedExpr- x - stbtt_int32
															// DeclRefExpr- x - stbtt_int32
														// UnexposedExpr- y - stbtt_int32
															// DeclRefExpr- y - stbtt_int32
														// IntegerLiteral-  - int [Literal: 0]
														// IntegerLiteral-  - int [Literal: 0]
												// BinaryOperator-  - stbtt_int32 [Binary Operator: Assign (=)]
													// DeclRefExpr- was_off - stbtt_int32
													// IntegerLiteral-  - int [Literal: 0]
						// BinaryOperator-  - int [Binary Operator: Assign (=)]
							// DeclRefExpr- num_vertices - int
							// CallExpr- stbtt__close_shape - int
								// UnexposedExpr- stbtt__close_shape - int (*)(stbtt_vertex *, int, int, int, stbtt_int32, stbtt_int32, stbtt_int32, stbtt_int32, stbtt_int32, stbtt_int32)
									// DeclRefExpr- stbtt__close_shape - int (stbtt_vertex *, int, int, int, stbtt_int32, stbtt_int32, stbtt_int32, stbtt_int32, stbtt_int32, stbtt_int32)
								// UnexposedExpr- vertices - stbtt_vertex *
									// DeclRefExpr- vertices - stbtt_vertex *
								// UnexposedExpr- num_vertices - int
									// DeclRefExpr- num_vertices - int
								// UnexposedExpr- was_off - stbtt_int32
									// DeclRefExpr- was_off - stbtt_int32
								// UnexposedExpr- start_off - stbtt_int32
									// DeclRefExpr- start_off - stbtt_int32
								// UnexposedExpr- sx - stbtt_int32
									// DeclRefExpr- sx - stbtt_int32
								// UnexposedExpr- sy - stbtt_int32
									// DeclRefExpr- sy - stbtt_int32
								// UnexposedExpr- scx - stbtt_int32
									// DeclRefExpr- scx - stbtt_int32
								// UnexposedExpr- scy - stbtt_int32
									// DeclRefExpr- scy - stbtt_int32
								// UnexposedExpr- cx - stbtt_int32
									// DeclRefExpr- cx - stbtt_int32
								// UnexposedExpr- cy - stbtt_int32
									// DeclRefExpr- cy - stbtt_int32
					// IfStmt-  - 
						// BinaryOperator-  - int [Binary Operator: EQ (==)]
							// UnexposedExpr- numberOfContours - int
								// UnexposedExpr- numberOfContours - stbtt_int16
									// DeclRefExpr- numberOfContours - stbtt_int16
							// UnaryOperator-  - int [Unary Operator: Minus (-)]
								// IntegerLiteral-  - int [Literal: 1]
						// CompoundStmt-  - 
							// DeclStmt-  - 
								// VarDecl- more - int
									// IntegerLiteral-  - int [Literal: 1]
							// DeclStmt-  - 
								// VarDecl- comp - stbtt_uint8 *
									// TypeRef- stbtt_uint8 - stbtt_uint8
									// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
										// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
											// UnexposedExpr- data - stbtt_uint8 *
												// DeclRefExpr- data - stbtt_uint8 *
											// UnexposedExpr- g - int
												// DeclRefExpr- g - int
										// IntegerLiteral-  - int [Literal: 10]
							// BinaryOperator-  - int [Binary Operator: Assign (=)]
								// DeclRefExpr- num_vertices - int
								// IntegerLiteral-  - int [Literal: 0]
							// BinaryOperator-  - stbtt_vertex * [Binary Operator: Assign (=)]
								// DeclRefExpr- vertices - stbtt_vertex *
								// UnexposedExpr-  - stbtt_vertex *
									// IntegerLiteral-  - int [Literal: 0]
							// WhileStmt-  - 
								// UnexposedExpr- more - int
									// DeclRefExpr- more - int
								// CompoundStmt-  - 
									// DeclStmt-  - 
										// VarDecl- flags - stbtt_uint16
											// TypeRef- stbtt_uint16 - stbtt_uint16
										// VarDecl- gidx - stbtt_uint16
											// TypeRef- stbtt_uint16 - stbtt_uint16
									// DeclStmt-  - 
										// VarDecl- comp_num_verts - int
											// IntegerLiteral-  - int [Literal: 0]
										// VarDecl- i - int
									// DeclStmt-  - 
										// VarDecl- comp_verts - stbtt_vertex *
											// TypeRef- stbtt_vertex - stbtt_vertex
											// UnexposedExpr-  - stbtt_vertex *
												// IntegerLiteral-  - int [Literal: 0]
										// VarDecl- tmp - stbtt_vertex *
											// TypeRef- stbtt_vertex - stbtt_vertex
											// UnexposedExpr-  - stbtt_vertex *
												// IntegerLiteral-  - int [Literal: 0]
									// DeclStmt-  - 
										// VarDecl- mtx - float [6]
											// IntegerLiteral-  - int [Literal: 6]
											// InitListExpr-  - float [6]
												// UnexposedExpr-  - float
													// IntegerLiteral-  - int [Literal: 1]
												// UnexposedExpr-  - float
													// IntegerLiteral-  - int [Literal: 0]
												// UnexposedExpr-  - float
													// IntegerLiteral-  - int [Literal: 0]
												// UnexposedExpr-  - float
													// IntegerLiteral-  - int [Literal: 1]
												// UnexposedExpr-  - float
													// IntegerLiteral-  - int [Literal: 0]
												// UnexposedExpr-  - float
													// IntegerLiteral-  - int [Literal: 0]
										// VarDecl- m - float
										// VarDecl- n - float
									// BinaryOperator-  - stbtt_uint16 [Binary Operator: Assign (=)]
										// DeclRefExpr- flags - stbtt_uint16
										// UnexposedExpr- ttSHORT - stbtt_uint16
											// CallExpr- ttSHORT - stbtt_int16
												// UnexposedExpr- ttSHORT - stbtt_int16 (*)(stbtt_uint8 *)
													// DeclRefExpr- ttSHORT - stbtt_int16 (stbtt_uint8 *)
												// UnexposedExpr- comp - stbtt_uint8 *
													// DeclRefExpr- comp - stbtt_uint8 *
									// CompoundAssignOperator-  - stbtt_uint8 *
										// DeclRefExpr- comp - stbtt_uint8 *
										// IntegerLiteral-  - int [Literal: 2]
									// BinaryOperator-  - stbtt_uint16 [Binary Operator: Assign (=)]
										// DeclRefExpr- gidx - stbtt_uint16
										// UnexposedExpr- ttSHORT - stbtt_uint16
											// CallExpr- ttSHORT - stbtt_int16
												// UnexposedExpr- ttSHORT - stbtt_int16 (*)(stbtt_uint8 *)
													// DeclRefExpr- ttSHORT - stbtt_int16 (stbtt_uint8 *)
												// UnexposedExpr- comp - stbtt_uint8 *
													// DeclRefExpr- comp - stbtt_uint8 *
									// CompoundAssignOperator-  - stbtt_uint8 *
										// DeclRefExpr- comp - stbtt_uint8 *
										// IntegerLiteral-  - int [Literal: 2]
									// IfStmt-  - 
										// BinaryOperator-  - int [Binary Operator: And (&)]
											// UnexposedExpr- flags - int
												// UnexposedExpr- flags - stbtt_uint16
													// DeclRefExpr- flags - stbtt_uint16
											// IntegerLiteral-  - int [Literal: 2]
										// CompoundStmt-  - 
											// IfStmt-  - 
												// BinaryOperator-  - int [Binary Operator: And (&)]
													// UnexposedExpr- flags - int
														// UnexposedExpr- flags - stbtt_uint16
															// DeclRefExpr- flags - stbtt_uint16
													// IntegerLiteral-  - int [Literal: 1]
												// CompoundStmt-  - 
													// BinaryOperator-  - float [Binary Operator: Assign (=)]
														// ArraySubscriptExpr-  - float
															// UnexposedExpr- mtx - float *
																// DeclRefExpr- mtx - float [6]
															// IntegerLiteral-  - int [Literal: 4]
														// UnexposedExpr- ttSHORT - float
															// CallExpr- ttSHORT - stbtt_int16
																// UnexposedExpr- ttSHORT - stbtt_int16 (*)(stbtt_uint8 *)
																	// DeclRefExpr- ttSHORT - stbtt_int16 (stbtt_uint8 *)
																// UnexposedExpr- comp - stbtt_uint8 *
																	// DeclRefExpr- comp - stbtt_uint8 *
													// CompoundAssignOperator-  - stbtt_uint8 *
														// DeclRefExpr- comp - stbtt_uint8 *
														// IntegerLiteral-  - int [Literal: 2]
													// BinaryOperator-  - float [Binary Operator: Assign (=)]
														// ArraySubscriptExpr-  - float
															// UnexposedExpr- mtx - float *
																// DeclRefExpr- mtx - float [6]
															// IntegerLiteral-  - int [Literal: 5]
														// UnexposedExpr- ttSHORT - float
															// CallExpr- ttSHORT - stbtt_int16
																// UnexposedExpr- ttSHORT - stbtt_int16 (*)(stbtt_uint8 *)
																	// DeclRefExpr- ttSHORT - stbtt_int16 (stbtt_uint8 *)
																// UnexposedExpr- comp - stbtt_uint8 *
																	// DeclRefExpr- comp - stbtt_uint8 *
													// CompoundAssignOperator-  - stbtt_uint8 *
														// DeclRefExpr- comp - stbtt_uint8 *
														// IntegerLiteral-  - int [Literal: 2]
												// CompoundStmt-  - 
													// BinaryOperator-  - float [Binary Operator: Assign (=)]
														// ArraySubscriptExpr-  - float
															// UnexposedExpr- mtx - float *
																// DeclRefExpr- mtx - float [6]
															// IntegerLiteral-  - int [Literal: 4]
														// UnexposedExpr-  - float
															// UnexposedExpr-  - stbtt_int8
																// ParenExpr-  - stbtt_int8
																	// UnaryOperator-  - stbtt_int8 [Unary Operator: Deref (*)]
																		// CStyleCastExpr-  - stbtt_int8 *
																			// TypeRef- stbtt_int8 - stbtt_int8
																			// UnexposedExpr-  - stbtt_uint8 *
																				// ParenExpr-  - stbtt_uint8 *
																					// DeclRefExpr- comp - stbtt_uint8 *
													// CompoundAssignOperator-  - stbtt_uint8 *
														// DeclRefExpr- comp - stbtt_uint8 *
														// IntegerLiteral-  - int [Literal: 1]
													// BinaryOperator-  - float [Binary Operator: Assign (=)]
														// ArraySubscriptExpr-  - float
															// UnexposedExpr- mtx - float *
																// DeclRefExpr- mtx - float [6]
															// IntegerLiteral-  - int [Literal: 5]
														// UnexposedExpr-  - float
															// UnexposedExpr-  - stbtt_int8
																// ParenExpr-  - stbtt_int8
																	// UnaryOperator-  - stbtt_int8 [Unary Operator: Deref (*)]
																		// CStyleCastExpr-  - stbtt_int8 *
																			// TypeRef- stbtt_int8 - stbtt_int8
																			// UnexposedExpr-  - stbtt_uint8 *
																				// ParenExpr-  - stbtt_uint8 *
																					// DeclRefExpr- comp - stbtt_uint8 *
													// CompoundAssignOperator-  - stbtt_uint8 *
														// DeclRefExpr- comp - stbtt_uint8 *
														// IntegerLiteral-  - int [Literal: 1]
										// CompoundStmt-  - 
											// NullStmt-  - 
									// IfStmt-  - 
										// BinaryOperator-  - int [Binary Operator: And (&)]
											// UnexposedExpr- flags - int
												// UnexposedExpr- flags - stbtt_uint16
													// DeclRefExpr- flags - stbtt_uint16
											// ParenExpr-  - int
												// BinaryOperator-  - int [Binary Operator: Shl (<<)]
													// IntegerLiteral-  - int [Literal: 1]
													// IntegerLiteral-  - int [Literal: 3]
										// CompoundStmt-  - 
											// BinaryOperator-  - float [Binary Operator: Assign (=)]
												// ArraySubscriptExpr-  - float
													// UnexposedExpr- mtx - float *
														// DeclRefExpr- mtx - float [6]
													// IntegerLiteral-  - int [Literal: 0]
												// BinaryOperator-  - float [Binary Operator: Assign (=)]
													// ArraySubscriptExpr-  - float
														// UnexposedExpr- mtx - float *
															// DeclRefExpr- mtx - float [6]
														// IntegerLiteral-  - int [Literal: 3]
													// BinaryOperator-  - float [Binary Operator: Div (/)]
														// UnexposedExpr- ttSHORT - float
															// UnexposedExpr- ttSHORT - int
																// CallExpr- ttSHORT - stbtt_int16
																	// UnexposedExpr- ttSHORT - stbtt_int16 (*)(stbtt_uint8 *)
																		// DeclRefExpr- ttSHORT - stbtt_int16 (stbtt_uint8 *)
																	// UnexposedExpr- comp - stbtt_uint8 *
																		// DeclRefExpr- comp - stbtt_uint8 *
														// FloatingLiteral-  - float [Literal: 16384]
											// CompoundAssignOperator-  - stbtt_uint8 *
												// DeclRefExpr- comp - stbtt_uint8 *
												// IntegerLiteral-  - int [Literal: 2]
											// BinaryOperator-  - float [Binary Operator: Assign (=)]
												// ArraySubscriptExpr-  - float
													// UnexposedExpr- mtx - float *
														// DeclRefExpr- mtx - float [6]
													// IntegerLiteral-  - int [Literal: 1]
												// BinaryOperator-  - float [Binary Operator: Assign (=)]
													// ArraySubscriptExpr-  - float
														// UnexposedExpr- mtx - float *
															// DeclRefExpr- mtx - float [6]
														// IntegerLiteral-  - int [Literal: 2]
													// UnexposedExpr-  - float
														// IntegerLiteral-  - int [Literal: 0]
										// IfStmt-  - 
											// BinaryOperator-  - int [Binary Operator: And (&)]
												// UnexposedExpr- flags - int
													// UnexposedExpr- flags - stbtt_uint16
														// DeclRefExpr- flags - stbtt_uint16
												// ParenExpr-  - int
													// BinaryOperator-  - int [Binary Operator: Shl (<<)]
														// IntegerLiteral-  - int [Literal: 1]
														// IntegerLiteral-  - int [Literal: 6]
											// CompoundStmt-  - 
												// BinaryOperator-  - float [Binary Operator: Assign (=)]
													// ArraySubscriptExpr-  - float
														// UnexposedExpr- mtx - float *
															// DeclRefExpr- mtx - float [6]
														// IntegerLiteral-  - int [Literal: 0]
													// BinaryOperator-  - float [Binary Operator: Div (/)]
														// UnexposedExpr- ttSHORT - float
															// UnexposedExpr- ttSHORT - int
																// CallExpr- ttSHORT - stbtt_int16
																	// UnexposedExpr- ttSHORT - stbtt_int16 (*)(stbtt_uint8 *)
																		// DeclRefExpr- ttSHORT - stbtt_int16 (stbtt_uint8 *)
																	// UnexposedExpr- comp - stbtt_uint8 *
																		// DeclRefExpr- comp - stbtt_uint8 *
														// FloatingLiteral-  - float [Literal: 16384]
												// CompoundAssignOperator-  - stbtt_uint8 *
													// DeclRefExpr- comp - stbtt_uint8 *
													// IntegerLiteral-  - int [Literal: 2]
												// BinaryOperator-  - float [Binary Operator: Assign (=)]
													// ArraySubscriptExpr-  - float
														// UnexposedExpr- mtx - float *
															// DeclRefExpr- mtx - float [6]
														// IntegerLiteral-  - int [Literal: 1]
													// BinaryOperator-  - float [Binary Operator: Assign (=)]
														// ArraySubscriptExpr-  - float
															// UnexposedExpr- mtx - float *
																// DeclRefExpr- mtx - float [6]
															// IntegerLiteral-  - int [Literal: 2]
														// UnexposedExpr-  - float
															// IntegerLiteral-  - int [Literal: 0]
												// BinaryOperator-  - float [Binary Operator: Assign (=)]
													// ArraySubscriptExpr-  - float
														// UnexposedExpr- mtx - float *
															// DeclRefExpr- mtx - float [6]
														// IntegerLiteral-  - int [Literal: 3]
													// BinaryOperator-  - float [Binary Operator: Div (/)]
														// UnexposedExpr- ttSHORT - float
															// UnexposedExpr- ttSHORT - int
																// CallExpr- ttSHORT - stbtt_int16
																	// UnexposedExpr- ttSHORT - stbtt_int16 (*)(stbtt_uint8 *)
																		// DeclRefExpr- ttSHORT - stbtt_int16 (stbtt_uint8 *)
																	// UnexposedExpr- comp - stbtt_uint8 *
																		// DeclRefExpr- comp - stbtt_uint8 *
														// FloatingLiteral-  - float [Literal: 16384]
												// CompoundAssignOperator-  - stbtt_uint8 *
													// DeclRefExpr- comp - stbtt_uint8 *
													// IntegerLiteral-  - int [Literal: 2]
											// IfStmt-  - 
												// BinaryOperator-  - int [Binary Operator: And (&)]
													// UnexposedExpr- flags - int
														// UnexposedExpr- flags - stbtt_uint16
															// DeclRefExpr- flags - stbtt_uint16
													// ParenExpr-  - int
														// BinaryOperator-  - int [Binary Operator: Shl (<<)]
															// IntegerLiteral-  - int [Literal: 1]
															// IntegerLiteral-  - int [Literal: 7]
												// CompoundStmt-  - 
													// BinaryOperator-  - float [Binary Operator: Assign (=)]
														// ArraySubscriptExpr-  - float
															// UnexposedExpr- mtx - float *
																// DeclRefExpr- mtx - float [6]
															// IntegerLiteral-  - int [Literal: 0]
														// BinaryOperator-  - float [Binary Operator: Div (/)]
															// UnexposedExpr- ttSHORT - float
																// UnexposedExpr- ttSHORT - int
																	// CallExpr- ttSHORT - stbtt_int16
																		// UnexposedExpr- ttSHORT - stbtt_int16 (*)(stbtt_uint8 *)
																			// DeclRefExpr- ttSHORT - stbtt_int16 (stbtt_uint8 *)
																		// UnexposedExpr- comp - stbtt_uint8 *
																			// DeclRefExpr- comp - stbtt_uint8 *
															// FloatingLiteral-  - float [Literal: 16384]
													// CompoundAssignOperator-  - stbtt_uint8 *
														// DeclRefExpr- comp - stbtt_uint8 *
														// IntegerLiteral-  - int [Literal: 2]
													// BinaryOperator-  - float [Binary Operator: Assign (=)]
														// ArraySubscriptExpr-  - float
															// UnexposedExpr- mtx - float *
																// DeclRefExpr- mtx - float [6]
															// IntegerLiteral-  - int [Literal: 1]
														// BinaryOperator-  - float [Binary Operator: Div (/)]
															// UnexposedExpr- ttSHORT - float
																// UnexposedExpr- ttSHORT - int
																	// CallExpr- ttSHORT - stbtt_int16
																		// UnexposedExpr- ttSHORT - stbtt_int16 (*)(stbtt_uint8 *)
																			// DeclRefExpr- ttSHORT - stbtt_int16 (stbtt_uint8 *)
																		// UnexposedExpr- comp - stbtt_uint8 *
																			// DeclRefExpr- comp - stbtt_uint8 *
															// FloatingLiteral-  - float [Literal: 16384]
													// CompoundAssignOperator-  - stbtt_uint8 *
														// DeclRefExpr- comp - stbtt_uint8 *
														// IntegerLiteral-  - int [Literal: 2]
													// BinaryOperator-  - float [Binary Operator: Assign (=)]
														// ArraySubscriptExpr-  - float
															// UnexposedExpr- mtx - float *
																// DeclRefExpr- mtx - float [6]
															// IntegerLiteral-  - int [Literal: 2]
														// BinaryOperator-  - float [Binary Operator: Div (/)]
															// UnexposedExpr- ttSHORT - float
																// UnexposedExpr- ttSHORT - int
																	// CallExpr- ttSHORT - stbtt_int16
																		// UnexposedExpr- ttSHORT - stbtt_int16 (*)(stbtt_uint8 *)
																			// DeclRefExpr- ttSHORT - stbtt_int16 (stbtt_uint8 *)
																		// UnexposedExpr- comp - stbtt_uint8 *
																			// DeclRefExpr- comp - stbtt_uint8 *
															// FloatingLiteral-  - float [Literal: 16384]
													// CompoundAssignOperator-  - stbtt_uint8 *
														// DeclRefExpr- comp - stbtt_uint8 *
														// IntegerLiteral-  - int [Literal: 2]
													// BinaryOperator-  - float [Binary Operator: Assign (=)]
														// ArraySubscriptExpr-  - float
															// UnexposedExpr- mtx - float *
																// DeclRefExpr- mtx - float [6]
															// IntegerLiteral-  - int [Literal: 3]
														// BinaryOperator-  - float [Binary Operator: Div (/)]
															// UnexposedExpr- ttSHORT - float
																// UnexposedExpr- ttSHORT - int
																	// CallExpr- ttSHORT - stbtt_int16
																		// UnexposedExpr- ttSHORT - stbtt_int16 (*)(stbtt_uint8 *)
																			// DeclRefExpr- ttSHORT - stbtt_int16 (stbtt_uint8 *)
																		// UnexposedExpr- comp - stbtt_uint8 *
																			// DeclRefExpr- comp - stbtt_uint8 *
															// FloatingLiteral-  - float [Literal: 16384]
													// CompoundAssignOperator-  - stbtt_uint8 *
														// DeclRefExpr- comp - stbtt_uint8 *
														// IntegerLiteral-  - int [Literal: 2]
									// BinaryOperator-  - float [Binary Operator: Assign (=)]
										// DeclRefExpr- m - float
										// CStyleCastExpr-  - float
											// CallExpr- sqrt - double
												// UnexposedExpr- sqrt - double (*)(double)
													// DeclRefExpr- sqrt - double (double)
												// UnexposedExpr-  - double
													// BinaryOperator-  - float [Binary Operator: Add (+)]
														// BinaryOperator-  - float [Binary Operator: Mul (*)]
															// UnexposedExpr-  - float
																// ArraySubscriptExpr-  - float
																	// UnexposedExpr- mtx - float *
																		// DeclRefExpr- mtx - float [6]
																	// IntegerLiteral-  - int [Literal: 0]
															// UnexposedExpr-  - float
																// ArraySubscriptExpr-  - float
																	// UnexposedExpr- mtx - float *
																		// DeclRefExpr- mtx - float [6]
																	// IntegerLiteral-  - int [Literal: 0]
														// BinaryOperator-  - float [Binary Operator: Mul (*)]
															// UnexposedExpr-  - float
																// ArraySubscriptExpr-  - float
																	// UnexposedExpr- mtx - float *
																		// DeclRefExpr- mtx - float [6]
																	// IntegerLiteral-  - int [Literal: 1]
															// UnexposedExpr-  - float
																// ArraySubscriptExpr-  - float
																	// UnexposedExpr- mtx - float *
																		// DeclRefExpr- mtx - float [6]
																	// IntegerLiteral-  - int [Literal: 1]
									// BinaryOperator-  - float [Binary Operator: Assign (=)]
										// DeclRefExpr- n - float
										// CStyleCastExpr-  - float
											// CallExpr- sqrt - double
												// UnexposedExpr- sqrt - double (*)(double)
													// DeclRefExpr- sqrt - double (double)
												// UnexposedExpr-  - double
													// BinaryOperator-  - float [Binary Operator: Add (+)]
														// BinaryOperator-  - float [Binary Operator: Mul (*)]
															// UnexposedExpr-  - float
																// ArraySubscriptExpr-  - float
																	// UnexposedExpr- mtx - float *
																		// DeclRefExpr- mtx - float [6]
																	// IntegerLiteral-  - int [Literal: 2]
															// UnexposedExpr-  - float
																// ArraySubscriptExpr-  - float
																	// UnexposedExpr- mtx - float *
																		// DeclRefExpr- mtx - float [6]
																	// IntegerLiteral-  - int [Literal: 2]
														// BinaryOperator-  - float [Binary Operator: Mul (*)]
															// UnexposedExpr-  - float
																// ArraySubscriptExpr-  - float
																	// UnexposedExpr- mtx - float *
																		// DeclRefExpr- mtx - float [6]
																	// IntegerLiteral-  - int [Literal: 3]
															// UnexposedExpr-  - float
																// ArraySubscriptExpr-  - float
																	// UnexposedExpr- mtx - float *
																		// DeclRefExpr- mtx - float [6]
																	// IntegerLiteral-  - int [Literal: 3]
									// BinaryOperator-  - int [Binary Operator: Assign (=)]
										// DeclRefExpr- comp_num_verts - int
										// CallExpr- stbtt_GetGlyphShape - int
											// UnexposedExpr- stbtt_GetGlyphShape - int (*)(const stbtt_fontinfo *, int, stbtt_vertex **)
												// DeclRefExpr- stbtt_GetGlyphShape - int (const stbtt_fontinfo *, int, stbtt_vertex **)
											// UnexposedExpr- info - const stbtt_fontinfo *
												// DeclRefExpr- info - const stbtt_fontinfo *
											// UnexposedExpr- gidx - int
												// UnexposedExpr- gidx - stbtt_uint16
													// DeclRefExpr- gidx - stbtt_uint16
											// UnaryOperator-  - stbtt_vertex ** [Unary Operator: AddrOf (&)]
												// DeclRefExpr- comp_verts - stbtt_vertex *
									// IfStmt-  - 
										// BinaryOperator-  - int [Binary Operator: GT (>)]
											// UnexposedExpr- comp_num_verts - int
												// DeclRefExpr- comp_num_verts - int
											// IntegerLiteral-  - int [Literal: 0]
										// CompoundStmt-  - 
											// ForStmt-  - 
												// BinaryOperator-  - int [Binary Operator: Assign (=)]
													// DeclRefExpr- i - int
													// IntegerLiteral-  - int [Literal: 0]
												// BinaryOperator-  - int [Binary Operator: LT (<)]
													// UnexposedExpr- i - int
														// DeclRefExpr- i - int
													// UnexposedExpr- comp_num_verts - int
														// DeclRefExpr- comp_num_verts - int
												// UnaryOperator-  - int [Unary Operator: PreInc (++)]
													// DeclRefExpr- i - int
												// CompoundStmt-  - 
													// DeclStmt-  - 
														// VarDecl- v - stbtt_vertex *
															// TypeRef- stbtt_vertex - stbtt_vertex
															// UnaryOperator-  - stbtt_vertex * [Unary Operator: AddrOf (&)]
																// ArraySubscriptExpr-  - stbtt_vertex
																	// UnexposedExpr- comp_verts - stbtt_vertex *
																		// DeclRefExpr- comp_verts - stbtt_vertex *
																	// UnexposedExpr- i - int
																		// DeclRefExpr- i - int
													// DeclStmt-  - 
														// VarDecl- x - short
														// VarDecl- y - short
													// BinaryOperator-  - short [Binary Operator: Assign (=)]
														// DeclRefExpr- x - short
														// UnexposedExpr- x - short
															// MemberRefExpr- x - short
																// UnexposedExpr- v - stbtt_vertex *
																	// DeclRefExpr- v - stbtt_vertex *
													// BinaryOperator-  - short [Binary Operator: Assign (=)]
														// DeclRefExpr- y - short
														// UnexposedExpr- y - short
															// MemberRefExpr- y - short
																// UnexposedExpr- v - stbtt_vertex *
																	// DeclRefExpr- v - stbtt_vertex *
													// BinaryOperator-  - short [Binary Operator: Assign (=)]
														// MemberRefExpr- x - short
															// UnexposedExpr- v - stbtt_vertex *
																// DeclRefExpr- v - stbtt_vertex *
														// CStyleCastExpr-  - short
															// ParenExpr-  - float
																// BinaryOperator-  - float [Binary Operator: Mul (*)]
																	// UnexposedExpr- m - float
																		// DeclRefExpr- m - float
																	// ParenExpr-  - float
																		// BinaryOperator-  - float [Binary Operator: Add (+)]
																			// BinaryOperator-  - float [Binary Operator: Add (+)]
																				// BinaryOperator-  - float [Binary Operator: Mul (*)]
																					// UnexposedExpr-  - float
																						// ArraySubscriptExpr-  - float
																							// UnexposedExpr- mtx - float *
																								// DeclRefExpr- mtx - float [6]
																							// IntegerLiteral-  - int [Literal: 0]
																					// UnexposedExpr- x - float
																						// UnexposedExpr- x - int
																							// UnexposedExpr- x - short
																								// DeclRefExpr- x - short
																				// BinaryOperator-  - float [Binary Operator: Mul (*)]
																					// UnexposedExpr-  - float
																						// ArraySubscriptExpr-  - float
																							// UnexposedExpr- mtx - float *
																								// DeclRefExpr- mtx - float [6]
																							// IntegerLiteral-  - int [Literal: 2]
																					// UnexposedExpr- y - float
																						// UnexposedExpr- y - int
																							// UnexposedExpr- y - short
																								// DeclRefExpr- y - short
																			// UnexposedExpr-  - float
																				// ArraySubscriptExpr-  - float
																					// UnexposedExpr- mtx - float *
																						// DeclRefExpr- mtx - float [6]
																					// IntegerLiteral-  - int [Literal: 4]
													// BinaryOperator-  - short [Binary Operator: Assign (=)]
														// MemberRefExpr- y - short
															// UnexposedExpr- v - stbtt_vertex *
																// DeclRefExpr- v - stbtt_vertex *
														// CStyleCastExpr-  - short
															// ParenExpr-  - float
																// BinaryOperator-  - float [Binary Operator: Mul (*)]
																	// UnexposedExpr- n - float
																		// DeclRefExpr- n - float
																	// ParenExpr-  - float
																		// BinaryOperator-  - float [Binary Operator: Add (+)]
																			// BinaryOperator-  - float [Binary Operator: Add (+)]
																				// BinaryOperator-  - float [Binary Operator: Mul (*)]
																					// UnexposedExpr-  - float
																						// ArraySubscriptExpr-  - float
																							// UnexposedExpr- mtx - float *
																								// DeclRefExpr- mtx - float [6]
																							// IntegerLiteral-  - int [Literal: 1]
																					// UnexposedExpr- x - float
																						// UnexposedExpr- x - int
																							// UnexposedExpr- x - short
																								// DeclRefExpr- x - short
																				// BinaryOperator-  - float [Binary Operator: Mul (*)]
																					// UnexposedExpr-  - float
																						// ArraySubscriptExpr-  - float
																							// UnexposedExpr- mtx - float *
																								// DeclRefExpr- mtx - float [6]
																							// IntegerLiteral-  - int [Literal: 3]
																					// UnexposedExpr- y - float
																						// UnexposedExpr- y - int
																							// UnexposedExpr- y - short
																								// DeclRefExpr- y - short
																			// UnexposedExpr-  - float
																				// ArraySubscriptExpr-  - float
																					// UnexposedExpr- mtx - float *
																						// DeclRefExpr- mtx - float [6]
																					// IntegerLiteral-  - int [Literal: 5]
													// BinaryOperator-  - short [Binary Operator: Assign (=)]
														// DeclRefExpr- x - short
														// UnexposedExpr- cx - short
															// MemberRefExpr- cx - short
																// UnexposedExpr- v - stbtt_vertex *
																	// DeclRefExpr- v - stbtt_vertex *
													// BinaryOperator-  - short [Binary Operator: Assign (=)]
														// DeclRefExpr- y - short
														// UnexposedExpr- cy - short
															// MemberRefExpr- cy - short
																// UnexposedExpr- v - stbtt_vertex *
																	// DeclRefExpr- v - stbtt_vertex *
													// BinaryOperator-  - short [Binary Operator: Assign (=)]
														// MemberRefExpr- cx - short
															// UnexposedExpr- v - stbtt_vertex *
																// DeclRefExpr- v - stbtt_vertex *
														// CStyleCastExpr-  - short
															// ParenExpr-  - float
																// BinaryOperator-  - float [Binary Operator: Mul (*)]
																	// UnexposedExpr- m - float
																		// DeclRefExpr- m - float
																	// ParenExpr-  - float
																		// BinaryOperator-  - float [Binary Operator: Add (+)]
																			// BinaryOperator-  - float [Binary Operator: Add (+)]
																				// BinaryOperator-  - float [Binary Operator: Mul (*)]
																					// UnexposedExpr-  - float
																						// ArraySubscriptExpr-  - float
																							// UnexposedExpr- mtx - float *
																								// DeclRefExpr- mtx - float [6]
																							// IntegerLiteral-  - int [Literal: 0]
																					// UnexposedExpr- x - float
																						// UnexposedExpr- x - int
																							// UnexposedExpr- x - short
																								// DeclRefExpr- x - short
																				// BinaryOperator-  - float [Binary Operator: Mul (*)]
																					// UnexposedExpr-  - float
																						// ArraySubscriptExpr-  - float
																							// UnexposedExpr- mtx - float *
																								// DeclRefExpr- mtx - float [6]
																							// IntegerLiteral-  - int [Literal: 2]
																					// UnexposedExpr- y - float
																						// UnexposedExpr- y - int
																							// UnexposedExpr- y - short
																								// DeclRefExpr- y - short
																			// UnexposedExpr-  - float
																				// ArraySubscriptExpr-  - float
																					// UnexposedExpr- mtx - float *
																						// DeclRefExpr- mtx - float [6]
																					// IntegerLiteral-  - int [Literal: 4]
													// BinaryOperator-  - short [Binary Operator: Assign (=)]
														// MemberRefExpr- cy - short
															// UnexposedExpr- v - stbtt_vertex *
																// DeclRefExpr- v - stbtt_vertex *
														// CStyleCastExpr-  - short
															// ParenExpr-  - float
																// BinaryOperator-  - float [Binary Operator: Mul (*)]
																	// UnexposedExpr- n - float
																		// DeclRefExpr- n - float
																	// ParenExpr-  - float
																		// BinaryOperator-  - float [Binary Operator: Add (+)]
																			// BinaryOperator-  - float [Binary Operator: Add (+)]
																				// BinaryOperator-  - float [Binary Operator: Mul (*)]
																					// UnexposedExpr-  - float
																						// ArraySubscriptExpr-  - float
																							// UnexposedExpr- mtx - float *
																								// DeclRefExpr- mtx - float [6]
																							// IntegerLiteral-  - int [Literal: 1]
																					// UnexposedExpr- x - float
																						// UnexposedExpr- x - int
																							// UnexposedExpr- x - short
																								// DeclRefExpr- x - short
																				// BinaryOperator-  - float [Binary Operator: Mul (*)]
																					// UnexposedExpr-  - float
																						// ArraySubscriptExpr-  - float
																							// UnexposedExpr- mtx - float *
																								// DeclRefExpr- mtx - float [6]
																							// IntegerLiteral-  - int [Literal: 3]
																					// UnexposedExpr- y - float
																						// UnexposedExpr- y - int
																							// UnexposedExpr- y - short
																								// DeclRefExpr- y - short
																			// UnexposedExpr-  - float
																				// ArraySubscriptExpr-  - float
																					// UnexposedExpr- mtx - float *
																						// DeclRefExpr- mtx - float [6]
																					// IntegerLiteral-  - int [Literal: 5]
											// BinaryOperator-  - stbtt_vertex * [Binary Operator: Assign (=)]
												// DeclRefExpr- tmp - stbtt_vertex *
												// CStyleCastExpr-  - stbtt_vertex *
													// TypeRef- stbtt_vertex - stbtt_vertex
													// CallExpr- malloc - void *
														// UnexposedExpr- malloc - void *(*)(unsigned long long)
															// DeclRefExpr- malloc - void *(unsigned long long)
														// BinaryOperator-  - unsigned long long [Binary Operator: Mul (*)]
															// UnexposedExpr-  - unsigned long long
																// ParenExpr-  - int
																	// BinaryOperator-  - int [Binary Operator: Add (+)]
																		// UnexposedExpr- num_vertices - int
																			// DeclRefExpr- num_vertices - int
																		// UnexposedExpr- comp_num_verts - int
																			// DeclRefExpr- comp_num_verts - int
															// UnaryExpr-  - unsigned long long [Unary Operator: 99999 ()]
																// TypeRef- stbtt_vertex - stbtt_vertex
											// IfStmt-  - 
												// UnaryOperator-  - int [Unary Operator: LNot (!)]
													// UnexposedExpr- tmp - stbtt_vertex *
														// DeclRefExpr- tmp - stbtt_vertex *
												// CompoundStmt-  - 
													// IfStmt-  - 
														// UnexposedExpr- vertices - stbtt_vertex *
															// DeclRefExpr- vertices - stbtt_vertex *
														// CallExpr- free - void
															// UnexposedExpr- free - void (*)(void *) __attribute__((cdecl))
																// DeclRefExpr- free - void (void *)
															// UnexposedExpr- vertices - void *
																// UnexposedExpr- vertices - stbtt_vertex *
																	// DeclRefExpr- vertices - stbtt_vertex *
													// IfStmt-  - 
														// UnexposedExpr- comp_verts - stbtt_vertex *
															// DeclRefExpr- comp_verts - stbtt_vertex *
														// CallExpr- free - void
															// UnexposedExpr- free - void (*)(void *) __attribute__((cdecl))
																// DeclRefExpr- free - void (void *)
															// UnexposedExpr- comp_verts - void *
																// UnexposedExpr- comp_verts - stbtt_vertex *
																	// DeclRefExpr- comp_verts - stbtt_vertex *
													// ReturnStmt-  - 
														// IntegerLiteral-  - int [Literal: 0]
											// IfStmt-  - 
												// BinaryOperator-  - int [Binary Operator: GT (>)]
													// UnexposedExpr- num_vertices - int
														// DeclRefExpr- num_vertices - int
													// IntegerLiteral-  - int [Literal: 0]
												// CallExpr- memcpy - void *
													// UnexposedExpr- memcpy - void *(*)(void *, const void *, unsigned long long)
														// DeclRefExpr- memcpy - void *(void *, const void *, unsigned long long)
													// UnexposedExpr- tmp - void *
														// UnexposedExpr- tmp - stbtt_vertex *
															// DeclRefExpr- tmp - stbtt_vertex *
													// UnexposedExpr- vertices - const void *
														// UnexposedExpr- vertices - stbtt_vertex *
															// DeclRefExpr- vertices - stbtt_vertex *
													// BinaryOperator-  - unsigned long long [Binary Operator: Mul (*)]
														// UnexposedExpr- num_vertices - unsigned long long
															// UnexposedExpr- num_vertices - int
																// DeclRefExpr- num_vertices - int
														// UnaryExpr-  - unsigned long long [Unary Operator: 99999 ()]
															// TypeRef- stbtt_vertex - stbtt_vertex
											// CallExpr- memcpy - void *
												// UnexposedExpr- memcpy - void *(*)(void *, const void *, unsigned long long)
													// DeclRefExpr- memcpy - void *(void *, const void *, unsigned long long)
												// UnexposedExpr-  - void *
													// BinaryOperator-  - stbtt_vertex * [Binary Operator: Add (+)]
														// UnexposedExpr- tmp - stbtt_vertex *
															// DeclRefExpr- tmp - stbtt_vertex *
														// UnexposedExpr- num_vertices - int
															// DeclRefExpr- num_vertices - int
												// UnexposedExpr- comp_verts - const void *
													// UnexposedExpr- comp_verts - stbtt_vertex *
														// DeclRefExpr- comp_verts - stbtt_vertex *
												// BinaryOperator-  - unsigned long long [Binary Operator: Mul (*)]
													// UnexposedExpr- comp_num_verts - unsigned long long
														// UnexposedExpr- comp_num_verts - int
															// DeclRefExpr- comp_num_verts - int
													// UnaryExpr-  - unsigned long long [Unary Operator: 99999 ()]
														// TypeRef- stbtt_vertex - stbtt_vertex
											// IfStmt-  - 
												// UnexposedExpr- vertices - stbtt_vertex *
													// DeclRefExpr- vertices - stbtt_vertex *
												// CallExpr- free - void
													// UnexposedExpr- free - void (*)(void *) __attribute__((cdecl))
														// DeclRefExpr- free - void (void *)
													// UnexposedExpr- vertices - void *
														// UnexposedExpr- vertices - stbtt_vertex *
															// DeclRefExpr- vertices - stbtt_vertex *
											// BinaryOperator-  - stbtt_vertex * [Binary Operator: Assign (=)]
												// DeclRefExpr- vertices - stbtt_vertex *
												// UnexposedExpr- tmp - stbtt_vertex *
													// DeclRefExpr- tmp - stbtt_vertex *
											// CallExpr- free - void
												// UnexposedExpr- free - void (*)(void *) __attribute__((cdecl))
													// DeclRefExpr- free - void (void *)
												// UnexposedExpr- comp_verts - void *
													// UnexposedExpr- comp_verts - stbtt_vertex *
														// DeclRefExpr- comp_verts - stbtt_vertex *
											// CompoundAssignOperator-  - int
												// DeclRefExpr- num_vertices - int
												// UnexposedExpr- comp_num_verts - int
													// DeclRefExpr- comp_num_verts - int
									// BinaryOperator-  - int [Binary Operator: Assign (=)]
										// DeclRefExpr- more - int
										// BinaryOperator-  - int [Binary Operator: And (&)]
											// UnexposedExpr- flags - int
												// UnexposedExpr- flags - stbtt_uint16
													// DeclRefExpr- flags - stbtt_uint16
											// ParenExpr-  - int
												// BinaryOperator-  - int [Binary Operator: Shl (<<)]
													// IntegerLiteral-  - int [Literal: 1]
													// IntegerLiteral-  - int [Literal: 5]
						// IfStmt-  - 
							// BinaryOperator-  - int [Binary Operator: LT (<)]
								// UnexposedExpr- numberOfContours - int
									// UnexposedExpr- numberOfContours - stbtt_int16
										// DeclRefExpr- numberOfContours - stbtt_int16
								// IntegerLiteral-  - int [Literal: 0]
							// CompoundStmt-  - 
								// NullStmt-  - 
							// CompoundStmt-  - 
				// BinaryOperator-  - stbtt_vertex * [Binary Operator: Assign (=)]
					// UnaryOperator-  - stbtt_vertex * [Unary Operator: Deref (*)]
						// UnexposedExpr- pvertices - stbtt_vertex **
							// DeclRefExpr- pvertices - stbtt_vertex **
					// UnexposedExpr- vertices - stbtt_vertex *
						// DeclRefExpr- vertices - stbtt_vertex *
				// ReturnStmt-  - 
					// UnexposedExpr- num_vertices - int
						// DeclRefExpr- num_vertices - int
		// StructDecl-  - stbtt__csctx
			// FieldDecl- bounds - int
			// FieldDecl- started - int
			// FieldDecl- first_x - float
			// FieldDecl- first_y - float
			// FieldDecl- x - float
			// FieldDecl- y - float
			// FieldDecl- min_x - stbtt_int32
				// TypeRef- stbtt_int32 - stbtt_int32
			// FieldDecl- max_x - stbtt_int32
				// TypeRef- stbtt_int32 - stbtt_int32
			// FieldDecl- min_y - stbtt_int32
				// TypeRef- stbtt_int32 - stbtt_int32
			// FieldDecl- max_y - stbtt_int32
				// TypeRef- stbtt_int32 - stbtt_int32
			// FieldDecl- pvertices - stbtt_vertex *
				// TypeRef- stbtt_vertex - stbtt_vertex
			// FieldDecl- num_vertices - int
		// TypedefDecl- stbtt__csctx - stbtt__csctx
			// StructDecl-  - stbtt__csctx
				// FieldDecl- bounds - int
				// FieldDecl- started - int
				// FieldDecl- first_x - float
				// FieldDecl- first_y - float
				// FieldDecl- x - float
				// FieldDecl- y - float
				// FieldDecl- min_x - stbtt_int32
					// TypeRef- stbtt_int32 - stbtt_int32
				// FieldDecl- max_x - stbtt_int32
					// TypeRef- stbtt_int32 - stbtt_int32
				// FieldDecl- min_y - stbtt_int32
					// TypeRef- stbtt_int32 - stbtt_int32
				// FieldDecl- max_y - stbtt_int32
					// TypeRef- stbtt_int32 - stbtt_int32
				// FieldDecl- pvertices - stbtt_vertex *
					// TypeRef- stbtt_vertex - stbtt_vertex
				// FieldDecl- num_vertices - int
		// FunctionDecl- stbtt__track_vertex - void (stbtt__csctx *, stbtt_int32, stbtt_int32)
			// ParmDecl- c - stbtt__csctx *
				// TypeRef- stbtt__csctx - stbtt__csctx
			// ParmDecl- x - stbtt_int32
				// TypeRef- stbtt_int32 - stbtt_int32
			// ParmDecl- y - stbtt_int32
				// TypeRef- stbtt_int32 - stbtt_int32
			// CompoundStmt-  - 
				// IfStmt-  - 
					// BinaryOperator-  - int [Binary Operator: LOr (||)]
						// BinaryOperator-  - int [Binary Operator: GT (>)]
							// UnexposedExpr- x - stbtt_int32
								// DeclRefExpr- x - stbtt_int32
							// UnexposedExpr- max_x - stbtt_int32
								// MemberRefExpr- max_x - stbtt_int32
									// UnexposedExpr- c - stbtt__csctx *
										// DeclRefExpr- c - stbtt__csctx *
						// UnaryOperator-  - int [Unary Operator: LNot (!)]
							// UnexposedExpr- started - int
								// MemberRefExpr- started - int
									// UnexposedExpr- c - stbtt__csctx *
										// DeclRefExpr- c - stbtt__csctx *
					// BinaryOperator-  - stbtt_int32 [Binary Operator: Assign (=)]
						// MemberRefExpr- max_x - stbtt_int32
							// UnexposedExpr- c - stbtt__csctx *
								// DeclRefExpr- c - stbtt__csctx *
						// UnexposedExpr- x - stbtt_int32
							// DeclRefExpr- x - stbtt_int32
				// IfStmt-  - 
					// BinaryOperator-  - int [Binary Operator: LOr (||)]
						// BinaryOperator-  - int [Binary Operator: GT (>)]
							// UnexposedExpr- y - stbtt_int32
								// DeclRefExpr- y - stbtt_int32
							// UnexposedExpr- max_y - stbtt_int32
								// MemberRefExpr- max_y - stbtt_int32
									// UnexposedExpr- c - stbtt__csctx *
										// DeclRefExpr- c - stbtt__csctx *
						// UnaryOperator-  - int [Unary Operator: LNot (!)]
							// UnexposedExpr- started - int
								// MemberRefExpr- started - int
									// UnexposedExpr- c - stbtt__csctx *
										// DeclRefExpr- c - stbtt__csctx *
					// BinaryOperator-  - stbtt_int32 [Binary Operator: Assign (=)]
						// MemberRefExpr- max_y - stbtt_int32
							// UnexposedExpr- c - stbtt__csctx *
								// DeclRefExpr- c - stbtt__csctx *
						// UnexposedExpr- y - stbtt_int32
							// DeclRefExpr- y - stbtt_int32
				// IfStmt-  - 
					// BinaryOperator-  - int [Binary Operator: LOr (||)]
						// BinaryOperator-  - int [Binary Operator: LT (<)]
							// UnexposedExpr- x - stbtt_int32
								// DeclRefExpr- x - stbtt_int32
							// UnexposedExpr- min_x - stbtt_int32
								// MemberRefExpr- min_x - stbtt_int32
									// UnexposedExpr- c - stbtt__csctx *
										// DeclRefExpr- c - stbtt__csctx *
						// UnaryOperator-  - int [Unary Operator: LNot (!)]
							// UnexposedExpr- started - int
								// MemberRefExpr- started - int
									// UnexposedExpr- c - stbtt__csctx *
										// DeclRefExpr- c - stbtt__csctx *
					// BinaryOperator-  - stbtt_int32 [Binary Operator: Assign (=)]
						// MemberRefExpr- min_x - stbtt_int32
							// UnexposedExpr- c - stbtt__csctx *
								// DeclRefExpr- c - stbtt__csctx *
						// UnexposedExpr- x - stbtt_int32
							// DeclRefExpr- x - stbtt_int32
				// IfStmt-  - 
					// BinaryOperator-  - int [Binary Operator: LOr (||)]
						// BinaryOperator-  - int [Binary Operator: LT (<)]
							// UnexposedExpr- y - stbtt_int32
								// DeclRefExpr- y - stbtt_int32
							// UnexposedExpr- min_y - stbtt_int32
								// MemberRefExpr- min_y - stbtt_int32
									// UnexposedExpr- c - stbtt__csctx *
										// DeclRefExpr- c - stbtt__csctx *
						// UnaryOperator-  - int [Unary Operator: LNot (!)]
							// UnexposedExpr- started - int
								// MemberRefExpr- started - int
									// UnexposedExpr- c - stbtt__csctx *
										// DeclRefExpr- c - stbtt__csctx *
					// BinaryOperator-  - stbtt_int32 [Binary Operator: Assign (=)]
						// MemberRefExpr- min_y - stbtt_int32
							// UnexposedExpr- c - stbtt__csctx *
								// DeclRefExpr- c - stbtt__csctx *
						// UnexposedExpr- y - stbtt_int32
							// DeclRefExpr- y - stbtt_int32
				// BinaryOperator-  - int [Binary Operator: Assign (=)]
					// MemberRefExpr- started - int
						// UnexposedExpr- c - stbtt__csctx *
							// DeclRefExpr- c - stbtt__csctx *
					// IntegerLiteral-  - int [Literal: 1]
		// FunctionDecl- stbtt__csctx_v - void (stbtt__csctx *, stbtt_uint8, stbtt_int32, stbtt_int32, stbtt_int32, stbtt_int32, stbtt_int32, stbtt_int32)
			// ParmDecl- c - stbtt__csctx *
				// TypeRef- stbtt__csctx - stbtt__csctx
			// ParmDecl- type - stbtt_uint8
				// TypeRef- stbtt_uint8 - stbtt_uint8
			// ParmDecl- x - stbtt_int32
				// TypeRef- stbtt_int32 - stbtt_int32
			// ParmDecl- y - stbtt_int32
				// TypeRef- stbtt_int32 - stbtt_int32
			// ParmDecl- cx - stbtt_int32
				// TypeRef- stbtt_int32 - stbtt_int32
			// ParmDecl- cy - stbtt_int32
				// TypeRef- stbtt_int32 - stbtt_int32
			// ParmDecl- cx1 - stbtt_int32
				// TypeRef- stbtt_int32 - stbtt_int32
			// ParmDecl- cy1 - stbtt_int32
				// TypeRef- stbtt_int32 - stbtt_int32
			// CompoundStmt-  - 
				// IfStmt-  - 
					// UnexposedExpr- bounds - int
						// MemberRefExpr- bounds - int
							// UnexposedExpr- c - stbtt__csctx *
								// DeclRefExpr- c - stbtt__csctx *
					// CompoundStmt-  - 
						// CallExpr- stbtt__track_vertex - void
							// UnexposedExpr- stbtt__track_vertex - void (*)(stbtt__csctx *, stbtt_int32, stbtt_int32)
								// DeclRefExpr- stbtt__track_vertex - void (stbtt__csctx *, stbtt_int32, stbtt_int32)
							// UnexposedExpr- c - stbtt__csctx *
								// DeclRefExpr- c - stbtt__csctx *
							// UnexposedExpr- x - stbtt_int32
								// DeclRefExpr- x - stbtt_int32
							// UnexposedExpr- y - stbtt_int32
								// DeclRefExpr- y - stbtt_int32
						// IfStmt-  - 
							// BinaryOperator-  - int [Binary Operator: EQ (==)]
								// UnexposedExpr- type - int
									// UnexposedExpr- type - stbtt_uint8
										// DeclRefExpr- type - stbtt_uint8
								// DeclRefExpr- STBTT_vcubic - int
							// CompoundStmt-  - 
								// CallExpr- stbtt__track_vertex - void
									// UnexposedExpr- stbtt__track_vertex - void (*)(stbtt__csctx *, stbtt_int32, stbtt_int32)
										// DeclRefExpr- stbtt__track_vertex - void (stbtt__csctx *, stbtt_int32, stbtt_int32)
									// UnexposedExpr- c - stbtt__csctx *
										// DeclRefExpr- c - stbtt__csctx *
									// UnexposedExpr- cx - stbtt_int32
										// DeclRefExpr- cx - stbtt_int32
									// UnexposedExpr- cy - stbtt_int32
										// DeclRefExpr- cy - stbtt_int32
								// CallExpr- stbtt__track_vertex - void
									// UnexposedExpr- stbtt__track_vertex - void (*)(stbtt__csctx *, stbtt_int32, stbtt_int32)
										// DeclRefExpr- stbtt__track_vertex - void (stbtt__csctx *, stbtt_int32, stbtt_int32)
									// UnexposedExpr- c - stbtt__csctx *
										// DeclRefExpr- c - stbtt__csctx *
									// UnexposedExpr- cx1 - stbtt_int32
										// DeclRefExpr- cx1 - stbtt_int32
									// UnexposedExpr- cy1 - stbtt_int32
										// DeclRefExpr- cy1 - stbtt_int32
					// CompoundStmt-  - 
						// CallExpr- stbtt_setvertex - void
							// UnexposedExpr- stbtt_setvertex - void (*)(stbtt_vertex *, stbtt_uint8, stbtt_int32, stbtt_int32, stbtt_int32, stbtt_int32)
								// DeclRefExpr- stbtt_setvertex - void (stbtt_vertex *, stbtt_uint8, stbtt_int32, stbtt_int32, stbtt_int32, stbtt_int32)
							// UnaryOperator-  - stbtt_vertex * [Unary Operator: AddrOf (&)]
								// ArraySubscriptExpr-  - stbtt_vertex
									// UnexposedExpr- pvertices - stbtt_vertex *
										// MemberRefExpr- pvertices - stbtt_vertex *
											// UnexposedExpr- c - stbtt__csctx *
												// DeclRefExpr- c - stbtt__csctx *
									// UnexposedExpr- num_vertices - int
										// MemberRefExpr- num_vertices - int
											// UnexposedExpr- c - stbtt__csctx *
												// DeclRefExpr- c - stbtt__csctx *
							// UnexposedExpr- type - stbtt_uint8
								// DeclRefExpr- type - stbtt_uint8
							// UnexposedExpr- x - stbtt_int32
								// DeclRefExpr- x - stbtt_int32
							// UnexposedExpr- y - stbtt_int32
								// DeclRefExpr- y - stbtt_int32
							// UnexposedExpr- cx - stbtt_int32
								// DeclRefExpr- cx - stbtt_int32
							// UnexposedExpr- cy - stbtt_int32
								// DeclRefExpr- cy - stbtt_int32
						// BinaryOperator-  - short [Binary Operator: Assign (=)]
							// MemberRefExpr- cx1 - short
								// ArraySubscriptExpr-  - stbtt_vertex
									// UnexposedExpr- pvertices - stbtt_vertex *
										// MemberRefExpr- pvertices - stbtt_vertex *
											// UnexposedExpr- c - stbtt__csctx *
												// DeclRefExpr- c - stbtt__csctx *
									// UnexposedExpr- num_vertices - int
										// MemberRefExpr- num_vertices - int
											// UnexposedExpr- c - stbtt__csctx *
												// DeclRefExpr- c - stbtt__csctx *
							// CStyleCastExpr-  - stbtt_int16
								// TypeRef- stbtt_int16 - stbtt_int16
								// UnexposedExpr- cx1 - stbtt_int32
									// DeclRefExpr- cx1 - stbtt_int32
						// BinaryOperator-  - short [Binary Operator: Assign (=)]
							// MemberRefExpr- cy1 - short
								// ArraySubscriptExpr-  - stbtt_vertex
									// UnexposedExpr- pvertices - stbtt_vertex *
										// MemberRefExpr- pvertices - stbtt_vertex *
											// UnexposedExpr- c - stbtt__csctx *
												// DeclRefExpr- c - stbtt__csctx *
									// UnexposedExpr- num_vertices - int
										// MemberRefExpr- num_vertices - int
											// UnexposedExpr- c - stbtt__csctx *
												// DeclRefExpr- c - stbtt__csctx *
							// CStyleCastExpr-  - stbtt_int16
								// TypeRef- stbtt_int16 - stbtt_int16
								// UnexposedExpr- cy1 - stbtt_int32
									// DeclRefExpr- cy1 - stbtt_int32
				// UnaryOperator-  - int [Unary Operator: PostInc (++)]
					// MemberRefExpr- num_vertices - int
						// UnexposedExpr- c - stbtt__csctx *
							// DeclRefExpr- c - stbtt__csctx *
		// FunctionDecl- stbtt__csctx_close_shape - void (stbtt__csctx *)
			// ParmDecl- ctx - stbtt__csctx *
				// TypeRef- stbtt__csctx - stbtt__csctx
			// CompoundStmt-  - 
				// IfStmt-  - 
					// BinaryOperator-  - int [Binary Operator: LOr (||)]
						// BinaryOperator-  - int [Binary Operator: NE (!=)]
							// UnexposedExpr- first_x - float
								// MemberRefExpr- first_x - float
									// UnexposedExpr- ctx - stbtt__csctx *
										// DeclRefExpr- ctx - stbtt__csctx *
							// UnexposedExpr- x - float
								// MemberRefExpr- x - float
									// UnexposedExpr- ctx - stbtt__csctx *
										// DeclRefExpr- ctx - stbtt__csctx *
						// BinaryOperator-  - int [Binary Operator: NE (!=)]
							// UnexposedExpr- first_y - float
								// MemberRefExpr- first_y - float
									// UnexposedExpr- ctx - stbtt__csctx *
										// DeclRefExpr- ctx - stbtt__csctx *
							// UnexposedExpr- y - float
								// MemberRefExpr- y - float
									// UnexposedExpr- ctx - stbtt__csctx *
										// DeclRefExpr- ctx - stbtt__csctx *
					// CallExpr- stbtt__csctx_v - void
						// UnexposedExpr- stbtt__csctx_v - void (*)(stbtt__csctx *, stbtt_uint8, stbtt_int32, stbtt_int32, stbtt_int32, stbtt_int32, stbtt_int32, stbtt_int32)
							// DeclRefExpr- stbtt__csctx_v - void (stbtt__csctx *, stbtt_uint8, stbtt_int32, stbtt_int32, stbtt_int32, stbtt_int32, stbtt_int32, stbtt_int32)
						// UnexposedExpr- ctx - stbtt__csctx *
							// DeclRefExpr- ctx - stbtt__csctx *
						// UnexposedExpr- STBTT_vline - stbtt_uint8
							// DeclRefExpr- STBTT_vline - int
						// CStyleCastExpr-  - int
							// UnexposedExpr- first_x - float
								// MemberRefExpr- first_x - float
									// UnexposedExpr- ctx - stbtt__csctx *
										// DeclRefExpr- ctx - stbtt__csctx *
						// CStyleCastExpr-  - int
							// UnexposedExpr- first_y - float
								// MemberRefExpr- first_y - float
									// UnexposedExpr- ctx - stbtt__csctx *
										// DeclRefExpr- ctx - stbtt__csctx *
						// IntegerLiteral-  - int [Literal: 0]
						// IntegerLiteral-  - int [Literal: 0]
						// IntegerLiteral-  - int [Literal: 0]
						// IntegerLiteral-  - int [Literal: 0]
		// FunctionDecl- stbtt__csctx_rmove_to - void (stbtt__csctx *, float, float)
			// ParmDecl- ctx - stbtt__csctx *
				// TypeRef- stbtt__csctx - stbtt__csctx
			// ParmDecl- dx - float
			// ParmDecl- dy - float
			// CompoundStmt-  - 
				// CallExpr- stbtt__csctx_close_shape - void
					// UnexposedExpr- stbtt__csctx_close_shape - void (*)(stbtt__csctx *)
						// DeclRefExpr- stbtt__csctx_close_shape - void (stbtt__csctx *)
					// UnexposedExpr- ctx - stbtt__csctx *
						// DeclRefExpr- ctx - stbtt__csctx *
				// BinaryOperator-  - float [Binary Operator: Assign (=)]
					// MemberRefExpr- first_x - float
						// UnexposedExpr- ctx - stbtt__csctx *
							// DeclRefExpr- ctx - stbtt__csctx *
					// BinaryOperator-  - float [Binary Operator: Assign (=)]
						// MemberRefExpr- x - float
							// UnexposedExpr- ctx - stbtt__csctx *
								// DeclRefExpr- ctx - stbtt__csctx *
						// BinaryOperator-  - float [Binary Operator: Add (+)]
							// UnexposedExpr- x - float
								// MemberRefExpr- x - float
									// UnexposedExpr- ctx - stbtt__csctx *
										// DeclRefExpr- ctx - stbtt__csctx *
							// UnexposedExpr- dx - float
								// DeclRefExpr- dx - float
				// BinaryOperator-  - float [Binary Operator: Assign (=)]
					// MemberRefExpr- first_y - float
						// UnexposedExpr- ctx - stbtt__csctx *
							// DeclRefExpr- ctx - stbtt__csctx *
					// BinaryOperator-  - float [Binary Operator: Assign (=)]
						// MemberRefExpr- y - float
							// UnexposedExpr- ctx - stbtt__csctx *
								// DeclRefExpr- ctx - stbtt__csctx *
						// BinaryOperator-  - float [Binary Operator: Add (+)]
							// UnexposedExpr- y - float
								// MemberRefExpr- y - float
									// UnexposedExpr- ctx - stbtt__csctx *
										// DeclRefExpr- ctx - stbtt__csctx *
							// UnexposedExpr- dy - float
								// DeclRefExpr- dy - float
				// CallExpr- stbtt__csctx_v - void
					// UnexposedExpr- stbtt__csctx_v - void (*)(stbtt__csctx *, stbtt_uint8, stbtt_int32, stbtt_int32, stbtt_int32, stbtt_int32, stbtt_int32, stbtt_int32)
						// DeclRefExpr- stbtt__csctx_v - void (stbtt__csctx *, stbtt_uint8, stbtt_int32, stbtt_int32, stbtt_int32, stbtt_int32, stbtt_int32, stbtt_int32)
					// UnexposedExpr- ctx - stbtt__csctx *
						// DeclRefExpr- ctx - stbtt__csctx *
					// UnexposedExpr- STBTT_vmove - stbtt_uint8
						// DeclRefExpr- STBTT_vmove - int
					// CStyleCastExpr-  - int
						// UnexposedExpr- x - float
							// MemberRefExpr- x - float
								// UnexposedExpr- ctx - stbtt__csctx *
									// DeclRefExpr- ctx - stbtt__csctx *
					// CStyleCastExpr-  - int
						// UnexposedExpr- y - float
							// MemberRefExpr- y - float
								// UnexposedExpr- ctx - stbtt__csctx *
									// DeclRefExpr- ctx - stbtt__csctx *
					// IntegerLiteral-  - int [Literal: 0]
					// IntegerLiteral-  - int [Literal: 0]
					// IntegerLiteral-  - int [Literal: 0]
					// IntegerLiteral-  - int [Literal: 0]
		// FunctionDecl- stbtt__csctx_rline_to - void (stbtt__csctx *, float, float)
			// ParmDecl- ctx - stbtt__csctx *
				// TypeRef- stbtt__csctx - stbtt__csctx
			// ParmDecl- dx - float
			// ParmDecl- dy - float
			// CompoundStmt-  - 
				// CompoundAssignOperator-  - float
					// MemberRefExpr- x - float
						// UnexposedExpr- ctx - stbtt__csctx *
							// DeclRefExpr- ctx - stbtt__csctx *
					// UnexposedExpr- dx - float
						// DeclRefExpr- dx - float
				// CompoundAssignOperator-  - float
					// MemberRefExpr- y - float
						// UnexposedExpr- ctx - stbtt__csctx *
							// DeclRefExpr- ctx - stbtt__csctx *
					// UnexposedExpr- dy - float
						// DeclRefExpr- dy - float
				// CallExpr- stbtt__csctx_v - void
					// UnexposedExpr- stbtt__csctx_v - void (*)(stbtt__csctx *, stbtt_uint8, stbtt_int32, stbtt_int32, stbtt_int32, stbtt_int32, stbtt_int32, stbtt_int32)
						// DeclRefExpr- stbtt__csctx_v - void (stbtt__csctx *, stbtt_uint8, stbtt_int32, stbtt_int32, stbtt_int32, stbtt_int32, stbtt_int32, stbtt_int32)
					// UnexposedExpr- ctx - stbtt__csctx *
						// DeclRefExpr- ctx - stbtt__csctx *
					// UnexposedExpr- STBTT_vline - stbtt_uint8
						// DeclRefExpr- STBTT_vline - int
					// CStyleCastExpr-  - int
						// UnexposedExpr- x - float
							// MemberRefExpr- x - float
								// UnexposedExpr- ctx - stbtt__csctx *
									// DeclRefExpr- ctx - stbtt__csctx *
					// CStyleCastExpr-  - int
						// UnexposedExpr- y - float
							// MemberRefExpr- y - float
								// UnexposedExpr- ctx - stbtt__csctx *
									// DeclRefExpr- ctx - stbtt__csctx *
					// IntegerLiteral-  - int [Literal: 0]
					// IntegerLiteral-  - int [Literal: 0]
					// IntegerLiteral-  - int [Literal: 0]
					// IntegerLiteral-  - int [Literal: 0]
		// FunctionDecl- stbtt__csctx_rccurve_to - void (stbtt__csctx *, float, float, float, float, float, float)
			// ParmDecl- ctx - stbtt__csctx *
				// TypeRef- stbtt__csctx - stbtt__csctx
			// ParmDecl- dx1 - float
			// ParmDecl- dy1 - float
			// ParmDecl- dx2 - float
			// ParmDecl- dy2 - float
			// ParmDecl- dx3 - float
			// ParmDecl- dy3 - float
			// CompoundStmt-  - 
				// DeclStmt-  - 
					// VarDecl- cx1 - float
						// BinaryOperator-  - float [Binary Operator: Add (+)]
							// UnexposedExpr- x - float
								// MemberRefExpr- x - float
									// UnexposedExpr- ctx - stbtt__csctx *
										// DeclRefExpr- ctx - stbtt__csctx *
							// UnexposedExpr- dx1 - float
								// DeclRefExpr- dx1 - float
				// DeclStmt-  - 
					// VarDecl- cy1 - float
						// BinaryOperator-  - float [Binary Operator: Add (+)]
							// UnexposedExpr- y - float
								// MemberRefExpr- y - float
									// UnexposedExpr- ctx - stbtt__csctx *
										// DeclRefExpr- ctx - stbtt__csctx *
							// UnexposedExpr- dy1 - float
								// DeclRefExpr- dy1 - float
				// DeclStmt-  - 
					// VarDecl- cx2 - float
						// BinaryOperator-  - float [Binary Operator: Add (+)]
							// UnexposedExpr- cx1 - float
								// DeclRefExpr- cx1 - float
							// UnexposedExpr- dx2 - float
								// DeclRefExpr- dx2 - float
				// DeclStmt-  - 
					// VarDecl- cy2 - float
						// BinaryOperator-  - float [Binary Operator: Add (+)]
							// UnexposedExpr- cy1 - float
								// DeclRefExpr- cy1 - float
							// UnexposedExpr- dy2 - float
								// DeclRefExpr- dy2 - float
				// BinaryOperator-  - float [Binary Operator: Assign (=)]
					// MemberRefExpr- x - float
						// UnexposedExpr- ctx - stbtt__csctx *
							// DeclRefExpr- ctx - stbtt__csctx *
					// BinaryOperator-  - float [Binary Operator: Add (+)]
						// UnexposedExpr- cx2 - float
							// DeclRefExpr- cx2 - float
						// UnexposedExpr- dx3 - float
							// DeclRefExpr- dx3 - float
				// BinaryOperator-  - float [Binary Operator: Assign (=)]
					// MemberRefExpr- y - float
						// UnexposedExpr- ctx - stbtt__csctx *
							// DeclRefExpr- ctx - stbtt__csctx *
					// BinaryOperator-  - float [Binary Operator: Add (+)]
						// UnexposedExpr- cy2 - float
							// DeclRefExpr- cy2 - float
						// UnexposedExpr- dy3 - float
							// DeclRefExpr- dy3 - float
				// CallExpr- stbtt__csctx_v - void
					// UnexposedExpr- stbtt__csctx_v - void (*)(stbtt__csctx *, stbtt_uint8, stbtt_int32, stbtt_int32, stbtt_int32, stbtt_int32, stbtt_int32, stbtt_int32)
						// DeclRefExpr- stbtt__csctx_v - void (stbtt__csctx *, stbtt_uint8, stbtt_int32, stbtt_int32, stbtt_int32, stbtt_int32, stbtt_int32, stbtt_int32)
					// UnexposedExpr- ctx - stbtt__csctx *
						// DeclRefExpr- ctx - stbtt__csctx *
					// UnexposedExpr- STBTT_vcubic - stbtt_uint8
						// DeclRefExpr- STBTT_vcubic - int
					// CStyleCastExpr-  - int
						// UnexposedExpr- x - float
							// MemberRefExpr- x - float
								// UnexposedExpr- ctx - stbtt__csctx *
									// DeclRefExpr- ctx - stbtt__csctx *
					// CStyleCastExpr-  - int
						// UnexposedExpr- y - float
							// MemberRefExpr- y - float
								// UnexposedExpr- ctx - stbtt__csctx *
									// DeclRefExpr- ctx - stbtt__csctx *
					// CStyleCastExpr-  - int
						// UnexposedExpr- cx1 - float
							// DeclRefExpr- cx1 - float
					// CStyleCastExpr-  - int
						// UnexposedExpr- cy1 - float
							// DeclRefExpr- cy1 - float
					// CStyleCastExpr-  - int
						// UnexposedExpr- cx2 - float
							// DeclRefExpr- cx2 - float
					// CStyleCastExpr-  - int
						// UnexposedExpr- cy2 - float
							// DeclRefExpr- cy2 - float
		// FunctionDecl- stbtt__get_subr - stbtt__buf (stbtt__buf, int)
			// TypeRef- stbtt__buf - stbtt__buf
			// ParmDecl- idx - stbtt__buf
				// TypeRef- stbtt__buf - stbtt__buf
			// ParmDecl- n - int
			// CompoundStmt-  - 
				// DeclStmt-  - 
					// VarDecl- count - int
						// CallExpr- stbtt__cff_index_count - int
							// UnexposedExpr- stbtt__cff_index_count - int (*)(stbtt__buf *)
								// DeclRefExpr- stbtt__cff_index_count - int (stbtt__buf *)
							// UnaryOperator-  - stbtt__buf * [Unary Operator: AddrOf (&)]
								// DeclRefExpr- idx - stbtt__buf
				// DeclStmt-  - 
					// VarDecl- bias - int
						// IntegerLiteral-  - int [Literal: 107]
				// IfStmt-  - 
					// BinaryOperator-  - int [Binary Operator: GE (>=)]
						// UnexposedExpr- count - int
							// DeclRefExpr- count - int
						// IntegerLiteral-  - int [Literal: 33900]
					// BinaryOperator-  - int [Binary Operator: Assign (=)]
						// DeclRefExpr- bias - int
						// IntegerLiteral-  - int [Literal: 32768]
					// IfStmt-  - 
						// BinaryOperator-  - int [Binary Operator: GE (>=)]
							// UnexposedExpr- count - int
								// DeclRefExpr- count - int
							// IntegerLiteral-  - int [Literal: 1240]
						// BinaryOperator-  - int [Binary Operator: Assign (=)]
							// DeclRefExpr- bias - int
							// IntegerLiteral-  - int [Literal: 1131]
				// CompoundAssignOperator-  - int
					// DeclRefExpr- n - int
					// UnexposedExpr- bias - int
						// DeclRefExpr- bias - int
				// IfStmt-  - 
					// BinaryOperator-  - int [Binary Operator: LOr (||)]
						// BinaryOperator-  - int [Binary Operator: LT (<)]
							// UnexposedExpr- n - int
								// DeclRefExpr- n - int
							// IntegerLiteral-  - int [Literal: 0]
						// BinaryOperator-  - int [Binary Operator: GE (>=)]
							// UnexposedExpr- n - int
								// DeclRefExpr- n - int
							// UnexposedExpr- count - int
								// DeclRefExpr- count - int
					// ReturnStmt-  - 
						// CallExpr- stbtt__new_buf - stbtt__buf
							// UnexposedExpr- stbtt__new_buf - stbtt__buf (*)(const void *, size_t)
								// DeclRefExpr- stbtt__new_buf - stbtt__buf (const void *, size_t)
							// UnexposedExpr-  - const void *
								// ParenExpr-  - void *
									// CStyleCastExpr-  - void *
										// IntegerLiteral-  - int [Literal: 0]
							// UnexposedExpr-  - size_t
								// IntegerLiteral-  - int [Literal: 0]
				// ReturnStmt-  - 
					// CallExpr- stbtt__cff_index_get - stbtt__buf
						// UnexposedExpr- stbtt__cff_index_get - stbtt__buf (*)(stbtt__buf, int)
							// DeclRefExpr- stbtt__cff_index_get - stbtt__buf (stbtt__buf, int)
						// UnexposedExpr- idx - stbtt__buf
							// DeclRefExpr- idx - stbtt__buf
						// UnexposedExpr- n - int
							// DeclRefExpr- n - int
		// FunctionDecl- stbtt__cid_get_glyph_subrs - stbtt__buf (const stbtt_fontinfo *, int)
			// TypeRef- stbtt__buf - stbtt__buf
			// ParmDecl- info - const stbtt_fontinfo *
				// TypeRef- stbtt_fontinfo - stbtt_fontinfo
			// ParmDecl- glyph_index - int
			// CompoundStmt-  - 
				// DeclStmt-  - 
					// VarDecl- fdselect - stbtt__buf
						// TypeRef- stbtt__buf - stbtt__buf
						// UnexposedExpr- fdselect - stbtt__buf
							// MemberRefExpr- fdselect - const stbtt__buf
								// UnexposedExpr- info - const stbtt_fontinfo *
									// DeclRefExpr- info - const stbtt_fontinfo *
				// DeclStmt-  - 
					// VarDecl- nranges - int
					// VarDecl- start - int
					// VarDecl- end - int
					// VarDecl- v - int
					// VarDecl- fmt - int
					// VarDecl- fdselector - int
						// UnaryOperator-  - int [Unary Operator: Minus (-)]
							// IntegerLiteral-  - int [Literal: 1]
					// VarDecl- i - int
				// CallExpr- stbtt__buf_seek - void
					// UnexposedExpr- stbtt__buf_seek - void (*)(stbtt__buf *, int)
						// DeclRefExpr- stbtt__buf_seek - void (stbtt__buf *, int)
					// UnaryOperator-  - stbtt__buf * [Unary Operator: AddrOf (&)]
						// DeclRefExpr- fdselect - stbtt__buf
					// IntegerLiteral-  - int [Literal: 0]
				// BinaryOperator-  - int [Binary Operator: Assign (=)]
					// DeclRefExpr- fmt - int
					// UnexposedExpr- stbtt__buf_get8 - int
						// CallExpr- stbtt__buf_get8 - stbtt_uint8
							// UnexposedExpr- stbtt__buf_get8 - stbtt_uint8 (*)(stbtt__buf *)
								// DeclRefExpr- stbtt__buf_get8 - stbtt_uint8 (stbtt__buf *)
							// UnaryOperator-  - stbtt__buf * [Unary Operator: AddrOf (&)]
								// DeclRefExpr- fdselect - stbtt__buf
				// IfStmt-  - 
					// BinaryOperator-  - int [Binary Operator: EQ (==)]
						// UnexposedExpr- fmt - int
							// DeclRefExpr- fmt - int
						// IntegerLiteral-  - int [Literal: 0]
					// CompoundStmt-  - 
						// CallExpr- stbtt__buf_skip - void
							// UnexposedExpr- stbtt__buf_skip - void (*)(stbtt__buf *, int)
								// DeclRefExpr- stbtt__buf_skip - void (stbtt__buf *, int)
							// UnaryOperator-  - stbtt__buf * [Unary Operator: AddrOf (&)]
								// DeclRefExpr- fdselect - stbtt__buf
							// UnexposedExpr- glyph_index - int
								// DeclRefExpr- glyph_index - int
						// BinaryOperator-  - int [Binary Operator: Assign (=)]
							// DeclRefExpr- fdselector - int
							// UnexposedExpr- stbtt__buf_get8 - int
								// CallExpr- stbtt__buf_get8 - stbtt_uint8
									// UnexposedExpr- stbtt__buf_get8 - stbtt_uint8 (*)(stbtt__buf *)
										// DeclRefExpr- stbtt__buf_get8 - stbtt_uint8 (stbtt__buf *)
									// UnaryOperator-  - stbtt__buf * [Unary Operator: AddrOf (&)]
										// DeclRefExpr- fdselect - stbtt__buf
					// IfStmt-  - 
						// BinaryOperator-  - int [Binary Operator: EQ (==)]
							// UnexposedExpr- fmt - int
								// DeclRefExpr- fmt - int
							// IntegerLiteral-  - int [Literal: 3]
						// CompoundStmt-  - 
							// BinaryOperator-  - int [Binary Operator: Assign (=)]
								// DeclRefExpr- nranges - int
								// UnexposedExpr- stbtt__buf_get - int
									// CallExpr- stbtt__buf_get - stbtt_uint32
										// UnexposedExpr- stbtt__buf_get - stbtt_uint32 (*)(stbtt__buf *, int)
											// DeclRefExpr- stbtt__buf_get - stbtt_uint32 (stbtt__buf *, int)
										// ParenExpr-  - stbtt__buf *
											// UnaryOperator-  - stbtt__buf * [Unary Operator: AddrOf (&)]
												// DeclRefExpr- fdselect - stbtt__buf
										// IntegerLiteral-  - int [Literal: 2]
							// BinaryOperator-  - int [Binary Operator: Assign (=)]
								// DeclRefExpr- start - int
								// UnexposedExpr- stbtt__buf_get - int
									// CallExpr- stbtt__buf_get - stbtt_uint32
										// UnexposedExpr- stbtt__buf_get - stbtt_uint32 (*)(stbtt__buf *, int)
											// DeclRefExpr- stbtt__buf_get - stbtt_uint32 (stbtt__buf *, int)
										// ParenExpr-  - stbtt__buf *
											// UnaryOperator-  - stbtt__buf * [Unary Operator: AddrOf (&)]
												// DeclRefExpr- fdselect - stbtt__buf
										// IntegerLiteral-  - int [Literal: 2]
							// ForStmt-  - 
								// BinaryOperator-  - int [Binary Operator: Assign (=)]
									// DeclRefExpr- i - int
									// IntegerLiteral-  - int [Literal: 0]
								// BinaryOperator-  - int [Binary Operator: LT (<)]
									// UnexposedExpr- i - int
										// DeclRefExpr- i - int
									// UnexposedExpr- nranges - int
										// DeclRefExpr- nranges - int
								// UnaryOperator-  - int [Unary Operator: PostInc (++)]
									// DeclRefExpr- i - int
								// CompoundStmt-  - 
									// BinaryOperator-  - int [Binary Operator: Assign (=)]
										// DeclRefExpr- v - int
										// UnexposedExpr- stbtt__buf_get8 - int
											// CallExpr- stbtt__buf_get8 - stbtt_uint8
												// UnexposedExpr- stbtt__buf_get8 - stbtt_uint8 (*)(stbtt__buf *)
													// DeclRefExpr- stbtt__buf_get8 - stbtt_uint8 (stbtt__buf *)
												// UnaryOperator-  - stbtt__buf * [Unary Operator: AddrOf (&)]
													// DeclRefExpr- fdselect - stbtt__buf
									// BinaryOperator-  - int [Binary Operator: Assign (=)]
										// DeclRefExpr- end - int
										// UnexposedExpr- stbtt__buf_get - int
											// CallExpr- stbtt__buf_get - stbtt_uint32
												// UnexposedExpr- stbtt__buf_get - stbtt_uint32 (*)(stbtt__buf *, int)
													// DeclRefExpr- stbtt__buf_get - stbtt_uint32 (stbtt__buf *, int)
												// ParenExpr-  - stbtt__buf *
													// UnaryOperator-  - stbtt__buf * [Unary Operator: AddrOf (&)]
														// DeclRefExpr- fdselect - stbtt__buf
												// IntegerLiteral-  - int [Literal: 2]
									// IfStmt-  - 
										// BinaryOperator-  - int [Binary Operator: LAnd (&&)]
											// BinaryOperator-  - int [Binary Operator: GE (>=)]
												// UnexposedExpr- glyph_index - int
													// DeclRefExpr- glyph_index - int
												// UnexposedExpr- start - int
													// DeclRefExpr- start - int
											// BinaryOperator-  - int [Binary Operator: LT (<)]
												// UnexposedExpr- glyph_index - int
													// DeclRefExpr- glyph_index - int
												// UnexposedExpr- end - int
													// DeclRefExpr- end - int
										// CompoundStmt-  - 
											// BinaryOperator-  - int [Binary Operator: Assign (=)]
												// DeclRefExpr- fdselector - int
												// UnexposedExpr- v - int
													// DeclRefExpr- v - int
											// BreakStmt-  - 
									// BinaryOperator-  - int [Binary Operator: Assign (=)]
										// DeclRefExpr- start - int
										// UnexposedExpr- end - int
											// DeclRefExpr- end - int
				// IfStmt-  - 
					// BinaryOperator-  - int [Binary Operator: EQ (==)]
						// UnexposedExpr- fdselector - int
							// DeclRefExpr- fdselector - int
						// UnaryOperator-  - int [Unary Operator: Minus (-)]
							// IntegerLiteral-  - int [Literal: 1]
					// CallExpr- stbtt__new_buf - stbtt__buf
						// UnexposedExpr- stbtt__new_buf - stbtt__buf (*)(const void *, size_t)
							// DeclRefExpr- stbtt__new_buf - stbtt__buf (const void *, size_t)
						// UnexposedExpr-  - const void *
							// ParenExpr-  - void *
								// CStyleCastExpr-  - void *
									// IntegerLiteral-  - int [Literal: 0]
						// UnexposedExpr-  - size_t
							// IntegerLiteral-  - int [Literal: 0]
				// ReturnStmt-  - 
					// CallExpr- stbtt__get_subrs - stbtt__buf
						// UnexposedExpr- stbtt__get_subrs - stbtt__buf (*)(stbtt__buf, stbtt__buf)
							// DeclRefExpr- stbtt__get_subrs - stbtt__buf (stbtt__buf, stbtt__buf)
						// UnexposedExpr- cff - stbtt__buf
							// MemberRefExpr- cff - const stbtt__buf
								// UnexposedExpr- info - const stbtt_fontinfo *
									// DeclRefExpr- info - const stbtt_fontinfo *
						// CallExpr- stbtt__cff_index_get - stbtt__buf
							// UnexposedExpr- stbtt__cff_index_get - stbtt__buf (*)(stbtt__buf, int)
								// DeclRefExpr- stbtt__cff_index_get - stbtt__buf (stbtt__buf, int)
							// UnexposedExpr- fontdicts - stbtt__buf
								// MemberRefExpr- fontdicts - const stbtt__buf
									// UnexposedExpr- info - const stbtt_fontinfo *
										// DeclRefExpr- info - const stbtt_fontinfo *
							// UnexposedExpr- fdselector - int
								// DeclRefExpr- fdselector - int
		// FunctionDecl- stbtt__run_charstring - int (const stbtt_fontinfo *, int, stbtt__csctx *)
			// ParmDecl- info - const stbtt_fontinfo *
				// TypeRef- stbtt_fontinfo - stbtt_fontinfo
			// ParmDecl- glyph_index - int
			// ParmDecl- c - stbtt__csctx *
				// TypeRef- stbtt__csctx - stbtt__csctx
			// CompoundStmt-  - 
				// DeclStmt-  - 
					// VarDecl- in_header - int
						// IntegerLiteral-  - int [Literal: 1]
					// VarDecl- maskbits - int
						// IntegerLiteral-  - int [Literal: 0]
					// VarDecl- subr_stack_height - int
						// IntegerLiteral-  - int [Literal: 0]
					// VarDecl- sp - int
						// IntegerLiteral-  - int [Literal: 0]
					// VarDecl- v - int
					// VarDecl- i - int
					// VarDecl- b0 - int
				// DeclStmt-  - 
					// VarDecl- has_subrs - int
						// IntegerLiteral-  - int [Literal: 0]
					// VarDecl- clear_stack - int
				// DeclStmt-  - 
					// VarDecl- s - float [48]
						// IntegerLiteral-  - int [Literal: 48]
				// DeclStmt-  - 
					// VarDecl- subr_stack - stbtt__buf [10]
						// TypeRef- stbtt__buf - stbtt__buf
						// IntegerLiteral-  - int [Literal: 10]
					// VarDecl- subrs - stbtt__buf
						// TypeRef- stbtt__buf - stbtt__buf
						// UnexposedExpr- subrs - stbtt__buf
							// MemberRefExpr- subrs - const stbtt__buf
								// UnexposedExpr- info - const stbtt_fontinfo *
									// DeclRefExpr- info - const stbtt_fontinfo *
					// VarDecl- b - stbtt__buf
						// TypeRef- stbtt__buf - stbtt__buf
				// DeclStmt-  - 
					// VarDecl- f - float
				// BinaryOperator-  - stbtt__buf [Binary Operator: Assign (=)]
					// DeclRefExpr- b - stbtt__buf
					// CallExpr- stbtt__cff_index_get - stbtt__buf
						// UnexposedExpr- stbtt__cff_index_get - stbtt__buf (*)(stbtt__buf, int)
							// DeclRefExpr- stbtt__cff_index_get - stbtt__buf (stbtt__buf, int)
						// UnexposedExpr- charstrings - stbtt__buf
							// MemberRefExpr- charstrings - const stbtt__buf
								// UnexposedExpr- info - const stbtt_fontinfo *
									// DeclRefExpr- info - const stbtt_fontinfo *
						// UnexposedExpr- glyph_index - int
							// DeclRefExpr- glyph_index - int
				// WhileStmt-  - 
					// BinaryOperator-  - int [Binary Operator: LT (<)]
						// UnexposedExpr- cursor - int
							// MemberRefExpr- cursor - int
								// DeclRefExpr- b - stbtt__buf
						// UnexposedExpr- size - int
							// MemberRefExpr- size - int
								// DeclRefExpr- b - stbtt__buf
					// CompoundStmt-  - 
						// BinaryOperator-  - int [Binary Operator: Assign (=)]
							// DeclRefExpr- i - int
							// IntegerLiteral-  - int [Literal: 0]
						// BinaryOperator-  - int [Binary Operator: Assign (=)]
							// DeclRefExpr- clear_stack - int
							// IntegerLiteral-  - int [Literal: 1]
						// BinaryOperator-  - int [Binary Operator: Assign (=)]
							// DeclRefExpr- b0 - int
							// UnexposedExpr- stbtt__buf_get8 - int
								// CallExpr- stbtt__buf_get8 - stbtt_uint8
									// UnexposedExpr- stbtt__buf_get8 - stbtt_uint8 (*)(stbtt__buf *)
										// DeclRefExpr- stbtt__buf_get8 - stbtt_uint8 (stbtt__buf *)
									// UnaryOperator-  - stbtt__buf * [Unary Operator: AddrOf (&)]
										// DeclRefExpr- b - stbtt__buf
						// SwitchStmt-  - 
							// UnexposedExpr- b0 - int
								// DeclRefExpr- b0 - int
							// CompoundStmt-  - 
								// CaseStmt-  - 
									// IntegerLiteral-  - int [Literal: 19]
									// CaseStmt-  - 
										// IntegerLiteral-  - int [Literal: 20]
										// IfStmt-  - 
											// UnexposedExpr- in_header - int
												// DeclRefExpr- in_header - int
											// CompoundAssignOperator-  - int
												// DeclRefExpr- maskbits - int
												// ParenExpr-  - int
													// BinaryOperator-  - int [Binary Operator: Div (/)]
														// UnexposedExpr- sp - int
															// DeclRefExpr- sp - int
														// IntegerLiteral-  - int [Literal: 2]
								// BinaryOperator-  - int [Binary Operator: Assign (=)]
									// DeclRefExpr- in_header - int
									// IntegerLiteral-  - int [Literal: 0]
								// CallExpr- stbtt__buf_skip - void
									// UnexposedExpr- stbtt__buf_skip - void (*)(stbtt__buf *, int)
										// DeclRefExpr- stbtt__buf_skip - void (stbtt__buf *, int)
									// UnaryOperator-  - stbtt__buf * [Unary Operator: AddrOf (&)]
										// DeclRefExpr- b - stbtt__buf
									// BinaryOperator-  - int [Binary Operator: Div (/)]
										// ParenExpr-  - int
											// BinaryOperator-  - int [Binary Operator: Add (+)]
												// UnexposedExpr- maskbits - int
													// DeclRefExpr- maskbits - int
												// IntegerLiteral-  - int [Literal: 7]
										// IntegerLiteral-  - int [Literal: 8]
								// BreakStmt-  - 
								// CaseStmt-  - 
									// IntegerLiteral-  - int [Literal: 1]
									// CaseStmt-  - 
										// IntegerLiteral-  - int [Literal: 3]
										// CaseStmt-  - 
											// IntegerLiteral-  - int [Literal: 18]
											// CaseStmt-  - 
												// IntegerLiteral-  - int [Literal: 23]
												// CompoundAssignOperator-  - int
													// DeclRefExpr- maskbits - int
													// ParenExpr-  - int
														// BinaryOperator-  - int [Binary Operator: Div (/)]
															// UnexposedExpr- sp - int
																// DeclRefExpr- sp - int
															// IntegerLiteral-  - int [Literal: 2]
								// BreakStmt-  - 
								// CaseStmt-  - 
									// IntegerLiteral-  - int [Literal: 21]
									// BinaryOperator-  - int [Binary Operator: Assign (=)]
										// DeclRefExpr- in_header - int
										// IntegerLiteral-  - int [Literal: 0]
								// IfStmt-  - 
									// BinaryOperator-  - int [Binary Operator: LT (<)]
										// UnexposedExpr- sp - int
											// DeclRefExpr- sp - int
										// IntegerLiteral-  - int [Literal: 2]
									// ReturnStmt-  - 
										// ParenExpr-  - int
											// IntegerLiteral-  - int [Literal: 0]
								// CallExpr- stbtt__csctx_rmove_to - void
									// UnexposedExpr- stbtt__csctx_rmove_to - void (*)(stbtt__csctx *, float, float)
										// DeclRefExpr- stbtt__csctx_rmove_to - void (stbtt__csctx *, float, float)
									// UnexposedExpr- c - stbtt__csctx *
										// DeclRefExpr- c - stbtt__csctx *
									// UnexposedExpr-  - float
										// ArraySubscriptExpr-  - float
											// UnexposedExpr- s - float *
												// DeclRefExpr- s - float [48]
											// BinaryOperator-  - int [Binary Operator: Sub (-)]
												// UnexposedExpr- sp - int
													// DeclRefExpr- sp - int
												// IntegerLiteral-  - int [Literal: 2]
									// UnexposedExpr-  - float
										// ArraySubscriptExpr-  - float
											// UnexposedExpr- s - float *
												// DeclRefExpr- s - float [48]
											// BinaryOperator-  - int [Binary Operator: Sub (-)]
												// UnexposedExpr- sp - int
													// DeclRefExpr- sp - int
												// IntegerLiteral-  - int [Literal: 1]
								// BreakStmt-  - 
								// CaseStmt-  - 
									// IntegerLiteral-  - int [Literal: 4]
									// BinaryOperator-  - int [Binary Operator: Assign (=)]
										// DeclRefExpr- in_header - int
										// IntegerLiteral-  - int [Literal: 0]
								// IfStmt-  - 
									// BinaryOperator-  - int [Binary Operator: LT (<)]
										// UnexposedExpr- sp - int
											// DeclRefExpr- sp - int
										// IntegerLiteral-  - int [Literal: 1]
									// ReturnStmt-  - 
										// ParenExpr-  - int
											// IntegerLiteral-  - int [Literal: 0]
								// CallExpr- stbtt__csctx_rmove_to - void
									// UnexposedExpr- stbtt__csctx_rmove_to - void (*)(stbtt__csctx *, float, float)
										// DeclRefExpr- stbtt__csctx_rmove_to - void (stbtt__csctx *, float, float)
									// UnexposedExpr- c - stbtt__csctx *
										// DeclRefExpr- c - stbtt__csctx *
									// UnexposedExpr-  - float
										// IntegerLiteral-  - int [Literal: 0]
									// UnexposedExpr-  - float
										// ArraySubscriptExpr-  - float
											// UnexposedExpr- s - float *
												// DeclRefExpr- s - float [48]
											// BinaryOperator-  - int [Binary Operator: Sub (-)]
												// UnexposedExpr- sp - int
													// DeclRefExpr- sp - int
												// IntegerLiteral-  - int [Literal: 1]
								// BreakStmt-  - 
								// CaseStmt-  - 
									// IntegerLiteral-  - int [Literal: 22]
									// BinaryOperator-  - int [Binary Operator: Assign (=)]
										// DeclRefExpr- in_header - int
										// IntegerLiteral-  - int [Literal: 0]
								// IfStmt-  - 
									// BinaryOperator-  - int [Binary Operator: LT (<)]
										// UnexposedExpr- sp - int
											// DeclRefExpr- sp - int
										// IntegerLiteral-  - int [Literal: 1]
									// ReturnStmt-  - 
										// ParenExpr-  - int
											// IntegerLiteral-  - int [Literal: 0]
								// CallExpr- stbtt__csctx_rmove_to - void
									// UnexposedExpr- stbtt__csctx_rmove_to - void (*)(stbtt__csctx *, float, float)
										// DeclRefExpr- stbtt__csctx_rmove_to - void (stbtt__csctx *, float, float)
									// UnexposedExpr- c - stbtt__csctx *
										// DeclRefExpr- c - stbtt__csctx *
									// UnexposedExpr-  - float
										// ArraySubscriptExpr-  - float
											// UnexposedExpr- s - float *
												// DeclRefExpr- s - float [48]
											// BinaryOperator-  - int [Binary Operator: Sub (-)]
												// UnexposedExpr- sp - int
													// DeclRefExpr- sp - int
												// IntegerLiteral-  - int [Literal: 1]
									// UnexposedExpr-  - float
										// IntegerLiteral-  - int [Literal: 0]
								// BreakStmt-  - 
								// CaseStmt-  - 
									// IntegerLiteral-  - int [Literal: 5]
									// IfStmt-  - 
										// BinaryOperator-  - int [Binary Operator: LT (<)]
											// UnexposedExpr- sp - int
												// DeclRefExpr- sp - int
											// IntegerLiteral-  - int [Literal: 2]
										// ReturnStmt-  - 
											// ParenExpr-  - int
												// IntegerLiteral-  - int [Literal: 0]
								// ForStmt-  - 
									// BinaryOperator-  - int [Binary Operator: LT (<)]
										// BinaryOperator-  - int [Binary Operator: Add (+)]
											// UnexposedExpr- i - int
												// DeclRefExpr- i - int
											// IntegerLiteral-  - int [Literal: 1]
										// UnexposedExpr- sp - int
											// DeclRefExpr- sp - int
									// CompoundAssignOperator-  - int
										// DeclRefExpr- i - int
										// IntegerLiteral-  - int [Literal: 2]
									// CallExpr- stbtt__csctx_rline_to - void
										// UnexposedExpr- stbtt__csctx_rline_to - void (*)(stbtt__csctx *, float, float)
											// DeclRefExpr- stbtt__csctx_rline_to - void (stbtt__csctx *, float, float)
										// UnexposedExpr- c - stbtt__csctx *
											// DeclRefExpr- c - stbtt__csctx *
										// UnexposedExpr-  - float
											// ArraySubscriptExpr-  - float
												// UnexposedExpr- s - float *
													// DeclRefExpr- s - float [48]
												// UnexposedExpr- i - int
													// DeclRefExpr- i - int
										// UnexposedExpr-  - float
											// ArraySubscriptExpr-  - float
												// UnexposedExpr- s - float *
													// DeclRefExpr- s - float [48]
												// BinaryOperator-  - int [Binary Operator: Add (+)]
													// UnexposedExpr- i - int
														// DeclRefExpr- i - int
													// IntegerLiteral-  - int [Literal: 1]
								// BreakStmt-  - 
								// CaseStmt-  - 
									// IntegerLiteral-  - int [Literal: 7]
									// CaseStmt-  - 
										// IntegerLiteral-  - int [Literal: 6]
										// CompoundStmt-  - 
											// DeclStmt-  - 
												// VarDecl- gotoVlineTo - int
													// IntegerLiteral-  - int [Literal: 0]
											// IfStmt-  - 
												// BinaryOperator-  - int [Binary Operator: EQ (==)]
													// UnexposedExpr- b0 - int
														// DeclRefExpr- b0 - int
													// IntegerLiteral-  - int [Literal: 7]
												// CompoundStmt-  - 
													// IfStmt-  - 
														// BinaryOperator-  - int [Binary Operator: LT (<)]
															// UnexposedExpr- sp - int
																// DeclRefExpr- sp - int
															// IntegerLiteral-  - int [Literal: 1]
														// ReturnStmt-  - 
															// ParenExpr-  - int
																// IntegerLiteral-  - int [Literal: 0]
													// BinaryOperator-  - int [Binary Operator: Assign (=)]
														// DeclRefExpr- gotoVlineTo - int
														// IntegerLiteral-  - int [Literal: 1]
											// IfStmt-  - 
												// BinaryOperator-  - int [Binary Operator: LT (<)]
													// UnexposedExpr- sp - int
														// DeclRefExpr- sp - int
													// IntegerLiteral-  - int [Literal: 1]
												// ReturnStmt-  - 
													// ParenExpr-  - int
														// IntegerLiteral-  - int [Literal: 0]
											// ForStmt-  - 
												// CompoundStmt-  - 
													// IfStmt-  - 
														// UnaryOperator-  - int [Unary Operator: LNot (!)]
															// UnexposedExpr- gotoVlineTo - int
																// DeclRefExpr- gotoVlineTo - int
														// CompoundStmt-  - 
															// IfStmt-  - 
																// BinaryOperator-  - int [Binary Operator: GE (>=)]
																	// UnexposedExpr- i - int
																		// DeclRefExpr- i - int
																	// UnexposedExpr- sp - int
																		// DeclRefExpr- sp - int
																// BreakStmt-  - 
															// CallExpr- stbtt__csctx_rline_to - void
																// UnexposedExpr- stbtt__csctx_rline_to - void (*)(stbtt__csctx *, float, float)
																	// DeclRefExpr- stbtt__csctx_rline_to - void (stbtt__csctx *, float, float)
																// UnexposedExpr- c - stbtt__csctx *
																	// DeclRefExpr- c - stbtt__csctx *
																// UnexposedExpr-  - float
																	// ArraySubscriptExpr-  - float
																		// UnexposedExpr- s - float *
																			// DeclRefExpr- s - float [48]
																		// UnexposedExpr- i - int
																			// DeclRefExpr- i - int
																// UnexposedExpr-  - float
																	// IntegerLiteral-  - int [Literal: 0]
															// UnaryOperator-  - int [Unary Operator: PostInc (++)]
																// DeclRefExpr- i - int
														// CompoundStmt-  - 
															// BinaryOperator-  - int [Binary Operator: Assign (=)]
																// DeclRefExpr- gotoVlineTo - int
																// IntegerLiteral-  - int [Literal: 0]
													// IfStmt-  - 
														// BinaryOperator-  - int [Binary Operator: GE (>=)]
															// UnexposedExpr- i - int
																// DeclRefExpr- i - int
															// UnexposedExpr- sp - int
																// DeclRefExpr- sp - int
														// BreakStmt-  - 
													// CallExpr- stbtt__csctx_rline_to - void
														// UnexposedExpr- stbtt__csctx_rline_to - void (*)(stbtt__csctx *, float, float)
															// DeclRefExpr- stbtt__csctx_rline_to - void (stbtt__csctx *, float, float)
														// UnexposedExpr- c - stbtt__csctx *
															// DeclRefExpr- c - stbtt__csctx *
														// UnexposedExpr-  - float
															// IntegerLiteral-  - int [Literal: 0]
														// UnexposedExpr-  - float
															// ArraySubscriptExpr-  - float
																// UnexposedExpr- s - float *
																	// DeclRefExpr- s - float [48]
																// UnexposedExpr- i - int
																	// DeclRefExpr- i - int
													// UnaryOperator-  - int [Unary Operator: PostInc (++)]
														// DeclRefExpr- i - int
								// BreakStmt-  - 
								// CaseStmt-  - 
									// IntegerLiteral-  - int [Literal: 31]
									// CaseStmt-  - 
										// IntegerLiteral-  - int [Literal: 30]
										// CompoundStmt-  - 
											// DeclStmt-  - 
												// VarDecl- gotoHcurveTo - int
													// IntegerLiteral-  - int [Literal: 0]
											// IfStmt-  - 
												// BinaryOperator-  - int [Binary Operator: EQ (==)]
													// UnexposedExpr- b0 - int
														// DeclRefExpr- b0 - int
													// IntegerLiteral-  - int [Literal: 31]
												// CompoundStmt-  - 
													// IfStmt-  - 
														// BinaryOperator-  - int [Binary Operator: LT (<)]
															// UnexposedExpr- sp - int
																// DeclRefExpr- sp - int
															// IntegerLiteral-  - int [Literal: 4]
														// ReturnStmt-  - 
															// ParenExpr-  - int
																// IntegerLiteral-  - int [Literal: 0]
													// BinaryOperator-  - int [Binary Operator: Assign (=)]
														// DeclRefExpr- gotoHcurveTo - int
														// IntegerLiteral-  - int [Literal: 1]
											// ForStmt-  - 
												// CompoundStmt-  - 
													// IfStmt-  - 
														// UnaryOperator-  - int [Unary Operator: LNot (!)]
															// UnexposedExpr- gotoHcurveTo - int
																// DeclRefExpr- gotoHcurveTo - int
														// CompoundStmt-  - 
															// IfStmt-  - 
																// BinaryOperator-  - int [Binary Operator: GE (>=)]
																	// BinaryOperator-  - int [Binary Operator: Add (+)]
																		// UnexposedExpr- i - int
																			// DeclRefExpr- i - int
																		// IntegerLiteral-  - int [Literal: 3]
																	// UnexposedExpr- sp - int
																		// DeclRefExpr- sp - int
																// BreakStmt-  - 
															// CallExpr- stbtt__csctx_rccurve_to - void
																// UnexposedExpr- stbtt__csctx_rccurve_to - void (*)(stbtt__csctx *, float, float, float, float, float, float)
																	// DeclRefExpr- stbtt__csctx_rccurve_to - void (stbtt__csctx *, float, float, float, float, float, float)
																// UnexposedExpr- c - stbtt__csctx *
																	// DeclRefExpr- c - stbtt__csctx *
																// UnexposedExpr-  - float
																	// IntegerLiteral-  - int [Literal: 0]
																// UnexposedExpr-  - float
																	// ArraySubscriptExpr-  - float
																		// UnexposedExpr- s - float *
																			// DeclRefExpr- s - float [48]
																		// UnexposedExpr- i - int
																			// DeclRefExpr- i - int
																// UnexposedExpr-  - float
																	// ArraySubscriptExpr-  - float
																		// UnexposedExpr- s - float *
																			// DeclRefExpr- s - float [48]
																		// BinaryOperator-  - int [Binary Operator: Add (+)]
																			// UnexposedExpr- i - int
																				// DeclRefExpr- i - int
																			// IntegerLiteral-  - int [Literal: 1]
																// UnexposedExpr-  - float
																	// ArraySubscriptExpr-  - float
																		// UnexposedExpr- s - float *
																			// DeclRefExpr- s - float [48]
																		// BinaryOperator-  - int [Binary Operator: Add (+)]
																			// UnexposedExpr- i - int
																				// DeclRefExpr- i - int
																			// IntegerLiteral-  - int [Literal: 2]
																// UnexposedExpr-  - float
																	// ArraySubscriptExpr-  - float
																		// UnexposedExpr- s - float *
																			// DeclRefExpr- s - float [48]
																		// BinaryOperator-  - int [Binary Operator: Add (+)]
																			// UnexposedExpr- i - int
																				// DeclRefExpr- i - int
																			// IntegerLiteral-  - int [Literal: 3]
																// ConditionalOperator-  - float
																	// ParenExpr-  - int
																		// BinaryOperator-  - int [Binary Operator: EQ (==)]
																			// BinaryOperator-  - int [Binary Operator: Sub (-)]
																				// UnexposedExpr- sp - int
																					// DeclRefExpr- sp - int
																				// UnexposedExpr- i - int
																					// DeclRefExpr- i - int
																			// IntegerLiteral-  - int [Literal: 5]
																	// UnexposedExpr-  - float
																		// ArraySubscriptExpr-  - float
																			// UnexposedExpr- s - float *
																				// DeclRefExpr- s - float [48]
																			// BinaryOperator-  - int [Binary Operator: Add (+)]
																				// UnexposedExpr- i - int
																					// DeclRefExpr- i - int
																				// IntegerLiteral-  - int [Literal: 4]
																	// FloatingLiteral-  - float [Literal: 0]
															// CompoundAssignOperator-  - int
																// DeclRefExpr- i - int
																// IntegerLiteral-  - int [Literal: 4]
														// CompoundStmt-  - 
															// BinaryOperator-  - int [Binary Operator: Assign (=)]
																// DeclRefExpr- gotoHcurveTo - int
																// IntegerLiteral-  - int [Literal: 0]
													// IfStmt-  - 
														// BinaryOperator-  - int [Binary Operator: GE (>=)]
															// BinaryOperator-  - int [Binary Operator: Add (+)]
																// UnexposedExpr- i - int
																	// DeclRefExpr- i - int
																// IntegerLiteral-  - int [Literal: 3]
															// UnexposedExpr- sp - int
																// DeclRefExpr- sp - int
														// BreakStmt-  - 
													// CallExpr- stbtt__csctx_rccurve_to - void
														// UnexposedExpr- stbtt__csctx_rccurve_to - void (*)(stbtt__csctx *, float, float, float, float, float, float)
															// DeclRefExpr- stbtt__csctx_rccurve_to - void (stbtt__csctx *, float, float, float, float, float, float)
														// UnexposedExpr- c - stbtt__csctx *
															// DeclRefExpr- c - stbtt__csctx *
														// UnexposedExpr-  - float
															// ArraySubscriptExpr-  - float
																// UnexposedExpr- s - float *
																	// DeclRefExpr- s - float [48]
																// UnexposedExpr- i - int
																	// DeclRefExpr- i - int
														// UnexposedExpr-  - float
															// IntegerLiteral-  - int [Literal: 0]
														// UnexposedExpr-  - float
															// ArraySubscriptExpr-  - float
																// UnexposedExpr- s - float *
																	// DeclRefExpr- s - float [48]
																// BinaryOperator-  - int [Binary Operator: Add (+)]
																	// UnexposedExpr- i - int
																		// DeclRefExpr- i - int
																	// IntegerLiteral-  - int [Literal: 1]
														// UnexposedExpr-  - float
															// ArraySubscriptExpr-  - float
																// UnexposedExpr- s - float *
																	// DeclRefExpr- s - float [48]
																// BinaryOperator-  - int [Binary Operator: Add (+)]
																	// UnexposedExpr- i - int
																		// DeclRefExpr- i - int
																	// IntegerLiteral-  - int [Literal: 2]
														// ConditionalOperator-  - float
															// ParenExpr-  - int
																// BinaryOperator-  - int [Binary Operator: EQ (==)]
																	// BinaryOperator-  - int [Binary Operator: Sub (-)]
																		// UnexposedExpr- sp - int
																			// DeclRefExpr- sp - int
																		// UnexposedExpr- i - int
																			// DeclRefExpr- i - int
																	// IntegerLiteral-  - int [Literal: 5]
															// UnexposedExpr-  - float
																// ArraySubscriptExpr-  - float
																	// UnexposedExpr- s - float *
																		// DeclRefExpr- s - float [48]
																	// BinaryOperator-  - int [Binary Operator: Add (+)]
																		// UnexposedExpr- i - int
																			// DeclRefExpr- i - int
																		// IntegerLiteral-  - int [Literal: 4]
															// FloatingLiteral-  - float [Literal: 0]
														// UnexposedExpr-  - float
															// ArraySubscriptExpr-  - float
																// UnexposedExpr- s - float *
																	// DeclRefExpr- s - float [48]
																// BinaryOperator-  - int [Binary Operator: Add (+)]
																	// UnexposedExpr- i - int
																		// DeclRefExpr- i - int
																	// IntegerLiteral-  - int [Literal: 3]
													// CompoundAssignOperator-  - int
														// DeclRefExpr- i - int
														// IntegerLiteral-  - int [Literal: 4]
								// BreakStmt-  - 
								// CaseStmt-  - 
									// IntegerLiteral-  - int [Literal: 8]
									// IfStmt-  - 
										// BinaryOperator-  - int [Binary Operator: LT (<)]
											// UnexposedExpr- sp - int
												// DeclRefExpr- sp - int
											// IntegerLiteral-  - int [Literal: 6]
										// ReturnStmt-  - 
											// ParenExpr-  - int
												// IntegerLiteral-  - int [Literal: 0]
								// ForStmt-  - 
									// BinaryOperator-  - int [Binary Operator: LT (<)]
										// BinaryOperator-  - int [Binary Operator: Add (+)]
											// UnexposedExpr- i - int
												// DeclRefExpr- i - int
											// IntegerLiteral-  - int [Literal: 5]
										// UnexposedExpr- sp - int
											// DeclRefExpr- sp - int
									// CompoundAssignOperator-  - int
										// DeclRefExpr- i - int
										// IntegerLiteral-  - int [Literal: 6]
									// CallExpr- stbtt__csctx_rccurve_to - void
										// UnexposedExpr- stbtt__csctx_rccurve_to - void (*)(stbtt__csctx *, float, float, float, float, float, float)
											// DeclRefExpr- stbtt__csctx_rccurve_to - void (stbtt__csctx *, float, float, float, float, float, float)
										// UnexposedExpr- c - stbtt__csctx *
											// DeclRefExpr- c - stbtt__csctx *
										// UnexposedExpr-  - float
											// ArraySubscriptExpr-  - float
												// UnexposedExpr- s - float *
													// DeclRefExpr- s - float [48]
												// UnexposedExpr- i - int
													// DeclRefExpr- i - int
										// UnexposedExpr-  - float
											// ArraySubscriptExpr-  - float
												// UnexposedExpr- s - float *
													// DeclRefExpr- s - float [48]
												// BinaryOperator-  - int [Binary Operator: Add (+)]
													// UnexposedExpr- i - int
														// DeclRefExpr- i - int
													// IntegerLiteral-  - int [Literal: 1]
										// UnexposedExpr-  - float
											// ArraySubscriptExpr-  - float
												// UnexposedExpr- s - float *
													// DeclRefExpr- s - float [48]
												// BinaryOperator-  - int [Binary Operator: Add (+)]
													// UnexposedExpr- i - int
														// DeclRefExpr- i - int
													// IntegerLiteral-  - int [Literal: 2]
										// UnexposedExpr-  - float
											// ArraySubscriptExpr-  - float
												// UnexposedExpr- s - float *
													// DeclRefExpr- s - float [48]
												// BinaryOperator-  - int [Binary Operator: Add (+)]
													// UnexposedExpr- i - int
														// DeclRefExpr- i - int
													// IntegerLiteral-  - int [Literal: 3]
										// UnexposedExpr-  - float
											// ArraySubscriptExpr-  - float
												// UnexposedExpr- s - float *
													// DeclRefExpr- s - float [48]
												// BinaryOperator-  - int [Binary Operator: Add (+)]
													// UnexposedExpr- i - int
														// DeclRefExpr- i - int
													// IntegerLiteral-  - int [Literal: 4]
										// UnexposedExpr-  - float
											// ArraySubscriptExpr-  - float
												// UnexposedExpr- s - float *
													// DeclRefExpr- s - float [48]
												// BinaryOperator-  - int [Binary Operator: Add (+)]
													// UnexposedExpr- i - int
														// DeclRefExpr- i - int
													// IntegerLiteral-  - int [Literal: 5]
								// BreakStmt-  - 
								// CaseStmt-  - 
									// IntegerLiteral-  - int [Literal: 24]
									// IfStmt-  - 
										// BinaryOperator-  - int [Binary Operator: LT (<)]
											// UnexposedExpr- sp - int
												// DeclRefExpr- sp - int
											// IntegerLiteral-  - int [Literal: 8]
										// ReturnStmt-  - 
											// ParenExpr-  - int
												// IntegerLiteral-  - int [Literal: 0]
								// ForStmt-  - 
									// BinaryOperator-  - int [Binary Operator: LT (<)]
										// BinaryOperator-  - int [Binary Operator: Add (+)]
											// UnexposedExpr- i - int
												// DeclRefExpr- i - int
											// IntegerLiteral-  - int [Literal: 5]
										// BinaryOperator-  - int [Binary Operator: Sub (-)]
											// UnexposedExpr- sp - int
												// DeclRefExpr- sp - int
											// IntegerLiteral-  - int [Literal: 2]
									// CompoundAssignOperator-  - int
										// DeclRefExpr- i - int
										// IntegerLiteral-  - int [Literal: 6]
									// CallExpr- stbtt__csctx_rccurve_to - void
										// UnexposedExpr- stbtt__csctx_rccurve_to - void (*)(stbtt__csctx *, float, float, float, float, float, float)
											// DeclRefExpr- stbtt__csctx_rccurve_to - void (stbtt__csctx *, float, float, float, float, float, float)
										// UnexposedExpr- c - stbtt__csctx *
											// DeclRefExpr- c - stbtt__csctx *
										// UnexposedExpr-  - float
											// ArraySubscriptExpr-  - float
												// UnexposedExpr- s - float *
													// DeclRefExpr- s - float [48]
												// UnexposedExpr- i - int
													// DeclRefExpr- i - int
										// UnexposedExpr-  - float
											// ArraySubscriptExpr-  - float
												// UnexposedExpr- s - float *
													// DeclRefExpr- s - float [48]
												// BinaryOperator-  - int [Binary Operator: Add (+)]
													// UnexposedExpr- i - int
														// DeclRefExpr- i - int
													// IntegerLiteral-  - int [Literal: 1]
										// UnexposedExpr-  - float
											// ArraySubscriptExpr-  - float
												// UnexposedExpr- s - float *
													// DeclRefExpr- s - float [48]
												// BinaryOperator-  - int [Binary Operator: Add (+)]
													// UnexposedExpr- i - int
														// DeclRefExpr- i - int
													// IntegerLiteral-  - int [Literal: 2]
										// UnexposedExpr-  - float
											// ArraySubscriptExpr-  - float
												// UnexposedExpr- s - float *
													// DeclRefExpr- s - float [48]
												// BinaryOperator-  - int [Binary Operator: Add (+)]
													// UnexposedExpr- i - int
														// DeclRefExpr- i - int
													// IntegerLiteral-  - int [Literal: 3]
										// UnexposedExpr-  - float
											// ArraySubscriptExpr-  - float
												// UnexposedExpr- s - float *
													// DeclRefExpr- s - float [48]
												// BinaryOperator-  - int [Binary Operator: Add (+)]
													// UnexposedExpr- i - int
														// DeclRefExpr- i - int
													// IntegerLiteral-  - int [Literal: 4]
										// UnexposedExpr-  - float
											// ArraySubscriptExpr-  - float
												// UnexposedExpr- s - float *
													// DeclRefExpr- s - float [48]
												// BinaryOperator-  - int [Binary Operator: Add (+)]
													// UnexposedExpr- i - int
														// DeclRefExpr- i - int
													// IntegerLiteral-  - int [Literal: 5]
								// IfStmt-  - 
									// BinaryOperator-  - int [Binary Operator: GE (>=)]
										// BinaryOperator-  - int [Binary Operator: Add (+)]
											// UnexposedExpr- i - int
												// DeclRefExpr- i - int
											// IntegerLiteral-  - int [Literal: 1]
										// UnexposedExpr- sp - int
											// DeclRefExpr- sp - int
									// ReturnStmt-  - 
										// ParenExpr-  - int
											// IntegerLiteral-  - int [Literal: 0]
								// CallExpr- stbtt__csctx_rline_to - void
									// UnexposedExpr- stbtt__csctx_rline_to - void (*)(stbtt__csctx *, float, float)
										// DeclRefExpr- stbtt__csctx_rline_to - void (stbtt__csctx *, float, float)
									// UnexposedExpr- c - stbtt__csctx *
										// DeclRefExpr- c - stbtt__csctx *
									// UnexposedExpr-  - float
										// ArraySubscriptExpr-  - float
											// UnexposedExpr- s - float *
												// DeclRefExpr- s - float [48]
											// UnexposedExpr- i - int
												// DeclRefExpr- i - int
									// UnexposedExpr-  - float
										// ArraySubscriptExpr-  - float
											// UnexposedExpr- s - float *
												// DeclRefExpr- s - float [48]
											// BinaryOperator-  - int [Binary Operator: Add (+)]
												// UnexposedExpr- i - int
													// DeclRefExpr- i - int
												// IntegerLiteral-  - int [Literal: 1]
								// BreakStmt-  - 
								// CaseStmt-  - 
									// IntegerLiteral-  - int [Literal: 25]
									// IfStmt-  - 
										// BinaryOperator-  - int [Binary Operator: LT (<)]
											// UnexposedExpr- sp - int
												// DeclRefExpr- sp - int
											// IntegerLiteral-  - int [Literal: 8]
										// ReturnStmt-  - 
											// ParenExpr-  - int
												// IntegerLiteral-  - int [Literal: 0]
								// ForStmt-  - 
									// BinaryOperator-  - int [Binary Operator: LT (<)]
										// BinaryOperator-  - int [Binary Operator: Add (+)]
											// UnexposedExpr- i - int
												// DeclRefExpr- i - int
											// IntegerLiteral-  - int [Literal: 1]
										// BinaryOperator-  - int [Binary Operator: Sub (-)]
											// UnexposedExpr- sp - int
												// DeclRefExpr- sp - int
											// IntegerLiteral-  - int [Literal: 6]
									// CompoundAssignOperator-  - int
										// DeclRefExpr- i - int
										// IntegerLiteral-  - int [Literal: 2]
									// CallExpr- stbtt__csctx_rline_to - void
										// UnexposedExpr- stbtt__csctx_rline_to - void (*)(stbtt__csctx *, float, float)
											// DeclRefExpr- stbtt__csctx_rline_to - void (stbtt__csctx *, float, float)
										// UnexposedExpr- c - stbtt__csctx *
											// DeclRefExpr- c - stbtt__csctx *
										// UnexposedExpr-  - float
											// ArraySubscriptExpr-  - float
												// UnexposedExpr- s - float *
													// DeclRefExpr- s - float [48]
												// UnexposedExpr- i - int
													// DeclRefExpr- i - int
										// UnexposedExpr-  - float
											// ArraySubscriptExpr-  - float
												// UnexposedExpr- s - float *
													// DeclRefExpr- s - float [48]
												// BinaryOperator-  - int [Binary Operator: Add (+)]
													// UnexposedExpr- i - int
														// DeclRefExpr- i - int
													// IntegerLiteral-  - int [Literal: 1]
								// IfStmt-  - 
									// BinaryOperator-  - int [Binary Operator: GE (>=)]
										// BinaryOperator-  - int [Binary Operator: Add (+)]
											// UnexposedExpr- i - int
												// DeclRefExpr- i - int
											// IntegerLiteral-  - int [Literal: 5]
										// UnexposedExpr- sp - int
											// DeclRefExpr- sp - int
									// ReturnStmt-  - 
										// ParenExpr-  - int
											// IntegerLiteral-  - int [Literal: 0]
								// CallExpr- stbtt__csctx_rccurve_to - void
									// UnexposedExpr- stbtt__csctx_rccurve_to - void (*)(stbtt__csctx *, float, float, float, float, float, float)
										// DeclRefExpr- stbtt__csctx_rccurve_to - void (stbtt__csctx *, float, float, float, float, float, float)
									// UnexposedExpr- c - stbtt__csctx *
										// DeclRefExpr- c - stbtt__csctx *
									// UnexposedExpr-  - float
										// ArraySubscriptExpr-  - float
											// UnexposedExpr- s - float *
												// DeclRefExpr- s - float [48]
											// UnexposedExpr- i - int
												// DeclRefExpr- i - int
									// UnexposedExpr-  - float
										// ArraySubscriptExpr-  - float
											// UnexposedExpr- s - float *
												// DeclRefExpr- s - float [48]
											// BinaryOperator-  - int [Binary Operator: Add (+)]
												// UnexposedExpr- i - int
													// DeclRefExpr- i - int
												// IntegerLiteral-  - int [Literal: 1]
									// UnexposedExpr-  - float
										// ArraySubscriptExpr-  - float
											// UnexposedExpr- s - float *
												// DeclRefExpr- s - float [48]
											// BinaryOperator-  - int [Binary Operator: Add (+)]
												// UnexposedExpr- i - int
													// DeclRefExpr- i - int
												// IntegerLiteral-  - int [Literal: 2]
									// UnexposedExpr-  - float
										// ArraySubscriptExpr-  - float
											// UnexposedExpr- s - float *
												// DeclRefExpr- s - float [48]
											// BinaryOperator-  - int [Binary Operator: Add (+)]
												// UnexposedExpr- i - int
													// DeclRefExpr- i - int
												// IntegerLiteral-  - int [Literal: 3]
									// UnexposedExpr-  - float
										// ArraySubscriptExpr-  - float
											// UnexposedExpr- s - float *
												// DeclRefExpr- s - float [48]
											// BinaryOperator-  - int [Binary Operator: Add (+)]
												// UnexposedExpr- i - int
													// DeclRefExpr- i - int
												// IntegerLiteral-  - int [Literal: 4]
									// UnexposedExpr-  - float
										// ArraySubscriptExpr-  - float
											// UnexposedExpr- s - float *
												// DeclRefExpr- s - float [48]
											// BinaryOperator-  - int [Binary Operator: Add (+)]
												// UnexposedExpr- i - int
													// DeclRefExpr- i - int
												// IntegerLiteral-  - int [Literal: 5]
								// BreakStmt-  - 
								// CaseStmt-  - 
									// IntegerLiteral-  - int [Literal: 26]
									// CaseStmt-  - 
										// IntegerLiteral-  - int [Literal: 27]
										// IfStmt-  - 
											// BinaryOperator-  - int [Binary Operator: LT (<)]
												// UnexposedExpr- sp - int
													// DeclRefExpr- sp - int
												// IntegerLiteral-  - int [Literal: 4]
											// ReturnStmt-  - 
												// ParenExpr-  - int
													// IntegerLiteral-  - int [Literal: 0]
								// BinaryOperator-  - float [Binary Operator: Assign (=)]
									// DeclRefExpr- f - float
									// UnexposedExpr-  - float
										// FloatingLiteral-  - double [Literal: 0]
								// IfStmt-  - 
									// BinaryOperator-  - int [Binary Operator: And (&)]
										// UnexposedExpr- sp - int
											// DeclRefExpr- sp - int
										// IntegerLiteral-  - int [Literal: 1]
									// CompoundStmt-  - 
										// BinaryOperator-  - float [Binary Operator: Assign (=)]
											// DeclRefExpr- f - float
											// UnexposedExpr-  - float
												// ArraySubscriptExpr-  - float
													// UnexposedExpr- s - float *
														// DeclRefExpr- s - float [48]
													// UnexposedExpr- i - int
														// DeclRefExpr- i - int
										// UnaryOperator-  - int [Unary Operator: PostInc (++)]
											// DeclRefExpr- i - int
								// ForStmt-  - 
									// BinaryOperator-  - int [Binary Operator: LT (<)]
										// BinaryOperator-  - int [Binary Operator: Add (+)]
											// UnexposedExpr- i - int
												// DeclRefExpr- i - int
											// IntegerLiteral-  - int [Literal: 3]
										// UnexposedExpr- sp - int
											// DeclRefExpr- sp - int
									// CompoundAssignOperator-  - int
										// DeclRefExpr- i - int
										// IntegerLiteral-  - int [Literal: 4]
									// CompoundStmt-  - 
										// IfStmt-  - 
											// BinaryOperator-  - int [Binary Operator: EQ (==)]
												// UnexposedExpr- b0 - int
													// DeclRefExpr- b0 - int
												// IntegerLiteral-  - int [Literal: 27]
											// CallExpr- stbtt__csctx_rccurve_to - void
												// UnexposedExpr- stbtt__csctx_rccurve_to - void (*)(stbtt__csctx *, float, float, float, float, float, float)
													// DeclRefExpr- stbtt__csctx_rccurve_to - void (stbtt__csctx *, float, float, float, float, float, float)
												// UnexposedExpr- c - stbtt__csctx *
													// DeclRefExpr- c - stbtt__csctx *
												// UnexposedExpr-  - float
													// ArraySubscriptExpr-  - float
														// UnexposedExpr- s - float *
															// DeclRefExpr- s - float [48]
														// UnexposedExpr- i - int
															// DeclRefExpr- i - int
												// UnexposedExpr- f - float
													// DeclRefExpr- f - float
												// UnexposedExpr-  - float
													// ArraySubscriptExpr-  - float
														// UnexposedExpr- s - float *
															// DeclRefExpr- s - float [48]
														// BinaryOperator-  - int [Binary Operator: Add (+)]
															// UnexposedExpr- i - int
																// DeclRefExpr- i - int
															// IntegerLiteral-  - int [Literal: 1]
												// UnexposedExpr-  - float
													// ArraySubscriptExpr-  - float
														// UnexposedExpr- s - float *
															// DeclRefExpr- s - float [48]
														// BinaryOperator-  - int [Binary Operator: Add (+)]
															// UnexposedExpr- i - int
																// DeclRefExpr- i - int
															// IntegerLiteral-  - int [Literal: 2]
												// UnexposedExpr-  - float
													// ArraySubscriptExpr-  - float
														// UnexposedExpr- s - float *
															// DeclRefExpr- s - float [48]
														// BinaryOperator-  - int [Binary Operator: Add (+)]
															// UnexposedExpr- i - int
																// DeclRefExpr- i - int
															// IntegerLiteral-  - int [Literal: 3]
												// UnexposedExpr-  - float
													// FloatingLiteral-  - double [Literal: 0]
											// CallExpr- stbtt__csctx_rccurve_to - void
												// UnexposedExpr- stbtt__csctx_rccurve_to - void (*)(stbtt__csctx *, float, float, float, float, float, float)
													// DeclRefExpr- stbtt__csctx_rccurve_to - void (stbtt__csctx *, float, float, float, float, float, float)
												// UnexposedExpr- c - stbtt__csctx *
													// DeclRefExpr- c - stbtt__csctx *
												// UnexposedExpr- f - float
													// DeclRefExpr- f - float
												// UnexposedExpr-  - float
													// ArraySubscriptExpr-  - float
														// UnexposedExpr- s - float *
															// DeclRefExpr- s - float [48]
														// UnexposedExpr- i - int
															// DeclRefExpr- i - int
												// UnexposedExpr-  - float
													// ArraySubscriptExpr-  - float
														// UnexposedExpr- s - float *
															// DeclRefExpr- s - float [48]
														// BinaryOperator-  - int [Binary Operator: Add (+)]
															// UnexposedExpr- i - int
																// DeclRefExpr- i - int
															// IntegerLiteral-  - int [Literal: 1]
												// UnexposedExpr-  - float
													// ArraySubscriptExpr-  - float
														// UnexposedExpr- s - float *
															// DeclRefExpr- s - float [48]
														// BinaryOperator-  - int [Binary Operator: Add (+)]
															// UnexposedExpr- i - int
																// DeclRefExpr- i - int
															// IntegerLiteral-  - int [Literal: 2]
												// UnexposedExpr-  - float
													// FloatingLiteral-  - double [Literal: 0]
												// UnexposedExpr-  - float
													// ArraySubscriptExpr-  - float
														// UnexposedExpr- s - float *
															// DeclRefExpr- s - float [48]
														// BinaryOperator-  - int [Binary Operator: Add (+)]
															// UnexposedExpr- i - int
																// DeclRefExpr- i - int
															// IntegerLiteral-  - int [Literal: 3]
										// BinaryOperator-  - float [Binary Operator: Assign (=)]
											// DeclRefExpr- f - float
											// UnexposedExpr-  - float
												// FloatingLiteral-  - double [Literal: 0]
								// BreakStmt-  - 
								// CaseStmt-  - 
									// IntegerLiteral-  - int [Literal: 10]
									// CaseStmt-  - 
										// IntegerLiteral-  - int [Literal: 29]
										// IfStmt-  - 
											// BinaryOperator-  - int [Binary Operator: EQ (==)]
												// UnexposedExpr- b0 - int
													// DeclRefExpr- b0 - int
												// IntegerLiteral-  - int [Literal: 10]
											// CompoundStmt-  - 
												// IfStmt-  - 
													// UnaryOperator-  - int [Unary Operator: LNot (!)]
														// UnexposedExpr- has_subrs - int
															// DeclRefExpr- has_subrs - int
													// CompoundStmt-  - 
														// IfStmt-  - 
															// UnexposedExpr- size - int
																// MemberRefExpr- size - const int
																	// MemberRefExpr- fdselect - const stbtt__buf
																		// UnexposedExpr- info - const stbtt_fontinfo *
																			// DeclRefExpr- info - const stbtt_fontinfo *
															// BinaryOperator-  - stbtt__buf [Binary Operator: Assign (=)]
																// DeclRefExpr- subrs - stbtt__buf
																// CallExpr- stbtt__cid_get_glyph_subrs - stbtt__buf
																	// UnexposedExpr- stbtt__cid_get_glyph_subrs - stbtt__buf (*)(const stbtt_fontinfo *, int)
																		// DeclRefExpr- stbtt__cid_get_glyph_subrs - stbtt__buf (const stbtt_fontinfo *, int)
																	// UnexposedExpr- info - const stbtt_fontinfo *
																		// DeclRefExpr- info - const stbtt_fontinfo *
																	// UnexposedExpr- glyph_index - int
																		// DeclRefExpr- glyph_index - int
														// BinaryOperator-  - int [Binary Operator: Assign (=)]
															// DeclRefExpr- has_subrs - int
															// IntegerLiteral-  - int [Literal: 1]
								// IfStmt-  - 
									// BinaryOperator-  - int [Binary Operator: LT (<)]
										// UnexposedExpr- sp - int
											// DeclRefExpr- sp - int
										// IntegerLiteral-  - int [Literal: 1]
									// ReturnStmt-  - 
										// ParenExpr-  - int
											// IntegerLiteral-  - int [Literal: 0]
								// BinaryOperator-  - int [Binary Operator: Assign (=)]
									// DeclRefExpr- v - int
									// CStyleCastExpr-  - int
										// UnexposedExpr-  - float
											// ArraySubscriptExpr-  - float
												// UnexposedExpr- s - float *
													// DeclRefExpr- s - float [48]
												// UnaryOperator-  - int [Unary Operator: PreDec (--)]
													// DeclRefExpr- sp - int
								// IfStmt-  - 
									// BinaryOperator-  - int [Binary Operator: GE (>=)]
										// UnexposedExpr- subr_stack_height - int
											// DeclRefExpr- subr_stack_height - int
										// IntegerLiteral-  - int [Literal: 10]
									// ReturnStmt-  - 
										// ParenExpr-  - int
											// IntegerLiteral-  - int [Literal: 0]
								// BinaryOperator-  - stbtt__buf [Binary Operator: Assign (=)]
									// ArraySubscriptExpr-  - stbtt__buf
										// UnexposedExpr- subr_stack - stbtt__buf *
											// DeclRefExpr- subr_stack - stbtt__buf [10]
										// UnaryOperator-  - int [Unary Operator: PostInc (++)]
											// DeclRefExpr- subr_stack_height - int
									// UnexposedExpr- b - stbtt__buf
										// DeclRefExpr- b - stbtt__buf
								// BinaryOperator-  - stbtt__buf [Binary Operator: Assign (=)]
									// DeclRefExpr- b - stbtt__buf
									// CallExpr- stbtt__get_subr - stbtt__buf
										// UnexposedExpr- stbtt__get_subr - stbtt__buf (*)(stbtt__buf, int)
											// DeclRefExpr- stbtt__get_subr - stbtt__buf (stbtt__buf, int)
										// ConditionalOperator-  - stbtt__buf
											// BinaryOperator-  - int [Binary Operator: EQ (==)]
												// UnexposedExpr- b0 - int
													// DeclRefExpr- b0 - int
												// IntegerLiteral-  - int [Literal: 10]
											// UnexposedExpr- subrs - stbtt__buf
												// DeclRefExpr- subrs - stbtt__buf
											// UnexposedExpr- gsubrs - stbtt__buf
												// MemberRefExpr- gsubrs - const stbtt__buf
													// UnexposedExpr- info - const stbtt_fontinfo *
														// DeclRefExpr- info - const stbtt_fontinfo *
										// UnexposedExpr- v - int
											// DeclRefExpr- v - int
								// IfStmt-  - 
									// BinaryOperator-  - int [Binary Operator: EQ (==)]
										// UnexposedExpr- size - int
											// MemberRefExpr- size - int
												// DeclRefExpr- b - stbtt__buf
										// IntegerLiteral-  - int [Literal: 0]
									// ReturnStmt-  - 
										// ParenExpr-  - int
											// IntegerLiteral-  - int [Literal: 0]
								// BinaryOperator-  - int [Binary Operator: Assign (=)]
									// MemberRefExpr- cursor - int
										// DeclRefExpr- b - stbtt__buf
									// IntegerLiteral-  - int [Literal: 0]
								// BinaryOperator-  - int [Binary Operator: Assign (=)]
									// DeclRefExpr- clear_stack - int
									// IntegerLiteral-  - int [Literal: 0]
								// BreakStmt-  - 
								// CaseStmt-  - 
									// IntegerLiteral-  - int [Literal: 11]
									// IfStmt-  - 
										// BinaryOperator-  - int [Binary Operator: LE (<=)]
											// UnexposedExpr- subr_stack_height - int
												// DeclRefExpr- subr_stack_height - int
											// IntegerLiteral-  - int [Literal: 0]
										// ReturnStmt-  - 
											// ParenExpr-  - int
												// IntegerLiteral-  - int [Literal: 0]
								// BinaryOperator-  - stbtt__buf [Binary Operator: Assign (=)]
									// DeclRefExpr- b - stbtt__buf
									// UnexposedExpr-  - stbtt__buf
										// ArraySubscriptExpr-  - stbtt__buf
											// UnexposedExpr- subr_stack - stbtt__buf *
												// DeclRefExpr- subr_stack - stbtt__buf [10]
											// UnaryOperator-  - int [Unary Operator: PreDec (--)]
												// DeclRefExpr- subr_stack_height - int
								// BinaryOperator-  - int [Binary Operator: Assign (=)]
									// DeclRefExpr- clear_stack - int
									// IntegerLiteral-  - int [Literal: 0]
								// BreakStmt-  - 
								// CaseStmt-  - 
									// IntegerLiteral-  - int [Literal: 14]
									// CallExpr- stbtt__csctx_close_shape - void
										// UnexposedExpr- stbtt__csctx_close_shape - void (*)(stbtt__csctx *)
											// DeclRefExpr- stbtt__csctx_close_shape - void (stbtt__csctx *)
										// UnexposedExpr- c - stbtt__csctx *
											// DeclRefExpr- c - stbtt__csctx *
								// ReturnStmt-  - 
									// IntegerLiteral-  - int [Literal: 1]
								// CaseStmt-  - 
									// IntegerLiteral-  - int [Literal: 12]
									// CompoundStmt-  - 
										// DeclStmt-  - 
											// VarDecl- dx1 - float
											// VarDecl- dx2 - float
											// VarDecl- dx3 - float
											// VarDecl- dx4 - float
											// VarDecl- dx5 - float
											// VarDecl- dx6 - float
											// VarDecl- dy1 - float
											// VarDecl- dy2 - float
											// VarDecl- dy3 - float
											// VarDecl- dy4 - float
											// VarDecl- dy5 - float
											// VarDecl- dy6 - float
										// DeclStmt-  - 
											// VarDecl- dx - float
											// VarDecl- dy - float
										// DeclStmt-  - 
											// VarDecl- b1 - int
												// UnexposedExpr- stbtt__buf_get8 - int
													// CallExpr- stbtt__buf_get8 - stbtt_uint8
														// UnexposedExpr- stbtt__buf_get8 - stbtt_uint8 (*)(stbtt__buf *)
															// DeclRefExpr- stbtt__buf_get8 - stbtt_uint8 (stbtt__buf *)
														// UnaryOperator-  - stbtt__buf * [Unary Operator: AddrOf (&)]
															// DeclRefExpr- b - stbtt__buf
										// SwitchStmt-  - 
											// UnexposedExpr- b1 - int
												// DeclRefExpr- b1 - int
											// CompoundStmt-  - 
												// CaseStmt-  - 
													// IntegerLiteral-  - int [Literal: 34]
													// IfStmt-  - 
														// BinaryOperator-  - int [Binary Operator: LT (<)]
															// UnexposedExpr- sp - int
																// DeclRefExpr- sp - int
															// IntegerLiteral-  - int [Literal: 7]
														// ReturnStmt-  - 
															// ParenExpr-  - int
																// IntegerLiteral-  - int [Literal: 0]
												// BinaryOperator-  - float [Binary Operator: Assign (=)]
													// DeclRefExpr- dx1 - float
													// UnexposedExpr-  - float
														// ArraySubscriptExpr-  - float
															// UnexposedExpr- s - float *
																// DeclRefExpr- s - float [48]
															// IntegerLiteral-  - int [Literal: 0]
												// BinaryOperator-  - float [Binary Operator: Assign (=)]
													// DeclRefExpr- dx2 - float
													// UnexposedExpr-  - float
														// ArraySubscriptExpr-  - float
															// UnexposedExpr- s - float *
																// DeclRefExpr- s - float [48]
															// IntegerLiteral-  - int [Literal: 1]
												// BinaryOperator-  - float [Binary Operator: Assign (=)]
													// DeclRefExpr- dy2 - float
													// UnexposedExpr-  - float
														// ArraySubscriptExpr-  - float
															// UnexposedExpr- s - float *
																// DeclRefExpr- s - float [48]
															// IntegerLiteral-  - int [Literal: 2]
												// BinaryOperator-  - float [Binary Operator: Assign (=)]
													// DeclRefExpr- dx3 - float
													// UnexposedExpr-  - float
														// ArraySubscriptExpr-  - float
															// UnexposedExpr- s - float *
																// DeclRefExpr- s - float [48]
															// IntegerLiteral-  - int [Literal: 3]
												// BinaryOperator-  - float [Binary Operator: Assign (=)]
													// DeclRefExpr- dx4 - float
													// UnexposedExpr-  - float
														// ArraySubscriptExpr-  - float
															// UnexposedExpr- s - float *
																// DeclRefExpr- s - float [48]
															// IntegerLiteral-  - int [Literal: 4]
												// BinaryOperator-  - float [Binary Operator: Assign (=)]
													// DeclRefExpr- dx5 - float
													// UnexposedExpr-  - float
														// ArraySubscriptExpr-  - float
															// UnexposedExpr- s - float *
																// DeclRefExpr- s - float [48]
															// IntegerLiteral-  - int [Literal: 5]
												// BinaryOperator-  - float [Binary Operator: Assign (=)]
													// DeclRefExpr- dx6 - float
													// UnexposedExpr-  - float
														// ArraySubscriptExpr-  - float
															// UnexposedExpr- s - float *
																// DeclRefExpr- s - float [48]
															// IntegerLiteral-  - int [Literal: 6]
												// CallExpr- stbtt__csctx_rccurve_to - void
													// UnexposedExpr- stbtt__csctx_rccurve_to - void (*)(stbtt__csctx *, float, float, float, float, float, float)
														// DeclRefExpr- stbtt__csctx_rccurve_to - void (stbtt__csctx *, float, float, float, float, float, float)
													// UnexposedExpr- c - stbtt__csctx *
														// DeclRefExpr- c - stbtt__csctx *
													// UnexposedExpr- dx1 - float
														// DeclRefExpr- dx1 - float
													// UnexposedExpr-  - float
														// IntegerLiteral-  - int [Literal: 0]
													// UnexposedExpr- dx2 - float
														// DeclRefExpr- dx2 - float
													// UnexposedExpr- dy2 - float
														// DeclRefExpr- dy2 - float
													// UnexposedExpr- dx3 - float
														// DeclRefExpr- dx3 - float
													// UnexposedExpr-  - float
														// IntegerLiteral-  - int [Literal: 0]
												// CallExpr- stbtt__csctx_rccurve_to - void
													// UnexposedExpr- stbtt__csctx_rccurve_to - void (*)(stbtt__csctx *, float, float, float, float, float, float)
														// DeclRefExpr- stbtt__csctx_rccurve_to - void (stbtt__csctx *, float, float, float, float, float, float)
													// UnexposedExpr- c - stbtt__csctx *
														// DeclRefExpr- c - stbtt__csctx *
													// UnexposedExpr- dx4 - float
														// DeclRefExpr- dx4 - float
													// UnexposedExpr-  - float
														// IntegerLiteral-  - int [Literal: 0]
													// UnexposedExpr- dx5 - float
														// DeclRefExpr- dx5 - float
													// UnaryOperator-  - float [Unary Operator: Minus (-)]
														// UnexposedExpr- dy2 - float
															// DeclRefExpr- dy2 - float
													// UnexposedExpr- dx6 - float
														// DeclRefExpr- dx6 - float
													// UnexposedExpr-  - float
														// IntegerLiteral-  - int [Literal: 0]
												// BreakStmt-  - 
												// CaseStmt-  - 
													// IntegerLiteral-  - int [Literal: 35]
													// IfStmt-  - 
														// BinaryOperator-  - int [Binary Operator: LT (<)]
															// UnexposedExpr- sp - int
																// DeclRefExpr- sp - int
															// IntegerLiteral-  - int [Literal: 13]
														// ReturnStmt-  - 
															// ParenExpr-  - int
																// IntegerLiteral-  - int [Literal: 0]
												// BinaryOperator-  - float [Binary Operator: Assign (=)]
													// DeclRefExpr- dx1 - float
													// UnexposedExpr-  - float
														// ArraySubscriptExpr-  - float
															// UnexposedExpr- s - float *
																// DeclRefExpr- s - float [48]
															// IntegerLiteral-  - int [Literal: 0]
												// BinaryOperator-  - float [Binary Operator: Assign (=)]
													// DeclRefExpr- dy1 - float
													// UnexposedExpr-  - float
														// ArraySubscriptExpr-  - float
															// UnexposedExpr- s - float *
																// DeclRefExpr- s - float [48]
															// IntegerLiteral-  - int [Literal: 1]
												// BinaryOperator-  - float [Binary Operator: Assign (=)]
													// DeclRefExpr- dx2 - float
													// UnexposedExpr-  - float
														// ArraySubscriptExpr-  - float
															// UnexposedExpr- s - float *
																// DeclRefExpr- s - float [48]
															// IntegerLiteral-  - int [Literal: 2]
												// BinaryOperator-  - float [Binary Operator: Assign (=)]
													// DeclRefExpr- dy2 - float
													// UnexposedExpr-  - float
														// ArraySubscriptExpr-  - float
															// UnexposedExpr- s - float *
																// DeclRefExpr- s - float [48]
															// IntegerLiteral-  - int [Literal: 3]
												// BinaryOperator-  - float [Binary Operator: Assign (=)]
													// DeclRefExpr- dx3 - float
													// UnexposedExpr-  - float
														// ArraySubscriptExpr-  - float
															// UnexposedExpr- s - float *
																// DeclRefExpr- s - float [48]
															// IntegerLiteral-  - int [Literal: 4]
												// BinaryOperator-  - float [Binary Operator: Assign (=)]
													// DeclRefExpr- dy3 - float
													// UnexposedExpr-  - float
														// ArraySubscriptExpr-  - float
															// UnexposedExpr- s - float *
																// DeclRefExpr- s - float [48]
															// IntegerLiteral-  - int [Literal: 5]
												// BinaryOperator-  - float [Binary Operator: Assign (=)]
													// DeclRefExpr- dx4 - float
													// UnexposedExpr-  - float
														// ArraySubscriptExpr-  - float
															// UnexposedExpr- s - float *
																// DeclRefExpr- s - float [48]
															// IntegerLiteral-  - int [Literal: 6]
												// BinaryOperator-  - float [Binary Operator: Assign (=)]
													// DeclRefExpr- dy4 - float
													// UnexposedExpr-  - float
														// ArraySubscriptExpr-  - float
															// UnexposedExpr- s - float *
																// DeclRefExpr- s - float [48]
															// IntegerLiteral-  - int [Literal: 7]
												// BinaryOperator-  - float [Binary Operator: Assign (=)]
													// DeclRefExpr- dx5 - float
													// UnexposedExpr-  - float
														// ArraySubscriptExpr-  - float
															// UnexposedExpr- s - float *
																// DeclRefExpr- s - float [48]
															// IntegerLiteral-  - int [Literal: 8]
												// BinaryOperator-  - float [Binary Operator: Assign (=)]
													// DeclRefExpr- dy5 - float
													// UnexposedExpr-  - float
														// ArraySubscriptExpr-  - float
															// UnexposedExpr- s - float *
																// DeclRefExpr- s - float [48]
															// IntegerLiteral-  - int [Literal: 9]
												// BinaryOperator-  - float [Binary Operator: Assign (=)]
													// DeclRefExpr- dx6 - float
													// UnexposedExpr-  - float
														// ArraySubscriptExpr-  - float
															// UnexposedExpr- s - float *
																// DeclRefExpr- s - float [48]
															// IntegerLiteral-  - int [Literal: 10]
												// BinaryOperator-  - float [Binary Operator: Assign (=)]
													// DeclRefExpr- dy6 - float
													// UnexposedExpr-  - float
														// ArraySubscriptExpr-  - float
															// UnexposedExpr- s - float *
																// DeclRefExpr- s - float [48]
															// IntegerLiteral-  - int [Literal: 11]
												// CallExpr- stbtt__csctx_rccurve_to - void
													// UnexposedExpr- stbtt__csctx_rccurve_to - void (*)(stbtt__csctx *, float, float, float, float, float, float)
														// DeclRefExpr- stbtt__csctx_rccurve_to - void (stbtt__csctx *, float, float, float, float, float, float)
													// UnexposedExpr- c - stbtt__csctx *
														// DeclRefExpr- c - stbtt__csctx *
													// UnexposedExpr- dx1 - float
														// DeclRefExpr- dx1 - float
													// UnexposedExpr- dy1 - float
														// DeclRefExpr- dy1 - float
													// UnexposedExpr- dx2 - float
														// DeclRefExpr- dx2 - float
													// UnexposedExpr- dy2 - float
														// DeclRefExpr- dy2 - float
													// UnexposedExpr- dx3 - float
														// DeclRefExpr- dx3 - float
													// UnexposedExpr- dy3 - float
														// DeclRefExpr- dy3 - float
												// CallExpr- stbtt__csctx_rccurve_to - void
													// UnexposedExpr- stbtt__csctx_rccurve_to - void (*)(stbtt__csctx *, float, float, float, float, float, float)
														// DeclRefExpr- stbtt__csctx_rccurve_to - void (stbtt__csctx *, float, float, float, float, float, float)
													// UnexposedExpr- c - stbtt__csctx *
														// DeclRefExpr- c - stbtt__csctx *
													// UnexposedExpr- dx4 - float
														// DeclRefExpr- dx4 - float
													// UnexposedExpr- dy4 - float
														// DeclRefExpr- dy4 - float
													// UnexposedExpr- dx5 - float
														// DeclRefExpr- dx5 - float
													// UnexposedExpr- dy5 - float
														// DeclRefExpr- dy5 - float
													// UnexposedExpr- dx6 - float
														// DeclRefExpr- dx6 - float
													// UnexposedExpr- dy6 - float
														// DeclRefExpr- dy6 - float
												// BreakStmt-  - 
												// CaseStmt-  - 
													// IntegerLiteral-  - int [Literal: 36]
													// IfStmt-  - 
														// BinaryOperator-  - int [Binary Operator: LT (<)]
															// UnexposedExpr- sp - int
																// DeclRefExpr- sp - int
															// IntegerLiteral-  - int [Literal: 9]
														// ReturnStmt-  - 
															// ParenExpr-  - int
																// IntegerLiteral-  - int [Literal: 0]
												// BinaryOperator-  - float [Binary Operator: Assign (=)]
													// DeclRefExpr- dx1 - float
													// UnexposedExpr-  - float
														// ArraySubscriptExpr-  - float
															// UnexposedExpr- s - float *
																// DeclRefExpr- s - float [48]
															// IntegerLiteral-  - int [Literal: 0]
												// BinaryOperator-  - float [Binary Operator: Assign (=)]
													// DeclRefExpr- dy1 - float
													// UnexposedExpr-  - float
														// ArraySubscriptExpr-  - float
															// UnexposedExpr- s - float *
																// DeclRefExpr- s - float [48]
															// IntegerLiteral-  - int [Literal: 1]
												// BinaryOperator-  - float [Binary Operator: Assign (=)]
													// DeclRefExpr- dx2 - float
													// UnexposedExpr-  - float
														// ArraySubscriptExpr-  - float
															// UnexposedExpr- s - float *
																// DeclRefExpr- s - float [48]
															// IntegerLiteral-  - int [Literal: 2]
												// BinaryOperator-  - float [Binary Operator: Assign (=)]
													// DeclRefExpr- dy2 - float
													// UnexposedExpr-  - float
														// ArraySubscriptExpr-  - float
															// UnexposedExpr- s - float *
																// DeclRefExpr- s - float [48]
															// IntegerLiteral-  - int [Literal: 3]
												// BinaryOperator-  - float [Binary Operator: Assign (=)]
													// DeclRefExpr- dx3 - float
													// UnexposedExpr-  - float
														// ArraySubscriptExpr-  - float
															// UnexposedExpr- s - float *
																// DeclRefExpr- s - float [48]
															// IntegerLiteral-  - int [Literal: 4]
												// BinaryOperator-  - float [Binary Operator: Assign (=)]
													// DeclRefExpr- dx4 - float
													// UnexposedExpr-  - float
														// ArraySubscriptExpr-  - float
															// UnexposedExpr- s - float *
																// DeclRefExpr- s - float [48]
															// IntegerLiteral-  - int [Literal: 5]
												// BinaryOperator-  - float [Binary Operator: Assign (=)]
													// DeclRefExpr- dx5 - float
													// UnexposedExpr-  - float
														// ArraySubscriptExpr-  - float
															// UnexposedExpr- s - float *
																// DeclRefExpr- s - float [48]
															// IntegerLiteral-  - int [Literal: 6]
												// BinaryOperator-  - float [Binary Operator: Assign (=)]
													// DeclRefExpr- dy5 - float
													// UnexposedExpr-  - float
														// ArraySubscriptExpr-  - float
															// UnexposedExpr- s - float *
																// DeclRefExpr- s - float [48]
															// IntegerLiteral-  - int [Literal: 7]
												// BinaryOperator-  - float [Binary Operator: Assign (=)]
													// DeclRefExpr- dx6 - float
													// UnexposedExpr-  - float
														// ArraySubscriptExpr-  - float
															// UnexposedExpr- s - float *
																// DeclRefExpr- s - float [48]
															// IntegerLiteral-  - int [Literal: 8]
												// CallExpr- stbtt__csctx_rccurve_to - void
													// UnexposedExpr- stbtt__csctx_rccurve_to - void (*)(stbtt__csctx *, float, float, float, float, float, float)
														// DeclRefExpr- stbtt__csctx_rccurve_to - void (stbtt__csctx *, float, float, float, float, float, float)
													// UnexposedExpr- c - stbtt__csctx *
														// DeclRefExpr- c - stbtt__csctx *
													// UnexposedExpr- dx1 - float
														// DeclRefExpr- dx1 - float
													// UnexposedExpr- dy1 - float
														// DeclRefExpr- dy1 - float
													// UnexposedExpr- dx2 - float
														// DeclRefExpr- dx2 - float
													// UnexposedExpr- dy2 - float
														// DeclRefExpr- dy2 - float
													// UnexposedExpr- dx3 - float
														// DeclRefExpr- dx3 - float
													// UnexposedExpr-  - float
														// IntegerLiteral-  - int [Literal: 0]
												// CallExpr- stbtt__csctx_rccurve_to - void
													// UnexposedExpr- stbtt__csctx_rccurve_to - void (*)(stbtt__csctx *, float, float, float, float, float, float)
														// DeclRefExpr- stbtt__csctx_rccurve_to - void (stbtt__csctx *, float, float, float, float, float, float)
													// UnexposedExpr- c - stbtt__csctx *
														// DeclRefExpr- c - stbtt__csctx *
													// UnexposedExpr- dx4 - float
														// DeclRefExpr- dx4 - float
													// UnexposedExpr-  - float
														// IntegerLiteral-  - int [Literal: 0]
													// UnexposedExpr- dx5 - float
														// DeclRefExpr- dx5 - float
													// UnexposedExpr- dy5 - float
														// DeclRefExpr- dy5 - float
													// UnexposedExpr- dx6 - float
														// DeclRefExpr- dx6 - float
													// UnaryOperator-  - float [Unary Operator: Minus (-)]
														// ParenExpr-  - float
															// BinaryOperator-  - float [Binary Operator: Add (+)]
																// BinaryOperator-  - float [Binary Operator: Add (+)]
																	// UnexposedExpr- dy1 - float
																		// DeclRefExpr- dy1 - float
																	// UnexposedExpr- dy2 - float
																		// DeclRefExpr- dy2 - float
																// UnexposedExpr- dy5 - float
																	// DeclRefExpr- dy5 - float
												// BreakStmt-  - 
												// CaseStmt-  - 
													// IntegerLiteral-  - int [Literal: 37]
													// IfStmt-  - 
														// BinaryOperator-  - int [Binary Operator: LT (<)]
															// UnexposedExpr- sp - int
																// DeclRefExpr- sp - int
															// IntegerLiteral-  - int [Literal: 11]
														// ReturnStmt-  - 
															// ParenExpr-  - int
																// IntegerLiteral-  - int [Literal: 0]
												// BinaryOperator-  - float [Binary Operator: Assign (=)]
													// DeclRefExpr- dx1 - float
													// UnexposedExpr-  - float
														// ArraySubscriptExpr-  - float
															// UnexposedExpr- s - float *
																// DeclRefExpr- s - float [48]
															// IntegerLiteral-  - int [Literal: 0]
												// BinaryOperator-  - float [Binary Operator: Assign (=)]
													// DeclRefExpr- dy1 - float
													// UnexposedExpr-  - float
														// ArraySubscriptExpr-  - float
															// UnexposedExpr- s - float *
																// DeclRefExpr- s - float [48]
															// IntegerLiteral-  - int [Literal: 1]
												// BinaryOperator-  - float [Binary Operator: Assign (=)]
													// DeclRefExpr- dx2 - float
													// UnexposedExpr-  - float
														// ArraySubscriptExpr-  - float
															// UnexposedExpr- s - float *
																// DeclRefExpr- s - float [48]
															// IntegerLiteral-  - int [Literal: 2]
												// BinaryOperator-  - float [Binary Operator: Assign (=)]
													// DeclRefExpr- dy2 - float
													// UnexposedExpr-  - float
														// ArraySubscriptExpr-  - float
															// UnexposedExpr- s - float *
																// DeclRefExpr- s - float [48]
															// IntegerLiteral-  - int [Literal: 3]
												// BinaryOperator-  - float [Binary Operator: Assign (=)]
													// DeclRefExpr- dx3 - float
													// UnexposedExpr-  - float
														// ArraySubscriptExpr-  - float
															// UnexposedExpr- s - float *
																// DeclRefExpr- s - float [48]
															// IntegerLiteral-  - int [Literal: 4]
												// BinaryOperator-  - float [Binary Operator: Assign (=)]
													// DeclRefExpr- dy3 - float
													// UnexposedExpr-  - float
														// ArraySubscriptExpr-  - float
															// UnexposedExpr- s - float *
																// DeclRefExpr- s - float [48]
															// IntegerLiteral-  - int [Literal: 5]
												// BinaryOperator-  - float [Binary Operator: Assign (=)]
													// DeclRefExpr- dx4 - float
													// UnexposedExpr-  - float
														// ArraySubscriptExpr-  - float
															// UnexposedExpr- s - float *
																// DeclRefExpr- s - float [48]
															// IntegerLiteral-  - int [Literal: 6]
												// BinaryOperator-  - float [Binary Operator: Assign (=)]
													// DeclRefExpr- dy4 - float
													// UnexposedExpr-  - float
														// ArraySubscriptExpr-  - float
															// UnexposedExpr- s - float *
																// DeclRefExpr- s - float [48]
															// IntegerLiteral-  - int [Literal: 7]
												// BinaryOperator-  - float [Binary Operator: Assign (=)]
													// DeclRefExpr- dx5 - float
													// UnexposedExpr-  - float
														// ArraySubscriptExpr-  - float
															// UnexposedExpr- s - float *
																// DeclRefExpr- s - float [48]
															// IntegerLiteral-  - int [Literal: 8]
												// BinaryOperator-  - float [Binary Operator: Assign (=)]
													// DeclRefExpr- dy5 - float
													// UnexposedExpr-  - float
														// ArraySubscriptExpr-  - float
															// UnexposedExpr- s - float *
																// DeclRefExpr- s - float [48]
															// IntegerLiteral-  - int [Literal: 9]
												// BinaryOperator-  - float [Binary Operator: Assign (=)]
													// DeclRefExpr- dx6 - float
													// BinaryOperator-  - float [Binary Operator: Assign (=)]
														// DeclRefExpr- dy6 - float
														// UnexposedExpr-  - float
															// ArraySubscriptExpr-  - float
																// UnexposedExpr- s - float *
																	// DeclRefExpr- s - float [48]
																// IntegerLiteral-  - int [Literal: 10]
												// BinaryOperator-  - float [Binary Operator: Assign (=)]
													// DeclRefExpr- dx - float
													// BinaryOperator-  - float [Binary Operator: Add (+)]
														// BinaryOperator-  - float [Binary Operator: Add (+)]
															// BinaryOperator-  - float [Binary Operator: Add (+)]
																// BinaryOperator-  - float [Binary Operator: Add (+)]
																	// UnexposedExpr- dx1 - float
																		// DeclRefExpr- dx1 - float
																	// UnexposedExpr- dx2 - float
																		// DeclRefExpr- dx2 - float
																// UnexposedExpr- dx3 - float
																	// DeclRefExpr- dx3 - float
															// UnexposedExpr- dx4 - float
																// DeclRefExpr- dx4 - float
														// UnexposedExpr- dx5 - float
															// DeclRefExpr- dx5 - float
												// BinaryOperator-  - float [Binary Operator: Assign (=)]
													// DeclRefExpr- dy - float
													// BinaryOperator-  - float [Binary Operator: Add (+)]
														// BinaryOperator-  - float [Binary Operator: Add (+)]
															// BinaryOperator-  - float [Binary Operator: Add (+)]
																// BinaryOperator-  - float [Binary Operator: Add (+)]
																	// UnexposedExpr- dy1 - float
																		// DeclRefExpr- dy1 - float
																	// UnexposedExpr- dy2 - float
																		// DeclRefExpr- dy2 - float
																// UnexposedExpr- dy3 - float
																	// DeclRefExpr- dy3 - float
															// UnexposedExpr- dy4 - float
																// DeclRefExpr- dy4 - float
														// UnexposedExpr- dy5 - float
															// DeclRefExpr- dy5 - float
												// IfStmt-  - 
													// BinaryOperator-  - int [Binary Operator: GT (>)]
														// CallExpr- fabs - double
															// UnexposedExpr- fabs - double (*)(double)
																// DeclRefExpr- fabs - double (double)
															// UnexposedExpr- dx - double
																// UnexposedExpr- dx - float
																	// DeclRefExpr- dx - float
														// CallExpr- fabs - double
															// UnexposedExpr- fabs - double (*)(double)
																// DeclRefExpr- fabs - double (double)
															// UnexposedExpr- dy - double
																// UnexposedExpr- dy - float
																	// DeclRefExpr- dy - float
													// BinaryOperator-  - float [Binary Operator: Assign (=)]
														// DeclRefExpr- dy6 - float
														// UnaryOperator-  - float [Unary Operator: Minus (-)]
															// UnexposedExpr- dy - float
																// DeclRefExpr- dy - float
													// BinaryOperator-  - float [Binary Operator: Assign (=)]
														// DeclRefExpr- dx6 - float
														// UnaryOperator-  - float [Unary Operator: Minus (-)]
															// UnexposedExpr- dx - float
																// DeclRefExpr- dx - float
												// CallExpr- stbtt__csctx_rccurve_to - void
													// UnexposedExpr- stbtt__csctx_rccurve_to - void (*)(stbtt__csctx *, float, float, float, float, float, float)
														// DeclRefExpr- stbtt__csctx_rccurve_to - void (stbtt__csctx *, float, float, float, float, float, float)
													// UnexposedExpr- c - stbtt__csctx *
														// DeclRefExpr- c - stbtt__csctx *
													// UnexposedExpr- dx1 - float
														// DeclRefExpr- dx1 - float
													// UnexposedExpr- dy1 - float
														// DeclRefExpr- dy1 - float
													// UnexposedExpr- dx2 - float
														// DeclRefExpr- dx2 - float
													// UnexposedExpr- dy2 - float
														// DeclRefExpr- dy2 - float
													// UnexposedExpr- dx3 - float
														// DeclRefExpr- dx3 - float
													// UnexposedExpr- dy3 - float
														// DeclRefExpr- dy3 - float
												// CallExpr- stbtt__csctx_rccurve_to - void
													// UnexposedExpr- stbtt__csctx_rccurve_to - void (*)(stbtt__csctx *, float, float, float, float, float, float)
														// DeclRefExpr- stbtt__csctx_rccurve_to - void (stbtt__csctx *, float, float, float, float, float, float)
													// UnexposedExpr- c - stbtt__csctx *
														// DeclRefExpr- c - stbtt__csctx *
													// UnexposedExpr- dx4 - float
														// DeclRefExpr- dx4 - float
													// UnexposedExpr- dy4 - float
														// DeclRefExpr- dy4 - float
													// UnexposedExpr- dx5 - float
														// DeclRefExpr- dx5 - float
													// UnexposedExpr- dy5 - float
														// DeclRefExpr- dy5 - float
													// UnexposedExpr- dx6 - float
														// DeclRefExpr- dx6 - float
													// UnexposedExpr- dy6 - float
														// DeclRefExpr- dy6 - float
												// BreakStmt-  - 
												// DefaultStmt-  - 
													// ReturnStmt-  - 
														// ParenExpr-  - int
															// IntegerLiteral-  - int [Literal: 0]
								// BreakStmt-  - 
								// DefaultStmt-  - 
									// IfStmt-  - 
										// BinaryOperator-  - int [Binary Operator: LAnd (&&)]
											// BinaryOperator-  - int [Binary Operator: LAnd (&&)]
												// BinaryOperator-  - int [Binary Operator: NE (!=)]
													// UnexposedExpr- b0 - int
														// DeclRefExpr- b0 - int
													// IntegerLiteral-  - int [Literal: 255]
												// BinaryOperator-  - int [Binary Operator: NE (!=)]
													// UnexposedExpr- b0 - int
														// DeclRefExpr- b0 - int
													// IntegerLiteral-  - int [Literal: 28]
											// ParenExpr-  - int
												// BinaryOperator-  - int [Binary Operator: LOr (||)]
													// BinaryOperator-  - int [Binary Operator: LT (<)]
														// UnexposedExpr- b0 - int
															// DeclRefExpr- b0 - int
														// IntegerLiteral-  - int [Literal: 32]
													// BinaryOperator-  - int [Binary Operator: GT (>)]
														// UnexposedExpr- b0 - int
															// DeclRefExpr- b0 - int
														// IntegerLiteral-  - int [Literal: 254]
										// ReturnStmt-  - 
											// ParenExpr-  - int
												// IntegerLiteral-  - int [Literal: 0]
								// IfStmt-  - 
									// BinaryOperator-  - int [Binary Operator: EQ (==)]
										// UnexposedExpr- b0 - int
											// DeclRefExpr- b0 - int
										// IntegerLiteral-  - int [Literal: 255]
									// CompoundStmt-  - 
										// BinaryOperator-  - float [Binary Operator: Assign (=)]
											// DeclRefExpr- f - float
											// BinaryOperator-  - float [Binary Operator: Div (/)]
												// CStyleCastExpr-  - float
													// CallExpr- stbtt__buf_get - stbtt_uint32
														// UnexposedExpr- stbtt__buf_get - stbtt_uint32 (*)(stbtt__buf *, int)
															// DeclRefExpr- stbtt__buf_get - stbtt_uint32 (stbtt__buf *, int)
														// ParenExpr-  - stbtt__buf *
															// UnaryOperator-  - stbtt__buf * [Unary Operator: AddrOf (&)]
																// DeclRefExpr- b - stbtt__buf
														// IntegerLiteral-  - int [Literal: 4]
												// UnexposedExpr-  - float
													// IntegerLiteral-  - int [Literal: 65536]
									// CompoundStmt-  - 
										// CallExpr- stbtt__buf_skip - void
											// UnexposedExpr- stbtt__buf_skip - void (*)(stbtt__buf *, int)
												// DeclRefExpr- stbtt__buf_skip - void (stbtt__buf *, int)
											// UnaryOperator-  - stbtt__buf * [Unary Operator: AddrOf (&)]
												// DeclRefExpr- b - stbtt__buf
											// UnaryOperator-  - int [Unary Operator: Minus (-)]
												// IntegerLiteral-  - int [Literal: 1]
										// BinaryOperator-  - float [Binary Operator: Assign (=)]
											// DeclRefExpr- f - float
											// CStyleCastExpr-  - float
												// CStyleCastExpr-  - stbtt_int16
													// TypeRef- stbtt_int16 - stbtt_int16
													// CallExpr- stbtt__cff_int - stbtt_uint32
														// UnexposedExpr- stbtt__cff_int - stbtt_uint32 (*)(stbtt__buf *)
															// DeclRefExpr- stbtt__cff_int - stbtt_uint32 (stbtt__buf *)
														// UnaryOperator-  - stbtt__buf * [Unary Operator: AddrOf (&)]
															// DeclRefExpr- b - stbtt__buf
								// IfStmt-  - 
									// BinaryOperator-  - int [Binary Operator: GE (>=)]
										// UnexposedExpr- sp - int
											// DeclRefExpr- sp - int
										// IntegerLiteral-  - int [Literal: 48]
									// ReturnStmt-  - 
										// ParenExpr-  - int
											// IntegerLiteral-  - int [Literal: 0]
								// BinaryOperator-  - float [Binary Operator: Assign (=)]
									// ArraySubscriptExpr-  - float
										// UnexposedExpr- s - float *
											// DeclRefExpr- s - float [48]
										// UnaryOperator-  - int [Unary Operator: PostInc (++)]
											// DeclRefExpr- sp - int
									// UnexposedExpr- f - float
										// DeclRefExpr- f - float
								// BinaryOperator-  - int [Binary Operator: Assign (=)]
									// DeclRefExpr- clear_stack - int
									// IntegerLiteral-  - int [Literal: 0]
								// BreakStmt-  - 
						// IfStmt-  - 
							// UnexposedExpr- clear_stack - int
								// DeclRefExpr- clear_stack - int
							// BinaryOperator-  - int [Binary Operator: Assign (=)]
								// DeclRefExpr- sp - int
								// IntegerLiteral-  - int [Literal: 0]
				// ReturnStmt-  - 
					// ParenExpr-  - int
						// IntegerLiteral-  - int [Literal: 0]
		// FunctionDecl- stbtt__GetGlyphShapeT2 - int (const stbtt_fontinfo *, int, stbtt_vertex **)
			// ParmDecl- info - const stbtt_fontinfo *
				// TypeRef- stbtt_fontinfo - stbtt_fontinfo
			// ParmDecl- glyph_index - int
			// ParmDecl- pvertices - stbtt_vertex **
				// TypeRef- stbtt_vertex - stbtt_vertex
			// CompoundStmt-  - 
				// DeclStmt-  - 
					// VarDecl- count_ctx - stbtt__csctx
						// TypeRef- stbtt__csctx - stbtt__csctx
				// BinaryOperator-  - int [Binary Operator: Assign (=)]
					// MemberRefExpr- bounds - int
						// DeclRefExpr- count_ctx - stbtt__csctx
					// IntegerLiteral-  - int [Literal: 1]
				// DeclStmt-  - 
					// VarDecl- output_ctx - stbtt__csctx
						// TypeRef- stbtt__csctx - stbtt__csctx
				// IfStmt-  - 
					// CallExpr- stbtt__run_charstring - int
						// UnexposedExpr- stbtt__run_charstring - int (*)(const stbtt_fontinfo *, int, stbtt__csctx *)
							// DeclRefExpr- stbtt__run_charstring - int (const stbtt_fontinfo *, int, stbtt__csctx *)
						// UnexposedExpr- info - const stbtt_fontinfo *
							// DeclRefExpr- info - const stbtt_fontinfo *
						// UnexposedExpr- glyph_index - int
							// DeclRefExpr- glyph_index - int
						// UnaryOperator-  - stbtt__csctx * [Unary Operator: AddrOf (&)]
							// DeclRefExpr- count_ctx - stbtt__csctx
					// CompoundStmt-  - 
						// BinaryOperator-  - stbtt_vertex * [Binary Operator: Assign (=)]
							// UnaryOperator-  - stbtt_vertex * [Unary Operator: Deref (*)]
								// UnexposedExpr- pvertices - stbtt_vertex **
									// DeclRefExpr- pvertices - stbtt_vertex **
							// CStyleCastExpr-  - stbtt_vertex *
								// TypeRef- stbtt_vertex - stbtt_vertex
								// CallExpr- malloc - void *
									// UnexposedExpr- malloc - void *(*)(unsigned long long)
										// DeclRefExpr- malloc - void *(unsigned long long)
									// BinaryOperator-  - unsigned long long [Binary Operator: Mul (*)]
										// UnexposedExpr- num_vertices - unsigned long long
											// UnexposedExpr- num_vertices - int
												// MemberRefExpr- num_vertices - int
													// DeclRefExpr- count_ctx - stbtt__csctx
										// UnaryExpr-  - unsigned long long [Unary Operator: 99999 ()]
											// TypeRef- stbtt_vertex - stbtt_vertex
						// BinaryOperator-  - stbtt_vertex * [Binary Operator: Assign (=)]
							// MemberRefExpr- pvertices - stbtt_vertex *
								// DeclRefExpr- output_ctx - stbtt__csctx
							// UnexposedExpr-  - stbtt_vertex *
								// UnaryOperator-  - stbtt_vertex * [Unary Operator: Deref (*)]
									// UnexposedExpr- pvertices - stbtt_vertex **
										// DeclRefExpr- pvertices - stbtt_vertex **
						// IfStmt-  - 
							// CallExpr- stbtt__run_charstring - int
								// UnexposedExpr- stbtt__run_charstring - int (*)(const stbtt_fontinfo *, int, stbtt__csctx *)
									// DeclRefExpr- stbtt__run_charstring - int (const stbtt_fontinfo *, int, stbtt__csctx *)
								// UnexposedExpr- info - const stbtt_fontinfo *
									// DeclRefExpr- info - const stbtt_fontinfo *
								// UnexposedExpr- glyph_index - int
									// DeclRefExpr- glyph_index - int
								// UnaryOperator-  - stbtt__csctx * [Unary Operator: AddrOf (&)]
									// DeclRefExpr- output_ctx - stbtt__csctx
							// CompoundStmt-  - 
								// NullStmt-  - 
								// ReturnStmt-  - 
									// UnexposedExpr- num_vertices - int
										// MemberRefExpr- num_vertices - int
											// DeclRefExpr- output_ctx - stbtt__csctx
				// BinaryOperator-  - stbtt_vertex * [Binary Operator: Assign (=)]
					// UnaryOperator-  - stbtt_vertex * [Unary Operator: Deref (*)]
						// UnexposedExpr- pvertices - stbtt_vertex **
							// DeclRefExpr- pvertices - stbtt_vertex **
					// UnexposedExpr-  - stbtt_vertex *
						// ParenExpr-  - void *
							// CStyleCastExpr-  - void *
								// IntegerLiteral-  - int [Literal: 0]
				// ReturnStmt-  - 
					// IntegerLiteral-  - int [Literal: 0]
		// FunctionDecl- stbtt__GetGlyphInfoT2 - int (const stbtt_fontinfo *, int, int *, int *, int *, int *)
			// ParmDecl- info - const stbtt_fontinfo *
				// TypeRef- stbtt_fontinfo - stbtt_fontinfo
			// ParmDecl- glyph_index - int
			// ParmDecl- x0 - int *
			// ParmDecl- y0 - int *
			// ParmDecl- x1 - int *
			// ParmDecl- y1 - int *
			// CompoundStmt-  - 
				// DeclStmt-  - 
					// VarDecl- c - stbtt__csctx
						// TypeRef- stbtt__csctx - stbtt__csctx
				// BinaryOperator-  - int [Binary Operator: Assign (=)]
					// MemberRefExpr- bounds - int
						// DeclRefExpr- c - stbtt__csctx
					// IntegerLiteral-  - int [Literal: 1]
				// DeclStmt-  - 
					// VarDecl- r - int
						// CallExpr- stbtt__run_charstring - int
							// UnexposedExpr- stbtt__run_charstring - int (*)(const stbtt_fontinfo *, int, stbtt__csctx *)
								// DeclRefExpr- stbtt__run_charstring - int (const stbtt_fontinfo *, int, stbtt__csctx *)
							// UnexposedExpr- info - const stbtt_fontinfo *
								// DeclRefExpr- info - const stbtt_fontinfo *
							// UnexposedExpr- glyph_index - int
								// DeclRefExpr- glyph_index - int
							// UnaryOperator-  - stbtt__csctx * [Unary Operator: AddrOf (&)]
								// DeclRefExpr- c - stbtt__csctx
				// IfStmt-  - 
					// UnexposedExpr- x0 - int *
						// DeclRefExpr- x0 - int *
					// BinaryOperator-  - int [Binary Operator: Assign (=)]
						// UnaryOperator-  - int [Unary Operator: Deref (*)]
							// UnexposedExpr- x0 - int *
								// DeclRefExpr- x0 - int *
						// ConditionalOperator-  - int
							// UnexposedExpr- r - int
								// DeclRefExpr- r - int
							// UnexposedExpr- min_x - stbtt_int32
								// MemberRefExpr- min_x - stbtt_int32
									// DeclRefExpr- c - stbtt__csctx
							// IntegerLiteral-  - int [Literal: 0]
				// IfStmt-  - 
					// UnexposedExpr- y0 - int *
						// DeclRefExpr- y0 - int *
					// BinaryOperator-  - int [Binary Operator: Assign (=)]
						// UnaryOperator-  - int [Unary Operator: Deref (*)]
							// UnexposedExpr- y0 - int *
								// DeclRefExpr- y0 - int *
						// ConditionalOperator-  - int
							// UnexposedExpr- r - int
								// DeclRefExpr- r - int
							// UnexposedExpr- min_y - stbtt_int32
								// MemberRefExpr- min_y - stbtt_int32
									// DeclRefExpr- c - stbtt__csctx
							// IntegerLiteral-  - int [Literal: 0]
				// IfStmt-  - 
					// UnexposedExpr- x1 - int *
						// DeclRefExpr- x1 - int *
					// BinaryOperator-  - int [Binary Operator: Assign (=)]
						// UnaryOperator-  - int [Unary Operator: Deref (*)]
							// UnexposedExpr- x1 - int *
								// DeclRefExpr- x1 - int *
						// ConditionalOperator-  - int
							// UnexposedExpr- r - int
								// DeclRefExpr- r - int
							// UnexposedExpr- max_x - stbtt_int32
								// MemberRefExpr- max_x - stbtt_int32
									// DeclRefExpr- c - stbtt__csctx
							// IntegerLiteral-  - int [Literal: 0]
				// IfStmt-  - 
					// UnexposedExpr- y1 - int *
						// DeclRefExpr- y1 - int *
					// BinaryOperator-  - int [Binary Operator: Assign (=)]
						// UnaryOperator-  - int [Unary Operator: Deref (*)]
							// UnexposedExpr- y1 - int *
								// DeclRefExpr- y1 - int *
						// ConditionalOperator-  - int
							// UnexposedExpr- r - int
								// DeclRefExpr- r - int
							// UnexposedExpr- max_y - stbtt_int32
								// MemberRefExpr- max_y - stbtt_int32
									// DeclRefExpr- c - stbtt__csctx
							// IntegerLiteral-  - int [Literal: 0]
				// ReturnStmt-  - 
					// ConditionalOperator-  - int
						// UnexposedExpr- r - int
							// DeclRefExpr- r - int
						// UnexposedExpr- num_vertices - int
							// MemberRefExpr- num_vertices - int
								// DeclRefExpr- c - stbtt__csctx
						// IntegerLiteral-  - int [Literal: 0]
		// FunctionDecl- stbtt_GetGlyphShape - int (const stbtt_fontinfo *, int, stbtt_vertex **)
			// ParmDecl- info - const stbtt_fontinfo *
				// TypeRef- stbtt_fontinfo - stbtt_fontinfo
			// ParmDecl- glyph_index - int
			// ParmDecl- pvertices - stbtt_vertex **
				// TypeRef- stbtt_vertex - stbtt_vertex
			// CompoundStmt-  - 
				// IfStmt-  - 
					// UnaryOperator-  - int [Unary Operator: LNot (!)]
						// UnexposedExpr- size - int
							// MemberRefExpr- size - const int
								// MemberRefExpr- cff - const stbtt__buf
									// UnexposedExpr- info - const stbtt_fontinfo *
										// DeclRefExpr- info - const stbtt_fontinfo *
					// ReturnStmt-  - 
						// CallExpr- stbtt__GetGlyphShapeTT - int
							// UnexposedExpr- stbtt__GetGlyphShapeTT - int (*)(const stbtt_fontinfo *, int, stbtt_vertex **)
								// DeclRefExpr- stbtt__GetGlyphShapeTT - int (const stbtt_fontinfo *, int, stbtt_vertex **)
							// UnexposedExpr- info - const stbtt_fontinfo *
								// DeclRefExpr- info - const stbtt_fontinfo *
							// UnexposedExpr- glyph_index - int
								// DeclRefExpr- glyph_index - int
							// UnexposedExpr- pvertices - stbtt_vertex **
								// DeclRefExpr- pvertices - stbtt_vertex **
					// ReturnStmt-  - 
						// CallExpr- stbtt__GetGlyphShapeT2 - int
							// UnexposedExpr- stbtt__GetGlyphShapeT2 - int (*)(const stbtt_fontinfo *, int, stbtt_vertex **)
								// DeclRefExpr- stbtt__GetGlyphShapeT2 - int (const stbtt_fontinfo *, int, stbtt_vertex **)
							// UnexposedExpr- info - const stbtt_fontinfo *
								// DeclRefExpr- info - const stbtt_fontinfo *
							// UnexposedExpr- glyph_index - int
								// DeclRefExpr- glyph_index - int
							// UnexposedExpr- pvertices - stbtt_vertex **
								// DeclRefExpr- pvertices - stbtt_vertex **
		// FunctionDecl- stbtt_GetGlyphHMetrics - void (const stbtt_fontinfo *, int, int *, int *)
			// ParmDecl- info - const stbtt_fontinfo *
				// TypeRef- stbtt_fontinfo - stbtt_fontinfo
			// ParmDecl- glyph_index - int
			// ParmDecl- advanceWidth - int *
			// ParmDecl- leftSideBearing - int *
			// CompoundStmt-  - 
				// DeclStmt-  - 
					// VarDecl- numOfLongHorMetrics - stbtt_uint16
						// TypeRef- stbtt_uint16 - stbtt_uint16
						// CallExpr- ttUSHORT - stbtt_uint16
							// UnexposedExpr- ttUSHORT - stbtt_uint16 (*)(stbtt_uint8 *)
								// DeclRefExpr- ttUSHORT - stbtt_uint16 (stbtt_uint8 *)
							// BinaryOperator-  - unsigned char * [Binary Operator: Add (+)]
								// BinaryOperator-  - unsigned char * [Binary Operator: Add (+)]
									// UnexposedExpr- data - unsigned char *
										// MemberRefExpr- data - unsigned char *const
											// UnexposedExpr- info - const stbtt_fontinfo *
												// DeclRefExpr- info - const stbtt_fontinfo *
									// UnexposedExpr- hhea - int
										// MemberRefExpr- hhea - const int
											// UnexposedExpr- info - const stbtt_fontinfo *
												// DeclRefExpr- info - const stbtt_fontinfo *
								// IntegerLiteral-  - int [Literal: 34]
				// IfStmt-  - 
					// BinaryOperator-  - int [Binary Operator: LT (<)]
						// UnexposedExpr- glyph_index - int
							// DeclRefExpr- glyph_index - int
						// UnexposedExpr- numOfLongHorMetrics - int
							// UnexposedExpr- numOfLongHorMetrics - stbtt_uint16
								// DeclRefExpr- numOfLongHorMetrics - stbtt_uint16
					// CompoundStmt-  - 
						// IfStmt-  - 
							// UnexposedExpr- advanceWidth - int *
								// DeclRefExpr- advanceWidth - int *
							// BinaryOperator-  - int [Binary Operator: Assign (=)]
								// UnaryOperator-  - int [Unary Operator: Deref (*)]
									// UnexposedExpr- advanceWidth - int *
										// DeclRefExpr- advanceWidth - int *
								// UnexposedExpr- ttSHORT - int
									// CallExpr- ttSHORT - stbtt_int16
										// UnexposedExpr- ttSHORT - stbtt_int16 (*)(stbtt_uint8 *)
											// DeclRefExpr- ttSHORT - stbtt_int16 (stbtt_uint8 *)
										// BinaryOperator-  - unsigned char * [Binary Operator: Add (+)]
											// BinaryOperator-  - unsigned char * [Binary Operator: Add (+)]
												// UnexposedExpr- data - unsigned char *
													// MemberRefExpr- data - unsigned char *const
														// UnexposedExpr- info - const stbtt_fontinfo *
															// DeclRefExpr- info - const stbtt_fontinfo *
												// UnexposedExpr- hmtx - int
													// MemberRefExpr- hmtx - const int
														// UnexposedExpr- info - const stbtt_fontinfo *
															// DeclRefExpr- info - const stbtt_fontinfo *
											// BinaryOperator-  - int [Binary Operator: Mul (*)]
												// IntegerLiteral-  - int [Literal: 4]
												// UnexposedExpr- glyph_index - int
													// DeclRefExpr- glyph_index - int
						// IfStmt-  - 
							// UnexposedExpr- leftSideBearing - int *
								// DeclRefExpr- leftSideBearing - int *
							// BinaryOperator-  - int [Binary Operator: Assign (=)]
								// UnaryOperator-  - int [Unary Operator: Deref (*)]
									// UnexposedExpr- leftSideBearing - int *
										// DeclRefExpr- leftSideBearing - int *
								// UnexposedExpr- ttSHORT - int
									// CallExpr- ttSHORT - stbtt_int16
										// UnexposedExpr- ttSHORT - stbtt_int16 (*)(stbtt_uint8 *)
											// DeclRefExpr- ttSHORT - stbtt_int16 (stbtt_uint8 *)
										// BinaryOperator-  - unsigned char * [Binary Operator: Add (+)]
											// BinaryOperator-  - unsigned char * [Binary Operator: Add (+)]
												// BinaryOperator-  - unsigned char * [Binary Operator: Add (+)]
													// UnexposedExpr- data - unsigned char *
														// MemberRefExpr- data - unsigned char *const
															// UnexposedExpr- info - const stbtt_fontinfo *
																// DeclRefExpr- info - const stbtt_fontinfo *
													// UnexposedExpr- hmtx - int
														// MemberRefExpr- hmtx - const int
															// UnexposedExpr- info - const stbtt_fontinfo *
																// DeclRefExpr- info - const stbtt_fontinfo *
												// BinaryOperator-  - int [Binary Operator: Mul (*)]
													// IntegerLiteral-  - int [Literal: 4]
													// UnexposedExpr- glyph_index - int
														// DeclRefExpr- glyph_index - int
											// IntegerLiteral-  - int [Literal: 2]
					// CompoundStmt-  - 
						// IfStmt-  - 
							// UnexposedExpr- advanceWidth - int *
								// DeclRefExpr- advanceWidth - int *
							// BinaryOperator-  - int [Binary Operator: Assign (=)]
								// UnaryOperator-  - int [Unary Operator: Deref (*)]
									// UnexposedExpr- advanceWidth - int *
										// DeclRefExpr- advanceWidth - int *
								// UnexposedExpr- ttSHORT - int
									// CallExpr- ttSHORT - stbtt_int16
										// UnexposedExpr- ttSHORT - stbtt_int16 (*)(stbtt_uint8 *)
											// DeclRefExpr- ttSHORT - stbtt_int16 (stbtt_uint8 *)
										// BinaryOperator-  - unsigned char * [Binary Operator: Add (+)]
											// BinaryOperator-  - unsigned char * [Binary Operator: Add (+)]
												// UnexposedExpr- data - unsigned char *
													// MemberRefExpr- data - unsigned char *const
														// UnexposedExpr- info - const stbtt_fontinfo *
															// DeclRefExpr- info - const stbtt_fontinfo *
												// UnexposedExpr- hmtx - int
													// MemberRefExpr- hmtx - const int
														// UnexposedExpr- info - const stbtt_fontinfo *
															// DeclRefExpr- info - const stbtt_fontinfo *
											// BinaryOperator-  - int [Binary Operator: Mul (*)]
												// IntegerLiteral-  - int [Literal: 4]
												// ParenExpr-  - int
													// BinaryOperator-  - int [Binary Operator: Sub (-)]
														// UnexposedExpr- numOfLongHorMetrics - int
															// UnexposedExpr- numOfLongHorMetrics - stbtt_uint16
																// DeclRefExpr- numOfLongHorMetrics - stbtt_uint16
														// IntegerLiteral-  - int [Literal: 1]
						// IfStmt-  - 
							// UnexposedExpr- leftSideBearing - int *
								// DeclRefExpr- leftSideBearing - int *
							// BinaryOperator-  - int [Binary Operator: Assign (=)]
								// UnaryOperator-  - int [Unary Operator: Deref (*)]
									// UnexposedExpr- leftSideBearing - int *
										// DeclRefExpr- leftSideBearing - int *
								// UnexposedExpr- ttSHORT - int
									// CallExpr- ttSHORT - stbtt_int16
										// UnexposedExpr- ttSHORT - stbtt_int16 (*)(stbtt_uint8 *)
											// DeclRefExpr- ttSHORT - stbtt_int16 (stbtt_uint8 *)
										// BinaryOperator-  - unsigned char * [Binary Operator: Add (+)]
											// BinaryOperator-  - unsigned char * [Binary Operator: Add (+)]
												// BinaryOperator-  - unsigned char * [Binary Operator: Add (+)]
													// UnexposedExpr- data - unsigned char *
														// MemberRefExpr- data - unsigned char *const
															// UnexposedExpr- info - const stbtt_fontinfo *
																// DeclRefExpr- info - const stbtt_fontinfo *
													// UnexposedExpr- hmtx - int
														// MemberRefExpr- hmtx - const int
															// UnexposedExpr- info - const stbtt_fontinfo *
																// DeclRefExpr- info - const stbtt_fontinfo *
												// BinaryOperator-  - int [Binary Operator: Mul (*)]
													// IntegerLiteral-  - int [Literal: 4]
													// UnexposedExpr- numOfLongHorMetrics - int
														// UnexposedExpr- numOfLongHorMetrics - stbtt_uint16
															// DeclRefExpr- numOfLongHorMetrics - stbtt_uint16
											// BinaryOperator-  - int [Binary Operator: Mul (*)]
												// IntegerLiteral-  - int [Literal: 2]
												// ParenExpr-  - int
													// BinaryOperator-  - int [Binary Operator: Sub (-)]
														// UnexposedExpr- glyph_index - int
															// DeclRefExpr- glyph_index - int
														// UnexposedExpr- numOfLongHorMetrics - int
															// UnexposedExpr- numOfLongHorMetrics - stbtt_uint16
																// DeclRefExpr- numOfLongHorMetrics - stbtt_uint16
		// FunctionDecl- stbtt__GetGlyphKernInfoAdvance - int (const stbtt_fontinfo *, int, int)
			// ParmDecl- info - const stbtt_fontinfo *
				// TypeRef- stbtt_fontinfo - stbtt_fontinfo
			// ParmDecl- glyph1 - int
			// ParmDecl- glyph2 - int
			// CompoundStmt-  - 
				// DeclStmt-  - 
					// VarDecl- data - stbtt_uint8 *
						// TypeRef- stbtt_uint8 - stbtt_uint8
						// BinaryOperator-  - unsigned char * [Binary Operator: Add (+)]
							// UnexposedExpr- data - unsigned char *
								// MemberRefExpr- data - unsigned char *const
									// UnexposedExpr- info - const stbtt_fontinfo *
										// DeclRefExpr- info - const stbtt_fontinfo *
							// UnexposedExpr- kern - int
								// MemberRefExpr- kern - const int
									// UnexposedExpr- info - const stbtt_fontinfo *
										// DeclRefExpr- info - const stbtt_fontinfo *
				// DeclStmt-  - 
					// VarDecl- needle - stbtt_uint32
						// TypeRef- stbtt_uint32 - stbtt_uint32
					// VarDecl- straw - stbtt_uint32
						// TypeRef- stbtt_uint32 - stbtt_uint32
				// DeclStmt-  - 
					// VarDecl- l - int
					// VarDecl- r - int
					// VarDecl- m - int
				// IfStmt-  - 
					// UnaryOperator-  - int [Unary Operator: LNot (!)]
						// UnexposedExpr- kern - int
							// MemberRefExpr- kern - const int
								// UnexposedExpr- info - const stbtt_fontinfo *
									// DeclRefExpr- info - const stbtt_fontinfo *
					// ReturnStmt-  - 
						// IntegerLiteral-  - int [Literal: 0]
				// IfStmt-  - 
					// BinaryOperator-  - int [Binary Operator: LT (<)]
						// UnexposedExpr- ttUSHORT - int
							// CallExpr- ttUSHORT - stbtt_uint16
								// UnexposedExpr- ttUSHORT - stbtt_uint16 (*)(stbtt_uint8 *)
									// DeclRefExpr- ttUSHORT - stbtt_uint16 (stbtt_uint8 *)
								// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
									// UnexposedExpr- data - stbtt_uint8 *
										// DeclRefExpr- data - stbtt_uint8 *
									// IntegerLiteral-  - int [Literal: 2]
						// IntegerLiteral-  - int [Literal: 1]
					// ReturnStmt-  - 
						// IntegerLiteral-  - int [Literal: 0]
				// IfStmt-  - 
					// BinaryOperator-  - int [Binary Operator: NE (!=)]
						// UnexposedExpr- ttUSHORT - int
							// CallExpr- ttUSHORT - stbtt_uint16
								// UnexposedExpr- ttUSHORT - stbtt_uint16 (*)(stbtt_uint8 *)
									// DeclRefExpr- ttUSHORT - stbtt_uint16 (stbtt_uint8 *)
								// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
									// UnexposedExpr- data - stbtt_uint8 *
										// DeclRefExpr- data - stbtt_uint8 *
									// IntegerLiteral-  - int [Literal: 8]
						// IntegerLiteral-  - int [Literal: 1]
					// ReturnStmt-  - 
						// IntegerLiteral-  - int [Literal: 0]
				// BinaryOperator-  - int [Binary Operator: Assign (=)]
					// DeclRefExpr- l - int
					// IntegerLiteral-  - int [Literal: 0]
				// BinaryOperator-  - int [Binary Operator: Assign (=)]
					// DeclRefExpr- r - int
					// BinaryOperator-  - int [Binary Operator: Sub (-)]
						// UnexposedExpr- ttUSHORT - int
							// CallExpr- ttUSHORT - stbtt_uint16
								// UnexposedExpr- ttUSHORT - stbtt_uint16 (*)(stbtt_uint8 *)
									// DeclRefExpr- ttUSHORT - stbtt_uint16 (stbtt_uint8 *)
								// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
									// UnexposedExpr- data - stbtt_uint8 *
										// DeclRefExpr- data - stbtt_uint8 *
									// IntegerLiteral-  - int [Literal: 10]
						// IntegerLiteral-  - int [Literal: 1]
				// BinaryOperator-  - stbtt_uint32 [Binary Operator: Assign (=)]
					// DeclRefExpr- needle - stbtt_uint32
					// UnexposedExpr-  - stbtt_uint32
						// BinaryOperator-  - int [Binary Operator: Or (|)]
							// BinaryOperator-  - int [Binary Operator: Shl (<<)]
								// UnexposedExpr- glyph1 - int
									// DeclRefExpr- glyph1 - int
								// IntegerLiteral-  - int [Literal: 16]
							// UnexposedExpr- glyph2 - int
								// DeclRefExpr- glyph2 - int
				// WhileStmt-  - 
					// BinaryOperator-  - int [Binary Operator: LE (<=)]
						// UnexposedExpr- l - int
							// DeclRefExpr- l - int
						// UnexposedExpr- r - int
							// DeclRefExpr- r - int
					// CompoundStmt-  - 
						// BinaryOperator-  - int [Binary Operator: Assign (=)]
							// DeclRefExpr- m - int
							// BinaryOperator-  - int [Binary Operator: Shr (>>)]
								// ParenExpr-  - int
									// BinaryOperator-  - int [Binary Operator: Add (+)]
										// UnexposedExpr- l - int
											// DeclRefExpr- l - int
										// UnexposedExpr- r - int
											// DeclRefExpr- r - int
								// IntegerLiteral-  - int [Literal: 1]
						// BinaryOperator-  - stbtt_uint32 [Binary Operator: Assign (=)]
							// DeclRefExpr- straw - stbtt_uint32
							// CallExpr- ttULONG - stbtt_uint32
								// UnexposedExpr- ttULONG - stbtt_uint32 (*)(stbtt_uint8 *)
									// DeclRefExpr- ttULONG - stbtt_uint32 (stbtt_uint8 *)
								// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
									// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
										// UnexposedExpr- data - stbtt_uint8 *
											// DeclRefExpr- data - stbtt_uint8 *
										// IntegerLiteral-  - int [Literal: 18]
									// ParenExpr-  - int
										// BinaryOperator-  - int [Binary Operator: Mul (*)]
											// UnexposedExpr- m - int
												// DeclRefExpr- m - int
											// IntegerLiteral-  - int [Literal: 6]
						// IfStmt-  - 
							// BinaryOperator-  - int [Binary Operator: LT (<)]
								// UnexposedExpr- needle - stbtt_uint32
									// DeclRefExpr- needle - stbtt_uint32
								// UnexposedExpr- straw - stbtt_uint32
									// DeclRefExpr- straw - stbtt_uint32
							// BinaryOperator-  - int [Binary Operator: Assign (=)]
								// DeclRefExpr- r - int
								// BinaryOperator-  - int [Binary Operator: Sub (-)]
									// UnexposedExpr- m - int
										// DeclRefExpr- m - int
									// IntegerLiteral-  - int [Literal: 1]
							// IfStmt-  - 
								// BinaryOperator-  - int [Binary Operator: GT (>)]
									// UnexposedExpr- needle - stbtt_uint32
										// DeclRefExpr- needle - stbtt_uint32
									// UnexposedExpr- straw - stbtt_uint32
										// DeclRefExpr- straw - stbtt_uint32
								// BinaryOperator-  - int [Binary Operator: Assign (=)]
									// DeclRefExpr- l - int
									// BinaryOperator-  - int [Binary Operator: Add (+)]
										// UnexposedExpr- m - int
											// DeclRefExpr- m - int
										// IntegerLiteral-  - int [Literal: 1]
								// ReturnStmt-  - 
									// UnexposedExpr- ttSHORT - int
										// CallExpr- ttSHORT - stbtt_int16
											// UnexposedExpr- ttSHORT - stbtt_int16 (*)(stbtt_uint8 *)
												// DeclRefExpr- ttSHORT - stbtt_int16 (stbtt_uint8 *)
											// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
												// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
													// UnexposedExpr- data - stbtt_uint8 *
														// DeclRefExpr- data - stbtt_uint8 *
													// IntegerLiteral-  - int [Literal: 22]
												// ParenExpr-  - int
													// BinaryOperator-  - int [Binary Operator: Mul (*)]
														// UnexposedExpr- m - int
															// DeclRefExpr- m - int
														// IntegerLiteral-  - int [Literal: 6]
				// ReturnStmt-  - 
					// IntegerLiteral-  - int [Literal: 0]
		// FunctionDecl- stbtt__GetCoverageIndex - stbtt_int32 (stbtt_uint8 *, int)
			// TypeRef- stbtt_int32 - stbtt_int32
			// ParmDecl- coverageTable - stbtt_uint8 *
				// TypeRef- stbtt_uint8 - stbtt_uint8
			// ParmDecl- glyph - int
			// CompoundStmt-  - 
				// DeclStmt-  - 
					// VarDecl- coverageFormat - stbtt_uint16
						// TypeRef- stbtt_uint16 - stbtt_uint16
						// CallExpr- ttUSHORT - stbtt_uint16
							// UnexposedExpr- ttUSHORT - stbtt_uint16 (*)(stbtt_uint8 *)
								// DeclRefExpr- ttUSHORT - stbtt_uint16 (stbtt_uint8 *)
							// UnexposedExpr- coverageTable - stbtt_uint8 *
								// DeclRefExpr- coverageTable - stbtt_uint8 *
				// SwitchStmt-  - 
					// UnexposedExpr- coverageFormat - int
						// UnexposedExpr- coverageFormat - stbtt_uint16
							// DeclRefExpr- coverageFormat - stbtt_uint16
					// CompoundStmt-  - 
						// CaseStmt-  - 
							// IntegerLiteral-  - int [Literal: 1]
							// CompoundStmt-  - 
								// DeclStmt-  - 
									// VarDecl- glyphCount - stbtt_uint16
										// TypeRef- stbtt_uint16 - stbtt_uint16
										// CallExpr- ttUSHORT - stbtt_uint16
											// UnexposedExpr- ttUSHORT - stbtt_uint16 (*)(stbtt_uint8 *)
												// DeclRefExpr- ttUSHORT - stbtt_uint16 (stbtt_uint8 *)
											// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
												// UnexposedExpr- coverageTable - stbtt_uint8 *
													// DeclRefExpr- coverageTable - stbtt_uint8 *
												// IntegerLiteral-  - int [Literal: 2]
								// DeclStmt-  - 
									// VarDecl- l - stbtt_int32
										// TypeRef- stbtt_int32 - stbtt_int32
										// IntegerLiteral-  - int [Literal: 0]
									// VarDecl- r - stbtt_int32
										// TypeRef- stbtt_int32 - stbtt_int32
										// BinaryOperator-  - int [Binary Operator: Sub (-)]
											// UnexposedExpr- glyphCount - int
												// UnexposedExpr- glyphCount - stbtt_uint16
													// DeclRefExpr- glyphCount - stbtt_uint16
											// IntegerLiteral-  - int [Literal: 1]
									// VarDecl- m - stbtt_int32
										// TypeRef- stbtt_int32 - stbtt_int32
								// DeclStmt-  - 
									// VarDecl- straw - int
									// VarDecl- needle - int
										// UnexposedExpr- glyph - int
											// DeclRefExpr- glyph - int
								// WhileStmt-  - 
									// BinaryOperator-  - int [Binary Operator: LE (<=)]
										// UnexposedExpr- l - stbtt_int32
											// DeclRefExpr- l - stbtt_int32
										// UnexposedExpr- r - stbtt_int32
											// DeclRefExpr- r - stbtt_int32
									// CompoundStmt-  - 
										// DeclStmt-  - 
											// VarDecl- glyphArray - stbtt_uint8 *
												// TypeRef- stbtt_uint8 - stbtt_uint8
												// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
													// UnexposedExpr- coverageTable - stbtt_uint8 *
														// DeclRefExpr- coverageTable - stbtt_uint8 *
													// IntegerLiteral-  - int [Literal: 4]
										// DeclStmt-  - 
											// VarDecl- glyphID - stbtt_uint16
												// TypeRef- stbtt_uint16 - stbtt_uint16
										// BinaryOperator-  - stbtt_int32 [Binary Operator: Assign (=)]
											// DeclRefExpr- m - stbtt_int32
											// BinaryOperator-  - int [Binary Operator: Shr (>>)]
												// ParenExpr-  - int
													// BinaryOperator-  - int [Binary Operator: Add (+)]
														// UnexposedExpr- l - stbtt_int32
															// DeclRefExpr- l - stbtt_int32
														// UnexposedExpr- r - stbtt_int32
															// DeclRefExpr- r - stbtt_int32
												// IntegerLiteral-  - int [Literal: 1]
										// BinaryOperator-  - stbtt_uint16 [Binary Operator: Assign (=)]
											// DeclRefExpr- glyphID - stbtt_uint16
											// CallExpr- ttUSHORT - stbtt_uint16
												// UnexposedExpr- ttUSHORT - stbtt_uint16 (*)(stbtt_uint8 *)
													// DeclRefExpr- ttUSHORT - stbtt_uint16 (stbtt_uint8 *)
												// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
													// UnexposedExpr- glyphArray - stbtt_uint8 *
														// DeclRefExpr- glyphArray - stbtt_uint8 *
													// BinaryOperator-  - int [Binary Operator: Mul (*)]
														// IntegerLiteral-  - int [Literal: 2]
														// UnexposedExpr- m - stbtt_int32
															// DeclRefExpr- m - stbtt_int32
										// BinaryOperator-  - int [Binary Operator: Assign (=)]
											// DeclRefExpr- straw - int
											// UnexposedExpr- glyphID - int
												// UnexposedExpr- glyphID - stbtt_uint16
													// DeclRefExpr- glyphID - stbtt_uint16
										// IfStmt-  - 
											// BinaryOperator-  - int [Binary Operator: LT (<)]
												// UnexposedExpr- needle - int
													// DeclRefExpr- needle - int
												// UnexposedExpr- straw - int
													// DeclRefExpr- straw - int
											// BinaryOperator-  - stbtt_int32 [Binary Operator: Assign (=)]
												// DeclRefExpr- r - stbtt_int32
												// BinaryOperator-  - int [Binary Operator: Sub (-)]
													// UnexposedExpr- m - stbtt_int32
														// DeclRefExpr- m - stbtt_int32
													// IntegerLiteral-  - int [Literal: 1]
											// IfStmt-  - 
												// BinaryOperator-  - int [Binary Operator: GT (>)]
													// UnexposedExpr- needle - int
														// DeclRefExpr- needle - int
													// UnexposedExpr- straw - int
														// DeclRefExpr- straw - int
												// BinaryOperator-  - stbtt_int32 [Binary Operator: Assign (=)]
													// DeclRefExpr- l - stbtt_int32
													// BinaryOperator-  - int [Binary Operator: Add (+)]
														// UnexposedExpr- m - stbtt_int32
															// DeclRefExpr- m - stbtt_int32
														// IntegerLiteral-  - int [Literal: 1]
												// CompoundStmt-  - 
													// ReturnStmt-  - 
														// UnexposedExpr- m - stbtt_int32
															// DeclRefExpr- m - stbtt_int32
						// BreakStmt-  - 
						// CaseStmt-  - 
							// IntegerLiteral-  - int [Literal: 2]
							// CompoundStmt-  - 
								// DeclStmt-  - 
									// VarDecl- rangeCount - stbtt_uint16
										// TypeRef- stbtt_uint16 - stbtt_uint16
										// CallExpr- ttUSHORT - stbtt_uint16
											// UnexposedExpr- ttUSHORT - stbtt_uint16 (*)(stbtt_uint8 *)
												// DeclRefExpr- ttUSHORT - stbtt_uint16 (stbtt_uint8 *)
											// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
												// UnexposedExpr- coverageTable - stbtt_uint8 *
													// DeclRefExpr- coverageTable - stbtt_uint8 *
												// IntegerLiteral-  - int [Literal: 2]
								// DeclStmt-  - 
									// VarDecl- rangeArray - stbtt_uint8 *
										// TypeRef- stbtt_uint8 - stbtt_uint8
										// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
											// UnexposedExpr- coverageTable - stbtt_uint8 *
												// DeclRefExpr- coverageTable - stbtt_uint8 *
											// IntegerLiteral-  - int [Literal: 4]
								// DeclStmt-  - 
									// VarDecl- l - stbtt_int32
										// TypeRef- stbtt_int32 - stbtt_int32
										// IntegerLiteral-  - int [Literal: 0]
									// VarDecl- r - stbtt_int32
										// TypeRef- stbtt_int32 - stbtt_int32
										// BinaryOperator-  - int [Binary Operator: Sub (-)]
											// UnexposedExpr- rangeCount - int
												// UnexposedExpr- rangeCount - stbtt_uint16
													// DeclRefExpr- rangeCount - stbtt_uint16
											// IntegerLiteral-  - int [Literal: 1]
									// VarDecl- m - stbtt_int32
										// TypeRef- stbtt_int32 - stbtt_int32
								// DeclStmt-  - 
									// VarDecl- strawStart - int
									// VarDecl- strawEnd - int
									// VarDecl- needle - int
										// UnexposedExpr- glyph - int
											// DeclRefExpr- glyph - int
								// WhileStmt-  - 
									// BinaryOperator-  - int [Binary Operator: LE (<=)]
										// UnexposedExpr- l - stbtt_int32
											// DeclRefExpr- l - stbtt_int32
										// UnexposedExpr- r - stbtt_int32
											// DeclRefExpr- r - stbtt_int32
									// CompoundStmt-  - 
										// DeclStmt-  - 
											// VarDecl- rangeRecord - stbtt_uint8 *
												// TypeRef- stbtt_uint8 - stbtt_uint8
										// BinaryOperator-  - stbtt_int32 [Binary Operator: Assign (=)]
											// DeclRefExpr- m - stbtt_int32
											// BinaryOperator-  - int [Binary Operator: Shr (>>)]
												// ParenExpr-  - int
													// BinaryOperator-  - int [Binary Operator: Add (+)]
														// UnexposedExpr- l - stbtt_int32
															// DeclRefExpr- l - stbtt_int32
														// UnexposedExpr- r - stbtt_int32
															// DeclRefExpr- r - stbtt_int32
												// IntegerLiteral-  - int [Literal: 1]
										// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Assign (=)]
											// DeclRefExpr- rangeRecord - stbtt_uint8 *
											// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
												// UnexposedExpr- rangeArray - stbtt_uint8 *
													// DeclRefExpr- rangeArray - stbtt_uint8 *
												// BinaryOperator-  - int [Binary Operator: Mul (*)]
													// IntegerLiteral-  - int [Literal: 6]
													// UnexposedExpr- m - stbtt_int32
														// DeclRefExpr- m - stbtt_int32
										// BinaryOperator-  - int [Binary Operator: Assign (=)]
											// DeclRefExpr- strawStart - int
											// UnexposedExpr- ttUSHORT - int
												// CallExpr- ttUSHORT - stbtt_uint16
													// UnexposedExpr- ttUSHORT - stbtt_uint16 (*)(stbtt_uint8 *)
														// DeclRefExpr- ttUSHORT - stbtt_uint16 (stbtt_uint8 *)
													// UnexposedExpr- rangeRecord - stbtt_uint8 *
														// DeclRefExpr- rangeRecord - stbtt_uint8 *
										// BinaryOperator-  - int [Binary Operator: Assign (=)]
											// DeclRefExpr- strawEnd - int
											// UnexposedExpr- ttUSHORT - int
												// CallExpr- ttUSHORT - stbtt_uint16
													// UnexposedExpr- ttUSHORT - stbtt_uint16 (*)(stbtt_uint8 *)
														// DeclRefExpr- ttUSHORT - stbtt_uint16 (stbtt_uint8 *)
													// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
														// UnexposedExpr- rangeRecord - stbtt_uint8 *
															// DeclRefExpr- rangeRecord - stbtt_uint8 *
														// IntegerLiteral-  - int [Literal: 2]
										// IfStmt-  - 
											// BinaryOperator-  - int [Binary Operator: LT (<)]
												// UnexposedExpr- needle - int
													// DeclRefExpr- needle - int
												// UnexposedExpr- strawStart - int
													// DeclRefExpr- strawStart - int
											// BinaryOperator-  - stbtt_int32 [Binary Operator: Assign (=)]
												// DeclRefExpr- r - stbtt_int32
												// BinaryOperator-  - int [Binary Operator: Sub (-)]
													// UnexposedExpr- m - stbtt_int32
														// DeclRefExpr- m - stbtt_int32
													// IntegerLiteral-  - int [Literal: 1]
											// IfStmt-  - 
												// BinaryOperator-  - int [Binary Operator: GT (>)]
													// UnexposedExpr- needle - int
														// DeclRefExpr- needle - int
													// UnexposedExpr- strawEnd - int
														// DeclRefExpr- strawEnd - int
												// BinaryOperator-  - stbtt_int32 [Binary Operator: Assign (=)]
													// DeclRefExpr- l - stbtt_int32
													// BinaryOperator-  - int [Binary Operator: Add (+)]
														// UnexposedExpr- m - stbtt_int32
															// DeclRefExpr- m - stbtt_int32
														// IntegerLiteral-  - int [Literal: 1]
												// CompoundStmt-  - 
													// DeclStmt-  - 
														// VarDecl- startCoverageIndex - stbtt_uint16
															// TypeRef- stbtt_uint16 - stbtt_uint16
															// CallExpr- ttUSHORT - stbtt_uint16
																// UnexposedExpr- ttUSHORT - stbtt_uint16 (*)(stbtt_uint8 *)
																	// DeclRefExpr- ttUSHORT - stbtt_uint16 (stbtt_uint8 *)
																// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
																	// UnexposedExpr- rangeRecord - stbtt_uint8 *
																		// DeclRefExpr- rangeRecord - stbtt_uint8 *
																	// IntegerLiteral-  - int [Literal: 4]
													// ReturnStmt-  - 
														// BinaryOperator-  - int [Binary Operator: Sub (-)]
															// BinaryOperator-  - int [Binary Operator: Add (+)]
																// UnexposedExpr- startCoverageIndex - int
																	// UnexposedExpr- startCoverageIndex - stbtt_uint16
																		// DeclRefExpr- startCoverageIndex - stbtt_uint16
																// UnexposedExpr- glyph - int
																	// DeclRefExpr- glyph - int
															// UnexposedExpr- strawStart - int
																// DeclRefExpr- strawStart - int
						// BreakStmt-  - 
						// DefaultStmt-  - 
							// CompoundStmt-  - 
								// NullStmt-  - 
						// BreakStmt-  - 
				// ReturnStmt-  - 
					// UnaryOperator-  - int [Unary Operator: Minus (-)]
						// IntegerLiteral-  - int [Literal: 1]
		// FunctionDecl- stbtt__GetGlyphClass - stbtt_int32 (stbtt_uint8 *, int)
			// TypeRef- stbtt_int32 - stbtt_int32
			// ParmDecl- classDefTable - stbtt_uint8 *
				// TypeRef- stbtt_uint8 - stbtt_uint8
			// ParmDecl- glyph - int
			// CompoundStmt-  - 
				// DeclStmt-  - 
					// VarDecl- classDefFormat - stbtt_uint16
						// TypeRef- stbtt_uint16 - stbtt_uint16
						// CallExpr- ttUSHORT - stbtt_uint16
							// UnexposedExpr- ttUSHORT - stbtt_uint16 (*)(stbtt_uint8 *)
								// DeclRefExpr- ttUSHORT - stbtt_uint16 (stbtt_uint8 *)
							// UnexposedExpr- classDefTable - stbtt_uint8 *
								// DeclRefExpr- classDefTable - stbtt_uint8 *
				// SwitchStmt-  - 
					// UnexposedExpr- classDefFormat - int
						// UnexposedExpr- classDefFormat - stbtt_uint16
							// DeclRefExpr- classDefFormat - stbtt_uint16
					// CompoundStmt-  - 
						// CaseStmt-  - 
							// IntegerLiteral-  - int [Literal: 1]
							// CompoundStmt-  - 
								// DeclStmt-  - 
									// VarDecl- startGlyphID - stbtt_uint16
										// TypeRef- stbtt_uint16 - stbtt_uint16
										// CallExpr- ttUSHORT - stbtt_uint16
											// UnexposedExpr- ttUSHORT - stbtt_uint16 (*)(stbtt_uint8 *)
												// DeclRefExpr- ttUSHORT - stbtt_uint16 (stbtt_uint8 *)
											// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
												// UnexposedExpr- classDefTable - stbtt_uint8 *
													// DeclRefExpr- classDefTable - stbtt_uint8 *
												// IntegerLiteral-  - int [Literal: 2]
								// DeclStmt-  - 
									// VarDecl- glyphCount - stbtt_uint16
										// TypeRef- stbtt_uint16 - stbtt_uint16
										// CallExpr- ttUSHORT - stbtt_uint16
											// UnexposedExpr- ttUSHORT - stbtt_uint16 (*)(stbtt_uint8 *)
												// DeclRefExpr- ttUSHORT - stbtt_uint16 (stbtt_uint8 *)
											// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
												// UnexposedExpr- classDefTable - stbtt_uint8 *
													// DeclRefExpr- classDefTable - stbtt_uint8 *
												// IntegerLiteral-  - int [Literal: 4]
								// DeclStmt-  - 
									// VarDecl- classDef1ValueArray - stbtt_uint8 *
										// TypeRef- stbtt_uint8 - stbtt_uint8
										// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
											// UnexposedExpr- classDefTable - stbtt_uint8 *
												// DeclRefExpr- classDefTable - stbtt_uint8 *
											// IntegerLiteral-  - int [Literal: 6]
								// IfStmt-  - 
									// BinaryOperator-  - int [Binary Operator: LAnd (&&)]
										// BinaryOperator-  - int [Binary Operator: GE (>=)]
											// UnexposedExpr- glyph - int
												// DeclRefExpr- glyph - int
											// UnexposedExpr- startGlyphID - int
												// UnexposedExpr- startGlyphID - stbtt_uint16
													// DeclRefExpr- startGlyphID - stbtt_uint16
										// BinaryOperator-  - int [Binary Operator: LT (<)]
											// UnexposedExpr- glyph - int
												// DeclRefExpr- glyph - int
											// BinaryOperator-  - int [Binary Operator: Add (+)]
												// UnexposedExpr- startGlyphID - int
													// UnexposedExpr- startGlyphID - stbtt_uint16
														// DeclRefExpr- startGlyphID - stbtt_uint16
												// UnexposedExpr- glyphCount - int
													// UnexposedExpr- glyphCount - stbtt_uint16
														// DeclRefExpr- glyphCount - stbtt_uint16
									// ReturnStmt-  - 
										// CStyleCastExpr-  - stbtt_int32
											// TypeRef- stbtt_int32 - stbtt_int32
											// CallExpr- ttUSHORT - stbtt_uint16
												// UnexposedExpr- ttUSHORT - stbtt_uint16 (*)(stbtt_uint8 *)
													// DeclRefExpr- ttUSHORT - stbtt_uint16 (stbtt_uint8 *)
												// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
													// UnexposedExpr- classDef1ValueArray - stbtt_uint8 *
														// DeclRefExpr- classDef1ValueArray - stbtt_uint8 *
													// BinaryOperator-  - int [Binary Operator: Mul (*)]
														// IntegerLiteral-  - int [Literal: 2]
														// ParenExpr-  - int
															// BinaryOperator-  - int [Binary Operator: Sub (-)]
																// UnexposedExpr- glyph - int
																	// DeclRefExpr- glyph - int
																// UnexposedExpr- startGlyphID - int
																	// UnexposedExpr- startGlyphID - stbtt_uint16
																		// DeclRefExpr- startGlyphID - stbtt_uint16
								// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Assign (=)]
									// DeclRefExpr- classDefTable - stbtt_uint8 *
									// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
										// UnexposedExpr- classDef1ValueArray - stbtt_uint8 *
											// DeclRefExpr- classDef1ValueArray - stbtt_uint8 *
										// BinaryOperator-  - int [Binary Operator: Mul (*)]
											// IntegerLiteral-  - int [Literal: 2]
											// UnexposedExpr- glyphCount - int
												// UnexposedExpr- glyphCount - stbtt_uint16
													// DeclRefExpr- glyphCount - stbtt_uint16
						// BreakStmt-  - 
						// CaseStmt-  - 
							// IntegerLiteral-  - int [Literal: 2]
							// CompoundStmt-  - 
								// DeclStmt-  - 
									// VarDecl- classRangeCount - stbtt_uint16
										// TypeRef- stbtt_uint16 - stbtt_uint16
										// CallExpr- ttUSHORT - stbtt_uint16
											// UnexposedExpr- ttUSHORT - stbtt_uint16 (*)(stbtt_uint8 *)
												// DeclRefExpr- ttUSHORT - stbtt_uint16 (stbtt_uint8 *)
											// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
												// UnexposedExpr- classDefTable - stbtt_uint8 *
													// DeclRefExpr- classDefTable - stbtt_uint8 *
												// IntegerLiteral-  - int [Literal: 2]
								// DeclStmt-  - 
									// VarDecl- classRangeRecords - stbtt_uint8 *
										// TypeRef- stbtt_uint8 - stbtt_uint8
										// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
											// UnexposedExpr- classDefTable - stbtt_uint8 *
												// DeclRefExpr- classDefTable - stbtt_uint8 *
											// IntegerLiteral-  - int [Literal: 4]
								// DeclStmt-  - 
									// VarDecl- l - stbtt_int32
										// TypeRef- stbtt_int32 - stbtt_int32
										// IntegerLiteral-  - int [Literal: 0]
									// VarDecl- r - stbtt_int32
										// TypeRef- stbtt_int32 - stbtt_int32
										// BinaryOperator-  - int [Binary Operator: Sub (-)]
											// UnexposedExpr- classRangeCount - int
												// UnexposedExpr- classRangeCount - stbtt_uint16
													// DeclRefExpr- classRangeCount - stbtt_uint16
											// IntegerLiteral-  - int [Literal: 1]
									// VarDecl- m - stbtt_int32
										// TypeRef- stbtt_int32 - stbtt_int32
								// DeclStmt-  - 
									// VarDecl- strawStart - int
									// VarDecl- strawEnd - int
									// VarDecl- needle - int
										// UnexposedExpr- glyph - int
											// DeclRefExpr- glyph - int
								// WhileStmt-  - 
									// BinaryOperator-  - int [Binary Operator: LE (<=)]
										// UnexposedExpr- l - stbtt_int32
											// DeclRefExpr- l - stbtt_int32
										// UnexposedExpr- r - stbtt_int32
											// DeclRefExpr- r - stbtt_int32
									// CompoundStmt-  - 
										// DeclStmt-  - 
											// VarDecl- classRangeRecord - stbtt_uint8 *
												// TypeRef- stbtt_uint8 - stbtt_uint8
										// BinaryOperator-  - stbtt_int32 [Binary Operator: Assign (=)]
											// DeclRefExpr- m - stbtt_int32
											// BinaryOperator-  - int [Binary Operator: Shr (>>)]
												// ParenExpr-  - int
													// BinaryOperator-  - int [Binary Operator: Add (+)]
														// UnexposedExpr- l - stbtt_int32
															// DeclRefExpr- l - stbtt_int32
														// UnexposedExpr- r - stbtt_int32
															// DeclRefExpr- r - stbtt_int32
												// IntegerLiteral-  - int [Literal: 1]
										// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Assign (=)]
											// DeclRefExpr- classRangeRecord - stbtt_uint8 *
											// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
												// UnexposedExpr- classRangeRecords - stbtt_uint8 *
													// DeclRefExpr- classRangeRecords - stbtt_uint8 *
												// BinaryOperator-  - int [Binary Operator: Mul (*)]
													// IntegerLiteral-  - int [Literal: 6]
													// UnexposedExpr- m - stbtt_int32
														// DeclRefExpr- m - stbtt_int32
										// BinaryOperator-  - int [Binary Operator: Assign (=)]
											// DeclRefExpr- strawStart - int
											// UnexposedExpr- ttUSHORT - int
												// CallExpr- ttUSHORT - stbtt_uint16
													// UnexposedExpr- ttUSHORT - stbtt_uint16 (*)(stbtt_uint8 *)
														// DeclRefExpr- ttUSHORT - stbtt_uint16 (stbtt_uint8 *)
													// UnexposedExpr- classRangeRecord - stbtt_uint8 *
														// DeclRefExpr- classRangeRecord - stbtt_uint8 *
										// BinaryOperator-  - int [Binary Operator: Assign (=)]
											// DeclRefExpr- strawEnd - int
											// UnexposedExpr- ttUSHORT - int
												// CallExpr- ttUSHORT - stbtt_uint16
													// UnexposedExpr- ttUSHORT - stbtt_uint16 (*)(stbtt_uint8 *)
														// DeclRefExpr- ttUSHORT - stbtt_uint16 (stbtt_uint8 *)
													// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
														// UnexposedExpr- classRangeRecord - stbtt_uint8 *
															// DeclRefExpr- classRangeRecord - stbtt_uint8 *
														// IntegerLiteral-  - int [Literal: 2]
										// IfStmt-  - 
											// BinaryOperator-  - int [Binary Operator: LT (<)]
												// UnexposedExpr- needle - int
													// DeclRefExpr- needle - int
												// UnexposedExpr- strawStart - int
													// DeclRefExpr- strawStart - int
											// BinaryOperator-  - stbtt_int32 [Binary Operator: Assign (=)]
												// DeclRefExpr- r - stbtt_int32
												// BinaryOperator-  - int [Binary Operator: Sub (-)]
													// UnexposedExpr- m - stbtt_int32
														// DeclRefExpr- m - stbtt_int32
													// IntegerLiteral-  - int [Literal: 1]
											// IfStmt-  - 
												// BinaryOperator-  - int [Binary Operator: GT (>)]
													// UnexposedExpr- needle - int
														// DeclRefExpr- needle - int
													// UnexposedExpr- strawEnd - int
														// DeclRefExpr- strawEnd - int
												// BinaryOperator-  - stbtt_int32 [Binary Operator: Assign (=)]
													// DeclRefExpr- l - stbtt_int32
													// BinaryOperator-  - int [Binary Operator: Add (+)]
														// UnexposedExpr- m - stbtt_int32
															// DeclRefExpr- m - stbtt_int32
														// IntegerLiteral-  - int [Literal: 1]
												// ReturnStmt-  - 
													// CStyleCastExpr-  - stbtt_int32
														// TypeRef- stbtt_int32 - stbtt_int32
														// CallExpr- ttUSHORT - stbtt_uint16
															// UnexposedExpr- ttUSHORT - stbtt_uint16 (*)(stbtt_uint8 *)
																// DeclRefExpr- ttUSHORT - stbtt_uint16 (stbtt_uint8 *)
															// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
																// UnexposedExpr- classRangeRecord - stbtt_uint8 *
																	// DeclRefExpr- classRangeRecord - stbtt_uint8 *
																// IntegerLiteral-  - int [Literal: 4]
								// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Assign (=)]
									// DeclRefExpr- classDefTable - stbtt_uint8 *
									// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
										// UnexposedExpr- classRangeRecords - stbtt_uint8 *
											// DeclRefExpr- classRangeRecords - stbtt_uint8 *
										// BinaryOperator-  - int [Binary Operator: Mul (*)]
											// IntegerLiteral-  - int [Literal: 6]
											// UnexposedExpr- classRangeCount - int
												// UnexposedExpr- classRangeCount - stbtt_uint16
													// DeclRefExpr- classRangeCount - stbtt_uint16
						// BreakStmt-  - 
						// DefaultStmt-  - 
							// CompoundStmt-  - 
								// NullStmt-  - 
						// BreakStmt-  - 
				// ReturnStmt-  - 
					// UnaryOperator-  - int [Unary Operator: Minus (-)]
						// IntegerLiteral-  - int [Literal: 1]
		// FunctionDecl- stbtt__GetGlyphGPOSInfoAdvance - stbtt_int32 (const stbtt_fontinfo *, int, int)
			// TypeRef- stbtt_int32 - stbtt_int32
			// ParmDecl- info - const stbtt_fontinfo *
				// TypeRef- stbtt_fontinfo - stbtt_fontinfo
			// ParmDecl- glyph1 - int
			// ParmDecl- glyph2 - int
			// CompoundStmt-  - 
				// DeclStmt-  - 
					// VarDecl- lookupListOffset - stbtt_uint16
						// TypeRef- stbtt_uint16 - stbtt_uint16
				// DeclStmt-  - 
					// VarDecl- lookupList - stbtt_uint8 *
						// TypeRef- stbtt_uint8 - stbtt_uint8
				// DeclStmt-  - 
					// VarDecl- lookupCount - stbtt_uint16
						// TypeRef- stbtt_uint16 - stbtt_uint16
				// DeclStmt-  - 
					// VarDecl- data - stbtt_uint8 *
						// TypeRef- stbtt_uint8 - stbtt_uint8
				// DeclStmt-  - 
					// VarDecl- i - stbtt_int32
						// TypeRef- stbtt_int32 - stbtt_int32
				// IfStmt-  - 
					// UnaryOperator-  - int [Unary Operator: LNot (!)]
						// UnexposedExpr- gpos - int
							// MemberRefExpr- gpos - const int
								// UnexposedExpr- info - const stbtt_fontinfo *
									// DeclRefExpr- info - const stbtt_fontinfo *
					// ReturnStmt-  - 
						// IntegerLiteral-  - int [Literal: 0]
				// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Assign (=)]
					// DeclRefExpr- data - stbtt_uint8 *
					// BinaryOperator-  - unsigned char * [Binary Operator: Add (+)]
						// UnexposedExpr- data - unsigned char *
							// MemberRefExpr- data - unsigned char *const
								// UnexposedExpr- info - const stbtt_fontinfo *
									// DeclRefExpr- info - const stbtt_fontinfo *
						// UnexposedExpr- gpos - int
							// MemberRefExpr- gpos - const int
								// UnexposedExpr- info - const stbtt_fontinfo *
									// DeclRefExpr- info - const stbtt_fontinfo *
				// IfStmt-  - 
					// BinaryOperator-  - int [Binary Operator: NE (!=)]
						// UnexposedExpr- ttUSHORT - int
							// CallExpr- ttUSHORT - stbtt_uint16
								// UnexposedExpr- ttUSHORT - stbtt_uint16 (*)(stbtt_uint8 *)
									// DeclRefExpr- ttUSHORT - stbtt_uint16 (stbtt_uint8 *)
								// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
									// UnexposedExpr- data - stbtt_uint8 *
										// DeclRefExpr- data - stbtt_uint8 *
									// IntegerLiteral-  - int [Literal: 0]
						// IntegerLiteral-  - int [Literal: 1]
					// ReturnStmt-  - 
						// IntegerLiteral-  - int [Literal: 0]
				// IfStmt-  - 
					// BinaryOperator-  - int [Binary Operator: NE (!=)]
						// UnexposedExpr- ttUSHORT - int
							// CallExpr- ttUSHORT - stbtt_uint16
								// UnexposedExpr- ttUSHORT - stbtt_uint16 (*)(stbtt_uint8 *)
									// DeclRefExpr- ttUSHORT - stbtt_uint16 (stbtt_uint8 *)
								// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
									// UnexposedExpr- data - stbtt_uint8 *
										// DeclRefExpr- data - stbtt_uint8 *
									// IntegerLiteral-  - int [Literal: 2]
						// IntegerLiteral-  - int [Literal: 0]
					// ReturnStmt-  - 
						// IntegerLiteral-  - int [Literal: 0]
				// BinaryOperator-  - stbtt_uint16 [Binary Operator: Assign (=)]
					// DeclRefExpr- lookupListOffset - stbtt_uint16
					// CallExpr- ttUSHORT - stbtt_uint16
						// UnexposedExpr- ttUSHORT - stbtt_uint16 (*)(stbtt_uint8 *)
							// DeclRefExpr- ttUSHORT - stbtt_uint16 (stbtt_uint8 *)
						// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
							// UnexposedExpr- data - stbtt_uint8 *
								// DeclRefExpr- data - stbtt_uint8 *
							// IntegerLiteral-  - int [Literal: 8]
				// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Assign (=)]
					// DeclRefExpr- lookupList - stbtt_uint8 *
					// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
						// UnexposedExpr- data - stbtt_uint8 *
							// DeclRefExpr- data - stbtt_uint8 *
						// UnexposedExpr- lookupListOffset - int
							// UnexposedExpr- lookupListOffset - stbtt_uint16
								// DeclRefExpr- lookupListOffset - stbtt_uint16
				// BinaryOperator-  - stbtt_uint16 [Binary Operator: Assign (=)]
					// DeclRefExpr- lookupCount - stbtt_uint16
					// CallExpr- ttUSHORT - stbtt_uint16
						// UnexposedExpr- ttUSHORT - stbtt_uint16 (*)(stbtt_uint8 *)
							// DeclRefExpr- ttUSHORT - stbtt_uint16 (stbtt_uint8 *)
						// UnexposedExpr- lookupList - stbtt_uint8 *
							// DeclRefExpr- lookupList - stbtt_uint8 *
				// ForStmt-  - 
					// BinaryOperator-  - stbtt_int32 [Binary Operator: Assign (=)]
						// DeclRefExpr- i - stbtt_int32
						// IntegerLiteral-  - int [Literal: 0]
					// BinaryOperator-  - int [Binary Operator: LT (<)]
						// UnexposedExpr- i - stbtt_int32
							// DeclRefExpr- i - stbtt_int32
						// UnexposedExpr- lookupCount - int
							// UnexposedExpr- lookupCount - stbtt_uint16
								// DeclRefExpr- lookupCount - stbtt_uint16
					// UnaryOperator-  - stbtt_int32 [Unary Operator: PreInc (++)]
						// DeclRefExpr- i - stbtt_int32
					// CompoundStmt-  - 
						// DeclStmt-  - 
							// VarDecl- lookupOffset - stbtt_uint16
								// TypeRef- stbtt_uint16 - stbtt_uint16
								// CallExpr- ttUSHORT - stbtt_uint16
									// UnexposedExpr- ttUSHORT - stbtt_uint16 (*)(stbtt_uint8 *)
										// DeclRefExpr- ttUSHORT - stbtt_uint16 (stbtt_uint8 *)
									// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
										// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
											// UnexposedExpr- lookupList - stbtt_uint8 *
												// DeclRefExpr- lookupList - stbtt_uint8 *
											// IntegerLiteral-  - int [Literal: 2]
										// BinaryOperator-  - int [Binary Operator: Mul (*)]
											// IntegerLiteral-  - int [Literal: 2]
											// UnexposedExpr- i - stbtt_int32
												// DeclRefExpr- i - stbtt_int32
						// DeclStmt-  - 
							// VarDecl- lookupTable - stbtt_uint8 *
								// TypeRef- stbtt_uint8 - stbtt_uint8
								// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
									// UnexposedExpr- lookupList - stbtt_uint8 *
										// DeclRefExpr- lookupList - stbtt_uint8 *
									// UnexposedExpr- lookupOffset - int
										// UnexposedExpr- lookupOffset - stbtt_uint16
											// DeclRefExpr- lookupOffset - stbtt_uint16
						// DeclStmt-  - 
							// VarDecl- lookupType - stbtt_uint16
								// TypeRef- stbtt_uint16 - stbtt_uint16
								// CallExpr- ttUSHORT - stbtt_uint16
									// UnexposedExpr- ttUSHORT - stbtt_uint16 (*)(stbtt_uint8 *)
										// DeclRefExpr- ttUSHORT - stbtt_uint16 (stbtt_uint8 *)
									// UnexposedExpr- lookupTable - stbtt_uint8 *
										// DeclRefExpr- lookupTable - stbtt_uint8 *
						// DeclStmt-  - 
							// VarDecl- subTableCount - stbtt_uint16
								// TypeRef- stbtt_uint16 - stbtt_uint16
								// CallExpr- ttUSHORT - stbtt_uint16
									// UnexposedExpr- ttUSHORT - stbtt_uint16 (*)(stbtt_uint8 *)
										// DeclRefExpr- ttUSHORT - stbtt_uint16 (stbtt_uint8 *)
									// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
										// UnexposedExpr- lookupTable - stbtt_uint8 *
											// DeclRefExpr- lookupTable - stbtt_uint8 *
										// IntegerLiteral-  - int [Literal: 4]
						// DeclStmt-  - 
							// VarDecl- subTableOffsets - stbtt_uint8 *
								// TypeRef- stbtt_uint8 - stbtt_uint8
								// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
									// UnexposedExpr- lookupTable - stbtt_uint8 *
										// DeclRefExpr- lookupTable - stbtt_uint8 *
									// IntegerLiteral-  - int [Literal: 6]
						// SwitchStmt-  - 
							// UnexposedExpr- lookupType - int
								// UnexposedExpr- lookupType - stbtt_uint16
									// DeclRefExpr- lookupType - stbtt_uint16
							// CompoundStmt-  - 
								// CaseStmt-  - 
									// IntegerLiteral-  - int [Literal: 2]
									// CompoundStmt-  - 
										// DeclStmt-  - 
											// VarDecl- sti - stbtt_int32
												// TypeRef- stbtt_int32 - stbtt_int32
										// ForStmt-  - 
											// BinaryOperator-  - stbtt_int32 [Binary Operator: Assign (=)]
												// DeclRefExpr- sti - stbtt_int32
												// IntegerLiteral-  - int [Literal: 0]
											// BinaryOperator-  - int [Binary Operator: LT (<)]
												// UnexposedExpr- sti - stbtt_int32
													// DeclRefExpr- sti - stbtt_int32
												// UnexposedExpr- subTableCount - int
													// UnexposedExpr- subTableCount - stbtt_uint16
														// DeclRefExpr- subTableCount - stbtt_uint16
											// UnaryOperator-  - stbtt_int32 [Unary Operator: PostInc (++)]
												// DeclRefExpr- sti - stbtt_int32
											// CompoundStmt-  - 
												// DeclStmt-  - 
													// VarDecl- subtableOffset - stbtt_uint16
														// TypeRef- stbtt_uint16 - stbtt_uint16
														// CallExpr- ttUSHORT - stbtt_uint16
															// UnexposedExpr- ttUSHORT - stbtt_uint16 (*)(stbtt_uint8 *)
																// DeclRefExpr- ttUSHORT - stbtt_uint16 (stbtt_uint8 *)
															// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
																// UnexposedExpr- subTableOffsets - stbtt_uint8 *
																	// DeclRefExpr- subTableOffsets - stbtt_uint8 *
																// BinaryOperator-  - int [Binary Operator: Mul (*)]
																	// IntegerLiteral-  - int [Literal: 2]
																	// UnexposedExpr- sti - stbtt_int32
																		// DeclRefExpr- sti - stbtt_int32
												// DeclStmt-  - 
													// VarDecl- table - stbtt_uint8 *
														// TypeRef- stbtt_uint8 - stbtt_uint8
														// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
															// UnexposedExpr- lookupTable - stbtt_uint8 *
																// DeclRefExpr- lookupTable - stbtt_uint8 *
															// UnexposedExpr- subtableOffset - int
																// UnexposedExpr- subtableOffset - stbtt_uint16
																	// DeclRefExpr- subtableOffset - stbtt_uint16
												// DeclStmt-  - 
													// VarDecl- posFormat - stbtt_uint16
														// TypeRef- stbtt_uint16 - stbtt_uint16
														// CallExpr- ttUSHORT - stbtt_uint16
															// UnexposedExpr- ttUSHORT - stbtt_uint16 (*)(stbtt_uint8 *)
																// DeclRefExpr- ttUSHORT - stbtt_uint16 (stbtt_uint8 *)
															// UnexposedExpr- table - stbtt_uint8 *
																// DeclRefExpr- table - stbtt_uint8 *
												// DeclStmt-  - 
													// VarDecl- coverageOffset - stbtt_uint16
														// TypeRef- stbtt_uint16 - stbtt_uint16
														// CallExpr- ttUSHORT - stbtt_uint16
															// UnexposedExpr- ttUSHORT - stbtt_uint16 (*)(stbtt_uint8 *)
																// DeclRefExpr- ttUSHORT - stbtt_uint16 (stbtt_uint8 *)
															// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
																// UnexposedExpr- table - stbtt_uint8 *
																	// DeclRefExpr- table - stbtt_uint8 *
																// IntegerLiteral-  - int [Literal: 2]
												// DeclStmt-  - 
													// VarDecl- coverageIndex - stbtt_int32
														// TypeRef- stbtt_int32 - stbtt_int32
														// CallExpr- stbtt__GetCoverageIndex - stbtt_int32
															// UnexposedExpr- stbtt__GetCoverageIndex - stbtt_int32 (*)(stbtt_uint8 *, int)
																// DeclRefExpr- stbtt__GetCoverageIndex - stbtt_int32 (stbtt_uint8 *, int)
															// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
																// UnexposedExpr- table - stbtt_uint8 *
																	// DeclRefExpr- table - stbtt_uint8 *
																// UnexposedExpr- coverageOffset - int
																	// UnexposedExpr- coverageOffset - stbtt_uint16
																		// DeclRefExpr- coverageOffset - stbtt_uint16
															// UnexposedExpr- glyph1 - int
																// DeclRefExpr- glyph1 - int
												// IfStmt-  - 
													// BinaryOperator-  - int [Binary Operator: EQ (==)]
														// UnexposedExpr- coverageIndex - stbtt_int32
															// DeclRefExpr- coverageIndex - stbtt_int32
														// UnaryOperator-  - int [Unary Operator: Minus (-)]
															// IntegerLiteral-  - int [Literal: 1]
													// ContinueStmt-  - 
												// SwitchStmt-  - 
													// UnexposedExpr- posFormat - int
														// UnexposedExpr- posFormat - stbtt_uint16
															// DeclRefExpr- posFormat - stbtt_uint16
													// CompoundStmt-  - 
														// CaseStmt-  - 
															// IntegerLiteral-  - int [Literal: 1]
															// CompoundStmt-  - 
																// DeclStmt-  - 
																	// VarDecl- l - stbtt_int32
																		// TypeRef- stbtt_int32 - stbtt_int32
																	// VarDecl- r - stbtt_int32
																		// TypeRef- stbtt_int32 - stbtt_int32
																	// VarDecl- m - stbtt_int32
																		// TypeRef- stbtt_int32 - stbtt_int32
																// DeclStmt-  - 
																	// VarDecl- straw - int
																	// VarDecl- needle - int
																// DeclStmt-  - 
																	// VarDecl- valueFormat1 - stbtt_uint16
																		// TypeRef- stbtt_uint16 - stbtt_uint16
																		// CallExpr- ttUSHORT - stbtt_uint16
																			// UnexposedExpr- ttUSHORT - stbtt_uint16 (*)(stbtt_uint8 *)
																				// DeclRefExpr- ttUSHORT - stbtt_uint16 (stbtt_uint8 *)
																			// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
																				// UnexposedExpr- table - stbtt_uint8 *
																					// DeclRefExpr- table - stbtt_uint8 *
																				// IntegerLiteral-  - int [Literal: 4]
																// DeclStmt-  - 
																	// VarDecl- valueFormat2 - stbtt_uint16
																		// TypeRef- stbtt_uint16 - stbtt_uint16
																		// CallExpr- ttUSHORT - stbtt_uint16
																			// UnexposedExpr- ttUSHORT - stbtt_uint16 (*)(stbtt_uint8 *)
																				// DeclRefExpr- ttUSHORT - stbtt_uint16 (stbtt_uint8 *)
																			// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
																				// UnexposedExpr- table - stbtt_uint8 *
																					// DeclRefExpr- table - stbtt_uint8 *
																				// IntegerLiteral-  - int [Literal: 6]
																// DeclStmt-  - 
																	// VarDecl- valueRecordPairSizeInBytes - stbtt_int32
																		// TypeRef- stbtt_int32 - stbtt_int32
																		// IntegerLiteral-  - int [Literal: 2]
																// DeclStmt-  - 
																	// VarDecl- pairSetCount - stbtt_uint16
																		// TypeRef- stbtt_uint16 - stbtt_uint16
																		// CallExpr- ttUSHORT - stbtt_uint16
																			// UnexposedExpr- ttUSHORT - stbtt_uint16 (*)(stbtt_uint8 *)
																				// DeclRefExpr- ttUSHORT - stbtt_uint16 (stbtt_uint8 *)
																			// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
																				// UnexposedExpr- table - stbtt_uint8 *
																					// DeclRefExpr- table - stbtt_uint8 *
																				// IntegerLiteral-  - int [Literal: 8]
																// DeclStmt-  - 
																	// VarDecl- pairPosOffset - stbtt_uint16
																		// TypeRef- stbtt_uint16 - stbtt_uint16
																		// CallExpr- ttUSHORT - stbtt_uint16
																			// UnexposedExpr- ttUSHORT - stbtt_uint16 (*)(stbtt_uint8 *)
																				// DeclRefExpr- ttUSHORT - stbtt_uint16 (stbtt_uint8 *)
																			// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
																				// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
																					// UnexposedExpr- table - stbtt_uint8 *
																						// DeclRefExpr- table - stbtt_uint8 *
																					// IntegerLiteral-  - int [Literal: 10]
																				// BinaryOperator-  - int [Binary Operator: Mul (*)]
																					// IntegerLiteral-  - int [Literal: 2]
																					// UnexposedExpr- coverageIndex - stbtt_int32
																						// DeclRefExpr- coverageIndex - stbtt_int32
																// DeclStmt-  - 
																	// VarDecl- pairValueTable - stbtt_uint8 *
																		// TypeRef- stbtt_uint8 - stbtt_uint8
																		// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
																			// UnexposedExpr- table - stbtt_uint8 *
																				// DeclRefExpr- table - stbtt_uint8 *
																			// UnexposedExpr- pairPosOffset - int
																				// UnexposedExpr- pairPosOffset - stbtt_uint16
																					// DeclRefExpr- pairPosOffset - stbtt_uint16
																// DeclStmt-  - 
																	// VarDecl- pairValueCount - stbtt_uint16
																		// TypeRef- stbtt_uint16 - stbtt_uint16
																		// CallExpr- ttUSHORT - stbtt_uint16
																			// UnexposedExpr- ttUSHORT - stbtt_uint16 (*)(stbtt_uint8 *)
																				// DeclRefExpr- ttUSHORT - stbtt_uint16 (stbtt_uint8 *)
																			// UnexposedExpr- pairValueTable - stbtt_uint8 *
																				// DeclRefExpr- pairValueTable - stbtt_uint8 *
																// DeclStmt-  - 
																	// VarDecl- pairValueArray - stbtt_uint8 *
																		// TypeRef- stbtt_uint8 - stbtt_uint8
																		// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
																			// UnexposedExpr- pairValueTable - stbtt_uint8 *
																				// DeclRefExpr- pairValueTable - stbtt_uint8 *
																			// IntegerLiteral-  - int [Literal: 2]
																// NullStmt-  - 
																// IfStmt-  - 
																	// BinaryOperator-  - int [Binary Operator: NE (!=)]
																		// UnexposedExpr- valueFormat1 - int
																			// UnexposedExpr- valueFormat1 - stbtt_uint16
																				// DeclRefExpr- valueFormat1 - stbtt_uint16
																		// IntegerLiteral-  - int [Literal: 4]
																	// ReturnStmt-  - 
																		// IntegerLiteral-  - int [Literal: 0]
																// NullStmt-  - 
																// IfStmt-  - 
																	// BinaryOperator-  - int [Binary Operator: NE (!=)]
																		// UnexposedExpr- valueFormat2 - int
																			// UnexposedExpr- valueFormat2 - stbtt_uint16
																				// DeclRefExpr- valueFormat2 - stbtt_uint16
																		// IntegerLiteral-  - int [Literal: 0]
																	// ReturnStmt-  - 
																		// IntegerLiteral-  - int [Literal: 0]
																// NullStmt-  - 
																// BinaryOperator-  - int [Binary Operator: Assign (=)]
																	// DeclRefExpr- needle - int
																	// UnexposedExpr- glyph2 - int
																		// DeclRefExpr- glyph2 - int
																// BinaryOperator-  - stbtt_int32 [Binary Operator: Assign (=)]
																	// DeclRefExpr- r - stbtt_int32
																	// BinaryOperator-  - int [Binary Operator: Sub (-)]
																		// UnexposedExpr- pairValueCount - int
																			// UnexposedExpr- pairValueCount - stbtt_uint16
																				// DeclRefExpr- pairValueCount - stbtt_uint16
																		// IntegerLiteral-  - int [Literal: 1]
																// BinaryOperator-  - stbtt_int32 [Binary Operator: Assign (=)]
																	// DeclRefExpr- l - stbtt_int32
																	// IntegerLiteral-  - int [Literal: 0]
																// WhileStmt-  - 
																	// BinaryOperator-  - int [Binary Operator: LE (<=)]
																		// UnexposedExpr- l - stbtt_int32
																			// DeclRefExpr- l - stbtt_int32
																		// UnexposedExpr- r - stbtt_int32
																			// DeclRefExpr- r - stbtt_int32
																	// CompoundStmt-  - 
																		// DeclStmt-  - 
																			// VarDecl- secondGlyph - stbtt_uint16
																				// TypeRef- stbtt_uint16 - stbtt_uint16
																		// DeclStmt-  - 
																			// VarDecl- pairValue - stbtt_uint8 *
																				// TypeRef- stbtt_uint8 - stbtt_uint8
																		// BinaryOperator-  - stbtt_int32 [Binary Operator: Assign (=)]
																			// DeclRefExpr- m - stbtt_int32
																			// BinaryOperator-  - int [Binary Operator: Shr (>>)]
																				// ParenExpr-  - int
																					// BinaryOperator-  - int [Binary Operator: Add (+)]
																						// UnexposedExpr- l - stbtt_int32
																							// DeclRefExpr- l - stbtt_int32
																						// UnexposedExpr- r - stbtt_int32
																							// DeclRefExpr- r - stbtt_int32
																				// IntegerLiteral-  - int [Literal: 1]
																		// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Assign (=)]
																			// DeclRefExpr- pairValue - stbtt_uint8 *
																			// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
																				// UnexposedExpr- pairValueArray - stbtt_uint8 *
																					// DeclRefExpr- pairValueArray - stbtt_uint8 *
																				// BinaryOperator-  - int [Binary Operator: Mul (*)]
																					// ParenExpr-  - int
																						// BinaryOperator-  - int [Binary Operator: Add (+)]
																							// IntegerLiteral-  - int [Literal: 2]
																							// UnexposedExpr- valueRecordPairSizeInBytes - stbtt_int32
																								// DeclRefExpr- valueRecordPairSizeInBytes - stbtt_int32
																					// UnexposedExpr- m - stbtt_int32
																						// DeclRefExpr- m - stbtt_int32
																		// BinaryOperator-  - stbtt_uint16 [Binary Operator: Assign (=)]
																			// DeclRefExpr- secondGlyph - stbtt_uint16
																			// CallExpr- ttUSHORT - stbtt_uint16
																				// UnexposedExpr- ttUSHORT - stbtt_uint16 (*)(stbtt_uint8 *)
																					// DeclRefExpr- ttUSHORT - stbtt_uint16 (stbtt_uint8 *)
																				// UnexposedExpr- pairValue - stbtt_uint8 *
																					// DeclRefExpr- pairValue - stbtt_uint8 *
																		// BinaryOperator-  - int [Binary Operator: Assign (=)]
																			// DeclRefExpr- straw - int
																			// UnexposedExpr- secondGlyph - int
																				// UnexposedExpr- secondGlyph - stbtt_uint16
																					// DeclRefExpr- secondGlyph - stbtt_uint16
																		// IfStmt-  - 
																			// BinaryOperator-  - int [Binary Operator: LT (<)]
																				// UnexposedExpr- needle - int
																					// DeclRefExpr- needle - int
																				// UnexposedExpr- straw - int
																					// DeclRefExpr- straw - int
																			// BinaryOperator-  - stbtt_int32 [Binary Operator: Assign (=)]
																				// DeclRefExpr- r - stbtt_int32
																				// BinaryOperator-  - int [Binary Operator: Sub (-)]
																					// UnexposedExpr- m - stbtt_int32
																						// DeclRefExpr- m - stbtt_int32
																					// IntegerLiteral-  - int [Literal: 1]
																			// IfStmt-  - 
																				// BinaryOperator-  - int [Binary Operator: GT (>)]
																					// UnexposedExpr- needle - int
																						// DeclRefExpr- needle - int
																					// UnexposedExpr- straw - int
																						// DeclRefExpr- straw - int
																				// BinaryOperator-  - stbtt_int32 [Binary Operator: Assign (=)]
																					// DeclRefExpr- l - stbtt_int32
																					// BinaryOperator-  - int [Binary Operator: Add (+)]
																						// UnexposedExpr- m - stbtt_int32
																							// DeclRefExpr- m - stbtt_int32
																						// IntegerLiteral-  - int [Literal: 1]
																				// CompoundStmt-  - 
																					// DeclStmt-  - 
																						// VarDecl- xAdvance - stbtt_int16
																							// TypeRef- stbtt_int16 - stbtt_int16
																							// CallExpr- ttSHORT - stbtt_int16
																								// UnexposedExpr- ttSHORT - stbtt_int16 (*)(stbtt_uint8 *)
																									// DeclRefExpr- ttSHORT - stbtt_int16 (stbtt_uint8 *)
																								// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
																									// UnexposedExpr- pairValue - stbtt_uint8 *
																										// DeclRefExpr- pairValue - stbtt_uint8 *
																									// IntegerLiteral-  - int [Literal: 2]
																					// ReturnStmt-  - 
																						// UnexposedExpr- xAdvance - stbtt_int32
																							// UnexposedExpr- xAdvance - stbtt_int16
																								// DeclRefExpr- xAdvance - stbtt_int16
														// BreakStmt-  - 
														// CaseStmt-  - 
															// IntegerLiteral-  - int [Literal: 2]
															// CompoundStmt-  - 
																// DeclStmt-  - 
																	// VarDecl- valueFormat1 - stbtt_uint16
																		// TypeRef- stbtt_uint16 - stbtt_uint16
																		// CallExpr- ttUSHORT - stbtt_uint16
																			// UnexposedExpr- ttUSHORT - stbtt_uint16 (*)(stbtt_uint8 *)
																				// DeclRefExpr- ttUSHORT - stbtt_uint16 (stbtt_uint8 *)
																			// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
																				// UnexposedExpr- table - stbtt_uint8 *
																					// DeclRefExpr- table - stbtt_uint8 *
																				// IntegerLiteral-  - int [Literal: 4]
																// DeclStmt-  - 
																	// VarDecl- valueFormat2 - stbtt_uint16
																		// TypeRef- stbtt_uint16 - stbtt_uint16
																		// CallExpr- ttUSHORT - stbtt_uint16
																			// UnexposedExpr- ttUSHORT - stbtt_uint16 (*)(stbtt_uint8 *)
																				// DeclRefExpr- ttUSHORT - stbtt_uint16 (stbtt_uint8 *)
																			// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
																				// UnexposedExpr- table - stbtt_uint8 *
																					// DeclRefExpr- table - stbtt_uint8 *
																				// IntegerLiteral-  - int [Literal: 6]
																// DeclStmt-  - 
																	// VarDecl- classDef1Offset - stbtt_uint16
																		// TypeRef- stbtt_uint16 - stbtt_uint16
																		// CallExpr- ttUSHORT - stbtt_uint16
																			// UnexposedExpr- ttUSHORT - stbtt_uint16 (*)(stbtt_uint8 *)
																				// DeclRefExpr- ttUSHORT - stbtt_uint16 (stbtt_uint8 *)
																			// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
																				// UnexposedExpr- table - stbtt_uint8 *
																					// DeclRefExpr- table - stbtt_uint8 *
																				// IntegerLiteral-  - int [Literal: 8]
																// DeclStmt-  - 
																	// VarDecl- classDef2Offset - stbtt_uint16
																		// TypeRef- stbtt_uint16 - stbtt_uint16
																		// CallExpr- ttUSHORT - stbtt_uint16
																			// UnexposedExpr- ttUSHORT - stbtt_uint16 (*)(stbtt_uint8 *)
																				// DeclRefExpr- ttUSHORT - stbtt_uint16 (stbtt_uint8 *)
																			// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
																				// UnexposedExpr- table - stbtt_uint8 *
																					// DeclRefExpr- table - stbtt_uint8 *
																				// IntegerLiteral-  - int [Literal: 10]
																// DeclStmt-  - 
																	// VarDecl- glyph1class - int
																		// CallExpr- stbtt__GetGlyphClass - stbtt_int32
																			// UnexposedExpr- stbtt__GetGlyphClass - stbtt_int32 (*)(stbtt_uint8 *, int)
																				// DeclRefExpr- stbtt__GetGlyphClass - stbtt_int32 (stbtt_uint8 *, int)
																			// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
																				// UnexposedExpr- table - stbtt_uint8 *
																					// DeclRefExpr- table - stbtt_uint8 *
																				// UnexposedExpr- classDef1Offset - int
																					// UnexposedExpr- classDef1Offset - stbtt_uint16
																						// DeclRefExpr- classDef1Offset - stbtt_uint16
																			// UnexposedExpr- glyph1 - int
																				// DeclRefExpr- glyph1 - int
																// DeclStmt-  - 
																	// VarDecl- glyph2class - int
																		// CallExpr- stbtt__GetGlyphClass - stbtt_int32
																			// UnexposedExpr- stbtt__GetGlyphClass - stbtt_int32 (*)(stbtt_uint8 *, int)
																				// DeclRefExpr- stbtt__GetGlyphClass - stbtt_int32 (stbtt_uint8 *, int)
																			// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
																				// UnexposedExpr- table - stbtt_uint8 *
																					// DeclRefExpr- table - stbtt_uint8 *
																				// UnexposedExpr- classDef2Offset - int
																					// UnexposedExpr- classDef2Offset - stbtt_uint16
																						// DeclRefExpr- classDef2Offset - stbtt_uint16
																			// UnexposedExpr- glyph2 - int
																				// DeclRefExpr- glyph2 - int
																// DeclStmt-  - 
																	// VarDecl- class1Count - stbtt_uint16
																		// TypeRef- stbtt_uint16 - stbtt_uint16
																		// CallExpr- ttUSHORT - stbtt_uint16
																			// UnexposedExpr- ttUSHORT - stbtt_uint16 (*)(stbtt_uint8 *)
																				// DeclRefExpr- ttUSHORT - stbtt_uint16 (stbtt_uint8 *)
																			// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
																				// UnexposedExpr- table - stbtt_uint8 *
																					// DeclRefExpr- table - stbtt_uint8 *
																				// IntegerLiteral-  - int [Literal: 12]
																// DeclStmt-  - 
																	// VarDecl- class2Count - stbtt_uint16
																		// TypeRef- stbtt_uint16 - stbtt_uint16
																		// CallExpr- ttUSHORT - stbtt_uint16
																			// UnexposedExpr- ttUSHORT - stbtt_uint16 (*)(stbtt_uint8 *)
																				// DeclRefExpr- ttUSHORT - stbtt_uint16 (stbtt_uint8 *)
																			// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
																				// UnexposedExpr- table - stbtt_uint8 *
																					// DeclRefExpr- table - stbtt_uint8 *
																				// IntegerLiteral-  - int [Literal: 14]
																// NullStmt-  - 
																// NullStmt-  - 
																// NullStmt-  - 
																// IfStmt-  - 
																	// BinaryOperator-  - int [Binary Operator: NE (!=)]
																		// UnexposedExpr- valueFormat1 - int
																			// UnexposedExpr- valueFormat1 - stbtt_uint16
																				// DeclRefExpr- valueFormat1 - stbtt_uint16
																		// IntegerLiteral-  - int [Literal: 4]
																	// ReturnStmt-  - 
																		// IntegerLiteral-  - int [Literal: 0]
																// NullStmt-  - 
																// IfStmt-  - 
																	// BinaryOperator-  - int [Binary Operator: NE (!=)]
																		// UnexposedExpr- valueFormat2 - int
																			// UnexposedExpr- valueFormat2 - stbtt_uint16
																				// DeclRefExpr- valueFormat2 - stbtt_uint16
																		// IntegerLiteral-  - int [Literal: 0]
																	// ReturnStmt-  - 
																		// IntegerLiteral-  - int [Literal: 0]
																// IfStmt-  - 
																	// BinaryOperator-  - int [Binary Operator: LAnd (&&)]
																		// BinaryOperator-  - int [Binary Operator: LAnd (&&)]
																			// BinaryOperator-  - int [Binary Operator: LAnd (&&)]
																				// BinaryOperator-  - int [Binary Operator: GE (>=)]
																					// UnexposedExpr- glyph1class - int
																						// DeclRefExpr- glyph1class - int
																					// IntegerLiteral-  - int [Literal: 0]
																				// BinaryOperator-  - int [Binary Operator: LT (<)]
																					// UnexposedExpr- glyph1class - int
																						// DeclRefExpr- glyph1class - int
																					// UnexposedExpr- class1Count - int
																						// UnexposedExpr- class1Count - stbtt_uint16
																							// DeclRefExpr- class1Count - stbtt_uint16
																			// BinaryOperator-  - int [Binary Operator: GE (>=)]
																				// UnexposedExpr- glyph2class - int
																					// DeclRefExpr- glyph2class - int
																				// IntegerLiteral-  - int [Literal: 0]
																		// BinaryOperator-  - int [Binary Operator: LT (<)]
																			// UnexposedExpr- glyph2class - int
																				// DeclRefExpr- glyph2class - int
																			// UnexposedExpr- class2Count - int
																				// UnexposedExpr- class2Count - stbtt_uint16
																					// DeclRefExpr- class2Count - stbtt_uint16
																	// CompoundStmt-  - 
																		// DeclStmt-  - 
																			// VarDecl- class1Records - stbtt_uint8 *
																				// TypeRef- stbtt_uint8 - stbtt_uint8
																				// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
																					// UnexposedExpr- table - stbtt_uint8 *
																						// DeclRefExpr- table - stbtt_uint8 *
																					// IntegerLiteral-  - int [Literal: 16]
																		// DeclStmt-  - 
																			// VarDecl- class2Records - stbtt_uint8 *
																				// TypeRef- stbtt_uint8 - stbtt_uint8
																				// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
																					// UnexposedExpr- class1Records - stbtt_uint8 *
																						// DeclRefExpr- class1Records - stbtt_uint8 *
																					// BinaryOperator-  - int [Binary Operator: Mul (*)]
																						// IntegerLiteral-  - int [Literal: 2]
																						// ParenExpr-  - int
																							// BinaryOperator-  - int [Binary Operator: Mul (*)]
																								// UnexposedExpr- glyph1class - int
																									// DeclRefExpr- glyph1class - int
																								// UnexposedExpr- class2Count - int
																									// UnexposedExpr- class2Count - stbtt_uint16
																										// DeclRefExpr- class2Count - stbtt_uint16
																		// DeclStmt-  - 
																			// VarDecl- xAdvance - stbtt_int16
																				// TypeRef- stbtt_int16 - stbtt_int16
																				// CallExpr- ttSHORT - stbtt_int16
																					// UnexposedExpr- ttSHORT - stbtt_int16 (*)(stbtt_uint8 *)
																						// DeclRefExpr- ttSHORT - stbtt_int16 (stbtt_uint8 *)
																					// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
																						// UnexposedExpr- class2Records - stbtt_uint8 *
																							// DeclRefExpr- class2Records - stbtt_uint8 *
																						// BinaryOperator-  - int [Binary Operator: Mul (*)]
																							// IntegerLiteral-  - int [Literal: 2]
																							// UnexposedExpr- glyph2class - int
																								// DeclRefExpr- glyph2class - int
																		// ReturnStmt-  - 
																			// UnexposedExpr- xAdvance - stbtt_int32
																				// UnexposedExpr- xAdvance - stbtt_int16
																					// DeclRefExpr- xAdvance - stbtt_int16
														// BreakStmt-  - 
														// DefaultStmt-  - 
															// CompoundStmt-  - 
																// NullStmt-  - 
																// BreakStmt-  - 
														// NullStmt-  - 
										// BreakStmt-  - 
								// NullStmt-  - 
								// DefaultStmt-  - 
									// BreakStmt-  - 
				// ReturnStmt-  - 
					// IntegerLiteral-  - int [Literal: 0]
		// FunctionDecl- stbtt_GetGlyphKernAdvance - int (const stbtt_fontinfo *, int, int)
			// ParmDecl- info - const stbtt_fontinfo *
				// TypeRef- stbtt_fontinfo - stbtt_fontinfo
			// ParmDecl- g1 - int
			// ParmDecl- g2 - int
			// CompoundStmt-  - 
				// DeclStmt-  - 
					// VarDecl- xAdvance - int
						// IntegerLiteral-  - int [Literal: 0]
				// IfStmt-  - 
					// UnexposedExpr- gpos - int
						// MemberRefExpr- gpos - const int
							// UnexposedExpr- info - const stbtt_fontinfo *
								// DeclRefExpr- info - const stbtt_fontinfo *
					// CompoundAssignOperator-  - int
						// DeclRefExpr- xAdvance - int
						// CallExpr- stbtt__GetGlyphGPOSInfoAdvance - stbtt_int32
							// UnexposedExpr- stbtt__GetGlyphGPOSInfoAdvance - stbtt_int32 (*)(const stbtt_fontinfo *, int, int)
								// DeclRefExpr- stbtt__GetGlyphGPOSInfoAdvance - stbtt_int32 (const stbtt_fontinfo *, int, int)
							// UnexposedExpr- info - const stbtt_fontinfo *
								// DeclRefExpr- info - const stbtt_fontinfo *
							// UnexposedExpr- g1 - int
								// DeclRefExpr- g1 - int
							// UnexposedExpr- g2 - int
								// DeclRefExpr- g2 - int
				// IfStmt-  - 
					// UnexposedExpr- kern - int
						// MemberRefExpr- kern - const int
							// UnexposedExpr- info - const stbtt_fontinfo *
								// DeclRefExpr- info - const stbtt_fontinfo *
					// CompoundAssignOperator-  - int
						// DeclRefExpr- xAdvance - int
						// CallExpr- stbtt__GetGlyphKernInfoAdvance - int
							// UnexposedExpr- stbtt__GetGlyphKernInfoAdvance - int (*)(const stbtt_fontinfo *, int, int)
								// DeclRefExpr- stbtt__GetGlyphKernInfoAdvance - int (const stbtt_fontinfo *, int, int)
							// UnexposedExpr- info - const stbtt_fontinfo *
								// DeclRefExpr- info - const stbtt_fontinfo *
							// UnexposedExpr- g1 - int
								// DeclRefExpr- g1 - int
							// UnexposedExpr- g2 - int
								// DeclRefExpr- g2 - int
				// ReturnStmt-  - 
					// UnexposedExpr- xAdvance - int
						// DeclRefExpr- xAdvance - int
		// FunctionDecl- stbtt_GetCodepointKernAdvance - int (const stbtt_fontinfo *, int, int)
			// ParmDecl- info - const stbtt_fontinfo *
				// TypeRef- stbtt_fontinfo - stbtt_fontinfo
			// ParmDecl- ch1 - int
			// ParmDecl- ch2 - int
			// CompoundStmt-  - 
				// IfStmt-  - 
					// BinaryOperator-  - int [Binary Operator: LAnd (&&)]
						// UnaryOperator-  - int [Unary Operator: LNot (!)]
							// UnexposedExpr- kern - int
								// MemberRefExpr- kern - const int
									// UnexposedExpr- info - const stbtt_fontinfo *
										// DeclRefExpr- info - const stbtt_fontinfo *
						// UnaryOperator-  - int [Unary Operator: LNot (!)]
							// UnexposedExpr- gpos - int
								// MemberRefExpr- gpos - const int
									// UnexposedExpr- info - const stbtt_fontinfo *
										// DeclRefExpr- info - const stbtt_fontinfo *
					// ReturnStmt-  - 
						// IntegerLiteral-  - int [Literal: 0]
				// ReturnStmt-  - 
					// CallExpr- stbtt_GetGlyphKernAdvance - int
						// UnexposedExpr- stbtt_GetGlyphKernAdvance - int (*)(const stbtt_fontinfo *, int, int)
							// DeclRefExpr- stbtt_GetGlyphKernAdvance - int (const stbtt_fontinfo *, int, int)
						// UnexposedExpr- info - const stbtt_fontinfo *
							// DeclRefExpr- info - const stbtt_fontinfo *
						// CallExpr- stbtt_FindGlyphIndex - int
							// UnexposedExpr- stbtt_FindGlyphIndex - int (*)(const stbtt_fontinfo *, int)
								// DeclRefExpr- stbtt_FindGlyphIndex - int (const stbtt_fontinfo *, int)
							// UnexposedExpr- info - const stbtt_fontinfo *
								// DeclRefExpr- info - const stbtt_fontinfo *
							// UnexposedExpr- ch1 - int
								// DeclRefExpr- ch1 - int
						// CallExpr- stbtt_FindGlyphIndex - int
							// UnexposedExpr- stbtt_FindGlyphIndex - int (*)(const stbtt_fontinfo *, int)
								// DeclRefExpr- stbtt_FindGlyphIndex - int (const stbtt_fontinfo *, int)
							// UnexposedExpr- info - const stbtt_fontinfo *
								// DeclRefExpr- info - const stbtt_fontinfo *
							// UnexposedExpr- ch2 - int
								// DeclRefExpr- ch2 - int
		// FunctionDecl- stbtt_GetCodepointHMetrics - void (const stbtt_fontinfo *, int, int *, int *)
			// ParmDecl- info - const stbtt_fontinfo *
				// TypeRef- stbtt_fontinfo - stbtt_fontinfo
			// ParmDecl- codepoint - int
			// ParmDecl- advanceWidth - int *
			// ParmDecl- leftSideBearing - int *
			// CompoundStmt-  - 
				// CallExpr- stbtt_GetGlyphHMetrics - void
					// UnexposedExpr- stbtt_GetGlyphHMetrics - void (*)(const stbtt_fontinfo *, int, int *, int *)
						// DeclRefExpr- stbtt_GetGlyphHMetrics - void (const stbtt_fontinfo *, int, int *, int *)
					// UnexposedExpr- info - const stbtt_fontinfo *
						// DeclRefExpr- info - const stbtt_fontinfo *
					// CallExpr- stbtt_FindGlyphIndex - int
						// UnexposedExpr- stbtt_FindGlyphIndex - int (*)(const stbtt_fontinfo *, int)
							// DeclRefExpr- stbtt_FindGlyphIndex - int (const stbtt_fontinfo *, int)
						// UnexposedExpr- info - const stbtt_fontinfo *
							// DeclRefExpr- info - const stbtt_fontinfo *
						// UnexposedExpr- codepoint - int
							// DeclRefExpr- codepoint - int
					// UnexposedExpr- advanceWidth - int *
						// DeclRefExpr- advanceWidth - int *
					// UnexposedExpr- leftSideBearing - int *
						// DeclRefExpr- leftSideBearing - int *
		// FunctionDecl- stbtt_GetFontVMetrics - void (const stbtt_fontinfo *, int *, int *, int *)
			// ParmDecl- info - const stbtt_fontinfo *
				// TypeRef- stbtt_fontinfo - stbtt_fontinfo
			// ParmDecl- ascent - int *
			// ParmDecl- descent - int *
			// ParmDecl- lineGap - int *
			// CompoundStmt-  - 
				// IfStmt-  - 
					// UnexposedExpr- ascent - int *
						// DeclRefExpr- ascent - int *
					// BinaryOperator-  - int [Binary Operator: Assign (=)]
						// UnaryOperator-  - int [Unary Operator: Deref (*)]
							// UnexposedExpr- ascent - int *
								// DeclRefExpr- ascent - int *
						// UnexposedExpr- ttSHORT - int
							// CallExpr- ttSHORT - stbtt_int16
								// UnexposedExpr- ttSHORT - stbtt_int16 (*)(stbtt_uint8 *)
									// DeclRefExpr- ttSHORT - stbtt_int16 (stbtt_uint8 *)
								// BinaryOperator-  - unsigned char * [Binary Operator: Add (+)]
									// BinaryOperator-  - unsigned char * [Binary Operator: Add (+)]
										// UnexposedExpr- data - unsigned char *
											// MemberRefExpr- data - unsigned char *const
												// UnexposedExpr- info - const stbtt_fontinfo *
													// DeclRefExpr- info - const stbtt_fontinfo *
										// UnexposedExpr- hhea - int
											// MemberRefExpr- hhea - const int
												// UnexposedExpr- info - const stbtt_fontinfo *
													// DeclRefExpr- info - const stbtt_fontinfo *
									// IntegerLiteral-  - int [Literal: 4]
				// IfStmt-  - 
					// UnexposedExpr- descent - int *
						// DeclRefExpr- descent - int *
					// BinaryOperator-  - int [Binary Operator: Assign (=)]
						// UnaryOperator-  - int [Unary Operator: Deref (*)]
							// UnexposedExpr- descent - int *
								// DeclRefExpr- descent - int *
						// UnexposedExpr- ttSHORT - int
							// CallExpr- ttSHORT - stbtt_int16
								// UnexposedExpr- ttSHORT - stbtt_int16 (*)(stbtt_uint8 *)
									// DeclRefExpr- ttSHORT - stbtt_int16 (stbtt_uint8 *)
								// BinaryOperator-  - unsigned char * [Binary Operator: Add (+)]
									// BinaryOperator-  - unsigned char * [Binary Operator: Add (+)]
										// UnexposedExpr- data - unsigned char *
											// MemberRefExpr- data - unsigned char *const
												// UnexposedExpr- info - const stbtt_fontinfo *
													// DeclRefExpr- info - const stbtt_fontinfo *
										// UnexposedExpr- hhea - int
											// MemberRefExpr- hhea - const int
												// UnexposedExpr- info - const stbtt_fontinfo *
													// DeclRefExpr- info - const stbtt_fontinfo *
									// IntegerLiteral-  - int [Literal: 6]
				// IfStmt-  - 
					// UnexposedExpr- lineGap - int *
						// DeclRefExpr- lineGap - int *
					// BinaryOperator-  - int [Binary Operator: Assign (=)]
						// UnaryOperator-  - int [Unary Operator: Deref (*)]
							// UnexposedExpr- lineGap - int *
								// DeclRefExpr- lineGap - int *
						// UnexposedExpr- ttSHORT - int
							// CallExpr- ttSHORT - stbtt_int16
								// UnexposedExpr- ttSHORT - stbtt_int16 (*)(stbtt_uint8 *)
									// DeclRefExpr- ttSHORT - stbtt_int16 (stbtt_uint8 *)
								// BinaryOperator-  - unsigned char * [Binary Operator: Add (+)]
									// BinaryOperator-  - unsigned char * [Binary Operator: Add (+)]
										// UnexposedExpr- data - unsigned char *
											// MemberRefExpr- data - unsigned char *const
												// UnexposedExpr- info - const stbtt_fontinfo *
													// DeclRefExpr- info - const stbtt_fontinfo *
										// UnexposedExpr- hhea - int
											// MemberRefExpr- hhea - const int
												// UnexposedExpr- info - const stbtt_fontinfo *
													// DeclRefExpr- info - const stbtt_fontinfo *
									// IntegerLiteral-  - int [Literal: 8]
		// FunctionDecl- stbtt_GetFontVMetricsOS2 - int (const stbtt_fontinfo *, int *, int *, int *)
			// ParmDecl- info - const stbtt_fontinfo *
				// TypeRef- stbtt_fontinfo - stbtt_fontinfo
			// ParmDecl- typoAscent - int *
			// ParmDecl- typoDescent - int *
			// ParmDecl- typoLineGap - int *
			// CompoundStmt-  - 
				// DeclStmt-  - 
					// VarDecl- tab - int
						// UnexposedExpr- stbtt__find_table - int
							// CallExpr- stbtt__find_table - stbtt_uint32
								// UnexposedExpr- stbtt__find_table - stbtt_uint32 (*)(stbtt_uint8 *, stbtt_uint32, const char *)
									// DeclRefExpr- stbtt__find_table - stbtt_uint32 (stbtt_uint8 *, stbtt_uint32, const char *)
								// UnexposedExpr- data - unsigned char *
									// MemberRefExpr- data - unsigned char *const
										// UnexposedExpr- info - const stbtt_fontinfo *
											// DeclRefExpr- info - const stbtt_fontinfo *
								// UnexposedExpr- fontstart - stbtt_uint32
									// UnexposedExpr- fontstart - int
										// MemberRefExpr- fontstart - const int
											// UnexposedExpr- info - const stbtt_fontinfo *
												// DeclRefExpr- info - const stbtt_fontinfo *
								// UnexposedExpr-  - const char *
									// UnexposedExpr-  - char *
										// StringLiteral- "OS/2" - char [5] [Literal: OS/2]
				// IfStmt-  - 
					// UnaryOperator-  - int [Unary Operator: LNot (!)]
						// UnexposedExpr- tab - int
							// DeclRefExpr- tab - int
					// ReturnStmt-  - 
						// IntegerLiteral-  - int [Literal: 0]
				// IfStmt-  - 
					// UnexposedExpr- typoAscent - int *
						// DeclRefExpr- typoAscent - int *
					// BinaryOperator-  - int [Binary Operator: Assign (=)]
						// UnaryOperator-  - int [Unary Operator: Deref (*)]
							// UnexposedExpr- typoAscent - int *
								// DeclRefExpr- typoAscent - int *
						// UnexposedExpr- ttSHORT - int
							// CallExpr- ttSHORT - stbtt_int16
								// UnexposedExpr- ttSHORT - stbtt_int16 (*)(stbtt_uint8 *)
									// DeclRefExpr- ttSHORT - stbtt_int16 (stbtt_uint8 *)
								// BinaryOperator-  - unsigned char * [Binary Operator: Add (+)]
									// BinaryOperator-  - unsigned char * [Binary Operator: Add (+)]
										// UnexposedExpr- data - unsigned char *
											// MemberRefExpr- data - unsigned char *const
												// UnexposedExpr- info - const stbtt_fontinfo *
													// DeclRefExpr- info - const stbtt_fontinfo *
										// UnexposedExpr- tab - int
											// DeclRefExpr- tab - int
									// IntegerLiteral-  - int [Literal: 68]
				// IfStmt-  - 
					// UnexposedExpr- typoDescent - int *
						// DeclRefExpr- typoDescent - int *
					// BinaryOperator-  - int [Binary Operator: Assign (=)]
						// UnaryOperator-  - int [Unary Operator: Deref (*)]
							// UnexposedExpr- typoDescent - int *
								// DeclRefExpr- typoDescent - int *
						// UnexposedExpr- ttSHORT - int
							// CallExpr- ttSHORT - stbtt_int16
								// UnexposedExpr- ttSHORT - stbtt_int16 (*)(stbtt_uint8 *)
									// DeclRefExpr- ttSHORT - stbtt_int16 (stbtt_uint8 *)
								// BinaryOperator-  - unsigned char * [Binary Operator: Add (+)]
									// BinaryOperator-  - unsigned char * [Binary Operator: Add (+)]
										// UnexposedExpr- data - unsigned char *
											// MemberRefExpr- data - unsigned char *const
												// UnexposedExpr- info - const stbtt_fontinfo *
													// DeclRefExpr- info - const stbtt_fontinfo *
										// UnexposedExpr- tab - int
											// DeclRefExpr- tab - int
									// IntegerLiteral-  - int [Literal: 70]
				// IfStmt-  - 
					// UnexposedExpr- typoLineGap - int *
						// DeclRefExpr- typoLineGap - int *
					// BinaryOperator-  - int [Binary Operator: Assign (=)]
						// UnaryOperator-  - int [Unary Operator: Deref (*)]
							// UnexposedExpr- typoLineGap - int *
								// DeclRefExpr- typoLineGap - int *
						// UnexposedExpr- ttSHORT - int
							// CallExpr- ttSHORT - stbtt_int16
								// UnexposedExpr- ttSHORT - stbtt_int16 (*)(stbtt_uint8 *)
									// DeclRefExpr- ttSHORT - stbtt_int16 (stbtt_uint8 *)
								// BinaryOperator-  - unsigned char * [Binary Operator: Add (+)]
									// BinaryOperator-  - unsigned char * [Binary Operator: Add (+)]
										// UnexposedExpr- data - unsigned char *
											// MemberRefExpr- data - unsigned char *const
												// UnexposedExpr- info - const stbtt_fontinfo *
													// DeclRefExpr- info - const stbtt_fontinfo *
										// UnexposedExpr- tab - int
											// DeclRefExpr- tab - int
									// IntegerLiteral-  - int [Literal: 72]
				// ReturnStmt-  - 
					// IntegerLiteral-  - int [Literal: 1]
		// FunctionDecl- stbtt_GetFontBoundingBox - void (const stbtt_fontinfo *, int *, int *, int *, int *)
			// ParmDecl- info - const stbtt_fontinfo *
				// TypeRef- stbtt_fontinfo - stbtt_fontinfo
			// ParmDecl- x0 - int *
			// ParmDecl- y0 - int *
			// ParmDecl- x1 - int *
			// ParmDecl- y1 - int *
			// CompoundStmt-  - 
				// BinaryOperator-  - int [Binary Operator: Assign (=)]
					// UnaryOperator-  - int [Unary Operator: Deref (*)]
						// UnexposedExpr- x0 - int *
							// DeclRefExpr- x0 - int *
					// UnexposedExpr- ttSHORT - int
						// CallExpr- ttSHORT - stbtt_int16
							// UnexposedExpr- ttSHORT - stbtt_int16 (*)(stbtt_uint8 *)
								// DeclRefExpr- ttSHORT - stbtt_int16 (stbtt_uint8 *)
							// BinaryOperator-  - unsigned char * [Binary Operator: Add (+)]
								// BinaryOperator-  - unsigned char * [Binary Operator: Add (+)]
									// UnexposedExpr- data - unsigned char *
										// MemberRefExpr- data - unsigned char *const
											// UnexposedExpr- info - const stbtt_fontinfo *
												// DeclRefExpr- info - const stbtt_fontinfo *
									// UnexposedExpr- head - int
										// MemberRefExpr- head - const int
											// UnexposedExpr- info - const stbtt_fontinfo *
												// DeclRefExpr- info - const stbtt_fontinfo *
								// IntegerLiteral-  - int [Literal: 36]
				// BinaryOperator-  - int [Binary Operator: Assign (=)]
					// UnaryOperator-  - int [Unary Operator: Deref (*)]
						// UnexposedExpr- y0 - int *
							// DeclRefExpr- y0 - int *
					// UnexposedExpr- ttSHORT - int
						// CallExpr- ttSHORT - stbtt_int16
							// UnexposedExpr- ttSHORT - stbtt_int16 (*)(stbtt_uint8 *)
								// DeclRefExpr- ttSHORT - stbtt_int16 (stbtt_uint8 *)
							// BinaryOperator-  - unsigned char * [Binary Operator: Add (+)]
								// BinaryOperator-  - unsigned char * [Binary Operator: Add (+)]
									// UnexposedExpr- data - unsigned char *
										// MemberRefExpr- data - unsigned char *const
											// UnexposedExpr- info - const stbtt_fontinfo *
												// DeclRefExpr- info - const stbtt_fontinfo *
									// UnexposedExpr- head - int
										// MemberRefExpr- head - const int
											// UnexposedExpr- info - const stbtt_fontinfo *
												// DeclRefExpr- info - const stbtt_fontinfo *
								// IntegerLiteral-  - int [Literal: 38]
				// BinaryOperator-  - int [Binary Operator: Assign (=)]
					// UnaryOperator-  - int [Unary Operator: Deref (*)]
						// UnexposedExpr- x1 - int *
							// DeclRefExpr- x1 - int *
					// UnexposedExpr- ttSHORT - int
						// CallExpr- ttSHORT - stbtt_int16
							// UnexposedExpr- ttSHORT - stbtt_int16 (*)(stbtt_uint8 *)
								// DeclRefExpr- ttSHORT - stbtt_int16 (stbtt_uint8 *)
							// BinaryOperator-  - unsigned char * [Binary Operator: Add (+)]
								// BinaryOperator-  - unsigned char * [Binary Operator: Add (+)]
									// UnexposedExpr- data - unsigned char *
										// MemberRefExpr- data - unsigned char *const
											// UnexposedExpr- info - const stbtt_fontinfo *
												// DeclRefExpr- info - const stbtt_fontinfo *
									// UnexposedExpr- head - int
										// MemberRefExpr- head - const int
											// UnexposedExpr- info - const stbtt_fontinfo *
												// DeclRefExpr- info - const stbtt_fontinfo *
								// IntegerLiteral-  - int [Literal: 40]
				// BinaryOperator-  - int [Binary Operator: Assign (=)]
					// UnaryOperator-  - int [Unary Operator: Deref (*)]
						// UnexposedExpr- y1 - int *
							// DeclRefExpr- y1 - int *
					// UnexposedExpr- ttSHORT - int
						// CallExpr- ttSHORT - stbtt_int16
							// UnexposedExpr- ttSHORT - stbtt_int16 (*)(stbtt_uint8 *)
								// DeclRefExpr- ttSHORT - stbtt_int16 (stbtt_uint8 *)
							// BinaryOperator-  - unsigned char * [Binary Operator: Add (+)]
								// BinaryOperator-  - unsigned char * [Binary Operator: Add (+)]
									// UnexposedExpr- data - unsigned char *
										// MemberRefExpr- data - unsigned char *const
											// UnexposedExpr- info - const stbtt_fontinfo *
												// DeclRefExpr- info - const stbtt_fontinfo *
									// UnexposedExpr- head - int
										// MemberRefExpr- head - const int
											// UnexposedExpr- info - const stbtt_fontinfo *
												// DeclRefExpr- info - const stbtt_fontinfo *
								// IntegerLiteral-  - int [Literal: 42]
		// FunctionDecl- stbtt_ScaleForPixelHeight - float (const stbtt_fontinfo *, float)
			// ParmDecl- info - const stbtt_fontinfo *
				// TypeRef- stbtt_fontinfo - stbtt_fontinfo
			// ParmDecl- height - float
			// CompoundStmt-  - 
				// DeclStmt-  - 
					// VarDecl- fheight - int
						// BinaryOperator-  - int [Binary Operator: Sub (-)]
							// UnexposedExpr- ttSHORT - int
								// CallExpr- ttSHORT - stbtt_int16
									// UnexposedExpr- ttSHORT - stbtt_int16 (*)(stbtt_uint8 *)
										// DeclRefExpr- ttSHORT - stbtt_int16 (stbtt_uint8 *)
									// BinaryOperator-  - unsigned char * [Binary Operator: Add (+)]
										// BinaryOperator-  - unsigned char * [Binary Operator: Add (+)]
											// UnexposedExpr- data - unsigned char *
												// MemberRefExpr- data - unsigned char *const
													// UnexposedExpr- info - const stbtt_fontinfo *
														// DeclRefExpr- info - const stbtt_fontinfo *
											// UnexposedExpr- hhea - int
												// MemberRefExpr- hhea - const int
													// UnexposedExpr- info - const stbtt_fontinfo *
														// DeclRefExpr- info - const stbtt_fontinfo *
										// IntegerLiteral-  - int [Literal: 4]
							// UnexposedExpr- ttSHORT - int
								// CallExpr- ttSHORT - stbtt_int16
									// UnexposedExpr- ttSHORT - stbtt_int16 (*)(stbtt_uint8 *)
										// DeclRefExpr- ttSHORT - stbtt_int16 (stbtt_uint8 *)
									// BinaryOperator-  - unsigned char * [Binary Operator: Add (+)]
										// BinaryOperator-  - unsigned char * [Binary Operator: Add (+)]
											// UnexposedExpr- data - unsigned char *
												// MemberRefExpr- data - unsigned char *const
													// UnexposedExpr- info - const stbtt_fontinfo *
														// DeclRefExpr- info - const stbtt_fontinfo *
											// UnexposedExpr- hhea - int
												// MemberRefExpr- hhea - const int
													// UnexposedExpr- info - const stbtt_fontinfo *
														// DeclRefExpr- info - const stbtt_fontinfo *
										// IntegerLiteral-  - int [Literal: 6]
				// ReturnStmt-  - 
					// BinaryOperator-  - float [Binary Operator: Div (/)]
						// CStyleCastExpr-  - float
							// UnexposedExpr- height - float
								// DeclRefExpr- height - float
						// UnexposedExpr- fheight - float
							// UnexposedExpr- fheight - int
								// DeclRefExpr- fheight - int
		// FunctionDecl- stbtt_ScaleForMappingEmToPixels - float (const stbtt_fontinfo *, float)
			// ParmDecl- info - const stbtt_fontinfo *
				// TypeRef- stbtt_fontinfo - stbtt_fontinfo
			// ParmDecl- pixels - float
			// CompoundStmt-  - 
				// DeclStmt-  - 
					// VarDecl- unitsPerEm - int
						// UnexposedExpr- ttUSHORT - int
							// CallExpr- ttUSHORT - stbtt_uint16
								// UnexposedExpr- ttUSHORT - stbtt_uint16 (*)(stbtt_uint8 *)
									// DeclRefExpr- ttUSHORT - stbtt_uint16 (stbtt_uint8 *)
								// BinaryOperator-  - unsigned char * [Binary Operator: Add (+)]
									// BinaryOperator-  - unsigned char * [Binary Operator: Add (+)]
										// UnexposedExpr- data - unsigned char *
											// MemberRefExpr- data - unsigned char *const
												// UnexposedExpr- info - const stbtt_fontinfo *
													// DeclRefExpr- info - const stbtt_fontinfo *
										// UnexposedExpr- head - int
											// MemberRefExpr- head - const int
												// UnexposedExpr- info - const stbtt_fontinfo *
													// DeclRefExpr- info - const stbtt_fontinfo *
									// IntegerLiteral-  - int [Literal: 18]
				// ReturnStmt-  - 
					// BinaryOperator-  - float [Binary Operator: Div (/)]
						// UnexposedExpr- pixels - float
							// DeclRefExpr- pixels - float
						// UnexposedExpr- unitsPerEm - float
							// UnexposedExpr- unitsPerEm - int
								// DeclRefExpr- unitsPerEm - int
		// FunctionDecl- stbtt_FreeShape - void (const stbtt_fontinfo *, stbtt_vertex *)
			// ParmDecl- info - const stbtt_fontinfo *
				// TypeRef- stbtt_fontinfo - stbtt_fontinfo
			// ParmDecl- v - stbtt_vertex *
				// TypeRef- stbtt_vertex - stbtt_vertex
			// CompoundStmt-  - 
				// CallExpr- free - void
					// UnexposedExpr- free - void (*)(void *) __attribute__((cdecl))
						// DeclRefExpr- free - void (void *)
					// UnexposedExpr- v - void *
						// UnexposedExpr- v - stbtt_vertex *
							// DeclRefExpr- v - stbtt_vertex *
		// FunctionDecl- stbtt_GetGlyphBitmapBoxSubpixel - void (const stbtt_fontinfo *, int, float, float, float, float, int *, int *, int *, int *)
			// ParmDecl- font - const stbtt_fontinfo *
				// TypeRef- stbtt_fontinfo - stbtt_fontinfo
			// ParmDecl- glyph - int
			// ParmDecl- scale_x - float
			// ParmDecl- scale_y - float
			// ParmDecl- shift_x - float
			// ParmDecl- shift_y - float
			// ParmDecl- ix0 - int *
			// ParmDecl- iy0 - int *
			// ParmDecl- ix1 - int *
			// ParmDecl- iy1 - int *
			// CompoundStmt-  - 
				// DeclStmt-  - 
					// VarDecl- x0 - int
						// IntegerLiteral-  - int [Literal: 0]
					// VarDecl- y0 - int
						// IntegerLiteral-  - int [Literal: 0]
					// VarDecl- x1 - int
					// VarDecl- y1 - int
				// IfStmt-  - 
					// UnaryOperator-  - int [Unary Operator: LNot (!)]
						// CallExpr- stbtt_GetGlyphBox - int
							// UnexposedExpr- stbtt_GetGlyphBox - int (*)(const stbtt_fontinfo *, int, int *, int *, int *, int *)
								// DeclRefExpr- stbtt_GetGlyphBox - int (const stbtt_fontinfo *, int, int *, int *, int *, int *)
							// UnexposedExpr- font - const stbtt_fontinfo *
								// DeclRefExpr- font - const stbtt_fontinfo *
							// UnexposedExpr- glyph - int
								// DeclRefExpr- glyph - int
							// UnaryOperator-  - int * [Unary Operator: AddrOf (&)]
								// DeclRefExpr- x0 - int
							// UnaryOperator-  - int * [Unary Operator: AddrOf (&)]
								// DeclRefExpr- y0 - int
							// UnaryOperator-  - int * [Unary Operator: AddrOf (&)]
								// DeclRefExpr- x1 - int
							// UnaryOperator-  - int * [Unary Operator: AddrOf (&)]
								// DeclRefExpr- y1 - int
					// CompoundStmt-  - 
						// IfStmt-  - 
							// UnexposedExpr- ix0 - int *
								// DeclRefExpr- ix0 - int *
							// BinaryOperator-  - int [Binary Operator: Assign (=)]
								// UnaryOperator-  - int [Unary Operator: Deref (*)]
									// UnexposedExpr- ix0 - int *
										// DeclRefExpr- ix0 - int *
								// IntegerLiteral-  - int [Literal: 0]
						// IfStmt-  - 
							// UnexposedExpr- iy0 - int *
								// DeclRefExpr- iy0 - int *
							// BinaryOperator-  - int [Binary Operator: Assign (=)]
								// UnaryOperator-  - int [Unary Operator: Deref (*)]
									// UnexposedExpr- iy0 - int *
										// DeclRefExpr- iy0 - int *
								// IntegerLiteral-  - int [Literal: 0]
						// IfStmt-  - 
							// UnexposedExpr- ix1 - int *
								// DeclRefExpr- ix1 - int *
							// BinaryOperator-  - int [Binary Operator: Assign (=)]
								// UnaryOperator-  - int [Unary Operator: Deref (*)]
									// UnexposedExpr- ix1 - int *
										// DeclRefExpr- ix1 - int *
								// IntegerLiteral-  - int [Literal: 0]
						// IfStmt-  - 
							// UnexposedExpr- iy1 - int *
								// DeclRefExpr- iy1 - int *
							// BinaryOperator-  - int [Binary Operator: Assign (=)]
								// UnaryOperator-  - int [Unary Operator: Deref (*)]
									// UnexposedExpr- iy1 - int *
										// DeclRefExpr- iy1 - int *
								// IntegerLiteral-  - int [Literal: 0]
					// CompoundStmt-  - 
						// IfStmt-  - 
							// UnexposedExpr- ix0 - int *
								// DeclRefExpr- ix0 - int *
							// BinaryOperator-  - int [Binary Operator: Assign (=)]
								// UnaryOperator-  - int [Unary Operator: Deref (*)]
									// UnexposedExpr- ix0 - int *
										// DeclRefExpr- ix0 - int *
								// ParenExpr-  - int
									// CStyleCastExpr-  - int
										// CallExpr- floor - double
											// UnexposedExpr- floor - double (*)(double)
												// DeclRefExpr- floor - double (double)
											// UnexposedExpr-  - double
												// BinaryOperator-  - float [Binary Operator: Add (+)]
													// BinaryOperator-  - float [Binary Operator: Mul (*)]
														// UnexposedExpr- x0 - float
															// UnexposedExpr- x0 - int
																// DeclRefExpr- x0 - int
														// UnexposedExpr- scale_x - float
															// DeclRefExpr- scale_x - float
													// UnexposedExpr- shift_x - float
														// DeclRefExpr- shift_x - float
						// IfStmt-  - 
							// UnexposedExpr- iy0 - int *
								// DeclRefExpr- iy0 - int *
							// BinaryOperator-  - int [Binary Operator: Assign (=)]
								// UnaryOperator-  - int [Unary Operator: Deref (*)]
									// UnexposedExpr- iy0 - int *
										// DeclRefExpr- iy0 - int *
								// ParenExpr-  - int
									// CStyleCastExpr-  - int
										// CallExpr- floor - double
											// UnexposedExpr- floor - double (*)(double)
												// DeclRefExpr- floor - double (double)
											// UnexposedExpr-  - double
												// BinaryOperator-  - float [Binary Operator: Add (+)]
													// BinaryOperator-  - float [Binary Operator: Mul (*)]
														// UnexposedExpr-  - float
															// UnaryOperator-  - int [Unary Operator: Minus (-)]
																// UnexposedExpr- y1 - int
																	// DeclRefExpr- y1 - int
														// UnexposedExpr- scale_y - float
															// DeclRefExpr- scale_y - float
													// UnexposedExpr- shift_y - float
														// DeclRefExpr- shift_y - float
						// IfStmt-  - 
							// UnexposedExpr- ix1 - int *
								// DeclRefExpr- ix1 - int *
							// BinaryOperator-  - int [Binary Operator: Assign (=)]
								// UnaryOperator-  - int [Unary Operator: Deref (*)]
									// UnexposedExpr- ix1 - int *
										// DeclRefExpr- ix1 - int *
								// ParenExpr-  - int
									// CStyleCastExpr-  - int
										// CallExpr- ceil - double
											// UnexposedExpr- ceil - double (*)(double)
												// DeclRefExpr- ceil - double (double)
											// UnexposedExpr-  - double
												// BinaryOperator-  - float [Binary Operator: Add (+)]
													// BinaryOperator-  - float [Binary Operator: Mul (*)]
														// UnexposedExpr- x1 - float
															// UnexposedExpr- x1 - int
																// DeclRefExpr- x1 - int
														// UnexposedExpr- scale_x - float
															// DeclRefExpr- scale_x - float
													// UnexposedExpr- shift_x - float
														// DeclRefExpr- shift_x - float
						// IfStmt-  - 
							// UnexposedExpr- iy1 - int *
								// DeclRefExpr- iy1 - int *
							// BinaryOperator-  - int [Binary Operator: Assign (=)]
								// UnaryOperator-  - int [Unary Operator: Deref (*)]
									// UnexposedExpr- iy1 - int *
										// DeclRefExpr- iy1 - int *
								// ParenExpr-  - int
									// CStyleCastExpr-  - int
										// CallExpr- ceil - double
											// UnexposedExpr- ceil - double (*)(double)
												// DeclRefExpr- ceil - double (double)
											// UnexposedExpr-  - double
												// BinaryOperator-  - float [Binary Operator: Add (+)]
													// BinaryOperator-  - float [Binary Operator: Mul (*)]
														// UnexposedExpr-  - float
															// UnaryOperator-  - int [Unary Operator: Minus (-)]
																// UnexposedExpr- y0 - int
																	// DeclRefExpr- y0 - int
														// UnexposedExpr- scale_y - float
															// DeclRefExpr- scale_y - float
													// UnexposedExpr- shift_y - float
														// DeclRefExpr- shift_y - float
		// FunctionDecl- stbtt_GetGlyphBitmapBox - void (const stbtt_fontinfo *, int, float, float, int *, int *, int *, int *)
			// ParmDecl- font - const stbtt_fontinfo *
				// TypeRef- stbtt_fontinfo - stbtt_fontinfo
			// ParmDecl- glyph - int
			// ParmDecl- scale_x - float
			// ParmDecl- scale_y - float
			// ParmDecl- ix0 - int *
			// ParmDecl- iy0 - int *
			// ParmDecl- ix1 - int *
			// ParmDecl- iy1 - int *
			// CompoundStmt-  - 
				// CallExpr- stbtt_GetGlyphBitmapBoxSubpixel - void
					// UnexposedExpr- stbtt_GetGlyphBitmapBoxSubpixel - void (*)(const stbtt_fontinfo *, int, float, float, float, float, int *, int *, int *, int *)
						// DeclRefExpr- stbtt_GetGlyphBitmapBoxSubpixel - void (const stbtt_fontinfo *, int, float, float, float, float, int *, int *, int *, int *)
					// UnexposedExpr- font - const stbtt_fontinfo *
						// DeclRefExpr- font - const stbtt_fontinfo *
					// UnexposedExpr- glyph - int
						// DeclRefExpr- glyph - int
					// UnexposedExpr- scale_x - float
						// DeclRefExpr- scale_x - float
					// UnexposedExpr- scale_y - float
						// DeclRefExpr- scale_y - float
					// FloatingLiteral-  - float [Literal: 0]
					// FloatingLiteral-  - float [Literal: 0]
					// UnexposedExpr- ix0 - int *
						// DeclRefExpr- ix0 - int *
					// UnexposedExpr- iy0 - int *
						// DeclRefExpr- iy0 - int *
					// UnexposedExpr- ix1 - int *
						// DeclRefExpr- ix1 - int *
					// UnexposedExpr- iy1 - int *
						// DeclRefExpr- iy1 - int *
		// FunctionDecl- stbtt_GetCodepointBitmapBoxSubpixel - void (const stbtt_fontinfo *, int, float, float, float, float, int *, int *, int *, int *)
			// ParmDecl- font - const stbtt_fontinfo *
				// TypeRef- stbtt_fontinfo - stbtt_fontinfo
			// ParmDecl- codepoint - int
			// ParmDecl- scale_x - float
			// ParmDecl- scale_y - float
			// ParmDecl- shift_x - float
			// ParmDecl- shift_y - float
			// ParmDecl- ix0 - int *
			// ParmDecl- iy0 - int *
			// ParmDecl- ix1 - int *
			// ParmDecl- iy1 - int *
			// CompoundStmt-  - 
				// CallExpr- stbtt_GetGlyphBitmapBoxSubpixel - void
					// UnexposedExpr- stbtt_GetGlyphBitmapBoxSubpixel - void (*)(const stbtt_fontinfo *, int, float, float, float, float, int *, int *, int *, int *)
						// DeclRefExpr- stbtt_GetGlyphBitmapBoxSubpixel - void (const stbtt_fontinfo *, int, float, float, float, float, int *, int *, int *, int *)
					// UnexposedExpr- font - const stbtt_fontinfo *
						// DeclRefExpr- font - const stbtt_fontinfo *
					// CallExpr- stbtt_FindGlyphIndex - int
						// UnexposedExpr- stbtt_FindGlyphIndex - int (*)(const stbtt_fontinfo *, int)
							// DeclRefExpr- stbtt_FindGlyphIndex - int (const stbtt_fontinfo *, int)
						// UnexposedExpr- font - const stbtt_fontinfo *
							// DeclRefExpr- font - const stbtt_fontinfo *
						// UnexposedExpr- codepoint - int
							// DeclRefExpr- codepoint - int
					// UnexposedExpr- scale_x - float
						// DeclRefExpr- scale_x - float
					// UnexposedExpr- scale_y - float
						// DeclRefExpr- scale_y - float
					// UnexposedExpr- shift_x - float
						// DeclRefExpr- shift_x - float
					// UnexposedExpr- shift_y - float
						// DeclRefExpr- shift_y - float
					// UnexposedExpr- ix0 - int *
						// DeclRefExpr- ix0 - int *
					// UnexposedExpr- iy0 - int *
						// DeclRefExpr- iy0 - int *
					// UnexposedExpr- ix1 - int *
						// DeclRefExpr- ix1 - int *
					// UnexposedExpr- iy1 - int *
						// DeclRefExpr- iy1 - int *
		// FunctionDecl- stbtt_GetCodepointBitmapBox - void (const stbtt_fontinfo *, int, float, float, int *, int *, int *, int *)
			// ParmDecl- font - const stbtt_fontinfo *
				// TypeRef- stbtt_fontinfo - stbtt_fontinfo
			// ParmDecl- codepoint - int
			// ParmDecl- scale_x - float
			// ParmDecl- scale_y - float
			// ParmDecl- ix0 - int *
			// ParmDecl- iy0 - int *
			// ParmDecl- ix1 - int *
			// ParmDecl- iy1 - int *
			// CompoundStmt-  - 
				// CallExpr- stbtt_GetCodepointBitmapBoxSubpixel - void
					// UnexposedExpr- stbtt_GetCodepointBitmapBoxSubpixel - void (*)(const stbtt_fontinfo *, int, float, float, float, float, int *, int *, int *, int *)
						// DeclRefExpr- stbtt_GetCodepointBitmapBoxSubpixel - void (const stbtt_fontinfo *, int, float, float, float, float, int *, int *, int *, int *)
					// UnexposedExpr- font - const stbtt_fontinfo *
						// DeclRefExpr- font - const stbtt_fontinfo *
					// UnexposedExpr- codepoint - int
						// DeclRefExpr- codepoint - int
					// UnexposedExpr- scale_x - float
						// DeclRefExpr- scale_x - float
					// UnexposedExpr- scale_y - float
						// DeclRefExpr- scale_y - float
					// FloatingLiteral-  - float [Literal: 0]
					// FloatingLiteral-  - float [Literal: 0]
					// UnexposedExpr- ix0 - int *
						// DeclRefExpr- ix0 - int *
					// UnexposedExpr- iy0 - int *
						// DeclRefExpr- iy0 - int *
					// UnexposedExpr- ix1 - int *
						// DeclRefExpr- ix1 - int *
					// UnexposedExpr- iy1 - int *
						// DeclRefExpr- iy1 - int *
		// StructDecl- stbtt__hheap_chunk - struct stbtt__hheap_chunk
			// FieldDecl- next - struct stbtt__hheap_chunk *
				// TypeRef- struct stbtt__hheap_chunk - struct stbtt__hheap_chunk
		// TypedefDecl- stbtt__hheap_chunk - stbtt__hheap_chunk
			// StructDecl- stbtt__hheap_chunk - struct stbtt__hheap_chunk
				// FieldDecl- next - struct stbtt__hheap_chunk *
					// TypeRef- struct stbtt__hheap_chunk - struct stbtt__hheap_chunk
		// StructDecl- stbtt__hheap - struct stbtt__hheap
			// FieldDecl- head - struct stbtt__hheap_chunk *
				// TypeRef- struct stbtt__hheap_chunk - struct stbtt__hheap_chunk
			// FieldDecl- first_free - void *
			// FieldDecl- num_remaining_in_head_chunk - int
		// TypedefDecl- stbtt__hheap - stbtt__hheap
			// StructDecl- stbtt__hheap - struct stbtt__hheap
				// FieldDecl- head - struct stbtt__hheap_chunk *
					// TypeRef- struct stbtt__hheap_chunk - struct stbtt__hheap_chunk
				// FieldDecl- first_free - void *
				// FieldDecl- num_remaining_in_head_chunk - int
		// FunctionDecl- stbtt__hheap_alloc - void *(stbtt__hheap *, size_t, void *)
			// ParmDecl- hh - stbtt__hheap *
				// TypeRef- stbtt__hheap - stbtt__hheap
			// ParmDecl- size - size_t
				// TypeRef- size_t - size_t
			// ParmDecl- userdata - void *
			// CompoundStmt-  - 
				// IfStmt-  - 
					// UnexposedExpr- first_free - void *
						// MemberRefExpr- first_free - void *
							// UnexposedExpr- hh - stbtt__hheap *
								// DeclRefExpr- hh - stbtt__hheap *
					// CompoundStmt-  - 
						// DeclStmt-  - 
							// VarDecl- p - void *
								// UnexposedExpr- first_free - void *
									// MemberRefExpr- first_free - void *
										// UnexposedExpr- hh - stbtt__hheap *
											// DeclRefExpr- hh - stbtt__hheap *
						// BinaryOperator-  - void * [Binary Operator: Assign (=)]
							// MemberRefExpr- first_free - void *
								// UnexposedExpr- hh - stbtt__hheap *
									// DeclRefExpr- hh - stbtt__hheap *
							// UnexposedExpr-  - void *
								// UnaryOperator-  - void * [Unary Operator: Deref (*)]
									// CStyleCastExpr-  - void **
										// UnexposedExpr- p - void *
											// DeclRefExpr- p - void *
						// ReturnStmt-  - 
							// UnexposedExpr- p - void *
								// DeclRefExpr- p - void *
					// CompoundStmt-  - 
						// IfStmt-  - 
							// BinaryOperator-  - int [Binary Operator: EQ (==)]
								// UnexposedExpr- num_remaining_in_head_chunk - int
									// MemberRefExpr- num_remaining_in_head_chunk - int
										// UnexposedExpr- hh - stbtt__hheap *
											// DeclRefExpr- hh - stbtt__hheap *
								// IntegerLiteral-  - int [Literal: 0]
							// CompoundStmt-  - 
								// DeclStmt-  - 
									// VarDecl- count - int
										// ParenExpr-  - int
											// ConditionalOperator-  - int
												// BinaryOperator-  - int [Binary Operator: LT (<)]
													// UnexposedExpr- size - size_t
														// DeclRefExpr- size - size_t
													// UnexposedExpr-  - unsigned long long
														// IntegerLiteral-  - int [Literal: 32]
												// IntegerLiteral-  - int [Literal: 2000]
												// ConditionalOperator-  - int
													// BinaryOperator-  - int [Binary Operator: LT (<)]
														// UnexposedExpr- size - size_t
															// DeclRefExpr- size - size_t
														// UnexposedExpr-  - unsigned long long
															// IntegerLiteral-  - int [Literal: 128]
													// IntegerLiteral-  - int [Literal: 800]
													// IntegerLiteral-  - int [Literal: 100]
								// DeclStmt-  - 
									// VarDecl- c - stbtt__hheap_chunk *
										// TypeRef- stbtt__hheap_chunk - stbtt__hheap_chunk
										// CStyleCastExpr-  - stbtt__hheap_chunk *
											// TypeRef- stbtt__hheap_chunk - stbtt__hheap_chunk
											// CallExpr- malloc - void *
												// UnexposedExpr- malloc - void *(*)(unsigned long long)
													// DeclRefExpr- malloc - void *(unsigned long long)
												// BinaryOperator-  - unsigned long long [Binary Operator: Add (+)]
													// UnaryExpr-  - unsigned long long [Unary Operator: 99999 ()]
														// TypeRef- stbtt__hheap_chunk - stbtt__hheap_chunk
													// BinaryOperator-  - unsigned long long [Binary Operator: Mul (*)]
														// UnexposedExpr- size - size_t
															// DeclRefExpr- size - size_t
														// UnexposedExpr- count - unsigned long long
															// UnexposedExpr- count - int
																// DeclRefExpr- count - int
								// IfStmt-  - 
									// BinaryOperator-  - int [Binary Operator: EQ (==)]
										// UnexposedExpr- c - stbtt__hheap_chunk *
											// DeclRefExpr- c - stbtt__hheap_chunk *
										// UnexposedExpr-  - stbtt__hheap_chunk *
											// ParenExpr-  - void *
												// CStyleCastExpr-  - void *
													// IntegerLiteral-  - int [Literal: 0]
									// ReturnStmt-  - 
										// ParenExpr-  - void *
											// CStyleCastExpr-  - void *
												// IntegerLiteral-  - int [Literal: 0]
								// BinaryOperator-  - struct stbtt__hheap_chunk * [Binary Operator: Assign (=)]
									// MemberRefExpr- next - struct stbtt__hheap_chunk *
										// UnexposedExpr- c - stbtt__hheap_chunk *
											// DeclRefExpr- c - stbtt__hheap_chunk *
									// UnexposedExpr- head - struct stbtt__hheap_chunk *
										// MemberRefExpr- head - struct stbtt__hheap_chunk *
											// UnexposedExpr- hh - stbtt__hheap *
												// DeclRefExpr- hh - stbtt__hheap *
								// BinaryOperator-  - struct stbtt__hheap_chunk * [Binary Operator: Assign (=)]
									// MemberRefExpr- head - struct stbtt__hheap_chunk *
										// UnexposedExpr- hh - stbtt__hheap *
											// DeclRefExpr- hh - stbtt__hheap *
									// UnexposedExpr- c - stbtt__hheap_chunk *
										// DeclRefExpr- c - stbtt__hheap_chunk *
								// BinaryOperator-  - int [Binary Operator: Assign (=)]
									// MemberRefExpr- num_remaining_in_head_chunk - int
										// UnexposedExpr- hh - stbtt__hheap *
											// DeclRefExpr- hh - stbtt__hheap *
									// UnexposedExpr- count - int
										// DeclRefExpr- count - int
						// UnaryOperator-  - int [Unary Operator: PreDec (--)]
							// MemberRefExpr- num_remaining_in_head_chunk - int
								// UnexposedExpr- hh - stbtt__hheap *
									// DeclRefExpr- hh - stbtt__hheap *
						// ReturnStmt-  - 
							// UnexposedExpr-  - void *
								// BinaryOperator-  - char * [Binary Operator: Add (+)]
									// BinaryOperator-  - char * [Binary Operator: Add (+)]
										// CStyleCastExpr-  - char *
											// UnexposedExpr-  - struct stbtt__hheap_chunk *
												// ParenExpr-  - struct stbtt__hheap_chunk *
													// MemberRefExpr- head - struct stbtt__hheap_chunk *
														// UnexposedExpr- hh - stbtt__hheap *
															// DeclRefExpr- hh - stbtt__hheap *
										// UnaryExpr-  - unsigned long long [Unary Operator: 99999 ()]
											// TypeRef- stbtt__hheap_chunk - stbtt__hheap_chunk
									// BinaryOperator-  - unsigned long long [Binary Operator: Mul (*)]
										// UnexposedExpr- size - size_t
											// DeclRefExpr- size - size_t
										// UnexposedExpr- num_remaining_in_head_chunk - unsigned long long
											// UnexposedExpr- num_remaining_in_head_chunk - int
												// MemberRefExpr- num_remaining_in_head_chunk - int
													// UnexposedExpr- hh - stbtt__hheap *
														// DeclRefExpr- hh - stbtt__hheap *
		// FunctionDecl- stbtt__hheap_free - void (stbtt__hheap *, void *)
			// ParmDecl- hh - stbtt__hheap *
				// TypeRef- stbtt__hheap - stbtt__hheap
			// ParmDecl- p - void *
			// CompoundStmt-  - 
				// BinaryOperator-  - void * [Binary Operator: Assign (=)]
					// UnaryOperator-  - void * [Unary Operator: Deref (*)]
						// CStyleCastExpr-  - void **
							// UnexposedExpr- p - void *
								// DeclRefExpr- p - void *
					// UnexposedExpr- first_free - void *
						// MemberRefExpr- first_free - void *
							// UnexposedExpr- hh - stbtt__hheap *
								// DeclRefExpr- hh - stbtt__hheap *
				// BinaryOperator-  - void * [Binary Operator: Assign (=)]
					// MemberRefExpr- first_free - void *
						// UnexposedExpr- hh - stbtt__hheap *
							// DeclRefExpr- hh - stbtt__hheap *
					// UnexposedExpr- p - void *
						// DeclRefExpr- p - void *
		// FunctionDecl- stbtt__hheap_cleanup - void (stbtt__hheap *, void *)
			// ParmDecl- hh - stbtt__hheap *
				// TypeRef- stbtt__hheap - stbtt__hheap
			// ParmDecl- userdata - void *
			// CompoundStmt-  - 
				// DeclStmt-  - 
					// VarDecl- c - stbtt__hheap_chunk *
						// TypeRef- stbtt__hheap_chunk - stbtt__hheap_chunk
						// UnexposedExpr- head - struct stbtt__hheap_chunk *
							// MemberRefExpr- head - struct stbtt__hheap_chunk *
								// UnexposedExpr- hh - stbtt__hheap *
									// DeclRefExpr- hh - stbtt__hheap *
				// WhileStmt-  - 
					// UnexposedExpr- c - stbtt__hheap_chunk *
						// DeclRefExpr- c - stbtt__hheap_chunk *
					// CompoundStmt-  - 
						// DeclStmt-  - 
							// VarDecl- n - stbtt__hheap_chunk *
								// TypeRef- stbtt__hheap_chunk - stbtt__hheap_chunk
								// UnexposedExpr- next - struct stbtt__hheap_chunk *
									// MemberRefExpr- next - struct stbtt__hheap_chunk *
										// UnexposedExpr- c - stbtt__hheap_chunk *
											// DeclRefExpr- c - stbtt__hheap_chunk *
						// CallExpr- free - void
							// UnexposedExpr- free - void (*)(void *) __attribute__((cdecl))
								// DeclRefExpr- free - void (void *)
							// UnexposedExpr- c - void *
								// UnexposedExpr- c - stbtt__hheap_chunk *
									// DeclRefExpr- c - stbtt__hheap_chunk *
						// BinaryOperator-  - stbtt__hheap_chunk * [Binary Operator: Assign (=)]
							// DeclRefExpr- c - stbtt__hheap_chunk *
							// UnexposedExpr- n - stbtt__hheap_chunk *
								// DeclRefExpr- n - stbtt__hheap_chunk *
		// StructDecl- stbtt__edge - struct stbtt__edge
			// FieldDecl- x0 - float
			// FieldDecl- y0 - float
			// FieldDecl- x1 - float
			// FieldDecl- y1 - float
			// FieldDecl- invert - int
		// TypedefDecl- stbtt__edge - stbtt__edge
			// StructDecl- stbtt__edge - struct stbtt__edge
				// FieldDecl- x0 - float
				// FieldDecl- y0 - float
				// FieldDecl- x1 - float
				// FieldDecl- y1 - float
				// FieldDecl- invert - int
		// StructDecl- stbtt__active_edge - struct stbtt__active_edge
			// FieldDecl- next - struct stbtt__active_edge *
				// TypeRef- struct stbtt__active_edge - struct stbtt__active_edge
			// FieldDecl- fx - float
			// FieldDecl- fdx - float
			// FieldDecl- fdy - float
			// FieldDecl- direction - float
			// FieldDecl- sy - float
			// FieldDecl- ey - float
		// TypedefDecl- stbtt__active_edge - stbtt__active_edge
			// StructDecl- stbtt__active_edge - struct stbtt__active_edge
				// FieldDecl- next - struct stbtt__active_edge *
					// TypeRef- struct stbtt__active_edge - struct stbtt__active_edge
				// FieldDecl- fx - float
				// FieldDecl- fdx - float
				// FieldDecl- fdy - float
				// FieldDecl- direction - float
				// FieldDecl- sy - float
				// FieldDecl- ey - float
		// FunctionDecl- stbtt__new_active - stbtt__active_edge *(stbtt__hheap *, stbtt__edge *, int, float, void *)
			// TypeRef- stbtt__active_edge - stbtt__active_edge
			// ParmDecl- hh - stbtt__hheap *
				// TypeRef- stbtt__hheap - stbtt__hheap
			// ParmDecl- e - stbtt__edge *
				// TypeRef- stbtt__edge - stbtt__edge
			// ParmDecl- off_x - int
			// ParmDecl- start_point - float
			// ParmDecl- userdata - void *
			// CompoundStmt-  - 
				// DeclStmt-  - 
					// VarDecl- z - stbtt__active_edge *
						// TypeRef- stbtt__active_edge - stbtt__active_edge
						// CStyleCastExpr-  - stbtt__active_edge *
							// TypeRef- stbtt__active_edge - stbtt__active_edge
							// CallExpr- stbtt__hheap_alloc - void *
								// UnexposedExpr- stbtt__hheap_alloc - void *(*)(stbtt__hheap *, size_t, void *)
									// DeclRefExpr- stbtt__hheap_alloc - void *(stbtt__hheap *, size_t, void *)
								// UnexposedExpr- hh - stbtt__hheap *
									// DeclRefExpr- hh - stbtt__hheap *
								// UnaryExpr-  - unsigned long long [Unary Operator: 99999 ()]
									// ParenExpr-  - stbtt__active_edge
										// UnaryOperator-  - stbtt__active_edge [Unary Operator: Deref (*)]
											// UnexposedExpr- z - stbtt__active_edge *
												// DeclRefExpr- z - stbtt__active_edge *
								// UnexposedExpr- userdata - void *
									// DeclRefExpr- userdata - void *
				// DeclStmt-  - 
					// VarDecl- dxdy - float
						// BinaryOperator-  - float [Binary Operator: Div (/)]
							// ParenExpr-  - float
								// BinaryOperator-  - float [Binary Operator: Sub (-)]
									// UnexposedExpr- x1 - float
										// MemberRefExpr- x1 - float
											// UnexposedExpr- e - stbtt__edge *
												// DeclRefExpr- e - stbtt__edge *
									// UnexposedExpr- x0 - float
										// MemberRefExpr- x0 - float
											// UnexposedExpr- e - stbtt__edge *
												// DeclRefExpr- e - stbtt__edge *
							// ParenExpr-  - float
								// BinaryOperator-  - float [Binary Operator: Sub (-)]
									// UnexposedExpr- y1 - float
										// MemberRefExpr- y1 - float
											// UnexposedExpr- e - stbtt__edge *
												// DeclRefExpr- e - stbtt__edge *
									// UnexposedExpr- y0 - float
										// MemberRefExpr- y0 - float
											// UnexposedExpr- e - stbtt__edge *
												// DeclRefExpr- e - stbtt__edge *
				// NullStmt-  - 
				// IfStmt-  - 
					// UnaryOperator-  - int [Unary Operator: LNot (!)]
						// UnexposedExpr- z - stbtt__active_edge *
							// DeclRefExpr- z - stbtt__active_edge *
					// ReturnStmt-  - 
						// UnexposedExpr- z - stbtt__active_edge *
							// DeclRefExpr- z - stbtt__active_edge *
				// BinaryOperator-  - float [Binary Operator: Assign (=)]
					// MemberRefExpr- fdx - float
						// UnexposedExpr- z - stbtt__active_edge *
							// DeclRefExpr- z - stbtt__active_edge *
					// UnexposedExpr- dxdy - float
						// DeclRefExpr- dxdy - float
				// BinaryOperator-  - float [Binary Operator: Assign (=)]
					// MemberRefExpr- fdy - float
						// UnexposedExpr- z - stbtt__active_edge *
							// DeclRefExpr- z - stbtt__active_edge *
					// ConditionalOperator-  - float
						// BinaryOperator-  - int [Binary Operator: NE (!=)]
							// UnexposedExpr- dxdy - float
								// DeclRefExpr- dxdy - float
							// FloatingLiteral-  - float [Literal: 0]
						// ParenExpr-  - float
							// BinaryOperator-  - float [Binary Operator: Div (/)]
								// FloatingLiteral-  - float [Literal: 1]
								// UnexposedExpr- dxdy - float
									// DeclRefExpr- dxdy - float
						// FloatingLiteral-  - float [Literal: 0]
				// BinaryOperator-  - float [Binary Operator: Assign (=)]
					// MemberRefExpr- fx - float
						// UnexposedExpr- z - stbtt__active_edge *
							// DeclRefExpr- z - stbtt__active_edge *
					// BinaryOperator-  - float [Binary Operator: Add (+)]
						// UnexposedExpr- x0 - float
							// MemberRefExpr- x0 - float
								// UnexposedExpr- e - stbtt__edge *
									// DeclRefExpr- e - stbtt__edge *
						// BinaryOperator-  - float [Binary Operator: Mul (*)]
							// UnexposedExpr- dxdy - float
								// DeclRefExpr- dxdy - float
							// ParenExpr-  - float
								// BinaryOperator-  - float [Binary Operator: Sub (-)]
									// UnexposedExpr- start_point - float
										// DeclRefExpr- start_point - float
									// UnexposedExpr- y0 - float
										// MemberRefExpr- y0 - float
											// UnexposedExpr- e - stbtt__edge *
												// DeclRefExpr- e - stbtt__edge *
				// CompoundAssignOperator-  - float
					// MemberRefExpr- fx - float
						// UnexposedExpr- z - stbtt__active_edge *
							// DeclRefExpr- z - stbtt__active_edge *
					// UnexposedExpr- off_x - float
						// UnexposedExpr- off_x - int
							// DeclRefExpr- off_x - int
				// BinaryOperator-  - float [Binary Operator: Assign (=)]
					// MemberRefExpr- direction - float
						// UnexposedExpr- z - stbtt__active_edge *
							// DeclRefExpr- z - stbtt__active_edge *
					// ConditionalOperator-  - float
						// UnexposedExpr- invert - int
							// MemberRefExpr- invert - int
								// UnexposedExpr- e - stbtt__edge *
									// DeclRefExpr- e - stbtt__edge *
						// FloatingLiteral-  - float [Literal: 1]
						// UnaryOperator-  - float [Unary Operator: Minus (-)]
							// FloatingLiteral-  - float [Literal: 1]
				// BinaryOperator-  - float [Binary Operator: Assign (=)]
					// MemberRefExpr- sy - float
						// UnexposedExpr- z - stbtt__active_edge *
							// DeclRefExpr- z - stbtt__active_edge *
					// UnexposedExpr- y0 - float
						// MemberRefExpr- y0 - float
							// UnexposedExpr- e - stbtt__edge *
								// DeclRefExpr- e - stbtt__edge *
				// BinaryOperator-  - float [Binary Operator: Assign (=)]
					// MemberRefExpr- ey - float
						// UnexposedExpr- z - stbtt__active_edge *
							// DeclRefExpr- z - stbtt__active_edge *
					// UnexposedExpr- y1 - float
						// MemberRefExpr- y1 - float
							// UnexposedExpr- e - stbtt__edge *
								// DeclRefExpr- e - stbtt__edge *
				// BinaryOperator-  - struct stbtt__active_edge * [Binary Operator: Assign (=)]
					// MemberRefExpr- next - struct stbtt__active_edge *
						// UnexposedExpr- z - stbtt__active_edge *
							// DeclRefExpr- z - stbtt__active_edge *
					// UnexposedExpr-  - struct stbtt__active_edge *
						// IntegerLiteral-  - int [Literal: 0]
				// ReturnStmt-  - 
					// UnexposedExpr- z - stbtt__active_edge *
						// DeclRefExpr- z - stbtt__active_edge *
		// FunctionDecl- stbtt__handle_clipped_edge - void (float *, int, stbtt__active_edge *, float, float, float, float)
			// ParmDecl- scanline - float *
			// ParmDecl- x - int
			// ParmDecl- e - stbtt__active_edge *
				// TypeRef- stbtt__active_edge - stbtt__active_edge
			// ParmDecl- x0 - float
			// ParmDecl- y0 - float
			// ParmDecl- x1 - float
			// ParmDecl- y1 - float
			// CompoundStmt-  - 
				// IfStmt-  - 
					// BinaryOperator-  - int [Binary Operator: EQ (==)]
						// UnexposedExpr- y0 - float
							// DeclRefExpr- y0 - float
						// UnexposedExpr- y1 - float
							// DeclRefExpr- y1 - float
					// ReturnStmt-  - 
				// NullStmt-  - 
				// NullStmt-  - 
				// IfStmt-  - 
					// BinaryOperator-  - int [Binary Operator: GT (>)]
						// UnexposedExpr- y0 - float
							// DeclRefExpr- y0 - float
						// UnexposedExpr- ey - float
							// MemberRefExpr- ey - float
								// UnexposedExpr- e - stbtt__active_edge *
									// DeclRefExpr- e - stbtt__active_edge *
					// ReturnStmt-  - 
				// IfStmt-  - 
					// BinaryOperator-  - int [Binary Operator: LT (<)]
						// UnexposedExpr- y1 - float
							// DeclRefExpr- y1 - float
						// UnexposedExpr- sy - float
							// MemberRefExpr- sy - float
								// UnexposedExpr- e - stbtt__active_edge *
									// DeclRefExpr- e - stbtt__active_edge *
					// ReturnStmt-  - 
				// IfStmt-  - 
					// BinaryOperator-  - int [Binary Operator: LT (<)]
						// UnexposedExpr- y0 - float
							// DeclRefExpr- y0 - float
						// UnexposedExpr- sy - float
							// MemberRefExpr- sy - float
								// UnexposedExpr- e - stbtt__active_edge *
									// DeclRefExpr- e - stbtt__active_edge *
					// CompoundStmt-  - 
						// CompoundAssignOperator-  - float
							// DeclRefExpr- x0 - float
							// BinaryOperator-  - float [Binary Operator: Div (/)]
								// BinaryOperator-  - float [Binary Operator: Mul (*)]
									// ParenExpr-  - float
										// BinaryOperator-  - float [Binary Operator: Sub (-)]
											// UnexposedExpr- x1 - float
												// DeclRefExpr- x1 - float
											// UnexposedExpr- x0 - float
												// DeclRefExpr- x0 - float
									// ParenExpr-  - float
										// BinaryOperator-  - float [Binary Operator: Sub (-)]
											// UnexposedExpr- sy - float
												// MemberRefExpr- sy - float
													// UnexposedExpr- e - stbtt__active_edge *
														// DeclRefExpr- e - stbtt__active_edge *
											// UnexposedExpr- y0 - float
												// DeclRefExpr- y0 - float
								// ParenExpr-  - float
									// BinaryOperator-  - float [Binary Operator: Sub (-)]
										// UnexposedExpr- y1 - float
											// DeclRefExpr- y1 - float
										// UnexposedExpr- y0 - float
											// DeclRefExpr- y0 - float
						// BinaryOperator-  - float [Binary Operator: Assign (=)]
							// DeclRefExpr- y0 - float
							// UnexposedExpr- sy - float
								// MemberRefExpr- sy - float
									// UnexposedExpr- e - stbtt__active_edge *
										// DeclRefExpr- e - stbtt__active_edge *
				// IfStmt-  - 
					// BinaryOperator-  - int [Binary Operator: GT (>)]
						// UnexposedExpr- y1 - float
							// DeclRefExpr- y1 - float
						// UnexposedExpr- ey - float
							// MemberRefExpr- ey - float
								// UnexposedExpr- e - stbtt__active_edge *
									// DeclRefExpr- e - stbtt__active_edge *
					// CompoundStmt-  - 
						// CompoundAssignOperator-  - float
							// DeclRefExpr- x1 - float
							// BinaryOperator-  - float [Binary Operator: Div (/)]
								// BinaryOperator-  - float [Binary Operator: Mul (*)]
									// ParenExpr-  - float
										// BinaryOperator-  - float [Binary Operator: Sub (-)]
											// UnexposedExpr- x1 - float
												// DeclRefExpr- x1 - float
											// UnexposedExpr- x0 - float
												// DeclRefExpr- x0 - float
									// ParenExpr-  - float
										// BinaryOperator-  - float [Binary Operator: Sub (-)]
											// UnexposedExpr- ey - float
												// MemberRefExpr- ey - float
													// UnexposedExpr- e - stbtt__active_edge *
														// DeclRefExpr- e - stbtt__active_edge *
											// UnexposedExpr- y1 - float
												// DeclRefExpr- y1 - float
								// ParenExpr-  - float
									// BinaryOperator-  - float [Binary Operator: Sub (-)]
										// UnexposedExpr- y1 - float
											// DeclRefExpr- y1 - float
										// UnexposedExpr- y0 - float
											// DeclRefExpr- y0 - float
						// BinaryOperator-  - float [Binary Operator: Assign (=)]
							// DeclRefExpr- y1 - float
							// UnexposedExpr- ey - float
								// MemberRefExpr- ey - float
									// UnexposedExpr- e - stbtt__active_edge *
										// DeclRefExpr- e - stbtt__active_edge *
				// IfStmt-  - 
					// BinaryOperator-  - int [Binary Operator: EQ (==)]
						// UnexposedExpr- x0 - float
							// DeclRefExpr- x0 - float
						// UnexposedExpr- x - float
							// UnexposedExpr- x - int
								// DeclRefExpr- x - int
					// CompoundStmt-  - 
						// NullStmt-  - 
					// IfStmt-  - 
						// BinaryOperator-  - int [Binary Operator: EQ (==)]
							// UnexposedExpr- x0 - float
								// DeclRefExpr- x0 - float
							// UnexposedExpr-  - float
								// BinaryOperator-  - int [Binary Operator: Add (+)]
									// UnexposedExpr- x - int
										// DeclRefExpr- x - int
									// IntegerLiteral-  - int [Literal: 1]
						// CompoundStmt-  - 
							// NullStmt-  - 
						// IfStmt-  - 
							// BinaryOperator-  - int [Binary Operator: LE (<=)]
								// UnexposedExpr- x0 - float
									// DeclRefExpr- x0 - float
								// UnexposedExpr- x - float
									// UnexposedExpr- x - int
										// DeclRefExpr- x - int
							// CompoundStmt-  - 
								// NullStmt-  - 
							// IfStmt-  - 
								// BinaryOperator-  - int [Binary Operator: GE (>=)]
									// UnexposedExpr- x0 - float
										// DeclRefExpr- x0 - float
									// UnexposedExpr-  - float
										// BinaryOperator-  - int [Binary Operator: Add (+)]
											// UnexposedExpr- x - int
												// DeclRefExpr- x - int
											// IntegerLiteral-  - int [Literal: 1]
								// CompoundStmt-  - 
									// NullStmt-  - 
								// CompoundStmt-  - 
									// NullStmt-  - 
				// IfStmt-  - 
					// BinaryOperator-  - int [Binary Operator: LAnd (&&)]
						// BinaryOperator-  - int [Binary Operator: LE (<=)]
							// UnexposedExpr- x0 - float
								// DeclRefExpr- x0 - float
							// UnexposedExpr- x - float
								// UnexposedExpr- x - int
									// DeclRefExpr- x - int
						// BinaryOperator-  - int [Binary Operator: LE (<=)]
							// UnexposedExpr- x1 - float
								// DeclRefExpr- x1 - float
							// UnexposedExpr- x - float
								// UnexposedExpr- x - int
									// DeclRefExpr- x - int
					// CompoundStmt-  - 
						// CompoundAssignOperator-  - float
							// ArraySubscriptExpr-  - float
								// UnexposedExpr- scanline - float *
									// DeclRefExpr- scanline - float *
								// UnexposedExpr- x - int
									// DeclRefExpr- x - int
							// BinaryOperator-  - float [Binary Operator: Mul (*)]
								// UnexposedExpr- direction - float
									// MemberRefExpr- direction - float
										// UnexposedExpr- e - stbtt__active_edge *
											// DeclRefExpr- e - stbtt__active_edge *
								// ParenExpr-  - float
									// BinaryOperator-  - float [Binary Operator: Sub (-)]
										// UnexposedExpr- y1 - float
											// DeclRefExpr- y1 - float
										// UnexposedExpr- y0 - float
											// DeclRefExpr- y0 - float
					// IfStmt-  - 
						// BinaryOperator-  - int [Binary Operator: LAnd (&&)]
							// BinaryOperator-  - int [Binary Operator: GE (>=)]
								// UnexposedExpr- x0 - float
									// DeclRefExpr- x0 - float
								// UnexposedExpr-  - float
									// BinaryOperator-  - int [Binary Operator: Add (+)]
										// UnexposedExpr- x - int
											// DeclRefExpr- x - int
										// IntegerLiteral-  - int [Literal: 1]
							// BinaryOperator-  - int [Binary Operator: GE (>=)]
								// UnexposedExpr- x1 - float
									// DeclRefExpr- x1 - float
								// UnexposedExpr-  - float
									// BinaryOperator-  - int [Binary Operator: Add (+)]
										// UnexposedExpr- x - int
											// DeclRefExpr- x - int
										// IntegerLiteral-  - int [Literal: 1]
						// CompoundStmt-  - 
						// CompoundStmt-  - 
							// NullStmt-  - 
							// CompoundAssignOperator-  - float
								// ArraySubscriptExpr-  - float
									// UnexposedExpr- scanline - float *
										// DeclRefExpr- scanline - float *
									// UnexposedExpr- x - int
										// DeclRefExpr- x - int
								// BinaryOperator-  - float [Binary Operator: Mul (*)]
									// BinaryOperator-  - float [Binary Operator: Mul (*)]
										// UnexposedExpr- direction - float
											// MemberRefExpr- direction - float
												// UnexposedExpr- e - stbtt__active_edge *
													// DeclRefExpr- e - stbtt__active_edge *
										// ParenExpr-  - float
											// BinaryOperator-  - float [Binary Operator: Sub (-)]
												// UnexposedExpr- y1 - float
													// DeclRefExpr- y1 - float
												// UnexposedExpr- y0 - float
													// DeclRefExpr- y0 - float
									// ParenExpr-  - float
										// BinaryOperator-  - float [Binary Operator: Sub (-)]
											// UnexposedExpr-  - float
												// IntegerLiteral-  - int [Literal: 1]
											// BinaryOperator-  - float [Binary Operator: Div (/)]
												// ParenExpr-  - float
													// BinaryOperator-  - float [Binary Operator: Add (+)]
														// ParenExpr-  - float
															// BinaryOperator-  - float [Binary Operator: Sub (-)]
																// UnexposedExpr- x0 - float
																	// DeclRefExpr- x0 - float
																// UnexposedExpr- x - float
																	// UnexposedExpr- x - int
																		// DeclRefExpr- x - int
														// ParenExpr-  - float
															// BinaryOperator-  - float [Binary Operator: Sub (-)]
																// UnexposedExpr- x1 - float
																	// DeclRefExpr- x1 - float
																// UnexposedExpr- x - float
																	// UnexposedExpr- x - int
																		// DeclRefExpr- x - int
												// UnexposedExpr-  - float
													// IntegerLiteral-  - int [Literal: 2]
		// FunctionDecl- stbtt__fill_active_edges_new - void (float *, float *, int, stbtt__active_edge *, float)
			// ParmDecl- scanline - float *
			// ParmDecl- scanline_fill - float *
			// ParmDecl- len - int
			// ParmDecl- e - stbtt__active_edge *
				// TypeRef- stbtt__active_edge - stbtt__active_edge
			// ParmDecl- y_top - float
			// CompoundStmt-  - 
				// DeclStmt-  - 
					// VarDecl- y_bottom - float
						// BinaryOperator-  - float [Binary Operator: Add (+)]
							// UnexposedExpr- y_top - float
								// DeclRefExpr- y_top - float
							// UnexposedExpr-  - float
								// IntegerLiteral-  - int [Literal: 1]
				// WhileStmt-  - 
					// UnexposedExpr- e - stbtt__active_edge *
						// DeclRefExpr- e - stbtt__active_edge *
					// CompoundStmt-  - 
						// NullStmt-  - 
						// IfStmt-  - 
							// BinaryOperator-  - int [Binary Operator: EQ (==)]
								// UnexposedExpr- fdx - float
									// MemberRefExpr- fdx - float
										// UnexposedExpr- e - stbtt__active_edge *
											// DeclRefExpr- e - stbtt__active_edge *
								// UnexposedExpr-  - float
									// IntegerLiteral-  - int [Literal: 0]
							// CompoundStmt-  - 
								// DeclStmt-  - 
									// VarDecl- x0 - float
										// UnexposedExpr- fx - float
											// MemberRefExpr- fx - float
												// UnexposedExpr- e - stbtt__active_edge *
													// DeclRefExpr- e - stbtt__active_edge *
								// IfStmt-  - 
									// BinaryOperator-  - int [Binary Operator: LT (<)]
										// UnexposedExpr- x0 - float
											// DeclRefExpr- x0 - float
										// UnexposedExpr- len - float
											// UnexposedExpr- len - int
												// DeclRefExpr- len - int
									// CompoundStmt-  - 
										// IfStmt-  - 
											// BinaryOperator-  - int [Binary Operator: GE (>=)]
												// UnexposedExpr- x0 - float
													// DeclRefExpr- x0 - float
												// UnexposedExpr-  - float
													// IntegerLiteral-  - int [Literal: 0]
											// CompoundStmt-  - 
												// CallExpr- stbtt__handle_clipped_edge - void
													// UnexposedExpr- stbtt__handle_clipped_edge - void (*)(float *, int, stbtt__active_edge *, float, float, float, float)
														// DeclRefExpr- stbtt__handle_clipped_edge - void (float *, int, stbtt__active_edge *, float, float, float, float)
													// UnexposedExpr- scanline - float *
														// DeclRefExpr- scanline - float *
													// CStyleCastExpr-  - int
														// UnexposedExpr- x0 - float
															// DeclRefExpr- x0 - float
													// UnexposedExpr- e - stbtt__active_edge *
														// DeclRefExpr- e - stbtt__active_edge *
													// UnexposedExpr- x0 - float
														// DeclRefExpr- x0 - float
													// UnexposedExpr- y_top - float
														// DeclRefExpr- y_top - float
													// UnexposedExpr- x0 - float
														// DeclRefExpr- x0 - float
													// UnexposedExpr- y_bottom - float
														// DeclRefExpr- y_bottom - float
												// CallExpr- stbtt__handle_clipped_edge - void
													// UnexposedExpr- stbtt__handle_clipped_edge - void (*)(float *, int, stbtt__active_edge *, float, float, float, float)
														// DeclRefExpr- stbtt__handle_clipped_edge - void (float *, int, stbtt__active_edge *, float, float, float, float)
													// BinaryOperator-  - float * [Binary Operator: Sub (-)]
														// UnexposedExpr- scanline_fill - float *
															// DeclRefExpr- scanline_fill - float *
														// IntegerLiteral-  - int [Literal: 1]
													// BinaryOperator-  - int [Binary Operator: Add (+)]
														// CStyleCastExpr-  - int
															// UnexposedExpr- x0 - float
																// DeclRefExpr- x0 - float
														// IntegerLiteral-  - int [Literal: 1]
													// UnexposedExpr- e - stbtt__active_edge *
														// DeclRefExpr- e - stbtt__active_edge *
													// UnexposedExpr- x0 - float
														// DeclRefExpr- x0 - float
													// UnexposedExpr- y_top - float
														// DeclRefExpr- y_top - float
													// UnexposedExpr- x0 - float
														// DeclRefExpr- x0 - float
													// UnexposedExpr- y_bottom - float
														// DeclRefExpr- y_bottom - float
											// CompoundStmt-  - 
												// CallExpr- stbtt__handle_clipped_edge - void
													// UnexposedExpr- stbtt__handle_clipped_edge - void (*)(float *, int, stbtt__active_edge *, float, float, float, float)
														// DeclRefExpr- stbtt__handle_clipped_edge - void (float *, int, stbtt__active_edge *, float, float, float, float)
													// BinaryOperator-  - float * [Binary Operator: Sub (-)]
														// UnexposedExpr- scanline_fill - float *
															// DeclRefExpr- scanline_fill - float *
														// IntegerLiteral-  - int [Literal: 1]
													// IntegerLiteral-  - int [Literal: 0]
													// UnexposedExpr- e - stbtt__active_edge *
														// DeclRefExpr- e - stbtt__active_edge *
													// UnexposedExpr- x0 - float
														// DeclRefExpr- x0 - float
													// UnexposedExpr- y_top - float
														// DeclRefExpr- y_top - float
													// UnexposedExpr- x0 - float
														// DeclRefExpr- x0 - float
													// UnexposedExpr- y_bottom - float
														// DeclRefExpr- y_bottom - float
							// CompoundStmt-  - 
								// DeclStmt-  - 
									// VarDecl- x0 - float
										// UnexposedExpr- fx - float
											// MemberRefExpr- fx - float
												// UnexposedExpr- e - stbtt__active_edge *
													// DeclRefExpr- e - stbtt__active_edge *
								// DeclStmt-  - 
									// VarDecl- dx - float
										// UnexposedExpr- fdx - float
											// MemberRefExpr- fdx - float
												// UnexposedExpr- e - stbtt__active_edge *
													// DeclRefExpr- e - stbtt__active_edge *
								// DeclStmt-  - 
									// VarDecl- xb - float
										// BinaryOperator-  - float [Binary Operator: Add (+)]
											// UnexposedExpr- x0 - float
												// DeclRefExpr- x0 - float
											// UnexposedExpr- dx - float
												// DeclRefExpr- dx - float
								// DeclStmt-  - 
									// VarDecl- x_top - float
									// VarDecl- x_bottom - float
								// DeclStmt-  - 
									// VarDecl- sy0 - float
									// VarDecl- sy1 - float
								// DeclStmt-  - 
									// VarDecl- dy - float
										// UnexposedExpr- fdy - float
											// MemberRefExpr- fdy - float
												// UnexposedExpr- e - stbtt__active_edge *
													// DeclRefExpr- e - stbtt__active_edge *
								// NullStmt-  - 
								// IfStmt-  - 
									// BinaryOperator-  - int [Binary Operator: GT (>)]
										// UnexposedExpr- sy - float
											// MemberRefExpr- sy - float
												// UnexposedExpr- e - stbtt__active_edge *
													// DeclRefExpr- e - stbtt__active_edge *
										// UnexposedExpr- y_top - float
											// DeclRefExpr- y_top - float
									// CompoundStmt-  - 
										// BinaryOperator-  - float [Binary Operator: Assign (=)]
											// DeclRefExpr- x_top - float
											// BinaryOperator-  - float [Binary Operator: Add (+)]
												// UnexposedExpr- x0 - float
													// DeclRefExpr- x0 - float
												// BinaryOperator-  - float [Binary Operator: Mul (*)]
													// UnexposedExpr- dx - float
														// DeclRefExpr- dx - float
													// ParenExpr-  - float
														// BinaryOperator-  - float [Binary Operator: Sub (-)]
															// UnexposedExpr- sy - float
																// MemberRefExpr- sy - float
																	// UnexposedExpr- e - stbtt__active_edge *
																		// DeclRefExpr- e - stbtt__active_edge *
															// UnexposedExpr- y_top - float
																// DeclRefExpr- y_top - float
										// BinaryOperator-  - float [Binary Operator: Assign (=)]
											// DeclRefExpr- sy0 - float
											// UnexposedExpr- sy - float
												// MemberRefExpr- sy - float
													// UnexposedExpr- e - stbtt__active_edge *
														// DeclRefExpr- e - stbtt__active_edge *
									// CompoundStmt-  - 
										// BinaryOperator-  - float [Binary Operator: Assign (=)]
											// DeclRefExpr- x_top - float
											// UnexposedExpr- x0 - float
												// DeclRefExpr- x0 - float
										// BinaryOperator-  - float [Binary Operator: Assign (=)]
											// DeclRefExpr- sy0 - float
											// UnexposedExpr- y_top - float
												// DeclRefExpr- y_top - float
								// IfStmt-  - 
									// BinaryOperator-  - int [Binary Operator: LT (<)]
										// UnexposedExpr- ey - float
											// MemberRefExpr- ey - float
												// UnexposedExpr- e - stbtt__active_edge *
													// DeclRefExpr- e - stbtt__active_edge *
										// UnexposedExpr- y_bottom - float
											// DeclRefExpr- y_bottom - float
									// CompoundStmt-  - 
										// BinaryOperator-  - float [Binary Operator: Assign (=)]
											// DeclRefExpr- x_bottom - float
											// BinaryOperator-  - float [Binary Operator: Add (+)]
												// UnexposedExpr- x0 - float
													// DeclRefExpr- x0 - float
												// BinaryOperator-  - float [Binary Operator: Mul (*)]
													// UnexposedExpr- dx - float
														// DeclRefExpr- dx - float
													// ParenExpr-  - float
														// BinaryOperator-  - float [Binary Operator: Sub (-)]
															// UnexposedExpr- ey - float
																// MemberRefExpr- ey - float
																	// UnexposedExpr- e - stbtt__active_edge *
																		// DeclRefExpr- e - stbtt__active_edge *
															// UnexposedExpr- y_top - float
																// DeclRefExpr- y_top - float
										// BinaryOperator-  - float [Binary Operator: Assign (=)]
											// DeclRefExpr- sy1 - float
											// UnexposedExpr- ey - float
												// MemberRefExpr- ey - float
													// UnexposedExpr- e - stbtt__active_edge *
														// DeclRefExpr- e - stbtt__active_edge *
									// CompoundStmt-  - 
										// BinaryOperator-  - float [Binary Operator: Assign (=)]
											// DeclRefExpr- x_bottom - float
											// UnexposedExpr- xb - float
												// DeclRefExpr- xb - float
										// BinaryOperator-  - float [Binary Operator: Assign (=)]
											// DeclRefExpr- sy1 - float
											// UnexposedExpr- y_bottom - float
												// DeclRefExpr- y_bottom - float
								// IfStmt-  - 
									// BinaryOperator-  - int [Binary Operator: LAnd (&&)]
										// BinaryOperator-  - int [Binary Operator: LAnd (&&)]
											// BinaryOperator-  - int [Binary Operator: LAnd (&&)]
												// BinaryOperator-  - int [Binary Operator: GE (>=)]
													// UnexposedExpr- x_top - float
														// DeclRefExpr- x_top - float
													// UnexposedExpr-  - float
														// IntegerLiteral-  - int [Literal: 0]
												// BinaryOperator-  - int [Binary Operator: GE (>=)]
													// UnexposedExpr- x_bottom - float
														// DeclRefExpr- x_bottom - float
													// UnexposedExpr-  - float
														// IntegerLiteral-  - int [Literal: 0]
											// BinaryOperator-  - int [Binary Operator: LT (<)]
												// UnexposedExpr- x_top - float
													// DeclRefExpr- x_top - float
												// UnexposedExpr- len - float
													// UnexposedExpr- len - int
														// DeclRefExpr- len - int
										// BinaryOperator-  - int [Binary Operator: LT (<)]
											// UnexposedExpr- x_bottom - float
												// DeclRefExpr- x_bottom - float
											// UnexposedExpr- len - float
												// UnexposedExpr- len - int
													// DeclRefExpr- len - int
									// CompoundStmt-  - 
										// IfStmt-  - 
											// BinaryOperator-  - int [Binary Operator: EQ (==)]
												// CStyleCastExpr-  - int
													// UnexposedExpr- x_top - float
														// DeclRefExpr- x_top - float
												// CStyleCastExpr-  - int
													// UnexposedExpr- x_bottom - float
														// DeclRefExpr- x_bottom - float
											// CompoundStmt-  - 
												// DeclStmt-  - 
													// VarDecl- height - float
												// DeclStmt-  - 
													// VarDecl- x - int
														// CStyleCastExpr-  - int
															// UnexposedExpr- x_top - float
																// DeclRefExpr- x_top - float
												// BinaryOperator-  - float [Binary Operator: Assign (=)]
													// DeclRefExpr- height - float
													// BinaryOperator-  - float [Binary Operator: Sub (-)]
														// UnexposedExpr- sy1 - float
															// DeclRefExpr- sy1 - float
														// UnexposedExpr- sy0 - float
															// DeclRefExpr- sy0 - float
												// NullStmt-  - 
												// CompoundAssignOperator-  - float
													// ArraySubscriptExpr-  - float
														// UnexposedExpr- scanline - float *
															// DeclRefExpr- scanline - float *
														// UnexposedExpr- x - int
															// DeclRefExpr- x - int
													// BinaryOperator-  - float [Binary Operator: Mul (*)]
														// BinaryOperator-  - float [Binary Operator: Mul (*)]
															// UnexposedExpr- direction - float
																// MemberRefExpr- direction - float
																	// UnexposedExpr- e - stbtt__active_edge *
																		// DeclRefExpr- e - stbtt__active_edge *
															// ParenExpr-  - float
																// BinaryOperator-  - float [Binary Operator: Sub (-)]
																	// UnexposedExpr-  - float
																		// IntegerLiteral-  - int [Literal: 1]
																	// BinaryOperator-  - float [Binary Operator: Div (/)]
																		// ParenExpr-  - float
																			// BinaryOperator-  - float [Binary Operator: Add (+)]
																				// ParenExpr-  - float
																					// BinaryOperator-  - float [Binary Operator: Sub (-)]
																						// UnexposedExpr- x_top - float
																							// DeclRefExpr- x_top - float
																						// UnexposedExpr- x - float
																							// UnexposedExpr- x - int
																								// DeclRefExpr- x - int
																				// ParenExpr-  - float
																					// BinaryOperator-  - float [Binary Operator: Sub (-)]
																						// UnexposedExpr- x_bottom - float
																							// DeclRefExpr- x_bottom - float
																						// UnexposedExpr- x - float
																							// UnexposedExpr- x - int
																								// DeclRefExpr- x - int
																		// UnexposedExpr-  - float
																			// IntegerLiteral-  - int [Literal: 2]
														// UnexposedExpr- height - float
															// DeclRefExpr- height - float
												// CompoundAssignOperator-  - float
													// ArraySubscriptExpr-  - float
														// UnexposedExpr- scanline_fill - float *
															// DeclRefExpr- scanline_fill - float *
														// UnexposedExpr- x - int
															// DeclRefExpr- x - int
													// BinaryOperator-  - float [Binary Operator: Mul (*)]
														// UnexposedExpr- direction - float
															// MemberRefExpr- direction - float
																// UnexposedExpr- e - stbtt__active_edge *
																	// DeclRefExpr- e - stbtt__active_edge *
														// UnexposedExpr- height - float
															// DeclRefExpr- height - float
											// CompoundStmt-  - 
												// DeclStmt-  - 
													// VarDecl- x - int
													// VarDecl- x1 - int
													// VarDecl- x2 - int
												// DeclStmt-  - 
													// VarDecl- y_crossing - float
													// VarDecl- step - float
													// VarDecl- sign - float
													// VarDecl- area - float
												// IfStmt-  - 
													// BinaryOperator-  - int [Binary Operator: GT (>)]
														// UnexposedExpr- x_top - float
															// DeclRefExpr- x_top - float
														// UnexposedExpr- x_bottom - float
															// DeclRefExpr- x_bottom - float
													// CompoundStmt-  - 
														// DeclStmt-  - 
															// VarDecl- t - float
														// BinaryOperator-  - float [Binary Operator: Assign (=)]
															// DeclRefExpr- sy0 - float
															// BinaryOperator-  - float [Binary Operator: Sub (-)]
																// UnexposedExpr- y_bottom - float
																	// DeclRefExpr- y_bottom - float
																// ParenExpr-  - float
																	// BinaryOperator-  - float [Binary Operator: Sub (-)]
																		// UnexposedExpr- sy0 - float
																			// DeclRefExpr- sy0 - float
																		// UnexposedExpr- y_top - float
																			// DeclRefExpr- y_top - float
														// BinaryOperator-  - float [Binary Operator: Assign (=)]
															// DeclRefExpr- sy1 - float
															// BinaryOperator-  - float [Binary Operator: Sub (-)]
																// UnexposedExpr- y_bottom - float
																	// DeclRefExpr- y_bottom - float
																// ParenExpr-  - float
																	// BinaryOperator-  - float [Binary Operator: Sub (-)]
																		// UnexposedExpr- sy1 - float
																			// DeclRefExpr- sy1 - float
																		// UnexposedExpr- y_top - float
																			// DeclRefExpr- y_top - float
														// BinaryOperator-  - float [Binary Operator: Assign (=)]
															// DeclRefExpr- t - float
															// UnexposedExpr- sy0 - float
																// DeclRefExpr- sy0 - float
														// BinaryOperator-  - float [Binary Operator: Assign (=)]
															// DeclRefExpr- sy0 - float
															// UnexposedExpr- sy1 - float
																// DeclRefExpr- sy1 - float
														// BinaryOperator-  - float [Binary Operator: Assign (=)]
															// DeclRefExpr- sy1 - float
															// UnexposedExpr- t - float
																// DeclRefExpr- t - float
														// BinaryOperator-  - float [Binary Operator: Assign (=)]
															// DeclRefExpr- t - float
															// UnexposedExpr- x_bottom - float
																// DeclRefExpr- x_bottom - float
														// BinaryOperator-  - float [Binary Operator: Assign (=)]
															// DeclRefExpr- x_bottom - float
															// UnexposedExpr- x_top - float
																// DeclRefExpr- x_top - float
														// BinaryOperator-  - float [Binary Operator: Assign (=)]
															// DeclRefExpr- x_top - float
															// UnexposedExpr- t - float
																// DeclRefExpr- t - float
														// BinaryOperator-  - float [Binary Operator: Assign (=)]
															// DeclRefExpr- dx - float
															// UnaryOperator-  - float [Unary Operator: Minus (-)]
																// UnexposedExpr- dx - float
																	// DeclRefExpr- dx - float
														// BinaryOperator-  - float [Binary Operator: Assign (=)]
															// DeclRefExpr- dy - float
															// UnaryOperator-  - float [Unary Operator: Minus (-)]
																// UnexposedExpr- dy - float
																	// DeclRefExpr- dy - float
														// BinaryOperator-  - float [Binary Operator: Assign (=)]
															// DeclRefExpr- t - float
															// UnexposedExpr- x0 - float
																// DeclRefExpr- x0 - float
														// BinaryOperator-  - float [Binary Operator: Assign (=)]
															// DeclRefExpr- x0 - float
															// UnexposedExpr- xb - float
																// DeclRefExpr- xb - float
														// BinaryOperator-  - float [Binary Operator: Assign (=)]
															// DeclRefExpr- xb - float
															// UnexposedExpr- t - float
																// DeclRefExpr- t - float
												// BinaryOperator-  - int [Binary Operator: Assign (=)]
													// DeclRefExpr- x1 - int
													// CStyleCastExpr-  - int
														// UnexposedExpr- x_top - float
															// DeclRefExpr- x_top - float
												// BinaryOperator-  - int [Binary Operator: Assign (=)]
													// DeclRefExpr- x2 - int
													// CStyleCastExpr-  - int
														// UnexposedExpr- x_bottom - float
															// DeclRefExpr- x_bottom - float
												// BinaryOperator-  - float [Binary Operator: Assign (=)]
													// DeclRefExpr- y_crossing - float
													// BinaryOperator-  - float [Binary Operator: Add (+)]
														// BinaryOperator-  - float [Binary Operator: Mul (*)]
															// ParenExpr-  - float
																// BinaryOperator-  - float [Binary Operator: Sub (-)]
																	// UnexposedExpr-  - float
																		// BinaryOperator-  - int [Binary Operator: Add (+)]
																			// UnexposedExpr- x1 - int
																				// DeclRefExpr- x1 - int
																			// IntegerLiteral-  - int [Literal: 1]
																	// UnexposedExpr- x0 - float
																		// DeclRefExpr- x0 - float
															// UnexposedExpr- dy - float
																// DeclRefExpr- dy - float
														// UnexposedExpr- y_top - float
															// DeclRefExpr- y_top - float
												// BinaryOperator-  - float [Binary Operator: Assign (=)]
													// DeclRefExpr- sign - float
													// UnexposedExpr- direction - float
														// MemberRefExpr- direction - float
															// UnexposedExpr- e - stbtt__active_edge *
																// DeclRefExpr- e - stbtt__active_edge *
												// BinaryOperator-  - float [Binary Operator: Assign (=)]
													// DeclRefExpr- area - float
													// BinaryOperator-  - float [Binary Operator: Mul (*)]
														// UnexposedExpr- sign - float
															// DeclRefExpr- sign - float
														// ParenExpr-  - float
															// BinaryOperator-  - float [Binary Operator: Sub (-)]
																// UnexposedExpr- y_crossing - float
																	// DeclRefExpr- y_crossing - float
																// UnexposedExpr- sy0 - float
																	// DeclRefExpr- sy0 - float
												// CompoundAssignOperator-  - float
													// ArraySubscriptExpr-  - float
														// UnexposedExpr- scanline - float *
															// DeclRefExpr- scanline - float *
														// UnexposedExpr- x1 - int
															// DeclRefExpr- x1 - int
													// BinaryOperator-  - float [Binary Operator: Mul (*)]
														// UnexposedExpr- area - float
															// DeclRefExpr- area - float
														// ParenExpr-  - float
															// BinaryOperator-  - float [Binary Operator: Sub (-)]
																// UnexposedExpr-  - float
																	// IntegerLiteral-  - int [Literal: 1]
																// BinaryOperator-  - float [Binary Operator: Div (/)]
																	// ParenExpr-  - float
																		// BinaryOperator-  - float [Binary Operator: Add (+)]
																			// ParenExpr-  - float
																				// BinaryOperator-  - float [Binary Operator: Sub (-)]
																					// UnexposedExpr- x_top - float
																						// DeclRefExpr- x_top - float
																					// UnexposedExpr- x1 - float
																						// UnexposedExpr- x1 - int
																							// DeclRefExpr- x1 - int
																			// UnexposedExpr-  - float
																				// ParenExpr-  - int
																					// BinaryOperator-  - int [Binary Operator: Sub (-)]
																						// BinaryOperator-  - int [Binary Operator: Add (+)]
																							// UnexposedExpr- x1 - int
																								// DeclRefExpr- x1 - int
																							// IntegerLiteral-  - int [Literal: 1]
																						// UnexposedExpr- x1 - int
																							// DeclRefExpr- x1 - int
																	// UnexposedExpr-  - float
																		// IntegerLiteral-  - int [Literal: 2]
												// BinaryOperator-  - float [Binary Operator: Assign (=)]
													// DeclRefExpr- step - float
													// BinaryOperator-  - float [Binary Operator: Mul (*)]
														// UnexposedExpr- sign - float
															// DeclRefExpr- sign - float
														// UnexposedExpr- dy - float
															// DeclRefExpr- dy - float
												// ForStmt-  - 
													// BinaryOperator-  - int [Binary Operator: Assign (=)]
														// DeclRefExpr- x - int
														// BinaryOperator-  - int [Binary Operator: Add (+)]
															// UnexposedExpr- x1 - int
																// DeclRefExpr- x1 - int
															// IntegerLiteral-  - int [Literal: 1]
													// BinaryOperator-  - int [Binary Operator: LT (<)]
														// UnexposedExpr- x - int
															// DeclRefExpr- x - int
														// UnexposedExpr- x2 - int
															// DeclRefExpr- x2 - int
													// UnaryOperator-  - int [Unary Operator: PreInc (++)]
														// DeclRefExpr- x - int
													// CompoundStmt-  - 
														// CompoundAssignOperator-  - float
															// ArraySubscriptExpr-  - float
																// UnexposedExpr- scanline - float *
																	// DeclRefExpr- scanline - float *
																// UnexposedExpr- x - int
																	// DeclRefExpr- x - int
															// BinaryOperator-  - float [Binary Operator: Add (+)]
																// UnexposedExpr- area - float
																	// DeclRefExpr- area - float
																// BinaryOperator-  - float [Binary Operator: Div (/)]
																	// UnexposedExpr- step - float
																		// DeclRefExpr- step - float
																	// UnexposedExpr-  - float
																		// IntegerLiteral-  - int [Literal: 2]
														// CompoundAssignOperator-  - float
															// DeclRefExpr- area - float
															// UnexposedExpr- step - float
																// DeclRefExpr- step - float
												// CompoundAssignOperator-  - float
													// DeclRefExpr- y_crossing - float
													// BinaryOperator-  - float [Binary Operator: Mul (*)]
														// UnexposedExpr- dy - float
															// DeclRefExpr- dy - float
														// UnexposedExpr-  - float
															// ParenExpr-  - int
																// BinaryOperator-  - int [Binary Operator: Sub (-)]
																	// UnexposedExpr- x2 - int
																		// DeclRefExpr- x2 - int
																	// ParenExpr-  - int
																		// BinaryOperator-  - int [Binary Operator: Add (+)]
																			// UnexposedExpr- x1 - int
																				// DeclRefExpr- x1 - int
																			// IntegerLiteral-  - int [Literal: 1]
												// NullStmt-  - 
												// CompoundAssignOperator-  - float
													// ArraySubscriptExpr-  - float
														// UnexposedExpr- scanline - float *
															// DeclRefExpr- scanline - float *
														// UnexposedExpr- x2 - int
															// DeclRefExpr- x2 - int
													// BinaryOperator-  - float [Binary Operator: Add (+)]
														// UnexposedExpr- area - float
															// DeclRefExpr- area - float
														// BinaryOperator-  - float [Binary Operator: Mul (*)]
															// BinaryOperator-  - float [Binary Operator: Mul (*)]
																// UnexposedExpr- sign - float
																	// DeclRefExpr- sign - float
																// ParenExpr-  - float
																	// BinaryOperator-  - float [Binary Operator: Sub (-)]
																		// UnexposedExpr-  - float
																			// IntegerLiteral-  - int [Literal: 1]
																		// BinaryOperator-  - float [Binary Operator: Div (/)]
																			// ParenExpr-  - float
																				// BinaryOperator-  - float [Binary Operator: Add (+)]
																					// UnexposedExpr-  - float
																						// ParenExpr-  - int
																							// BinaryOperator-  - int [Binary Operator: Sub (-)]
																								// UnexposedExpr- x2 - int
																									// DeclRefExpr- x2 - int
																								// UnexposedExpr- x2 - int
																									// DeclRefExpr- x2 - int
																					// ParenExpr-  - float
																						// BinaryOperator-  - float [Binary Operator: Sub (-)]
																							// UnexposedExpr- x_bottom - float
																								// DeclRefExpr- x_bottom - float
																							// UnexposedExpr- x2 - float
																								// UnexposedExpr- x2 - int
																									// DeclRefExpr- x2 - int
																			// UnexposedExpr-  - float
																				// IntegerLiteral-  - int [Literal: 2]
															// ParenExpr-  - float
																// BinaryOperator-  - float [Binary Operator: Sub (-)]
																	// UnexposedExpr- sy1 - float
																		// DeclRefExpr- sy1 - float
																	// UnexposedExpr- y_crossing - float
																		// DeclRefExpr- y_crossing - float
												// CompoundAssignOperator-  - float
													// ArraySubscriptExpr-  - float
														// UnexposedExpr- scanline_fill - float *
															// DeclRefExpr- scanline_fill - float *
														// UnexposedExpr- x2 - int
															// DeclRefExpr- x2 - int
													// BinaryOperator-  - float [Binary Operator: Mul (*)]
														// UnexposedExpr- sign - float
															// DeclRefExpr- sign - float
														// ParenExpr-  - float
															// BinaryOperator-  - float [Binary Operator: Sub (-)]
																// UnexposedExpr- sy1 - float
																	// DeclRefExpr- sy1 - float
																// UnexposedExpr- sy0 - float
																	// DeclRefExpr- sy0 - float
									// CompoundStmt-  - 
										// DeclStmt-  - 
											// VarDecl- x - int
										// ForStmt-  - 
											// BinaryOperator-  - int [Binary Operator: Assign (=)]
												// DeclRefExpr- x - int
												// IntegerLiteral-  - int [Literal: 0]
											// BinaryOperator-  - int [Binary Operator: LT (<)]
												// UnexposedExpr- x - int
													// DeclRefExpr- x - int
												// UnexposedExpr- len - int
													// DeclRefExpr- len - int
											// UnaryOperator-  - int [Unary Operator: PreInc (++)]
												// DeclRefExpr- x - int
											// CompoundStmt-  - 
												// DeclStmt-  - 
													// VarDecl- y0 - float
														// UnexposedExpr- y_top - float
															// DeclRefExpr- y_top - float
												// DeclStmt-  - 
													// VarDecl- x1 - float
														// CStyleCastExpr-  - float
															// UnexposedExpr-  - int
																// ParenExpr-  - int
																	// DeclRefExpr- x - int
												// DeclStmt-  - 
													// VarDecl- x2 - float
														// CStyleCastExpr-  - float
															// ParenExpr-  - int
																// BinaryOperator-  - int [Binary Operator: Add (+)]
																	// UnexposedExpr- x - int
																		// DeclRefExpr- x - int
																	// IntegerLiteral-  - int [Literal: 1]
												// DeclStmt-  - 
													// VarDecl- x3 - float
														// UnexposedExpr- xb - float
															// DeclRefExpr- xb - float
												// DeclStmt-  - 
													// VarDecl- y3 - float
														// UnexposedExpr- y_bottom - float
															// DeclRefExpr- y_bottom - float
												// DeclStmt-  - 
													// VarDecl- y1 - float
														// BinaryOperator-  - float [Binary Operator: Add (+)]
															// BinaryOperator-  - float [Binary Operator: Div (/)]
																// ParenExpr-  - float
																	// BinaryOperator-  - float [Binary Operator: Sub (-)]
																		// UnexposedExpr- x - float
																			// UnexposedExpr- x - int
																				// DeclRefExpr- x - int
																		// UnexposedExpr- x0 - float
																			// DeclRefExpr- x0 - float
																// UnexposedExpr- dx - float
																	// DeclRefExpr- dx - float
															// UnexposedExpr- y_top - float
																// DeclRefExpr- y_top - float
												// DeclStmt-  - 
													// VarDecl- y2 - float
														// BinaryOperator-  - float [Binary Operator: Add (+)]
															// BinaryOperator-  - float [Binary Operator: Div (/)]
																// ParenExpr-  - float
																	// BinaryOperator-  - float [Binary Operator: Sub (-)]
																		// UnexposedExpr-  - float
																			// BinaryOperator-  - int [Binary Operator: Add (+)]
																				// UnexposedExpr- x - int
																					// DeclRefExpr- x - int
																				// IntegerLiteral-  - int [Literal: 1]
																		// UnexposedExpr- x0 - float
																			// DeclRefExpr- x0 - float
																// UnexposedExpr- dx - float
																	// DeclRefExpr- dx - float
															// UnexposedExpr- y_top - float
																// DeclRefExpr- y_top - float
												// IfStmt-  - 
													// BinaryOperator-  - int [Binary Operator: LAnd (&&)]
														// BinaryOperator-  - int [Binary Operator: LT (<)]
															// UnexposedExpr- x0 - float
																// DeclRefExpr- x0 - float
															// UnexposedExpr- x1 - float
																// DeclRefExpr- x1 - float
														// BinaryOperator-  - int [Binary Operator: GT (>)]
															// UnexposedExpr- x3 - float
																// DeclRefExpr- x3 - float
															// UnexposedExpr- x2 - float
																// DeclRefExpr- x2 - float
													// CompoundStmt-  - 
														// CallExpr- stbtt__handle_clipped_edge - void
															// UnexposedExpr- stbtt__handle_clipped_edge - void (*)(float *, int, stbtt__active_edge *, float, float, float, float)
																// DeclRefExpr- stbtt__handle_clipped_edge - void (float *, int, stbtt__active_edge *, float, float, float, float)
															// UnexposedExpr- scanline - float *
																// DeclRefExpr- scanline - float *
															// UnexposedExpr- x - int
																// DeclRefExpr- x - int
															// UnexposedExpr- e - stbtt__active_edge *
																// DeclRefExpr- e - stbtt__active_edge *
															// UnexposedExpr- x0 - float
																// DeclRefExpr- x0 - float
															// UnexposedExpr- y0 - float
																// DeclRefExpr- y0 - float
															// UnexposedExpr- x1 - float
																// DeclRefExpr- x1 - float
															// UnexposedExpr- y1 - float
																// DeclRefExpr- y1 - float
														// CallExpr- stbtt__handle_clipped_edge - void
															// UnexposedExpr- stbtt__handle_clipped_edge - void (*)(float *, int, stbtt__active_edge *, float, float, float, float)
																// DeclRefExpr- stbtt__handle_clipped_edge - void (float *, int, stbtt__active_edge *, float, float, float, float)
															// UnexposedExpr- scanline - float *
																// DeclRefExpr- scanline - float *
															// UnexposedExpr- x - int
																// DeclRefExpr- x - int
															// UnexposedExpr- e - stbtt__active_edge *
																// DeclRefExpr- e - stbtt__active_edge *
															// UnexposedExpr- x1 - float
																// DeclRefExpr- x1 - float
															// UnexposedExpr- y1 - float
																// DeclRefExpr- y1 - float
															// UnexposedExpr- x2 - float
																// DeclRefExpr- x2 - float
															// UnexposedExpr- y2 - float
																// DeclRefExpr- y2 - float
														// CallExpr- stbtt__handle_clipped_edge - void
															// UnexposedExpr- stbtt__handle_clipped_edge - void (*)(float *, int, stbtt__active_edge *, float, float, float, float)
																// DeclRefExpr- stbtt__handle_clipped_edge - void (float *, int, stbtt__active_edge *, float, float, float, float)
															// UnexposedExpr- scanline - float *
																// DeclRefExpr- scanline - float *
															// UnexposedExpr- x - int
																// DeclRefExpr- x - int
															// UnexposedExpr- e - stbtt__active_edge *
																// DeclRefExpr- e - stbtt__active_edge *
															// UnexposedExpr- x2 - float
																// DeclRefExpr- x2 - float
															// UnexposedExpr- y2 - float
																// DeclRefExpr- y2 - float
															// UnexposedExpr- x3 - float
																// DeclRefExpr- x3 - float
															// UnexposedExpr- y3 - float
																// DeclRefExpr- y3 - float
													// IfStmt-  - 
														// BinaryOperator-  - int [Binary Operator: LAnd (&&)]
															// BinaryOperator-  - int [Binary Operator: LT (<)]
																// UnexposedExpr- x3 - float
																	// DeclRefExpr- x3 - float
																// UnexposedExpr- x1 - float
																	// DeclRefExpr- x1 - float
															// BinaryOperator-  - int [Binary Operator: GT (>)]
																// UnexposedExpr- x0 - float
																	// DeclRefExpr- x0 - float
																// UnexposedExpr- x2 - float
																	// DeclRefExpr- x2 - float
														// CompoundStmt-  - 
															// CallExpr- stbtt__handle_clipped_edge - void
																// UnexposedExpr- stbtt__handle_clipped_edge - void (*)(float *, int, stbtt__active_edge *, float, float, float, float)
																	// DeclRefExpr- stbtt__handle_clipped_edge - void (float *, int, stbtt__active_edge *, float, float, float, float)
																// UnexposedExpr- scanline - float *
																	// DeclRefExpr- scanline - float *
																// UnexposedExpr- x - int
																	// DeclRefExpr- x - int
																// UnexposedExpr- e - stbtt__active_edge *
																	// DeclRefExpr- e - stbtt__active_edge *
																// UnexposedExpr- x0 - float
																	// DeclRefExpr- x0 - float
																// UnexposedExpr- y0 - float
																	// DeclRefExpr- y0 - float
																// UnexposedExpr- x2 - float
																	// DeclRefExpr- x2 - float
																// UnexposedExpr- y2 - float
																	// DeclRefExpr- y2 - float
															// CallExpr- stbtt__handle_clipped_edge - void
																// UnexposedExpr- stbtt__handle_clipped_edge - void (*)(float *, int, stbtt__active_edge *, float, float, float, float)
																	// DeclRefExpr- stbtt__handle_clipped_edge - void (float *, int, stbtt__active_edge *, float, float, float, float)
																// UnexposedExpr- scanline - float *
																	// DeclRefExpr- scanline - float *
																// UnexposedExpr- x - int
																	// DeclRefExpr- x - int
																// UnexposedExpr- e - stbtt__active_edge *
																	// DeclRefExpr- e - stbtt__active_edge *
																// UnexposedExpr- x2 - float
																	// DeclRefExpr- x2 - float
																// UnexposedExpr- y2 - float
																	// DeclRefExpr- y2 - float
																// UnexposedExpr- x1 - float
																	// DeclRefExpr- x1 - float
																// UnexposedExpr- y1 - float
																	// DeclRefExpr- y1 - float
															// CallExpr- stbtt__handle_clipped_edge - void
																// UnexposedExpr- stbtt__handle_clipped_edge - void (*)(float *, int, stbtt__active_edge *, float, float, float, float)
																	// DeclRefExpr- stbtt__handle_clipped_edge - void (float *, int, stbtt__active_edge *, float, float, float, float)
																// UnexposedExpr- scanline - float *
																	// DeclRefExpr- scanline - float *
																// UnexposedExpr- x - int
																	// DeclRefExpr- x - int
																// UnexposedExpr- e - stbtt__active_edge *
																	// DeclRefExpr- e - stbtt__active_edge *
																// UnexposedExpr- x1 - float
																	// DeclRefExpr- x1 - float
																// UnexposedExpr- y1 - float
																	// DeclRefExpr- y1 - float
																// UnexposedExpr- x3 - float
																	// DeclRefExpr- x3 - float
																// UnexposedExpr- y3 - float
																	// DeclRefExpr- y3 - float
														// IfStmt-  - 
															// BinaryOperator-  - int [Binary Operator: LAnd (&&)]
																// BinaryOperator-  - int [Binary Operator: LT (<)]
																	// UnexposedExpr- x0 - float
																		// DeclRefExpr- x0 - float
																	// UnexposedExpr- x1 - float
																		// DeclRefExpr- x1 - float
																// BinaryOperator-  - int [Binary Operator: GT (>)]
																	// UnexposedExpr- x3 - float
																		// DeclRefExpr- x3 - float
																	// UnexposedExpr- x1 - float
																		// DeclRefExpr- x1 - float
															// CompoundStmt-  - 
																// CallExpr- stbtt__handle_clipped_edge - void
																	// UnexposedExpr- stbtt__handle_clipped_edge - void (*)(float *, int, stbtt__active_edge *, float, float, float, float)
																		// DeclRefExpr- stbtt__handle_clipped_edge - void (float *, int, stbtt__active_edge *, float, float, float, float)
																	// UnexposedExpr- scanline - float *
																		// DeclRefExpr- scanline - float *
																	// UnexposedExpr- x - int
																		// DeclRefExpr- x - int
																	// UnexposedExpr- e - stbtt__active_edge *
																		// DeclRefExpr- e - stbtt__active_edge *
																	// UnexposedExpr- x0 - float
																		// DeclRefExpr- x0 - float
																	// UnexposedExpr- y0 - float
																		// DeclRefExpr- y0 - float
																	// UnexposedExpr- x1 - float
																		// DeclRefExpr- x1 - float
																	// UnexposedExpr- y1 - float
																		// DeclRefExpr- y1 - float
																// CallExpr- stbtt__handle_clipped_edge - void
																	// UnexposedExpr- stbtt__handle_clipped_edge - void (*)(float *, int, stbtt__active_edge *, float, float, float, float)
																		// DeclRefExpr- stbtt__handle_clipped_edge - void (float *, int, stbtt__active_edge *, float, float, float, float)
																	// UnexposedExpr- scanline - float *
																		// DeclRefExpr- scanline - float *
																	// UnexposedExpr- x - int
																		// DeclRefExpr- x - int
																	// UnexposedExpr- e - stbtt__active_edge *
																		// DeclRefExpr- e - stbtt__active_edge *
																	// UnexposedExpr- x1 - float
																		// DeclRefExpr- x1 - float
																	// UnexposedExpr- y1 - float
																		// DeclRefExpr- y1 - float
																	// UnexposedExpr- x3 - float
																		// DeclRefExpr- x3 - float
																	// UnexposedExpr- y3 - float
																		// DeclRefExpr- y3 - float
															// IfStmt-  - 
																// BinaryOperator-  - int [Binary Operator: LAnd (&&)]
																	// BinaryOperator-  - int [Binary Operator: LT (<)]
																		// UnexposedExpr- x3 - float
																			// DeclRefExpr- x3 - float
																		// UnexposedExpr- x1 - float
																			// DeclRefExpr- x1 - float
																	// BinaryOperator-  - int [Binary Operator: GT (>)]
																		// UnexposedExpr- x0 - float
																			// DeclRefExpr- x0 - float
																		// UnexposedExpr- x1 - float
																			// DeclRefExpr- x1 - float
																// CompoundStmt-  - 
																	// CallExpr- stbtt__handle_clipped_edge - void
																		// UnexposedExpr- stbtt__handle_clipped_edge - void (*)(float *, int, stbtt__active_edge *, float, float, float, float)
																			// DeclRefExpr- stbtt__handle_clipped_edge - void (float *, int, stbtt__active_edge *, float, float, float, float)
																		// UnexposedExpr- scanline - float *
																			// DeclRefExpr- scanline - float *
																		// UnexposedExpr- x - int
																			// DeclRefExpr- x - int
																		// UnexposedExpr- e - stbtt__active_edge *
																			// DeclRefExpr- e - stbtt__active_edge *
																		// UnexposedExpr- x0 - float
																			// DeclRefExpr- x0 - float
																		// UnexposedExpr- y0 - float
																			// DeclRefExpr- y0 - float
																		// UnexposedExpr- x1 - float
																			// DeclRefExpr- x1 - float
																		// UnexposedExpr- y1 - float
																			// DeclRefExpr- y1 - float
																	// CallExpr- stbtt__handle_clipped_edge - void
																		// UnexposedExpr- stbtt__handle_clipped_edge - void (*)(float *, int, stbtt__active_edge *, float, float, float, float)
																			// DeclRefExpr- stbtt__handle_clipped_edge - void (float *, int, stbtt__active_edge *, float, float, float, float)
																		// UnexposedExpr- scanline - float *
																			// DeclRefExpr- scanline - float *
																		// UnexposedExpr- x - int
																			// DeclRefExpr- x - int
																		// UnexposedExpr- e - stbtt__active_edge *
																			// DeclRefExpr- e - stbtt__active_edge *
																		// UnexposedExpr- x1 - float
																			// DeclRefExpr- x1 - float
																		// UnexposedExpr- y1 - float
																			// DeclRefExpr- y1 - float
																		// UnexposedExpr- x3 - float
																			// DeclRefExpr- x3 - float
																		// UnexposedExpr- y3 - float
																			// DeclRefExpr- y3 - float
																// IfStmt-  - 
																	// BinaryOperator-  - int [Binary Operator: LAnd (&&)]
																		// BinaryOperator-  - int [Binary Operator: LT (<)]
																			// UnexposedExpr- x0 - float
																				// DeclRefExpr- x0 - float
																			// UnexposedExpr- x2 - float
																				// DeclRefExpr- x2 - float
																		// BinaryOperator-  - int [Binary Operator: GT (>)]
																			// UnexposedExpr- x3 - float
																				// DeclRefExpr- x3 - float
																			// UnexposedExpr- x2 - float
																				// DeclRefExpr- x2 - float
																	// CompoundStmt-  - 
																		// CallExpr- stbtt__handle_clipped_edge - void
																			// UnexposedExpr- stbtt__handle_clipped_edge - void (*)(float *, int, stbtt__active_edge *, float, float, float, float)
																				// DeclRefExpr- stbtt__handle_clipped_edge - void (float *, int, stbtt__active_edge *, float, float, float, float)
																			// UnexposedExpr- scanline - float *
																				// DeclRefExpr- scanline - float *
																			// UnexposedExpr- x - int
																				// DeclRefExpr- x - int
																			// UnexposedExpr- e - stbtt__active_edge *
																				// DeclRefExpr- e - stbtt__active_edge *
																			// UnexposedExpr- x0 - float
																				// DeclRefExpr- x0 - float
																			// UnexposedExpr- y0 - float
																				// DeclRefExpr- y0 - float
																			// UnexposedExpr- x2 - float
																				// DeclRefExpr- x2 - float
																			// UnexposedExpr- y2 - float
																				// DeclRefExpr- y2 - float
																		// CallExpr- stbtt__handle_clipped_edge - void
																			// UnexposedExpr- stbtt__handle_clipped_edge - void (*)(float *, int, stbtt__active_edge *, float, float, float, float)
																				// DeclRefExpr- stbtt__handle_clipped_edge - void (float *, int, stbtt__active_edge *, float, float, float, float)
																			// UnexposedExpr- scanline - float *
																				// DeclRefExpr- scanline - float *
																			// UnexposedExpr- x - int
																				// DeclRefExpr- x - int
																			// UnexposedExpr- e - stbtt__active_edge *
																				// DeclRefExpr- e - stbtt__active_edge *
																			// UnexposedExpr- x2 - float
																				// DeclRefExpr- x2 - float
																			// UnexposedExpr- y2 - float
																				// DeclRefExpr- y2 - float
																			// UnexposedExpr- x3 - float
																				// DeclRefExpr- x3 - float
																			// UnexposedExpr- y3 - float
																				// DeclRefExpr- y3 - float
																	// IfStmt-  - 
																		// BinaryOperator-  - int [Binary Operator: LAnd (&&)]
																			// BinaryOperator-  - int [Binary Operator: LT (<)]
																				// UnexposedExpr- x3 - float
																					// DeclRefExpr- x3 - float
																				// UnexposedExpr- x2 - float
																					// DeclRefExpr- x2 - float
																			// BinaryOperator-  - int [Binary Operator: GT (>)]
																				// UnexposedExpr- x0 - float
																					// DeclRefExpr- x0 - float
																				// UnexposedExpr- x2 - float
																					// DeclRefExpr- x2 - float
																		// CompoundStmt-  - 
																			// CallExpr- stbtt__handle_clipped_edge - void
																				// UnexposedExpr- stbtt__handle_clipped_edge - void (*)(float *, int, stbtt__active_edge *, float, float, float, float)
																					// DeclRefExpr- stbtt__handle_clipped_edge - void (float *, int, stbtt__active_edge *, float, float, float, float)
																				// UnexposedExpr- scanline - float *
																					// DeclRefExpr- scanline - float *
																				// UnexposedExpr- x - int
																					// DeclRefExpr- x - int
																				// UnexposedExpr- e - stbtt__active_edge *
																					// DeclRefExpr- e - stbtt__active_edge *
																				// UnexposedExpr- x0 - float
																					// DeclRefExpr- x0 - float
																				// UnexposedExpr- y0 - float
																					// DeclRefExpr- y0 - float
																				// UnexposedExpr- x2 - float
																					// DeclRefExpr- x2 - float
																				// UnexposedExpr- y2 - float
																					// DeclRefExpr- y2 - float
																			// CallExpr- stbtt__handle_clipped_edge - void
																				// UnexposedExpr- stbtt__handle_clipped_edge - void (*)(float *, int, stbtt__active_edge *, float, float, float, float)
																					// DeclRefExpr- stbtt__handle_clipped_edge - void (float *, int, stbtt__active_edge *, float, float, float, float)
																				// UnexposedExpr- scanline - float *
																					// DeclRefExpr- scanline - float *
																				// UnexposedExpr- x - int
																					// DeclRefExpr- x - int
																				// UnexposedExpr- e - stbtt__active_edge *
																					// DeclRefExpr- e - stbtt__active_edge *
																				// UnexposedExpr- x2 - float
																					// DeclRefExpr- x2 - float
																				// UnexposedExpr- y2 - float
																					// DeclRefExpr- y2 - float
																				// UnexposedExpr- x3 - float
																					// DeclRefExpr- x3 - float
																				// UnexposedExpr- y3 - float
																					// DeclRefExpr- y3 - float
																		// CompoundStmt-  - 
																			// CallExpr- stbtt__handle_clipped_edge - void
																				// UnexposedExpr- stbtt__handle_clipped_edge - void (*)(float *, int, stbtt__active_edge *, float, float, float, float)
																					// DeclRefExpr- stbtt__handle_clipped_edge - void (float *, int, stbtt__active_edge *, float, float, float, float)
																				// UnexposedExpr- scanline - float *
																					// DeclRefExpr- scanline - float *
																				// UnexposedExpr- x - int
																					// DeclRefExpr- x - int
																				// UnexposedExpr- e - stbtt__active_edge *
																					// DeclRefExpr- e - stbtt__active_edge *
																				// UnexposedExpr- x0 - float
																					// DeclRefExpr- x0 - float
																				// UnexposedExpr- y0 - float
																					// DeclRefExpr- y0 - float
																				// UnexposedExpr- x3 - float
																					// DeclRefExpr- x3 - float
																				// UnexposedExpr- y3 - float
																					// DeclRefExpr- y3 - float
						// BinaryOperator-  - stbtt__active_edge * [Binary Operator: Assign (=)]
							// DeclRefExpr- e - stbtt__active_edge *
							// UnexposedExpr- next - struct stbtt__active_edge *
								// MemberRefExpr- next - struct stbtt__active_edge *
									// UnexposedExpr- e - stbtt__active_edge *
										// DeclRefExpr- e - stbtt__active_edge *
		// FunctionDecl- stbtt__rasterize_sorted_edges - void (stbtt__bitmap *, stbtt__edge *, int, int, int, int, void *)
			// ParmDecl- result - stbtt__bitmap *
				// TypeRef- stbtt__bitmap - stbtt__bitmap
			// ParmDecl- e - stbtt__edge *
				// TypeRef- stbtt__edge - stbtt__edge
			// ParmDecl- n - int
			// ParmDecl- vsubsample - int
			// ParmDecl- off_x - int
			// ParmDecl- off_y - int
			// ParmDecl- userdata - void *
			// CompoundStmt-  - 
				// DeclStmt-  - 
					// VarDecl- hh - stbtt__hheap
						// TypeRef- stbtt__hheap - stbtt__hheap
						// InitListExpr-  - stbtt__hheap
							// UnexposedExpr-  - struct stbtt__hheap_chunk *
								// IntegerLiteral-  - int [Literal: 0]
							// UnexposedExpr-  - void *
								// IntegerLiteral-  - int [Literal: 0]
							// IntegerLiteral-  - int [Literal: 0]
				// DeclStmt-  - 
					// VarDecl- active - stbtt__active_edge *
						// TypeRef- stbtt__active_edge - stbtt__active_edge
						// UnexposedExpr-  - stbtt__active_edge *
							// ParenExpr-  - void *
								// CStyleCastExpr-  - void *
									// IntegerLiteral-  - int [Literal: 0]
				// DeclStmt-  - 
					// VarDecl- y - int
					// VarDecl- j - int
						// IntegerLiteral-  - int [Literal: 0]
					// VarDecl- i - int
				// DeclStmt-  - 
					// VarDecl- scanline_data - float [129]
						// IntegerLiteral-  - int [Literal: 129]
					// VarDecl- scanline - float *
					// VarDecl- scanline2 - float *
				// NullStmt-  - 
				// IfStmt-  - 
					// BinaryOperator-  - int [Binary Operator: GT (>)]
						// UnexposedExpr- w - int
							// MemberRefExpr- w - int
								// UnexposedExpr- result - stbtt__bitmap *
									// DeclRefExpr- result - stbtt__bitmap *
						// IntegerLiteral-  - int [Literal: 64]
					// BinaryOperator-  - float * [Binary Operator: Assign (=)]
						// DeclRefExpr- scanline - float *
						// CStyleCastExpr-  - float *
							// CallExpr- malloc - void *
								// UnexposedExpr- malloc - void *(*)(unsigned long long)
									// DeclRefExpr- malloc - void *(unsigned long long)
								// BinaryOperator-  - unsigned long long [Binary Operator: Mul (*)]
									// UnexposedExpr-  - unsigned long long
										// ParenExpr-  - int
											// BinaryOperator-  - int [Binary Operator: Add (+)]
												// BinaryOperator-  - int [Binary Operator: Mul (*)]
													// UnexposedExpr- w - int
														// MemberRefExpr- w - int
															// UnexposedExpr- result - stbtt__bitmap *
																// DeclRefExpr- result - stbtt__bitmap *
													// IntegerLiteral-  - int [Literal: 2]
												// IntegerLiteral-  - int [Literal: 1]
									// UnaryExpr-  - unsigned long long [Unary Operator: 99999 ()]
					// BinaryOperator-  - float * [Binary Operator: Assign (=)]
						// DeclRefExpr- scanline - float *
						// UnexposedExpr- scanline_data - float *
							// DeclRefExpr- scanline_data - float [129]
				// BinaryOperator-  - float * [Binary Operator: Assign (=)]
					// DeclRefExpr- scanline2 - float *
					// BinaryOperator-  - float * [Binary Operator: Add (+)]
						// UnexposedExpr- scanline - float *
							// DeclRefExpr- scanline - float *
						// UnexposedExpr- w - int
							// MemberRefExpr- w - int
								// UnexposedExpr- result - stbtt__bitmap *
									// DeclRefExpr- result - stbtt__bitmap *
				// BinaryOperator-  - int [Binary Operator: Assign (=)]
					// DeclRefExpr- y - int
					// UnexposedExpr- off_y - int
						// DeclRefExpr- off_y - int
				// BinaryOperator-  - float [Binary Operator: Assign (=)]
					// MemberRefExpr- y0 - float
						// ArraySubscriptExpr-  - stbtt__edge
							// UnexposedExpr- e - stbtt__edge *
								// DeclRefExpr- e - stbtt__edge *
							// UnexposedExpr- n - int
								// DeclRefExpr- n - int
					// BinaryOperator-  - float [Binary Operator: Add (+)]
						// CStyleCastExpr-  - float
							// ParenExpr-  - int
								// BinaryOperator-  - int [Binary Operator: Add (+)]
									// UnexposedExpr- off_y - int
										// DeclRefExpr- off_y - int
									// UnexposedExpr- h - int
										// MemberRefExpr- h - int
											// UnexposedExpr- result - stbtt__bitmap *
												// DeclRefExpr- result - stbtt__bitmap *
						// UnexposedExpr-  - float
							// IntegerLiteral-  - int [Literal: 1]
				// WhileStmt-  - 
					// BinaryOperator-  - int [Binary Operator: LT (<)]
						// UnexposedExpr- j - int
							// DeclRefExpr- j - int
						// UnexposedExpr- h - int
							// MemberRefExpr- h - int
								// UnexposedExpr- result - stbtt__bitmap *
									// DeclRefExpr- result - stbtt__bitmap *
					// CompoundStmt-  - 
						// DeclStmt-  - 
							// VarDecl- scan_y_top - float
								// BinaryOperator-  - float [Binary Operator: Add (+)]
									// UnexposedExpr- y - float
										// UnexposedExpr- y - int
											// DeclRefExpr- y - int
									// FloatingLiteral-  - float [Literal: 0]
						// DeclStmt-  - 
							// VarDecl- scan_y_bottom - float
								// BinaryOperator-  - float [Binary Operator: Add (+)]
									// UnexposedExpr- y - float
										// UnexposedExpr- y - int
											// DeclRefExpr- y - int
									// FloatingLiteral-  - float [Literal: 1]
						// DeclStmt-  - 
							// VarDecl- step - stbtt__active_edge **
								// TypeRef- stbtt__active_edge - stbtt__active_edge
								// UnaryOperator-  - stbtt__active_edge ** [Unary Operator: AddrOf (&)]
									// DeclRefExpr- active - stbtt__active_edge *
						// CallExpr- memset - void *
							// UnexposedExpr- memset - void *(*)(void *, int, unsigned long long)
								// DeclRefExpr- memset - void *(void *, int, unsigned long long)
							// UnexposedExpr- scanline - void *
								// UnexposedExpr- scanline - float *
									// DeclRefExpr- scanline - float *
							// IntegerLiteral-  - int [Literal: 0]
							// BinaryOperator-  - unsigned long long [Binary Operator: Mul (*)]
								// UnexposedExpr- w - unsigned long long
									// UnexposedExpr- w - int
										// MemberRefExpr- w - int
											// UnexposedExpr- result - stbtt__bitmap *
												// DeclRefExpr- result - stbtt__bitmap *
								// UnaryExpr-  - unsigned long long [Unary Operator: 99999 ()]
									// ParenExpr-  - float
										// ArraySubscriptExpr-  - float
											// UnexposedExpr- scanline - float *
												// DeclRefExpr- scanline - float *
											// IntegerLiteral-  - int [Literal: 0]
						// CallExpr- memset - void *
							// UnexposedExpr- memset - void *(*)(void *, int, unsigned long long)
								// DeclRefExpr- memset - void *(void *, int, unsigned long long)
							// UnexposedExpr- scanline2 - void *
								// UnexposedExpr- scanline2 - float *
									// DeclRefExpr- scanline2 - float *
							// IntegerLiteral-  - int [Literal: 0]
							// BinaryOperator-  - unsigned long long [Binary Operator: Mul (*)]
								// UnexposedExpr-  - unsigned long long
									// ParenExpr-  - int
										// BinaryOperator-  - int [Binary Operator: Add (+)]
											// UnexposedExpr- w - int
												// MemberRefExpr- w - int
													// UnexposedExpr- result - stbtt__bitmap *
														// DeclRefExpr- result - stbtt__bitmap *
											// IntegerLiteral-  - int [Literal: 1]
								// UnaryExpr-  - unsigned long long [Unary Operator: 99999 ()]
									// ParenExpr-  - float
										// ArraySubscriptExpr-  - float
											// UnexposedExpr- scanline - float *
												// DeclRefExpr- scanline - float *
											// IntegerLiteral-  - int [Literal: 0]
						// WhileStmt-  - 
							// UnexposedExpr-  - stbtt__active_edge *
								// UnaryOperator-  - stbtt__active_edge * [Unary Operator: Deref (*)]
									// UnexposedExpr- step - stbtt__active_edge **
										// DeclRefExpr- step - stbtt__active_edge **
							// CompoundStmt-  - 
								// DeclStmt-  - 
									// VarDecl- z - stbtt__active_edge *
										// TypeRef- stbtt__active_edge - stbtt__active_edge
										// UnexposedExpr-  - stbtt__active_edge *
											// UnaryOperator-  - stbtt__active_edge * [Unary Operator: Deref (*)]
												// UnexposedExpr- step - stbtt__active_edge **
													// DeclRefExpr- step - stbtt__active_edge **
								// IfStmt-  - 
									// BinaryOperator-  - int [Binary Operator: LE (<=)]
										// UnexposedExpr- ey - float
											// MemberRefExpr- ey - float
												// UnexposedExpr- z - stbtt__active_edge *
													// DeclRefExpr- z - stbtt__active_edge *
										// UnexposedExpr- scan_y_top - float
											// DeclRefExpr- scan_y_top - float
									// CompoundStmt-  - 
										// BinaryOperator-  - stbtt__active_edge * [Binary Operator: Assign (=)]
											// UnaryOperator-  - stbtt__active_edge * [Unary Operator: Deref (*)]
												// UnexposedExpr- step - stbtt__active_edge **
													// DeclRefExpr- step - stbtt__active_edge **
											// UnexposedExpr- next - struct stbtt__active_edge *
												// MemberRefExpr- next - struct stbtt__active_edge *
													// UnexposedExpr- z - stbtt__active_edge *
														// DeclRefExpr- z - stbtt__active_edge *
										// NullStmt-  - 
										// BinaryOperator-  - float [Binary Operator: Assign (=)]
											// MemberRefExpr- direction - float
												// UnexposedExpr- z - stbtt__active_edge *
													// DeclRefExpr- z - stbtt__active_edge *
											// UnexposedExpr-  - float
												// IntegerLiteral-  - int [Literal: 0]
										// CallExpr- stbtt__hheap_free - void
											// UnexposedExpr- stbtt__hheap_free - void (*)(stbtt__hheap *, void *)
												// DeclRefExpr- stbtt__hheap_free - void (stbtt__hheap *, void *)
											// UnaryOperator-  - stbtt__hheap * [Unary Operator: AddrOf (&)]
												// DeclRefExpr- hh - stbtt__hheap
											// UnexposedExpr- z - void *
												// UnexposedExpr- z - stbtt__active_edge *
													// DeclRefExpr- z - stbtt__active_edge *
									// CompoundStmt-  - 
										// BinaryOperator-  - stbtt__active_edge ** [Binary Operator: Assign (=)]
											// DeclRefExpr- step - stbtt__active_edge **
											// UnaryOperator-  - struct stbtt__active_edge ** [Unary Operator: AddrOf (&)]
												// ParenExpr-  - struct stbtt__active_edge *
													// MemberRefExpr- next - struct stbtt__active_edge *
														// UnexposedExpr-  - stbtt__active_edge *
															// ParenExpr-  - stbtt__active_edge *
																// UnaryOperator-  - stbtt__active_edge * [Unary Operator: Deref (*)]
																	// UnexposedExpr- step - stbtt__active_edge **
																		// DeclRefExpr- step - stbtt__active_edge **
						// WhileStmt-  - 
							// BinaryOperator-  - int [Binary Operator: LE (<=)]
								// UnexposedExpr- y0 - float
									// MemberRefExpr- y0 - float
										// UnexposedExpr- e - stbtt__edge *
											// DeclRefExpr- e - stbtt__edge *
								// UnexposedExpr- scan_y_bottom - float
									// DeclRefExpr- scan_y_bottom - float
							// CompoundStmt-  - 
								// IfStmt-  - 
									// BinaryOperator-  - int [Binary Operator: NE (!=)]
										// UnexposedExpr- y0 - float
											// MemberRefExpr- y0 - float
												// UnexposedExpr- e - stbtt__edge *
													// DeclRefExpr- e - stbtt__edge *
										// UnexposedExpr- y1 - float
											// MemberRefExpr- y1 - float
												// UnexposedExpr- e - stbtt__edge *
													// DeclRefExpr- e - stbtt__edge *
									// CompoundStmt-  - 
										// DeclStmt-  - 
											// VarDecl- z - stbtt__active_edge *
												// TypeRef- stbtt__active_edge - stbtt__active_edge
												// CallExpr- stbtt__new_active - stbtt__active_edge *
													// UnexposedExpr- stbtt__new_active - stbtt__active_edge *(*)(stbtt__hheap *, stbtt__edge *, int, float, void *)
														// DeclRefExpr- stbtt__new_active - stbtt__active_edge *(stbtt__hheap *, stbtt__edge *, int, float, void *)
													// UnaryOperator-  - stbtt__hheap * [Unary Operator: AddrOf (&)]
														// DeclRefExpr- hh - stbtt__hheap
													// UnexposedExpr- e - stbtt__edge *
														// DeclRefExpr- e - stbtt__edge *
													// UnexposedExpr- off_x - int
														// DeclRefExpr- off_x - int
													// UnexposedExpr- scan_y_top - float
														// DeclRefExpr- scan_y_top - float
													// UnexposedExpr- userdata - void *
														// DeclRefExpr- userdata - void *
										// IfStmt-  - 
											// BinaryOperator-  - int [Binary Operator: NE (!=)]
												// UnexposedExpr- z - stbtt__active_edge *
													// DeclRefExpr- z - stbtt__active_edge *
												// UnexposedExpr-  - stbtt__active_edge *
													// ParenExpr-  - void *
														// CStyleCastExpr-  - void *
															// IntegerLiteral-  - int [Literal: 0]
											// CompoundStmt-  - 
												// NullStmt-  - 
												// BinaryOperator-  - struct stbtt__active_edge * [Binary Operator: Assign (=)]
													// MemberRefExpr- next - struct stbtt__active_edge *
														// UnexposedExpr- z - stbtt__active_edge *
															// DeclRefExpr- z - stbtt__active_edge *
													// UnexposedExpr- active - stbtt__active_edge *
														// DeclRefExpr- active - stbtt__active_edge *
												// BinaryOperator-  - stbtt__active_edge * [Binary Operator: Assign (=)]
													// DeclRefExpr- active - stbtt__active_edge *
													// UnexposedExpr- z - stbtt__active_edge *
														// DeclRefExpr- z - stbtt__active_edge *
								// UnaryOperator-  - stbtt__edge * [Unary Operator: PreInc (++)]
									// DeclRefExpr- e - stbtt__edge *
						// IfStmt-  - 
							// UnexposedExpr- active - stbtt__active_edge *
								// DeclRefExpr- active - stbtt__active_edge *
							// CallExpr- stbtt__fill_active_edges_new - void
								// UnexposedExpr- stbtt__fill_active_edges_new - void (*)(float *, float *, int, stbtt__active_edge *, float)
									// DeclRefExpr- stbtt__fill_active_edges_new - void (float *, float *, int, stbtt__active_edge *, float)
								// UnexposedExpr- scanline - float *
									// DeclRefExpr- scanline - float *
								// BinaryOperator-  - float * [Binary Operator: Add (+)]
									// UnexposedExpr- scanline2 - float *
										// DeclRefExpr- scanline2 - float *
									// IntegerLiteral-  - int [Literal: 1]
								// UnexposedExpr- w - int
									// MemberRefExpr- w - int
										// UnexposedExpr- result - stbtt__bitmap *
											// DeclRefExpr- result - stbtt__bitmap *
								// UnexposedExpr- active - stbtt__active_edge *
									// DeclRefExpr- active - stbtt__active_edge *
								// UnexposedExpr- scan_y_top - float
									// DeclRefExpr- scan_y_top - float
						// CompoundStmt-  - 
							// DeclStmt-  - 
								// VarDecl- sum - float
									// UnexposedExpr-  - float
										// IntegerLiteral-  - int [Literal: 0]
							// ForStmt-  - 
								// BinaryOperator-  - int [Binary Operator: Assign (=)]
									// DeclRefExpr- i - int
									// IntegerLiteral-  - int [Literal: 0]
								// BinaryOperator-  - int [Binary Operator: LT (<)]
									// UnexposedExpr- i - int
										// DeclRefExpr- i - int
									// UnexposedExpr- w - int
										// MemberRefExpr- w - int
											// UnexposedExpr- result - stbtt__bitmap *
												// DeclRefExpr- result - stbtt__bitmap *
								// UnaryOperator-  - int [Unary Operator: PreInc (++)]
									// DeclRefExpr- i - int
								// CompoundStmt-  - 
									// DeclStmt-  - 
										// VarDecl- k - float
									// DeclStmt-  - 
										// VarDecl- m - int
									// CompoundAssignOperator-  - float
										// DeclRefExpr- sum - float
										// UnexposedExpr-  - float
											// ArraySubscriptExpr-  - float
												// UnexposedExpr- scanline2 - float *
													// DeclRefExpr- scanline2 - float *
												// UnexposedExpr- i - int
													// DeclRefExpr- i - int
									// BinaryOperator-  - float [Binary Operator: Assign (=)]
										// DeclRefExpr- k - float
										// BinaryOperator-  - float [Binary Operator: Add (+)]
											// UnexposedExpr-  - float
												// ArraySubscriptExpr-  - float
													// UnexposedExpr- scanline - float *
														// DeclRefExpr- scanline - float *
													// UnexposedExpr- i - int
														// DeclRefExpr- i - int
											// UnexposedExpr- sum - float
												// DeclRefExpr- sum - float
									// BinaryOperator-  - float [Binary Operator: Assign (=)]
										// DeclRefExpr- k - float
										// BinaryOperator-  - float [Binary Operator: Add (+)]
											// BinaryOperator-  - float [Binary Operator: Mul (*)]
												// CStyleCastExpr-  - float
													// CallExpr- fabs - double
														// UnexposedExpr- fabs - double (*)(double)
															// DeclRefExpr- fabs - double (double)
														// UnexposedExpr- k - double
															// UnexposedExpr- k - float
																// DeclRefExpr- k - float
												// UnexposedExpr-  - float
													// IntegerLiteral-  - int [Literal: 255]
											// FloatingLiteral-  - float [Literal: 0.5]
									// BinaryOperator-  - int [Binary Operator: Assign (=)]
										// DeclRefExpr- m - int
										// CStyleCastExpr-  - int
											// UnexposedExpr- k - float
												// DeclRefExpr- k - float
									// IfStmt-  - 
										// BinaryOperator-  - int [Binary Operator: GT (>)]
											// UnexposedExpr- m - int
												// DeclRefExpr- m - int
											// IntegerLiteral-  - int [Literal: 255]
										// BinaryOperator-  - int [Binary Operator: Assign (=)]
											// DeclRefExpr- m - int
											// IntegerLiteral-  - int [Literal: 255]
									// BinaryOperator-  - unsigned char [Binary Operator: Assign (=)]
										// ArraySubscriptExpr-  - unsigned char
											// UnexposedExpr- pixels - unsigned char *
												// MemberRefExpr- pixels - unsigned char *
													// UnexposedExpr- result - stbtt__bitmap *
														// DeclRefExpr- result - stbtt__bitmap *
											// BinaryOperator-  - int [Binary Operator: Add (+)]
												// BinaryOperator-  - int [Binary Operator: Mul (*)]
													// UnexposedExpr- j - int
														// DeclRefExpr- j - int
													// UnexposedExpr- stride - int
														// MemberRefExpr- stride - int
															// UnexposedExpr- result - stbtt__bitmap *
																// DeclRefExpr- result - stbtt__bitmap *
												// UnexposedExpr- i - int
													// DeclRefExpr- i - int
										// CStyleCastExpr-  - unsigned char
											// UnexposedExpr- m - int
												// DeclRefExpr- m - int
						// BinaryOperator-  - stbtt__active_edge ** [Binary Operator: Assign (=)]
							// DeclRefExpr- step - stbtt__active_edge **
							// UnaryOperator-  - stbtt__active_edge ** [Unary Operator: AddrOf (&)]
								// DeclRefExpr- active - stbtt__active_edge *
						// WhileStmt-  - 
							// UnexposedExpr-  - stbtt__active_edge *
								// UnaryOperator-  - stbtt__active_edge * [Unary Operator: Deref (*)]
									// UnexposedExpr- step - stbtt__active_edge **
										// DeclRefExpr- step - stbtt__active_edge **
							// CompoundStmt-  - 
								// DeclStmt-  - 
									// VarDecl- z - stbtt__active_edge *
										// TypeRef- stbtt__active_edge - stbtt__active_edge
										// UnexposedExpr-  - stbtt__active_edge *
											// UnaryOperator-  - stbtt__active_edge * [Unary Operator: Deref (*)]
												// UnexposedExpr- step - stbtt__active_edge **
													// DeclRefExpr- step - stbtt__active_edge **
								// CompoundAssignOperator-  - float
									// MemberRefExpr- fx - float
										// UnexposedExpr- z - stbtt__active_edge *
											// DeclRefExpr- z - stbtt__active_edge *
									// UnexposedExpr- fdx - float
										// MemberRefExpr- fdx - float
											// UnexposedExpr- z - stbtt__active_edge *
												// DeclRefExpr- z - stbtt__active_edge *
								// BinaryOperator-  - stbtt__active_edge ** [Binary Operator: Assign (=)]
									// DeclRefExpr- step - stbtt__active_edge **
									// UnaryOperator-  - struct stbtt__active_edge ** [Unary Operator: AddrOf (&)]
										// ParenExpr-  - struct stbtt__active_edge *
											// MemberRefExpr- next - struct stbtt__active_edge *
												// UnexposedExpr-  - stbtt__active_edge *
													// ParenExpr-  - stbtt__active_edge *
														// UnaryOperator-  - stbtt__active_edge * [Unary Operator: Deref (*)]
															// UnexposedExpr- step - stbtt__active_edge **
																// DeclRefExpr- step - stbtt__active_edge **
						// UnaryOperator-  - int [Unary Operator: PreInc (++)]
							// DeclRefExpr- y - int
						// UnaryOperator-  - int [Unary Operator: PreInc (++)]
							// DeclRefExpr- j - int
				// CallExpr- stbtt__hheap_cleanup - void
					// UnexposedExpr- stbtt__hheap_cleanup - void (*)(stbtt__hheap *, void *)
						// DeclRefExpr- stbtt__hheap_cleanup - void (stbtt__hheap *, void *)
					// UnaryOperator-  - stbtt__hheap * [Unary Operator: AddrOf (&)]
						// DeclRefExpr- hh - stbtt__hheap
					// UnexposedExpr- userdata - void *
						// DeclRefExpr- userdata - void *
				// IfStmt-  - 
					// BinaryOperator-  - int [Binary Operator: NE (!=)]
						// UnexposedExpr- scanline - float *
							// DeclRefExpr- scanline - float *
						// UnexposedExpr- scanline_data - float *
							// DeclRefExpr- scanline_data - float [129]
					// CallExpr- free - void
						// UnexposedExpr- free - void (*)(void *) __attribute__((cdecl))
							// DeclRefExpr- free - void (void *)
						// UnexposedExpr- scanline - void *
							// UnexposedExpr- scanline - float *
								// DeclRefExpr- scanline - float *
		// FunctionDecl- stbtt__sort_edges_ins_sort - void (stbtt__edge *, int)
			// ParmDecl- p - stbtt__edge *
				// TypeRef- stbtt__edge - stbtt__edge
			// ParmDecl- n - int
			// CompoundStmt-  - 
				// DeclStmt-  - 
					// VarDecl- i - int
					// VarDecl- j - int
				// ForStmt-  - 
					// BinaryOperator-  - int [Binary Operator: Assign (=)]
						// DeclRefExpr- i - int
						// IntegerLiteral-  - int [Literal: 1]
					// BinaryOperator-  - int [Binary Operator: LT (<)]
						// UnexposedExpr- i - int
							// DeclRefExpr- i - int
						// UnexposedExpr- n - int
							// DeclRefExpr- n - int
					// UnaryOperator-  - int [Unary Operator: PreInc (++)]
						// DeclRefExpr- i - int
					// CompoundStmt-  - 
						// DeclStmt-  - 
							// VarDecl- t - stbtt__edge
								// TypeRef- stbtt__edge - stbtt__edge
								// UnexposedExpr-  - stbtt__edge
									// ArraySubscriptExpr-  - stbtt__edge
										// UnexposedExpr- p - stbtt__edge *
											// DeclRefExpr- p - stbtt__edge *
										// UnexposedExpr- i - int
											// DeclRefExpr- i - int
							// VarDecl- a - stbtt__edge *
								// TypeRef- stbtt__edge - stbtt__edge
								// UnaryOperator-  - stbtt__edge * [Unary Operator: AddrOf (&)]
									// DeclRefExpr- t - stbtt__edge
						// BinaryOperator-  - int [Binary Operator: Assign (=)]
							// DeclRefExpr- j - int
							// UnexposedExpr- i - int
								// DeclRefExpr- i - int
						// WhileStmt-  - 
							// BinaryOperator-  - int [Binary Operator: GT (>)]
								// UnexposedExpr- j - int
									// DeclRefExpr- j - int
								// IntegerLiteral-  - int [Literal: 0]
							// CompoundStmt-  - 
								// DeclStmt-  - 
									// VarDecl- b - stbtt__edge *
										// TypeRef- stbtt__edge - stbtt__edge
										// UnaryOperator-  - stbtt__edge * [Unary Operator: AddrOf (&)]
											// ArraySubscriptExpr-  - stbtt__edge
												// UnexposedExpr- p - stbtt__edge *
													// DeclRefExpr- p - stbtt__edge *
												// BinaryOperator-  - int [Binary Operator: Sub (-)]
													// UnexposedExpr- j - int
														// DeclRefExpr- j - int
													// IntegerLiteral-  - int [Literal: 1]
								// DeclStmt-  - 
									// VarDecl- c - int
										// ParenExpr-  - int
											// BinaryOperator-  - int [Binary Operator: LT (<)]
												// UnexposedExpr- y0 - float
													// MemberRefExpr- y0 - float
														// UnexposedExpr-  - stbtt__edge *
															// ParenExpr-  - stbtt__edge *
																// DeclRefExpr- a - stbtt__edge *
												// UnexposedExpr- y0 - float
													// MemberRefExpr- y0 - float
														// UnexposedExpr-  - stbtt__edge *
															// ParenExpr-  - stbtt__edge *
																// DeclRefExpr- b - stbtt__edge *
								// IfStmt-  - 
									// UnaryOperator-  - int [Unary Operator: LNot (!)]
										// UnexposedExpr- c - int
											// DeclRefExpr- c - int
									// BreakStmt-  - 
								// BinaryOperator-  - stbtt__edge [Binary Operator: Assign (=)]
									// ArraySubscriptExpr-  - stbtt__edge
										// UnexposedExpr- p - stbtt__edge *
											// DeclRefExpr- p - stbtt__edge *
										// UnexposedExpr- j - int
											// DeclRefExpr- j - int
									// UnexposedExpr-  - stbtt__edge
										// ArraySubscriptExpr-  - stbtt__edge
											// UnexposedExpr- p - stbtt__edge *
												// DeclRefExpr- p - stbtt__edge *
											// BinaryOperator-  - int [Binary Operator: Sub (-)]
												// UnexposedExpr- j - int
													// DeclRefExpr- j - int
												// IntegerLiteral-  - int [Literal: 1]
								// UnaryOperator-  - int [Unary Operator: PreDec (--)]
									// DeclRefExpr- j - int
						// IfStmt-  - 
							// BinaryOperator-  - int [Binary Operator: NE (!=)]
								// UnexposedExpr- i - int
									// DeclRefExpr- i - int
								// UnexposedExpr- j - int
									// DeclRefExpr- j - int
							// BinaryOperator-  - stbtt__edge [Binary Operator: Assign (=)]
								// ArraySubscriptExpr-  - stbtt__edge
									// UnexposedExpr- p - stbtt__edge *
										// DeclRefExpr- p - stbtt__edge *
									// UnexposedExpr- j - int
										// DeclRefExpr- j - int
								// UnexposedExpr- t - stbtt__edge
									// DeclRefExpr- t - stbtt__edge
		// FunctionDecl- stbtt__sort_edges_quicksort - void (stbtt__edge *, int)
			// ParmDecl- p - stbtt__edge *
				// TypeRef- stbtt__edge - stbtt__edge
			// ParmDecl- n - int
			// CompoundStmt-  - 
				// WhileStmt-  - 
					// BinaryOperator-  - int [Binary Operator: GT (>)]
						// UnexposedExpr- n - int
							// DeclRefExpr- n - int
						// IntegerLiteral-  - int [Literal: 12]
					// CompoundStmt-  - 
						// DeclStmt-  - 
							// VarDecl- t - stbtt__edge
								// TypeRef- stbtt__edge - stbtt__edge
						// DeclStmt-  - 
							// VarDecl- c01 - int
							// VarDecl- c12 - int
							// VarDecl- c - int
							// VarDecl- m - int
							// VarDecl- i - int
							// VarDecl- j - int
						// BinaryOperator-  - int [Binary Operator: Assign (=)]
							// DeclRefExpr- m - int
							// BinaryOperator-  - int [Binary Operator: Shr (>>)]
								// UnexposedExpr- n - int
									// DeclRefExpr- n - int
								// IntegerLiteral-  - int [Literal: 1]
						// BinaryOperator-  - int [Binary Operator: Assign (=)]
							// DeclRefExpr- c01 - int
							// ParenExpr-  - int
								// BinaryOperator-  - int [Binary Operator: LT (<)]
									// UnexposedExpr- y0 - float
										// MemberRefExpr- y0 - float
											// ParenExpr-  - stbtt__edge *
												// UnaryOperator-  - stbtt__edge * [Unary Operator: AddrOf (&)]
													// ArraySubscriptExpr-  - stbtt__edge
														// UnexposedExpr- p - stbtt__edge *
															// DeclRefExpr- p - stbtt__edge *
														// IntegerLiteral-  - int [Literal: 0]
									// UnexposedExpr- y0 - float
										// MemberRefExpr- y0 - float
											// ParenExpr-  - stbtt__edge *
												// UnaryOperator-  - stbtt__edge * [Unary Operator: AddrOf (&)]
													// ArraySubscriptExpr-  - stbtt__edge
														// UnexposedExpr- p - stbtt__edge *
															// DeclRefExpr- p - stbtt__edge *
														// UnexposedExpr- m - int
															// DeclRefExpr- m - int
						// BinaryOperator-  - int [Binary Operator: Assign (=)]
							// DeclRefExpr- c12 - int
							// ParenExpr-  - int
								// BinaryOperator-  - int [Binary Operator: LT (<)]
									// UnexposedExpr- y0 - float
										// MemberRefExpr- y0 - float
											// ParenExpr-  - stbtt__edge *
												// UnaryOperator-  - stbtt__edge * [Unary Operator: AddrOf (&)]
													// ArraySubscriptExpr-  - stbtt__edge
														// UnexposedExpr- p - stbtt__edge *
															// DeclRefExpr- p - stbtt__edge *
														// UnexposedExpr- m - int
															// DeclRefExpr- m - int
									// UnexposedExpr- y0 - float
										// MemberRefExpr- y0 - float
											// ParenExpr-  - stbtt__edge *
												// UnaryOperator-  - stbtt__edge * [Unary Operator: AddrOf (&)]
													// ArraySubscriptExpr-  - stbtt__edge
														// UnexposedExpr- p - stbtt__edge *
															// DeclRefExpr- p - stbtt__edge *
														// BinaryOperator-  - int [Binary Operator: Sub (-)]
															// UnexposedExpr- n - int
																// DeclRefExpr- n - int
															// IntegerLiteral-  - int [Literal: 1]
						// IfStmt-  - 
							// BinaryOperator-  - int [Binary Operator: NE (!=)]
								// UnexposedExpr- c01 - int
									// DeclRefExpr- c01 - int
								// UnexposedExpr- c12 - int
									// DeclRefExpr- c12 - int
							// CompoundStmt-  - 
								// DeclStmt-  - 
									// VarDecl- z - int
								// BinaryOperator-  - int [Binary Operator: Assign (=)]
									// DeclRefExpr- c - int
									// ParenExpr-  - int
										// BinaryOperator-  - int [Binary Operator: LT (<)]
											// UnexposedExpr- y0 - float
												// MemberRefExpr- y0 - float
													// ParenExpr-  - stbtt__edge *
														// UnaryOperator-  - stbtt__edge * [Unary Operator: AddrOf (&)]
															// ArraySubscriptExpr-  - stbtt__edge
																// UnexposedExpr- p - stbtt__edge *
																	// DeclRefExpr- p - stbtt__edge *
																// IntegerLiteral-  - int [Literal: 0]
											// UnexposedExpr- y0 - float
												// MemberRefExpr- y0 - float
													// ParenExpr-  - stbtt__edge *
														// UnaryOperator-  - stbtt__edge * [Unary Operator: AddrOf (&)]
															// ArraySubscriptExpr-  - stbtt__edge
																// UnexposedExpr- p - stbtt__edge *
																	// DeclRefExpr- p - stbtt__edge *
																// BinaryOperator-  - int [Binary Operator: Sub (-)]
																	// UnexposedExpr- n - int
																		// DeclRefExpr- n - int
																	// IntegerLiteral-  - int [Literal: 1]
								// BinaryOperator-  - int [Binary Operator: Assign (=)]
									// DeclRefExpr- z - int
									// ConditionalOperator-  - int
										// ParenExpr-  - int
											// BinaryOperator-  - int [Binary Operator: EQ (==)]
												// UnexposedExpr- c - int
													// DeclRefExpr- c - int
												// UnexposedExpr- c12 - int
													// DeclRefExpr- c12 - int
										// IntegerLiteral-  - int [Literal: 0]
										// BinaryOperator-  - int [Binary Operator: Sub (-)]
											// UnexposedExpr- n - int
												// DeclRefExpr- n - int
											// IntegerLiteral-  - int [Literal: 1]
								// BinaryOperator-  - stbtt__edge [Binary Operator: Assign (=)]
									// DeclRefExpr- t - stbtt__edge
									// UnexposedExpr-  - stbtt__edge
										// ArraySubscriptExpr-  - stbtt__edge
											// UnexposedExpr- p - stbtt__edge *
												// DeclRefExpr- p - stbtt__edge *
											// UnexposedExpr- z - int
												// DeclRefExpr- z - int
								// BinaryOperator-  - stbtt__edge [Binary Operator: Assign (=)]
									// ArraySubscriptExpr-  - stbtt__edge
										// UnexposedExpr- p - stbtt__edge *
											// DeclRefExpr- p - stbtt__edge *
										// UnexposedExpr- z - int
											// DeclRefExpr- z - int
									// UnexposedExpr-  - stbtt__edge
										// ArraySubscriptExpr-  - stbtt__edge
											// UnexposedExpr- p - stbtt__edge *
												// DeclRefExpr- p - stbtt__edge *
											// UnexposedExpr- m - int
												// DeclRefExpr- m - int
								// BinaryOperator-  - stbtt__edge [Binary Operator: Assign (=)]
									// ArraySubscriptExpr-  - stbtt__edge
										// UnexposedExpr- p - stbtt__edge *
											// DeclRefExpr- p - stbtt__edge *
										// UnexposedExpr- m - int
											// DeclRefExpr- m - int
									// UnexposedExpr- t - stbtt__edge
										// DeclRefExpr- t - stbtt__edge
						// BinaryOperator-  - stbtt__edge [Binary Operator: Assign (=)]
							// DeclRefExpr- t - stbtt__edge
							// UnexposedExpr-  - stbtt__edge
								// ArraySubscriptExpr-  - stbtt__edge
									// UnexposedExpr- p - stbtt__edge *
										// DeclRefExpr- p - stbtt__edge *
									// IntegerLiteral-  - int [Literal: 0]
						// BinaryOperator-  - stbtt__edge [Binary Operator: Assign (=)]
							// ArraySubscriptExpr-  - stbtt__edge
								// UnexposedExpr- p - stbtt__edge *
									// DeclRefExpr- p - stbtt__edge *
								// IntegerLiteral-  - int [Literal: 0]
							// UnexposedExpr-  - stbtt__edge
								// ArraySubscriptExpr-  - stbtt__edge
									// UnexposedExpr- p - stbtt__edge *
										// DeclRefExpr- p - stbtt__edge *
									// UnexposedExpr- m - int
										// DeclRefExpr- m - int
						// BinaryOperator-  - stbtt__edge [Binary Operator: Assign (=)]
							// ArraySubscriptExpr-  - stbtt__edge
								// UnexposedExpr- p - stbtt__edge *
									// DeclRefExpr- p - stbtt__edge *
								// UnexposedExpr- m - int
									// DeclRefExpr- m - int
							// UnexposedExpr- t - stbtt__edge
								// DeclRefExpr- t - stbtt__edge
						// BinaryOperator-  - int [Binary Operator: Assign (=)]
							// DeclRefExpr- i - int
							// IntegerLiteral-  - int [Literal: 1]
						// BinaryOperator-  - int [Binary Operator: Assign (=)]
							// DeclRefExpr- j - int
							// BinaryOperator-  - int [Binary Operator: Sub (-)]
								// UnexposedExpr- n - int
									// DeclRefExpr- n - int
								// IntegerLiteral-  - int [Literal: 1]
						// ForStmt-  - 
							// CompoundStmt-  - 
								// ForStmt-  - 
									// BinaryOperator-  - int [Binary Operator: Assign (=)]
										// DeclRefExpr- i - int
										// UnexposedExpr- i - int
											// DeclRefExpr- i - int
									// UnaryOperator-  - int [Unary Operator: PreInc (++)]
										// DeclRefExpr- i - int
									// CompoundStmt-  - 
										// IfStmt-  - 
											// UnaryOperator-  - int [Unary Operator: LNot (!)]
												// ParenExpr-  - int
													// BinaryOperator-  - int [Binary Operator: LT (<)]
														// UnexposedExpr- y0 - float
															// MemberRefExpr- y0 - float
																// ParenExpr-  - stbtt__edge *
																	// UnaryOperator-  - stbtt__edge * [Unary Operator: AddrOf (&)]
																		// ArraySubscriptExpr-  - stbtt__edge
																			// UnexposedExpr- p - stbtt__edge *
																				// DeclRefExpr- p - stbtt__edge *
																			// UnexposedExpr- i - int
																				// DeclRefExpr- i - int
														// UnexposedExpr- y0 - float
															// MemberRefExpr- y0 - float
																// ParenExpr-  - stbtt__edge *
																	// UnaryOperator-  - stbtt__edge * [Unary Operator: AddrOf (&)]
																		// ArraySubscriptExpr-  - stbtt__edge
																			// UnexposedExpr- p - stbtt__edge *
																				// DeclRefExpr- p - stbtt__edge *
																			// IntegerLiteral-  - int [Literal: 0]
											// BreakStmt-  - 
								// ForStmt-  - 
									// BinaryOperator-  - int [Binary Operator: Assign (=)]
										// DeclRefExpr- j - int
										// UnexposedExpr- j - int
											// DeclRefExpr- j - int
									// UnaryOperator-  - int [Unary Operator: PreDec (--)]
										// DeclRefExpr- j - int
									// CompoundStmt-  - 
										// IfStmt-  - 
											// UnaryOperator-  - int [Unary Operator: LNot (!)]
												// ParenExpr-  - int
													// BinaryOperator-  - int [Binary Operator: LT (<)]
														// UnexposedExpr- y0 - float
															// MemberRefExpr- y0 - float
																// ParenExpr-  - stbtt__edge *
																	// UnaryOperator-  - stbtt__edge * [Unary Operator: AddrOf (&)]
																		// ArraySubscriptExpr-  - stbtt__edge
																			// UnexposedExpr- p - stbtt__edge *
																				// DeclRefExpr- p - stbtt__edge *
																			// IntegerLiteral-  - int [Literal: 0]
														// UnexposedExpr- y0 - float
															// MemberRefExpr- y0 - float
																// ParenExpr-  - stbtt__edge *
																	// UnaryOperator-  - stbtt__edge * [Unary Operator: AddrOf (&)]
																		// ArraySubscriptExpr-  - stbtt__edge
																			// UnexposedExpr- p - stbtt__edge *
																				// DeclRefExpr- p - stbtt__edge *
																			// UnexposedExpr- j - int
																				// DeclRefExpr- j - int
											// BreakStmt-  - 
								// IfStmt-  - 
									// BinaryOperator-  - int [Binary Operator: GE (>=)]
										// UnexposedExpr- i - int
											// DeclRefExpr- i - int
										// UnexposedExpr- j - int
											// DeclRefExpr- j - int
									// BreakStmt-  - 
								// BinaryOperator-  - stbtt__edge [Binary Operator: Assign (=)]
									// DeclRefExpr- t - stbtt__edge
									// UnexposedExpr-  - stbtt__edge
										// ArraySubscriptExpr-  - stbtt__edge
											// UnexposedExpr- p - stbtt__edge *
												// DeclRefExpr- p - stbtt__edge *
											// UnexposedExpr- i - int
												// DeclRefExpr- i - int
								// BinaryOperator-  - stbtt__edge [Binary Operator: Assign (=)]
									// ArraySubscriptExpr-  - stbtt__edge
										// UnexposedExpr- p - stbtt__edge *
											// DeclRefExpr- p - stbtt__edge *
										// UnexposedExpr- i - int
											// DeclRefExpr- i - int
									// UnexposedExpr-  - stbtt__edge
										// ArraySubscriptExpr-  - stbtt__edge
											// UnexposedExpr- p - stbtt__edge *
												// DeclRefExpr- p - stbtt__edge *
											// UnexposedExpr- j - int
												// DeclRefExpr- j - int
								// BinaryOperator-  - stbtt__edge [Binary Operator: Assign (=)]
									// ArraySubscriptExpr-  - stbtt__edge
										// UnexposedExpr- p - stbtt__edge *
											// DeclRefExpr- p - stbtt__edge *
										// UnexposedExpr- j - int
											// DeclRefExpr- j - int
									// UnexposedExpr- t - stbtt__edge
										// DeclRefExpr- t - stbtt__edge
								// UnaryOperator-  - int [Unary Operator: PreInc (++)]
									// DeclRefExpr- i - int
								// UnaryOperator-  - int [Unary Operator: PreDec (--)]
									// DeclRefExpr- j - int
						// IfStmt-  - 
							// BinaryOperator-  - int [Binary Operator: LT (<)]
								// UnexposedExpr- j - int
									// DeclRefExpr- j - int
								// ParenExpr-  - int
									// BinaryOperator-  - int [Binary Operator: Sub (-)]
										// UnexposedExpr- n - int
											// DeclRefExpr- n - int
										// UnexposedExpr- i - int
											// DeclRefExpr- i - int
							// CompoundStmt-  - 
								// CallExpr- stbtt__sort_edges_quicksort - void
									// UnexposedExpr- stbtt__sort_edges_quicksort - void (*)(stbtt__edge *, int)
										// DeclRefExpr- stbtt__sort_edges_quicksort - void (stbtt__edge *, int)
									// UnexposedExpr- p - stbtt__edge *
										// DeclRefExpr- p - stbtt__edge *
									// UnexposedExpr- j - int
										// DeclRefExpr- j - int
								// BinaryOperator-  - stbtt__edge * [Binary Operator: Assign (=)]
									// DeclRefExpr- p - stbtt__edge *
									// BinaryOperator-  - stbtt__edge * [Binary Operator: Add (+)]
										// UnexposedExpr- p - stbtt__edge *
											// DeclRefExpr- p - stbtt__edge *
										// UnexposedExpr- i - int
											// DeclRefExpr- i - int
								// BinaryOperator-  - int [Binary Operator: Assign (=)]
									// DeclRefExpr- n - int
									// BinaryOperator-  - int [Binary Operator: Sub (-)]
										// UnexposedExpr- n - int
											// DeclRefExpr- n - int
										// UnexposedExpr- i - int
											// DeclRefExpr- i - int
							// CompoundStmt-  - 
								// CallExpr- stbtt__sort_edges_quicksort - void
									// UnexposedExpr- stbtt__sort_edges_quicksort - void (*)(stbtt__edge *, int)
										// DeclRefExpr- stbtt__sort_edges_quicksort - void (stbtt__edge *, int)
									// BinaryOperator-  - stbtt__edge * [Binary Operator: Add (+)]
										// UnexposedExpr- p - stbtt__edge *
											// DeclRefExpr- p - stbtt__edge *
										// UnexposedExpr- i - int
											// DeclRefExpr- i - int
									// BinaryOperator-  - int [Binary Operator: Sub (-)]
										// UnexposedExpr- n - int
											// DeclRefExpr- n - int
										// UnexposedExpr- i - int
											// DeclRefExpr- i - int
								// BinaryOperator-  - int [Binary Operator: Assign (=)]
									// DeclRefExpr- n - int
									// UnexposedExpr- j - int
										// DeclRefExpr- j - int
		// FunctionDecl- stbtt__sort_edges - void (stbtt__edge *, int)
			// ParmDecl- p - stbtt__edge *
				// TypeRef- stbtt__edge - stbtt__edge
			// ParmDecl- n - int
			// CompoundStmt-  - 
				// CallExpr- stbtt__sort_edges_quicksort - void
					// UnexposedExpr- stbtt__sort_edges_quicksort - void (*)(stbtt__edge *, int)
						// DeclRefExpr- stbtt__sort_edges_quicksort - void (stbtt__edge *, int)
					// UnexposedExpr- p - stbtt__edge *
						// DeclRefExpr- p - stbtt__edge *
					// UnexposedExpr- n - int
						// DeclRefExpr- n - int
				// CallExpr- stbtt__sort_edges_ins_sort - void
					// UnexposedExpr- stbtt__sort_edges_ins_sort - void (*)(stbtt__edge *, int)
						// DeclRefExpr- stbtt__sort_edges_ins_sort - void (stbtt__edge *, int)
					// UnexposedExpr- p - stbtt__edge *
						// DeclRefExpr- p - stbtt__edge *
					// UnexposedExpr- n - int
						// DeclRefExpr- n - int
		// StructDecl-  - stbtt__point
			// FieldDecl- x - float
			// FieldDecl- y - float
		// TypedefDecl- stbtt__point - stbtt__point
			// StructDecl-  - stbtt__point
				// FieldDecl- x - float
				// FieldDecl- y - float
		// FunctionDecl- stbtt__rasterize - void (stbtt__bitmap *, stbtt__point *, int *, int, float, float, float, float, int, int, int, void *)
			// ParmDecl- result - stbtt__bitmap *
				// TypeRef- stbtt__bitmap - stbtt__bitmap
			// ParmDecl- pts - stbtt__point *
				// TypeRef- stbtt__point - stbtt__point
			// ParmDecl- wcount - int *
			// ParmDecl- windings - int
			// ParmDecl- scale_x - float
			// ParmDecl- scale_y - float
			// ParmDecl- shift_x - float
			// ParmDecl- shift_y - float
			// ParmDecl- off_x - int
			// ParmDecl- off_y - int
			// ParmDecl- invert - int
			// ParmDecl- userdata - void *
			// CompoundStmt-  - 
				// DeclStmt-  - 
					// VarDecl- y_scale_inv - float
						// ConditionalOperator-  - float
							// UnexposedExpr- invert - int
								// DeclRefExpr- invert - int
							// UnaryOperator-  - float [Unary Operator: Minus (-)]
								// UnexposedExpr- scale_y - float
									// DeclRefExpr- scale_y - float
							// UnexposedExpr- scale_y - float
								// DeclRefExpr- scale_y - float
				// DeclStmt-  - 
					// VarDecl- e - stbtt__edge *
						// TypeRef- stbtt__edge - stbtt__edge
				// DeclStmt-  - 
					// VarDecl- n - int
					// VarDecl- i - int
					// VarDecl- j - int
					// VarDecl- k - int
					// VarDecl- m - int
				// DeclStmt-  - 
					// VarDecl- vsubsample - int
						// IntegerLiteral-  - int [Literal: 1]
				// BinaryOperator-  - int [Binary Operator: Assign (=)]
					// DeclRefExpr- n - int
					// IntegerLiteral-  - int [Literal: 0]
				// ForStmt-  - 
					// BinaryOperator-  - int [Binary Operator: Assign (=)]
						// DeclRefExpr- i - int
						// IntegerLiteral-  - int [Literal: 0]
					// BinaryOperator-  - int [Binary Operator: LT (<)]
						// UnexposedExpr- i - int
							// DeclRefExpr- i - int
						// UnexposedExpr- windings - int
							// DeclRefExpr- windings - int
					// UnaryOperator-  - int [Unary Operator: PreInc (++)]
						// DeclRefExpr- i - int
					// CompoundAssignOperator-  - int
						// DeclRefExpr- n - int
						// UnexposedExpr-  - int
							// ArraySubscriptExpr-  - int
								// UnexposedExpr- wcount - int *
									// DeclRefExpr- wcount - int *
								// UnexposedExpr- i - int
									// DeclRefExpr- i - int
				// BinaryOperator-  - stbtt__edge * [Binary Operator: Assign (=)]
					// DeclRefExpr- e - stbtt__edge *
					// CStyleCastExpr-  - stbtt__edge *
						// TypeRef- stbtt__edge - stbtt__edge
						// CallExpr- malloc - void *
							// UnexposedExpr- malloc - void *(*)(unsigned long long)
								// DeclRefExpr- malloc - void *(unsigned long long)
							// BinaryOperator-  - unsigned long long [Binary Operator: Mul (*)]
								// UnaryExpr-  - unsigned long long [Unary Operator: 99999 ()]
									// ParenExpr-  - stbtt__edge
										// UnaryOperator-  - stbtt__edge [Unary Operator: Deref (*)]
											// UnexposedExpr- e - stbtt__edge *
												// DeclRefExpr- e - stbtt__edge *
								// UnexposedExpr-  - unsigned long long
									// ParenExpr-  - int
										// BinaryOperator-  - int [Binary Operator: Add (+)]
											// UnexposedExpr- n - int
												// DeclRefExpr- n - int
											// IntegerLiteral-  - int [Literal: 1]
				// IfStmt-  - 
					// BinaryOperator-  - int [Binary Operator: EQ (==)]
						// UnexposedExpr- e - stbtt__edge *
							// DeclRefExpr- e - stbtt__edge *
						// UnexposedExpr-  - stbtt__edge *
							// IntegerLiteral-  - int [Literal: 0]
					// ReturnStmt-  - 
				// BinaryOperator-  - int [Binary Operator: Assign (=)]
					// DeclRefExpr- n - int
					// IntegerLiteral-  - int [Literal: 0]
				// BinaryOperator-  - int [Binary Operator: Assign (=)]
					// DeclRefExpr- m - int
					// IntegerLiteral-  - int [Literal: 0]
				// ForStmt-  - 
					// BinaryOperator-  - int [Binary Operator: Assign (=)]
						// DeclRefExpr- i - int
						// IntegerLiteral-  - int [Literal: 0]
					// BinaryOperator-  - int [Binary Operator: LT (<)]
						// UnexposedExpr- i - int
							// DeclRefExpr- i - int
						// UnexposedExpr- windings - int
							// DeclRefExpr- windings - int
					// UnaryOperator-  - int [Unary Operator: PreInc (++)]
						// DeclRefExpr- i - int
					// CompoundStmt-  - 
						// DeclStmt-  - 
							// VarDecl- p - stbtt__point *
								// TypeRef- stbtt__point - stbtt__point
								// BinaryOperator-  - stbtt__point * [Binary Operator: Add (+)]
									// UnexposedExpr- pts - stbtt__point *
										// DeclRefExpr- pts - stbtt__point *
									// UnexposedExpr- m - int
										// DeclRefExpr- m - int
						// CompoundAssignOperator-  - int
							// DeclRefExpr- m - int
							// UnexposedExpr-  - int
								// ArraySubscriptExpr-  - int
									// UnexposedExpr- wcount - int *
										// DeclRefExpr- wcount - int *
									// UnexposedExpr- i - int
										// DeclRefExpr- i - int
						// BinaryOperator-  - int [Binary Operator: Assign (=)]
							// DeclRefExpr- j - int
							// BinaryOperator-  - int [Binary Operator: Sub (-)]
								// UnexposedExpr-  - int
									// ArraySubscriptExpr-  - int
										// UnexposedExpr- wcount - int *
											// DeclRefExpr- wcount - int *
										// UnexposedExpr- i - int
											// DeclRefExpr- i - int
								// IntegerLiteral-  - int [Literal: 1]
						// ForStmt-  - 
							// BinaryOperator-  - int [Binary Operator: Assign (=)]
								// DeclRefExpr- k - int
								// IntegerLiteral-  - int [Literal: 0]
							// BinaryOperator-  - int [Binary Operator: LT (<)]
								// UnexposedExpr- k - int
									// DeclRefExpr- k - int
								// UnexposedExpr-  - int
									// ArraySubscriptExpr-  - int
										// UnexposedExpr- wcount - int *
											// DeclRefExpr- wcount - int *
										// UnexposedExpr- i - int
											// DeclRefExpr- i - int
							// BinaryOperator-  - int [Binary Operator: Assign (=)]
								// DeclRefExpr- j - int
								// UnaryOperator-  - int [Unary Operator: PostInc (++)]
									// DeclRefExpr- k - int
							// CompoundStmt-  - 
								// DeclStmt-  - 
									// VarDecl- a - int
										// UnexposedExpr- k - int
											// DeclRefExpr- k - int
									// VarDecl- b - int
										// UnexposedExpr- j - int
											// DeclRefExpr- j - int
								// IfStmt-  - 
									// BinaryOperator-  - int [Binary Operator: EQ (==)]
										// UnexposedExpr- y - float
											// MemberRefExpr- y - float
												// ArraySubscriptExpr-  - stbtt__point
													// UnexposedExpr- p - stbtt__point *
														// DeclRefExpr- p - stbtt__point *
													// UnexposedExpr- j - int
														// DeclRefExpr- j - int
										// UnexposedExpr- y - float
											// MemberRefExpr- y - float
												// ArraySubscriptExpr-  - stbtt__point
													// UnexposedExpr- p - stbtt__point *
														// DeclRefExpr- p - stbtt__point *
													// UnexposedExpr- k - int
														// DeclRefExpr- k - int
									// ContinueStmt-  - 
								// BinaryOperator-  - int [Binary Operator: Assign (=)]
									// MemberRefExpr- invert - int
										// ArraySubscriptExpr-  - stbtt__edge
											// UnexposedExpr- e - stbtt__edge *
												// DeclRefExpr- e - stbtt__edge *
											// UnexposedExpr- n - int
												// DeclRefExpr- n - int
									// IntegerLiteral-  - int [Literal: 0]
								// IfStmt-  - 
									// BinaryOperator-  - int [Binary Operator: LOr (||)]
										// ParenExpr-  - int
											// BinaryOperator-  - int [Binary Operator: LAnd (&&)]
												// UnexposedExpr- invert - int
													// DeclRefExpr- invert - int
												// BinaryOperator-  - int [Binary Operator: GT (>)]
													// UnexposedExpr- y - float
														// MemberRefExpr- y - float
															// ArraySubscriptExpr-  - stbtt__point
																// UnexposedExpr- p - stbtt__point *
																	// DeclRefExpr- p - stbtt__point *
																// UnexposedExpr- j - int
																	// DeclRefExpr- j - int
													// UnexposedExpr- y - float
														// MemberRefExpr- y - float
															// ArraySubscriptExpr-  - stbtt__point
																// UnexposedExpr- p - stbtt__point *
																	// DeclRefExpr- p - stbtt__point *
																// UnexposedExpr- k - int
																	// DeclRefExpr- k - int
										// ParenExpr-  - int
											// BinaryOperator-  - int [Binary Operator: LAnd (&&)]
												// UnaryOperator-  - int [Unary Operator: LNot (!)]
													// UnexposedExpr- invert - int
														// DeclRefExpr- invert - int
												// BinaryOperator-  - int [Binary Operator: LT (<)]
													// UnexposedExpr- y - float
														// MemberRefExpr- y - float
															// ArraySubscriptExpr-  - stbtt__point
																// UnexposedExpr- p - stbtt__point *
																	// DeclRefExpr- p - stbtt__point *
																// UnexposedExpr- j - int
																	// DeclRefExpr- j - int
													// UnexposedExpr- y - float
														// MemberRefExpr- y - float
															// ArraySubscriptExpr-  - stbtt__point
																// UnexposedExpr- p - stbtt__point *
																	// DeclRefExpr- p - stbtt__point *
																// UnexposedExpr- k - int
																	// DeclRefExpr- k - int
									// CompoundStmt-  - 
										// BinaryOperator-  - int [Binary Operator: Assign (=)]
											// MemberRefExpr- invert - int
												// ArraySubscriptExpr-  - stbtt__edge
													// UnexposedExpr- e - stbtt__edge *
														// DeclRefExpr- e - stbtt__edge *
													// UnexposedExpr- n - int
														// DeclRefExpr- n - int
											// IntegerLiteral-  - int [Literal: 1]
										// BinaryOperator-  - int [Binary Operator: Assign (=)]
											// DeclRefExpr- a - int
											// UnexposedExpr- j - int
												// DeclRefExpr- j - int
										// BinaryOperator-  - int [Binary Operator: Assign (=)]
											// DeclRefExpr- b - int
											// UnexposedExpr- k - int
												// DeclRefExpr- k - int
								// BinaryOperator-  - float [Binary Operator: Assign (=)]
									// MemberRefExpr- x0 - float
										// ArraySubscriptExpr-  - stbtt__edge
											// UnexposedExpr- e - stbtt__edge *
												// DeclRefExpr- e - stbtt__edge *
											// UnexposedExpr- n - int
												// DeclRefExpr- n - int
									// BinaryOperator-  - float [Binary Operator: Add (+)]
										// BinaryOperator-  - float [Binary Operator: Mul (*)]
											// UnexposedExpr- x - float
												// MemberRefExpr- x - float
													// ArraySubscriptExpr-  - stbtt__point
														// UnexposedExpr- p - stbtt__point *
															// DeclRefExpr- p - stbtt__point *
														// UnexposedExpr- a - int
															// DeclRefExpr- a - int
											// UnexposedExpr- scale_x - float
												// DeclRefExpr- scale_x - float
										// UnexposedExpr- shift_x - float
											// DeclRefExpr- shift_x - float
								// BinaryOperator-  - float [Binary Operator: Assign (=)]
									// MemberRefExpr- y0 - float
										// ArraySubscriptExpr-  - stbtt__edge
											// UnexposedExpr- e - stbtt__edge *
												// DeclRefExpr- e - stbtt__edge *
											// UnexposedExpr- n - int
												// DeclRefExpr- n - int
									// BinaryOperator-  - float [Binary Operator: Mul (*)]
										// ParenExpr-  - float
											// BinaryOperator-  - float [Binary Operator: Add (+)]
												// BinaryOperator-  - float [Binary Operator: Mul (*)]
													// UnexposedExpr- y - float
														// MemberRefExpr- y - float
															// ArraySubscriptExpr-  - stbtt__point
																// UnexposedExpr- p - stbtt__point *
																	// DeclRefExpr- p - stbtt__point *
																// UnexposedExpr- a - int
																	// DeclRefExpr- a - int
													// UnexposedExpr- y_scale_inv - float
														// DeclRefExpr- y_scale_inv - float
												// UnexposedExpr- shift_y - float
													// DeclRefExpr- shift_y - float
										// UnexposedExpr- vsubsample - float
											// UnexposedExpr- vsubsample - int
												// DeclRefExpr- vsubsample - int
								// BinaryOperator-  - float [Binary Operator: Assign (=)]
									// MemberRefExpr- x1 - float
										// ArraySubscriptExpr-  - stbtt__edge
											// UnexposedExpr- e - stbtt__edge *
												// DeclRefExpr- e - stbtt__edge *
											// UnexposedExpr- n - int
												// DeclRefExpr- n - int
									// BinaryOperator-  - float [Binary Operator: Add (+)]
										// BinaryOperator-  - float [Binary Operator: Mul (*)]
											// UnexposedExpr- x - float
												// MemberRefExpr- x - float
													// ArraySubscriptExpr-  - stbtt__point
														// UnexposedExpr- p - stbtt__point *
															// DeclRefExpr- p - stbtt__point *
														// UnexposedExpr- b - int
															// DeclRefExpr- b - int
											// UnexposedExpr- scale_x - float
												// DeclRefExpr- scale_x - float
										// UnexposedExpr- shift_x - float
											// DeclRefExpr- shift_x - float
								// BinaryOperator-  - float [Binary Operator: Assign (=)]
									// MemberRefExpr- y1 - float
										// ArraySubscriptExpr-  - stbtt__edge
											// UnexposedExpr- e - stbtt__edge *
												// DeclRefExpr- e - stbtt__edge *
											// UnexposedExpr- n - int
												// DeclRefExpr- n - int
									// BinaryOperator-  - float [Binary Operator: Mul (*)]
										// ParenExpr-  - float
											// BinaryOperator-  - float [Binary Operator: Add (+)]
												// BinaryOperator-  - float [Binary Operator: Mul (*)]
													// UnexposedExpr- y - float
														// MemberRefExpr- y - float
															// ArraySubscriptExpr-  - stbtt__point
																// UnexposedExpr- p - stbtt__point *
																	// DeclRefExpr- p - stbtt__point *
																// UnexposedExpr- b - int
																	// DeclRefExpr- b - int
													// UnexposedExpr- y_scale_inv - float
														// DeclRefExpr- y_scale_inv - float
												// UnexposedExpr- shift_y - float
													// DeclRefExpr- shift_y - float
										// UnexposedExpr- vsubsample - float
											// UnexposedExpr- vsubsample - int
												// DeclRefExpr- vsubsample - int
								// UnaryOperator-  - int [Unary Operator: PreInc (++)]
									// DeclRefExpr- n - int
				// CallExpr- stbtt__sort_edges - void
					// UnexposedExpr- stbtt__sort_edges - void (*)(stbtt__edge *, int)
						// DeclRefExpr- stbtt__sort_edges - void (stbtt__edge *, int)
					// UnexposedExpr- e - stbtt__edge *
						// DeclRefExpr- e - stbtt__edge *
					// UnexposedExpr- n - int
						// DeclRefExpr- n - int
				// CallExpr- stbtt__rasterize_sorted_edges - void
					// UnexposedExpr- stbtt__rasterize_sorted_edges - void (*)(stbtt__bitmap *, stbtt__edge *, int, int, int, int, void *)
						// DeclRefExpr- stbtt__rasterize_sorted_edges - void (stbtt__bitmap *, stbtt__edge *, int, int, int, int, void *)
					// UnexposedExpr- result - stbtt__bitmap *
						// DeclRefExpr- result - stbtt__bitmap *
					// UnexposedExpr- e - stbtt__edge *
						// DeclRefExpr- e - stbtt__edge *
					// UnexposedExpr- n - int
						// DeclRefExpr- n - int
					// UnexposedExpr- vsubsample - int
						// DeclRefExpr- vsubsample - int
					// UnexposedExpr- off_x - int
						// DeclRefExpr- off_x - int
					// UnexposedExpr- off_y - int
						// DeclRefExpr- off_y - int
					// UnexposedExpr- userdata - void *
						// DeclRefExpr- userdata - void *
				// CallExpr- free - void
					// UnexposedExpr- free - void (*)(void *) __attribute__((cdecl))
						// DeclRefExpr- free - void (void *)
					// UnexposedExpr- e - void *
						// UnexposedExpr- e - stbtt__edge *
							// DeclRefExpr- e - stbtt__edge *
		// FunctionDecl- stbtt__add_point - void (stbtt__point *, int, float, float)
			// ParmDecl- points - stbtt__point *
				// TypeRef- stbtt__point - stbtt__point
			// ParmDecl- n - int
			// ParmDecl- x - float
			// ParmDecl- y - float
			// CompoundStmt-  - 
				// IfStmt-  - 
					// UnaryOperator-  - int [Unary Operator: LNot (!)]
						// UnexposedExpr- points - stbtt__point *
							// DeclRefExpr- points - stbtt__point *
					// ReturnStmt-  - 
				// BinaryOperator-  - float [Binary Operator: Assign (=)]
					// MemberRefExpr- x - float
						// ArraySubscriptExpr-  - stbtt__point
							// UnexposedExpr- points - stbtt__point *
								// DeclRefExpr- points - stbtt__point *
							// UnexposedExpr- n - int
								// DeclRefExpr- n - int
					// UnexposedExpr- x - float
						// DeclRefExpr- x - float
				// BinaryOperator-  - float [Binary Operator: Assign (=)]
					// MemberRefExpr- y - float
						// ArraySubscriptExpr-  - stbtt__point
							// UnexposedExpr- points - stbtt__point *
								// DeclRefExpr- points - stbtt__point *
							// UnexposedExpr- n - int
								// DeclRefExpr- n - int
					// UnexposedExpr- y - float
						// DeclRefExpr- y - float
		// FunctionDecl- stbtt__tesselate_curve - int (stbtt__point *, int *, float, float, float, float, float, float, float, int)
			// ParmDecl- points - stbtt__point *
				// TypeRef- stbtt__point - stbtt__point
			// ParmDecl- num_points - int *
			// ParmDecl- x0 - float
			// ParmDecl- y0 - float
			// ParmDecl- x1 - float
			// ParmDecl- y1 - float
			// ParmDecl- x2 - float
			// ParmDecl- y2 - float
			// ParmDecl- objspace_flatness_squared - float
			// ParmDecl- n - int
			// CompoundStmt-  - 
				// DeclStmt-  - 
					// VarDecl- mx - float
						// BinaryOperator-  - float [Binary Operator: Div (/)]
							// ParenExpr-  - float
								// BinaryOperator-  - float [Binary Operator: Add (+)]
									// BinaryOperator-  - float [Binary Operator: Add (+)]
										// UnexposedExpr- x0 - float
											// DeclRefExpr- x0 - float
										// BinaryOperator-  - float [Binary Operator: Mul (*)]
											// UnexposedExpr-  - float
												// IntegerLiteral-  - int [Literal: 2]
											// UnexposedExpr- x1 - float
												// DeclRefExpr- x1 - float
									// UnexposedExpr- x2 - float
										// DeclRefExpr- x2 - float
							// UnexposedExpr-  - float
								// IntegerLiteral-  - int [Literal: 4]
				// DeclStmt-  - 
					// VarDecl- my - float
						// BinaryOperator-  - float [Binary Operator: Div (/)]
							// ParenExpr-  - float
								// BinaryOperator-  - float [Binary Operator: Add (+)]
									// BinaryOperator-  - float [Binary Operator: Add (+)]
										// UnexposedExpr- y0 - float
											// DeclRefExpr- y0 - float
										// BinaryOperator-  - float [Binary Operator: Mul (*)]
											// UnexposedExpr-  - float
												// IntegerLiteral-  - int [Literal: 2]
											// UnexposedExpr- y1 - float
												// DeclRefExpr- y1 - float
									// UnexposedExpr- y2 - float
										// DeclRefExpr- y2 - float
							// UnexposedExpr-  - float
								// IntegerLiteral-  - int [Literal: 4]
				// DeclStmt-  - 
					// VarDecl- dx - float
						// BinaryOperator-  - float [Binary Operator: Sub (-)]
							// BinaryOperator-  - float [Binary Operator: Div (/)]
								// ParenExpr-  - float
									// BinaryOperator-  - float [Binary Operator: Add (+)]
										// UnexposedExpr- x0 - float
											// DeclRefExpr- x0 - float
										// UnexposedExpr- x2 - float
											// DeclRefExpr- x2 - float
								// UnexposedExpr-  - float
									// IntegerLiteral-  - int [Literal: 2]
							// UnexposedExpr- mx - float
								// DeclRefExpr- mx - float
				// DeclStmt-  - 
					// VarDecl- dy - float
						// BinaryOperator-  - float [Binary Operator: Sub (-)]
							// BinaryOperator-  - float [Binary Operator: Div (/)]
								// ParenExpr-  - float
									// BinaryOperator-  - float [Binary Operator: Add (+)]
										// UnexposedExpr- y0 - float
											// DeclRefExpr- y0 - float
										// UnexposedExpr- y2 - float
											// DeclRefExpr- y2 - float
								// UnexposedExpr-  - float
									// IntegerLiteral-  - int [Literal: 2]
							// UnexposedExpr- my - float
								// DeclRefExpr- my - float
				// IfStmt-  - 
					// BinaryOperator-  - int [Binary Operator: GT (>)]
						// UnexposedExpr- n - int
							// DeclRefExpr- n - int
						// IntegerLiteral-  - int [Literal: 16]
					// ReturnStmt-  - 
						// IntegerLiteral-  - int [Literal: 1]
				// IfStmt-  - 
					// BinaryOperator-  - int [Binary Operator: GT (>)]
						// BinaryOperator-  - float [Binary Operator: Add (+)]
							// BinaryOperator-  - float [Binary Operator: Mul (*)]
								// UnexposedExpr- dx - float
									// DeclRefExpr- dx - float
								// UnexposedExpr- dx - float
									// DeclRefExpr- dx - float
							// BinaryOperator-  - float [Binary Operator: Mul (*)]
								// UnexposedExpr- dy - float
									// DeclRefExpr- dy - float
								// UnexposedExpr- dy - float
									// DeclRefExpr- dy - float
						// UnexposedExpr- objspace_flatness_squared - float
							// DeclRefExpr- objspace_flatness_squared - float
					// CompoundStmt-  - 
						// CallExpr- stbtt__tesselate_curve - int
							// UnexposedExpr- stbtt__tesselate_curve - int (*)(stbtt__point *, int *, float, float, float, float, float, float, float, int)
								// DeclRefExpr- stbtt__tesselate_curve - int (stbtt__point *, int *, float, float, float, float, float, float, float, int)
							// UnexposedExpr- points - stbtt__point *
								// DeclRefExpr- points - stbtt__point *
							// UnexposedExpr- num_points - int *
								// DeclRefExpr- num_points - int *
							// UnexposedExpr- x0 - float
								// DeclRefExpr- x0 - float
							// UnexposedExpr- y0 - float
								// DeclRefExpr- y0 - float
							// BinaryOperator-  - float [Binary Operator: Div (/)]
								// ParenExpr-  - float
									// BinaryOperator-  - float [Binary Operator: Add (+)]
										// UnexposedExpr- x0 - float
											// DeclRefExpr- x0 - float
										// UnexposedExpr- x1 - float
											// DeclRefExpr- x1 - float
								// FloatingLiteral-  - float [Literal: 2]
							// BinaryOperator-  - float [Binary Operator: Div (/)]
								// ParenExpr-  - float
									// BinaryOperator-  - float [Binary Operator: Add (+)]
										// UnexposedExpr- y0 - float
											// DeclRefExpr- y0 - float
										// UnexposedExpr- y1 - float
											// DeclRefExpr- y1 - float
								// FloatingLiteral-  - float [Literal: 2]
							// UnexposedExpr- mx - float
								// DeclRefExpr- mx - float
							// UnexposedExpr- my - float
								// DeclRefExpr- my - float
							// UnexposedExpr- objspace_flatness_squared - float
								// DeclRefExpr- objspace_flatness_squared - float
							// BinaryOperator-  - int [Binary Operator: Add (+)]
								// UnexposedExpr- n - int
									// DeclRefExpr- n - int
								// IntegerLiteral-  - int [Literal: 1]
						// CallExpr- stbtt__tesselate_curve - int
							// UnexposedExpr- stbtt__tesselate_curve - int (*)(stbtt__point *, int *, float, float, float, float, float, float, float, int)
								// DeclRefExpr- stbtt__tesselate_curve - int (stbtt__point *, int *, float, float, float, float, float, float, float, int)
							// UnexposedExpr- points - stbtt__point *
								// DeclRefExpr- points - stbtt__point *
							// UnexposedExpr- num_points - int *
								// DeclRefExpr- num_points - int *
							// UnexposedExpr- mx - float
								// DeclRefExpr- mx - float
							// UnexposedExpr- my - float
								// DeclRefExpr- my - float
							// BinaryOperator-  - float [Binary Operator: Div (/)]
								// ParenExpr-  - float
									// BinaryOperator-  - float [Binary Operator: Add (+)]
										// UnexposedExpr- x1 - float
											// DeclRefExpr- x1 - float
										// UnexposedExpr- x2 - float
											// DeclRefExpr- x2 - float
								// FloatingLiteral-  - float [Literal: 2]
							// BinaryOperator-  - float [Binary Operator: Div (/)]
								// ParenExpr-  - float
									// BinaryOperator-  - float [Binary Operator: Add (+)]
										// UnexposedExpr- y1 - float
											// DeclRefExpr- y1 - float
										// UnexposedExpr- y2 - float
											// DeclRefExpr- y2 - float
								// FloatingLiteral-  - float [Literal: 2]
							// UnexposedExpr- x2 - float
								// DeclRefExpr- x2 - float
							// UnexposedExpr- y2 - float
								// DeclRefExpr- y2 - float
							// UnexposedExpr- objspace_flatness_squared - float
								// DeclRefExpr- objspace_flatness_squared - float
							// BinaryOperator-  - int [Binary Operator: Add (+)]
								// UnexposedExpr- n - int
									// DeclRefExpr- n - int
								// IntegerLiteral-  - int [Literal: 1]
					// CompoundStmt-  - 
						// CallExpr- stbtt__add_point - void
							// UnexposedExpr- stbtt__add_point - void (*)(stbtt__point *, int, float, float)
								// DeclRefExpr- stbtt__add_point - void (stbtt__point *, int, float, float)
							// UnexposedExpr- points - stbtt__point *
								// DeclRefExpr- points - stbtt__point *
							// UnexposedExpr-  - int
								// UnaryOperator-  - int [Unary Operator: Deref (*)]
									// UnexposedExpr- num_points - int *
										// DeclRefExpr- num_points - int *
							// UnexposedExpr- x2 - float
								// DeclRefExpr- x2 - float
							// UnexposedExpr- y2 - float
								// DeclRefExpr- y2 - float
						// BinaryOperator-  - int [Binary Operator: Assign (=)]
							// UnaryOperator-  - int [Unary Operator: Deref (*)]
								// UnexposedExpr- num_points - int *
									// DeclRefExpr- num_points - int *
							// BinaryOperator-  - int [Binary Operator: Add (+)]
								// UnexposedExpr-  - int
									// UnaryOperator-  - int [Unary Operator: Deref (*)]
										// UnexposedExpr- num_points - int *
											// DeclRefExpr- num_points - int *
								// IntegerLiteral-  - int [Literal: 1]
				// ReturnStmt-  - 
					// IntegerLiteral-  - int [Literal: 1]
		// FunctionDecl- stbtt__tesselate_cubic - void (stbtt__point *, int *, float, float, float, float, float, float, float, float, float, int)
			// ParmDecl- points - stbtt__point *
				// TypeRef- stbtt__point - stbtt__point
			// ParmDecl- num_points - int *
			// ParmDecl- x0 - float
			// ParmDecl- y0 - float
			// ParmDecl- x1 - float
			// ParmDecl- y1 - float
			// ParmDecl- x2 - float
			// ParmDecl- y2 - float
			// ParmDecl- x3 - float
			// ParmDecl- y3 - float
			// ParmDecl- objspace_flatness_squared - float
			// ParmDecl- n - int
			// CompoundStmt-  - 
				// DeclStmt-  - 
					// VarDecl- dx0 - float
						// BinaryOperator-  - float [Binary Operator: Sub (-)]
							// UnexposedExpr- x1 - float
								// DeclRefExpr- x1 - float
							// UnexposedExpr- x0 - float
								// DeclRefExpr- x0 - float
				// DeclStmt-  - 
					// VarDecl- dy0 - float
						// BinaryOperator-  - float [Binary Operator: Sub (-)]
							// UnexposedExpr- y1 - float
								// DeclRefExpr- y1 - float
							// UnexposedExpr- y0 - float
								// DeclRefExpr- y0 - float
				// DeclStmt-  - 
					// VarDecl- dx1 - float
						// BinaryOperator-  - float [Binary Operator: Sub (-)]
							// UnexposedExpr- x2 - float
								// DeclRefExpr- x2 - float
							// UnexposedExpr- x1 - float
								// DeclRefExpr- x1 - float
				// DeclStmt-  - 
					// VarDecl- dy1 - float
						// BinaryOperator-  - float [Binary Operator: Sub (-)]
							// UnexposedExpr- y2 - float
								// DeclRefExpr- y2 - float
							// UnexposedExpr- y1 - float
								// DeclRefExpr- y1 - float
				// DeclStmt-  - 
					// VarDecl- dx2 - float
						// BinaryOperator-  - float [Binary Operator: Sub (-)]
							// UnexposedExpr- x3 - float
								// DeclRefExpr- x3 - float
							// UnexposedExpr- x2 - float
								// DeclRefExpr- x2 - float
				// DeclStmt-  - 
					// VarDecl- dy2 - float
						// BinaryOperator-  - float [Binary Operator: Sub (-)]
							// UnexposedExpr- y3 - float
								// DeclRefExpr- y3 - float
							// UnexposedExpr- y2 - float
								// DeclRefExpr- y2 - float
				// DeclStmt-  - 
					// VarDecl- dx - float
						// BinaryOperator-  - float [Binary Operator: Sub (-)]
							// UnexposedExpr- x3 - float
								// DeclRefExpr- x3 - float
							// UnexposedExpr- x0 - float
								// DeclRefExpr- x0 - float
				// DeclStmt-  - 
					// VarDecl- dy - float
						// BinaryOperator-  - float [Binary Operator: Sub (-)]
							// UnexposedExpr- y3 - float
								// DeclRefExpr- y3 - float
							// UnexposedExpr- y0 - float
								// DeclRefExpr- y0 - float
				// DeclStmt-  - 
					// VarDecl- longlen - float
						// CStyleCastExpr-  - float
							// ParenExpr-  - double
								// BinaryOperator-  - double [Binary Operator: Add (+)]
									// BinaryOperator-  - double [Binary Operator: Add (+)]
										// CallExpr- sqrt - double
											// UnexposedExpr- sqrt - double (*)(double)
												// DeclRefExpr- sqrt - double (double)
											// UnexposedExpr-  - double
												// BinaryOperator-  - float [Binary Operator: Add (+)]
													// BinaryOperator-  - float [Binary Operator: Mul (*)]
														// UnexposedExpr- dx0 - float
															// DeclRefExpr- dx0 - float
														// UnexposedExpr- dx0 - float
															// DeclRefExpr- dx0 - float
													// BinaryOperator-  - float [Binary Operator: Mul (*)]
														// UnexposedExpr- dy0 - float
															// DeclRefExpr- dy0 - float
														// UnexposedExpr- dy0 - float
															// DeclRefExpr- dy0 - float
										// CallExpr- sqrt - double
											// UnexposedExpr- sqrt - double (*)(double)
												// DeclRefExpr- sqrt - double (double)
											// UnexposedExpr-  - double
												// BinaryOperator-  - float [Binary Operator: Add (+)]
													// BinaryOperator-  - float [Binary Operator: Mul (*)]
														// UnexposedExpr- dx1 - float
															// DeclRefExpr- dx1 - float
														// UnexposedExpr- dx1 - float
															// DeclRefExpr- dx1 - float
													// BinaryOperator-  - float [Binary Operator: Mul (*)]
														// UnexposedExpr- dy1 - float
															// DeclRefExpr- dy1 - float
														// UnexposedExpr- dy1 - float
															// DeclRefExpr- dy1 - float
									// CallExpr- sqrt - double
										// UnexposedExpr- sqrt - double (*)(double)
											// DeclRefExpr- sqrt - double (double)
										// UnexposedExpr-  - double
											// BinaryOperator-  - float [Binary Operator: Add (+)]
												// BinaryOperator-  - float [Binary Operator: Mul (*)]
													// UnexposedExpr- dx2 - float
														// DeclRefExpr- dx2 - float
													// UnexposedExpr- dx2 - float
														// DeclRefExpr- dx2 - float
												// BinaryOperator-  - float [Binary Operator: Mul (*)]
													// UnexposedExpr- dy2 - float
														// DeclRefExpr- dy2 - float
													// UnexposedExpr- dy2 - float
														// DeclRefExpr- dy2 - float
				// DeclStmt-  - 
					// VarDecl- shortlen - float
						// CStyleCastExpr-  - float
							// CallExpr- sqrt - double
								// UnexposedExpr- sqrt - double (*)(double)
									// DeclRefExpr- sqrt - double (double)
								// UnexposedExpr-  - double
									// BinaryOperator-  - float [Binary Operator: Add (+)]
										// BinaryOperator-  - float [Binary Operator: Mul (*)]
											// UnexposedExpr- dx - float
												// DeclRefExpr- dx - float
											// UnexposedExpr- dx - float
												// DeclRefExpr- dx - float
										// BinaryOperator-  - float [Binary Operator: Mul (*)]
											// UnexposedExpr- dy - float
												// DeclRefExpr- dy - float
											// UnexposedExpr- dy - float
												// DeclRefExpr- dy - float
				// DeclStmt-  - 
					// VarDecl- flatness_squared - float
						// BinaryOperator-  - float [Binary Operator: Sub (-)]
							// BinaryOperator-  - float [Binary Operator: Mul (*)]
								// UnexposedExpr- longlen - float
									// DeclRefExpr- longlen - float
								// UnexposedExpr- longlen - float
									// DeclRefExpr- longlen - float
							// BinaryOperator-  - float [Binary Operator: Mul (*)]
								// UnexposedExpr- shortlen - float
									// DeclRefExpr- shortlen - float
								// UnexposedExpr- shortlen - float
									// DeclRefExpr- shortlen - float
				// IfStmt-  - 
					// BinaryOperator-  - int [Binary Operator: GT (>)]
						// UnexposedExpr- n - int
							// DeclRefExpr- n - int
						// IntegerLiteral-  - int [Literal: 16]
					// ReturnStmt-  - 
				// IfStmt-  - 
					// BinaryOperator-  - int [Binary Operator: GT (>)]
						// UnexposedExpr- flatness_squared - float
							// DeclRefExpr- flatness_squared - float
						// UnexposedExpr- objspace_flatness_squared - float
							// DeclRefExpr- objspace_flatness_squared - float
					// CompoundStmt-  - 
						// DeclStmt-  - 
							// VarDecl- x01 - float
								// BinaryOperator-  - float [Binary Operator: Div (/)]
									// ParenExpr-  - float
										// BinaryOperator-  - float [Binary Operator: Add (+)]
											// UnexposedExpr- x0 - float
												// DeclRefExpr- x0 - float
											// UnexposedExpr- x1 - float
												// DeclRefExpr- x1 - float
									// UnexposedExpr-  - float
										// IntegerLiteral-  - int [Literal: 2]
						// DeclStmt-  - 
							// VarDecl- y01 - float
								// BinaryOperator-  - float [Binary Operator: Div (/)]
									// ParenExpr-  - float
										// BinaryOperator-  - float [Binary Operator: Add (+)]
											// UnexposedExpr- y0 - float
												// DeclRefExpr- y0 - float
											// UnexposedExpr- y1 - float
												// DeclRefExpr- y1 - float
									// UnexposedExpr-  - float
										// IntegerLiteral-  - int [Literal: 2]
						// DeclStmt-  - 
							// VarDecl- x12 - float
								// BinaryOperator-  - float [Binary Operator: Div (/)]
									// ParenExpr-  - float
										// BinaryOperator-  - float [Binary Operator: Add (+)]
											// UnexposedExpr- x1 - float
												// DeclRefExpr- x1 - float
											// UnexposedExpr- x2 - float
												// DeclRefExpr- x2 - float
									// UnexposedExpr-  - float
										// IntegerLiteral-  - int [Literal: 2]
						// DeclStmt-  - 
							// VarDecl- y12 - float
								// BinaryOperator-  - float [Binary Operator: Div (/)]
									// ParenExpr-  - float
										// BinaryOperator-  - float [Binary Operator: Add (+)]
											// UnexposedExpr- y1 - float
												// DeclRefExpr- y1 - float
											// UnexposedExpr- y2 - float
												// DeclRefExpr- y2 - float
									// UnexposedExpr-  - float
										// IntegerLiteral-  - int [Literal: 2]
						// DeclStmt-  - 
							// VarDecl- x23 - float
								// BinaryOperator-  - float [Binary Operator: Div (/)]
									// ParenExpr-  - float
										// BinaryOperator-  - float [Binary Operator: Add (+)]
											// UnexposedExpr- x2 - float
												// DeclRefExpr- x2 - float
											// UnexposedExpr- x3 - float
												// DeclRefExpr- x3 - float
									// UnexposedExpr-  - float
										// IntegerLiteral-  - int [Literal: 2]
						// DeclStmt-  - 
							// VarDecl- y23 - float
								// BinaryOperator-  - float [Binary Operator: Div (/)]
									// ParenExpr-  - float
										// BinaryOperator-  - float [Binary Operator: Add (+)]
											// UnexposedExpr- y2 - float
												// DeclRefExpr- y2 - float
											// UnexposedExpr- y3 - float
												// DeclRefExpr- y3 - float
									// UnexposedExpr-  - float
										// IntegerLiteral-  - int [Literal: 2]
						// DeclStmt-  - 
							// VarDecl- xa - float
								// BinaryOperator-  - float [Binary Operator: Div (/)]
									// ParenExpr-  - float
										// BinaryOperator-  - float [Binary Operator: Add (+)]
											// UnexposedExpr- x01 - float
												// DeclRefExpr- x01 - float
											// UnexposedExpr- x12 - float
												// DeclRefExpr- x12 - float
									// UnexposedExpr-  - float
										// IntegerLiteral-  - int [Literal: 2]
						// DeclStmt-  - 
							// VarDecl- ya - float
								// BinaryOperator-  - float [Binary Operator: Div (/)]
									// ParenExpr-  - float
										// BinaryOperator-  - float [Binary Operator: Add (+)]
											// UnexposedExpr- y01 - float
												// DeclRefExpr- y01 - float
											// UnexposedExpr- y12 - float
												// DeclRefExpr- y12 - float
									// UnexposedExpr-  - float
										// IntegerLiteral-  - int [Literal: 2]
						// DeclStmt-  - 
							// VarDecl- xb - float
								// BinaryOperator-  - float [Binary Operator: Div (/)]
									// ParenExpr-  - float
										// BinaryOperator-  - float [Binary Operator: Add (+)]
											// UnexposedExpr- x12 - float
												// DeclRefExpr- x12 - float
											// UnexposedExpr- x23 - float
												// DeclRefExpr- x23 - float
									// UnexposedExpr-  - float
										// IntegerLiteral-  - int [Literal: 2]
						// DeclStmt-  - 
							// VarDecl- yb - float
								// BinaryOperator-  - float [Binary Operator: Div (/)]
									// ParenExpr-  - float
										// BinaryOperator-  - float [Binary Operator: Add (+)]
											// UnexposedExpr- y12 - float
												// DeclRefExpr- y12 - float
											// UnexposedExpr- y23 - float
												// DeclRefExpr- y23 - float
									// UnexposedExpr-  - float
										// IntegerLiteral-  - int [Literal: 2]
						// DeclStmt-  - 
							// VarDecl- mx - float
								// BinaryOperator-  - float [Binary Operator: Div (/)]
									// ParenExpr-  - float
										// BinaryOperator-  - float [Binary Operator: Add (+)]
											// UnexposedExpr- xa - float
												// DeclRefExpr- xa - float
											// UnexposedExpr- xb - float
												// DeclRefExpr- xb - float
									// UnexposedExpr-  - float
										// IntegerLiteral-  - int [Literal: 2]
						// DeclStmt-  - 
							// VarDecl- my - float
								// BinaryOperator-  - float [Binary Operator: Div (/)]
									// ParenExpr-  - float
										// BinaryOperator-  - float [Binary Operator: Add (+)]
											// UnexposedExpr- ya - float
												// DeclRefExpr- ya - float
											// UnexposedExpr- yb - float
												// DeclRefExpr- yb - float
									// UnexposedExpr-  - float
										// IntegerLiteral-  - int [Literal: 2]
						// CallExpr- stbtt__tesselate_cubic - void
							// UnexposedExpr- stbtt__tesselate_cubic - void (*)(stbtt__point *, int *, float, float, float, float, float, float, float, float, float, int)
								// DeclRefExpr- stbtt__tesselate_cubic - void (stbtt__point *, int *, float, float, float, float, float, float, float, float, float, int)
							// UnexposedExpr- points - stbtt__point *
								// DeclRefExpr- points - stbtt__point *
							// UnexposedExpr- num_points - int *
								// DeclRefExpr- num_points - int *
							// UnexposedExpr- x0 - float
								// DeclRefExpr- x0 - float
							// UnexposedExpr- y0 - float
								// DeclRefExpr- y0 - float
							// UnexposedExpr- x01 - float
								// DeclRefExpr- x01 - float
							// UnexposedExpr- y01 - float
								// DeclRefExpr- y01 - float
							// UnexposedExpr- xa - float
								// DeclRefExpr- xa - float
							// UnexposedExpr- ya - float
								// DeclRefExpr- ya - float
							// UnexposedExpr- mx - float
								// DeclRefExpr- mx - float
							// UnexposedExpr- my - float
								// DeclRefExpr- my - float
							// UnexposedExpr- objspace_flatness_squared - float
								// DeclRefExpr- objspace_flatness_squared - float
							// BinaryOperator-  - int [Binary Operator: Add (+)]
								// UnexposedExpr- n - int
									// DeclRefExpr- n - int
								// IntegerLiteral-  - int [Literal: 1]
						// CallExpr- stbtt__tesselate_cubic - void
							// UnexposedExpr- stbtt__tesselate_cubic - void (*)(stbtt__point *, int *, float, float, float, float, float, float, float, float, float, int)
								// DeclRefExpr- stbtt__tesselate_cubic - void (stbtt__point *, int *, float, float, float, float, float, float, float, float, float, int)
							// UnexposedExpr- points - stbtt__point *
								// DeclRefExpr- points - stbtt__point *
							// UnexposedExpr- num_points - int *
								// DeclRefExpr- num_points - int *
							// UnexposedExpr- mx - float
								// DeclRefExpr- mx - float
							// UnexposedExpr- my - float
								// DeclRefExpr- my - float
							// UnexposedExpr- xb - float
								// DeclRefExpr- xb - float
							// UnexposedExpr- yb - float
								// DeclRefExpr- yb - float
							// UnexposedExpr- x23 - float
								// DeclRefExpr- x23 - float
							// UnexposedExpr- y23 - float
								// DeclRefExpr- y23 - float
							// UnexposedExpr- x3 - float
								// DeclRefExpr- x3 - float
							// UnexposedExpr- y3 - float
								// DeclRefExpr- y3 - float
							// UnexposedExpr- objspace_flatness_squared - float
								// DeclRefExpr- objspace_flatness_squared - float
							// BinaryOperator-  - int [Binary Operator: Add (+)]
								// UnexposedExpr- n - int
									// DeclRefExpr- n - int
								// IntegerLiteral-  - int [Literal: 1]
					// CompoundStmt-  - 
						// CallExpr- stbtt__add_point - void
							// UnexposedExpr- stbtt__add_point - void (*)(stbtt__point *, int, float, float)
								// DeclRefExpr- stbtt__add_point - void (stbtt__point *, int, float, float)
							// UnexposedExpr- points - stbtt__point *
								// DeclRefExpr- points - stbtt__point *
							// UnexposedExpr-  - int
								// UnaryOperator-  - int [Unary Operator: Deref (*)]
									// UnexposedExpr- num_points - int *
										// DeclRefExpr- num_points - int *
							// UnexposedExpr- x3 - float
								// DeclRefExpr- x3 - float
							// UnexposedExpr- y3 - float
								// DeclRefExpr- y3 - float
						// BinaryOperator-  - int [Binary Operator: Assign (=)]
							// UnaryOperator-  - int [Unary Operator: Deref (*)]
								// UnexposedExpr- num_points - int *
									// DeclRefExpr- num_points - int *
							// BinaryOperator-  - int [Binary Operator: Add (+)]
								// UnexposedExpr-  - int
									// UnaryOperator-  - int [Unary Operator: Deref (*)]
										// UnexposedExpr- num_points - int *
											// DeclRefExpr- num_points - int *
								// IntegerLiteral-  - int [Literal: 1]
		// FunctionDecl- stbtt_FlattenCurves - stbtt__point *(stbtt_vertex *, int, float, int **, int *, void *)
			// TypeRef- stbtt__point - stbtt__point
			// ParmDecl- vertices - stbtt_vertex *
				// TypeRef- stbtt_vertex - stbtt_vertex
			// ParmDecl- num_verts - int
			// ParmDecl- objspace_flatness - float
			// ParmDecl- contour_lengths - int **
			// ParmDecl- num_contours - int *
			// ParmDecl- userdata - void *
			// CompoundStmt-  - 
				// DeclStmt-  - 
					// VarDecl- points - stbtt__point *
						// TypeRef- stbtt__point - stbtt__point
						// UnexposedExpr-  - stbtt__point *
							// IntegerLiteral-  - int [Literal: 0]
				// DeclStmt-  - 
					// VarDecl- num_points - int
						// IntegerLiteral-  - int [Literal: 0]
				// DeclStmt-  - 
					// VarDecl- objspace_flatness_squared - float
						// BinaryOperator-  - float [Binary Operator: Mul (*)]
							// UnexposedExpr- objspace_flatness - float
								// DeclRefExpr- objspace_flatness - float
							// UnexposedExpr- objspace_flatness - float
								// DeclRefExpr- objspace_flatness - float
				// DeclStmt-  - 
					// VarDecl- i - int
					// VarDecl- n - int
						// IntegerLiteral-  - int [Literal: 0]
					// VarDecl- start - int
						// IntegerLiteral-  - int [Literal: 0]
					// VarDecl- pass - int
				// ForStmt-  - 
					// BinaryOperator-  - int [Binary Operator: Assign (=)]
						// DeclRefExpr- i - int
						// IntegerLiteral-  - int [Literal: 0]
					// BinaryOperator-  - int [Binary Operator: LT (<)]
						// UnexposedExpr- i - int
							// DeclRefExpr- i - int
						// UnexposedExpr- num_verts - int
							// DeclRefExpr- num_verts - int
					// UnaryOperator-  - int [Unary Operator: PreInc (++)]
						// DeclRefExpr- i - int
					// IfStmt-  - 
						// BinaryOperator-  - int [Binary Operator: EQ (==)]
							// UnexposedExpr- type - int
								// UnexposedExpr- type - unsigned char
									// MemberRefExpr- type - unsigned char
										// ArraySubscriptExpr-  - stbtt_vertex
											// UnexposedExpr- vertices - stbtt_vertex *
												// DeclRefExpr- vertices - stbtt_vertex *
											// UnexposedExpr- i - int
												// DeclRefExpr- i - int
							// DeclRefExpr- STBTT_vmove - int
						// UnaryOperator-  - int [Unary Operator: PreInc (++)]
							// DeclRefExpr- n - int
				// BinaryOperator-  - int [Binary Operator: Assign (=)]
					// UnaryOperator-  - int [Unary Operator: Deref (*)]
						// UnexposedExpr- num_contours - int *
							// DeclRefExpr- num_contours - int *
					// UnexposedExpr- n - int
						// DeclRefExpr- n - int
				// IfStmt-  - 
					// BinaryOperator-  - int [Binary Operator: EQ (==)]
						// UnexposedExpr- n - int
							// DeclRefExpr- n - int
						// IntegerLiteral-  - int [Literal: 0]
					// ReturnStmt-  - 
						// UnexposedExpr-  - stbtt__point *
							// IntegerLiteral-  - int [Literal: 0]
				// BinaryOperator-  - int * [Binary Operator: Assign (=)]
					// UnaryOperator-  - int * [Unary Operator: Deref (*)]
						// UnexposedExpr- contour_lengths - int **
							// DeclRefExpr- contour_lengths - int **
					// CStyleCastExpr-  - int *
						// CallExpr- malloc - void *
							// UnexposedExpr- malloc - void *(*)(unsigned long long)
								// DeclRefExpr- malloc - void *(unsigned long long)
							// BinaryOperator-  - unsigned long long [Binary Operator: Mul (*)]
								// UnaryExpr-  - unsigned long long [Unary Operator: 99999 ()]
									// ParenExpr-  - int
										// UnaryOperator-  - int [Unary Operator: Deref (*)]
											// UnexposedExpr-  - int *
												// UnaryOperator-  - int * [Unary Operator: Deref (*)]
													// UnexposedExpr- contour_lengths - int **
														// DeclRefExpr- contour_lengths - int **
								// UnexposedExpr- n - unsigned long long
									// UnexposedExpr- n - int
										// DeclRefExpr- n - int
				// IfStmt-  - 
					// BinaryOperator-  - int [Binary Operator: EQ (==)]
						// UnexposedExpr-  - int *
							// UnaryOperator-  - int * [Unary Operator: Deref (*)]
								// UnexposedExpr- contour_lengths - int **
									// DeclRefExpr- contour_lengths - int **
						// UnexposedExpr-  - int *
							// IntegerLiteral-  - int [Literal: 0]
					// CompoundStmt-  - 
						// BinaryOperator-  - int [Binary Operator: Assign (=)]
							// UnaryOperator-  - int [Unary Operator: Deref (*)]
								// UnexposedExpr- num_contours - int *
									// DeclRefExpr- num_contours - int *
							// IntegerLiteral-  - int [Literal: 0]
						// ReturnStmt-  - 
							// UnexposedExpr-  - stbtt__point *
								// IntegerLiteral-  - int [Literal: 0]
				// ForStmt-  - 
					// BinaryOperator-  - int [Binary Operator: Assign (=)]
						// DeclRefExpr- pass - int
						// IntegerLiteral-  - int [Literal: 0]
					// BinaryOperator-  - int [Binary Operator: LT (<)]
						// UnexposedExpr- pass - int
							// DeclRefExpr- pass - int
						// IntegerLiteral-  - int [Literal: 2]
					// UnaryOperator-  - int [Unary Operator: PreInc (++)]
						// DeclRefExpr- pass - int
					// CompoundStmt-  - 
						// DeclStmt-  - 
							// VarDecl- x - float
								// UnexposedExpr-  - float
									// IntegerLiteral-  - int [Literal: 0]
							// VarDecl- y - float
								// UnexposedExpr-  - float
									// IntegerLiteral-  - int [Literal: 0]
						// IfStmt-  - 
							// BinaryOperator-  - int [Binary Operator: EQ (==)]
								// UnexposedExpr- pass - int
									// DeclRefExpr- pass - int
								// IntegerLiteral-  - int [Literal: 1]
							// CompoundStmt-  - 
								// BinaryOperator-  - stbtt__point * [Binary Operator: Assign (=)]
									// DeclRefExpr- points - stbtt__point *
									// CStyleCastExpr-  - stbtt__point *
										// TypeRef- stbtt__point - stbtt__point
										// CallExpr- malloc - void *
											// UnexposedExpr- malloc - void *(*)(unsigned long long)
												// DeclRefExpr- malloc - void *(unsigned long long)
											// BinaryOperator-  - unsigned long long [Binary Operator: Mul (*)]
												// UnexposedExpr- num_points - unsigned long long
													// UnexposedExpr- num_points - int
														// DeclRefExpr- num_points - int
												// UnaryExpr-  - unsigned long long [Unary Operator: 99999 ()]
													// ParenExpr-  - stbtt__point
														// ArraySubscriptExpr-  - stbtt__point
															// UnexposedExpr- points - stbtt__point *
																// DeclRefExpr- points - stbtt__point *
															// IntegerLiteral-  - int [Literal: 0]
								// IfStmt-  - 
									// BinaryOperator-  - int [Binary Operator: EQ (==)]
										// UnexposedExpr- points - stbtt__point *
											// DeclRefExpr- points - stbtt__point *
										// UnexposedExpr-  - stbtt__point *
											// ParenExpr-  - void *
												// CStyleCastExpr-  - void *
													// IntegerLiteral-  - int [Literal: 0]
									// GotoStmt-  - 
										// LabelRef- error - 
						// BinaryOperator-  - int [Binary Operator: Assign (=)]
							// DeclRefExpr- num_points - int
							// IntegerLiteral-  - int [Literal: 0]
						// BinaryOperator-  - int [Binary Operator: Assign (=)]
							// DeclRefExpr- n - int
							// UnaryOperator-  - int [Unary Operator: Minus (-)]
								// IntegerLiteral-  - int [Literal: 1]
						// ForStmt-  - 
							// BinaryOperator-  - int [Binary Operator: Assign (=)]
								// DeclRefExpr- i - int
								// IntegerLiteral-  - int [Literal: 0]
							// BinaryOperator-  - int [Binary Operator: LT (<)]
								// UnexposedExpr- i - int
									// DeclRefExpr- i - int
								// UnexposedExpr- num_verts - int
									// DeclRefExpr- num_verts - int
							// UnaryOperator-  - int [Unary Operator: PreInc (++)]
								// DeclRefExpr- i - int
							// CompoundStmt-  - 
								// SwitchStmt-  - 
									// UnexposedExpr- type - int
										// UnexposedExpr- type - unsigned char
											// MemberRefExpr- type - unsigned char
												// ArraySubscriptExpr-  - stbtt_vertex
													// UnexposedExpr- vertices - stbtt_vertex *
														// DeclRefExpr- vertices - stbtt_vertex *
													// UnexposedExpr- i - int
														// DeclRefExpr- i - int
									// CompoundStmt-  - 
										// CaseStmt-  - 
											// DeclRefExpr- STBTT_vmove - int
											// IfStmt-  - 
												// BinaryOperator-  - int [Binary Operator: GE (>=)]
													// UnexposedExpr- n - int
														// DeclRefExpr- n - int
													// IntegerLiteral-  - int [Literal: 0]
												// BinaryOperator-  - int [Binary Operator: Assign (=)]
													// ArraySubscriptExpr-  - int
														// UnexposedExpr-  - int *
															// ParenExpr-  - int *
																// UnaryOperator-  - int * [Unary Operator: Deref (*)]
																	// UnexposedExpr- contour_lengths - int **
																		// DeclRefExpr- contour_lengths - int **
														// UnexposedExpr- n - int
															// DeclRefExpr- n - int
													// BinaryOperator-  - int [Binary Operator: Sub (-)]
														// UnexposedExpr- num_points - int
															// DeclRefExpr- num_points - int
														// UnexposedExpr- start - int
															// DeclRefExpr- start - int
										// UnaryOperator-  - int [Unary Operator: PreInc (++)]
											// DeclRefExpr- n - int
										// BinaryOperator-  - int [Binary Operator: Assign (=)]
											// DeclRefExpr- start - int
											// UnexposedExpr- num_points - int
												// DeclRefExpr- num_points - int
										// BinaryOperator-  - float [Binary Operator: Assign (=)]
											// DeclRefExpr- x - float
											// UnexposedExpr- x - float
												// UnexposedExpr- x - short
													// MemberRefExpr- x - short
														// ArraySubscriptExpr-  - stbtt_vertex
															// UnexposedExpr- vertices - stbtt_vertex *
																// DeclRefExpr- vertices - stbtt_vertex *
															// UnexposedExpr- i - int
																// DeclRefExpr- i - int
										// BinaryOperator-  - float [Binary Operator: Assign (=)]
											// DeclRefExpr- y - float
											// UnexposedExpr- y - float
												// UnexposedExpr- y - short
													// MemberRefExpr- y - short
														// ArraySubscriptExpr-  - stbtt_vertex
															// UnexposedExpr- vertices - stbtt_vertex *
																// DeclRefExpr- vertices - stbtt_vertex *
															// UnexposedExpr- i - int
																// DeclRefExpr- i - int
										// CallExpr- stbtt__add_point - void
											// UnexposedExpr- stbtt__add_point - void (*)(stbtt__point *, int, float, float)
												// DeclRefExpr- stbtt__add_point - void (stbtt__point *, int, float, float)
											// UnexposedExpr- points - stbtt__point *
												// DeclRefExpr- points - stbtt__point *
											// UnaryOperator-  - int [Unary Operator: PostInc (++)]
												// DeclRefExpr- num_points - int
											// UnexposedExpr- x - float
												// DeclRefExpr- x - float
											// UnexposedExpr- y - float
												// DeclRefExpr- y - float
										// BreakStmt-  - 
										// CaseStmt-  - 
											// DeclRefExpr- STBTT_vline - int
											// BinaryOperator-  - float [Binary Operator: Assign (=)]
												// DeclRefExpr- x - float
												// UnexposedExpr- x - float
													// UnexposedExpr- x - short
														// MemberRefExpr- x - short
															// ArraySubscriptExpr-  - stbtt_vertex
																// UnexposedExpr- vertices - stbtt_vertex *
																	// DeclRefExpr- vertices - stbtt_vertex *
																// UnexposedExpr- i - int
																	// DeclRefExpr- i - int
										// BinaryOperator-  - float [Binary Operator: Assign (=)]
											// DeclRefExpr- y - float
											// UnexposedExpr- y - float
												// UnexposedExpr- y - short
													// MemberRefExpr- y - short
														// ArraySubscriptExpr-  - stbtt_vertex
															// UnexposedExpr- vertices - stbtt_vertex *
																// DeclRefExpr- vertices - stbtt_vertex *
															// UnexposedExpr- i - int
																// DeclRefExpr- i - int
										// CallExpr- stbtt__add_point - void
											// UnexposedExpr- stbtt__add_point - void (*)(stbtt__point *, int, float, float)
												// DeclRefExpr- stbtt__add_point - void (stbtt__point *, int, float, float)
											// UnexposedExpr- points - stbtt__point *
												// DeclRefExpr- points - stbtt__point *
											// UnaryOperator-  - int [Unary Operator: PostInc (++)]
												// DeclRefExpr- num_points - int
											// UnexposedExpr- x - float
												// DeclRefExpr- x - float
											// UnexposedExpr- y - float
												// DeclRefExpr- y - float
										// BreakStmt-  - 
										// CaseStmt-  - 
											// DeclRefExpr- STBTT_vcurve - int
											// CallExpr- stbtt__tesselate_curve - int
												// UnexposedExpr- stbtt__tesselate_curve - int (*)(stbtt__point *, int *, float, float, float, float, float, float, float, int)
													// DeclRefExpr- stbtt__tesselate_curve - int (stbtt__point *, int *, float, float, float, float, float, float, float, int)
												// UnexposedExpr- points - stbtt__point *
													// DeclRefExpr- points - stbtt__point *
												// UnaryOperator-  - int * [Unary Operator: AddrOf (&)]
													// DeclRefExpr- num_points - int
												// UnexposedExpr- x - float
													// DeclRefExpr- x - float
												// UnexposedExpr- y - float
													// DeclRefExpr- y - float
												// UnexposedExpr- cx - float
													// UnexposedExpr- cx - short
														// MemberRefExpr- cx - short
															// ArraySubscriptExpr-  - stbtt_vertex
																// UnexposedExpr- vertices - stbtt_vertex *
																	// DeclRefExpr- vertices - stbtt_vertex *
																// UnexposedExpr- i - int
																	// DeclRefExpr- i - int
												// UnexposedExpr- cy - float
													// UnexposedExpr- cy - short
														// MemberRefExpr- cy - short
															// ArraySubscriptExpr-  - stbtt_vertex
																// UnexposedExpr- vertices - stbtt_vertex *
																	// DeclRefExpr- vertices - stbtt_vertex *
																// UnexposedExpr- i - int
																	// DeclRefExpr- i - int
												// UnexposedExpr- x - float
													// UnexposedExpr- x - short
														// MemberRefExpr- x - short
															// ArraySubscriptExpr-  - stbtt_vertex
																// UnexposedExpr- vertices - stbtt_vertex *
																	// DeclRefExpr- vertices - stbtt_vertex *
																// UnexposedExpr- i - int
																	// DeclRefExpr- i - int
												// UnexposedExpr- y - float
													// UnexposedExpr- y - short
														// MemberRefExpr- y - short
															// ArraySubscriptExpr-  - stbtt_vertex
																// UnexposedExpr- vertices - stbtt_vertex *
																	// DeclRefExpr- vertices - stbtt_vertex *
																// UnexposedExpr- i - int
																	// DeclRefExpr- i - int
												// UnexposedExpr- objspace_flatness_squared - float
													// DeclRefExpr- objspace_flatness_squared - float
												// IntegerLiteral-  - int [Literal: 0]
										// BinaryOperator-  - float [Binary Operator: Assign (=)]
											// DeclRefExpr- x - float
											// UnexposedExpr- x - float
												// UnexposedExpr- x - short
													// MemberRefExpr- x - short
														// ArraySubscriptExpr-  - stbtt_vertex
															// UnexposedExpr- vertices - stbtt_vertex *
																// DeclRefExpr- vertices - stbtt_vertex *
															// UnexposedExpr- i - int
																// DeclRefExpr- i - int
										// BinaryOperator-  - float [Binary Operator: Assign (=)]
											// DeclRefExpr- y - float
											// UnexposedExpr- y - float
												// UnexposedExpr- y - short
													// MemberRefExpr- y - short
														// ArraySubscriptExpr-  - stbtt_vertex
															// UnexposedExpr- vertices - stbtt_vertex *
																// DeclRefExpr- vertices - stbtt_vertex *
															// UnexposedExpr- i - int
																// DeclRefExpr- i - int
										// BreakStmt-  - 
										// CaseStmt-  - 
											// DeclRefExpr- STBTT_vcubic - int
											// CallExpr- stbtt__tesselate_cubic - void
												// UnexposedExpr- stbtt__tesselate_cubic - void (*)(stbtt__point *, int *, float, float, float, float, float, float, float, float, float, int)
													// DeclRefExpr- stbtt__tesselate_cubic - void (stbtt__point *, int *, float, float, float, float, float, float, float, float, float, int)
												// UnexposedExpr- points - stbtt__point *
													// DeclRefExpr- points - stbtt__point *
												// UnaryOperator-  - int * [Unary Operator: AddrOf (&)]
													// DeclRefExpr- num_points - int
												// UnexposedExpr- x - float
													// DeclRefExpr- x - float
												// UnexposedExpr- y - float
													// DeclRefExpr- y - float
												// UnexposedExpr- cx - float
													// UnexposedExpr- cx - short
														// MemberRefExpr- cx - short
															// ArraySubscriptExpr-  - stbtt_vertex
																// UnexposedExpr- vertices - stbtt_vertex *
																	// DeclRefExpr- vertices - stbtt_vertex *
																// UnexposedExpr- i - int
																	// DeclRefExpr- i - int
												// UnexposedExpr- cy - float
													// UnexposedExpr- cy - short
														// MemberRefExpr- cy - short
															// ArraySubscriptExpr-  - stbtt_vertex
																// UnexposedExpr- vertices - stbtt_vertex *
																	// DeclRefExpr- vertices - stbtt_vertex *
																// UnexposedExpr- i - int
																	// DeclRefExpr- i - int
												// UnexposedExpr- cx1 - float
													// UnexposedExpr- cx1 - short
														// MemberRefExpr- cx1 - short
															// ArraySubscriptExpr-  - stbtt_vertex
																// UnexposedExpr- vertices - stbtt_vertex *
																	// DeclRefExpr- vertices - stbtt_vertex *
																// UnexposedExpr- i - int
																	// DeclRefExpr- i - int
												// UnexposedExpr- cy1 - float
													// UnexposedExpr- cy1 - short
														// MemberRefExpr- cy1 - short
															// ArraySubscriptExpr-  - stbtt_vertex
																// UnexposedExpr- vertices - stbtt_vertex *
																	// DeclRefExpr- vertices - stbtt_vertex *
																// UnexposedExpr- i - int
																	// DeclRefExpr- i - int
												// UnexposedExpr- x - float
													// UnexposedExpr- x - short
														// MemberRefExpr- x - short
															// ArraySubscriptExpr-  - stbtt_vertex
																// UnexposedExpr- vertices - stbtt_vertex *
																	// DeclRefExpr- vertices - stbtt_vertex *
																// UnexposedExpr- i - int
																	// DeclRefExpr- i - int
												// UnexposedExpr- y - float
													// UnexposedExpr- y - short
														// MemberRefExpr- y - short
															// ArraySubscriptExpr-  - stbtt_vertex
																// UnexposedExpr- vertices - stbtt_vertex *
																	// DeclRefExpr- vertices - stbtt_vertex *
																// UnexposedExpr- i - int
																	// DeclRefExpr- i - int
												// UnexposedExpr- objspace_flatness_squared - float
													// DeclRefExpr- objspace_flatness_squared - float
												// IntegerLiteral-  - int [Literal: 0]
										// BinaryOperator-  - float [Binary Operator: Assign (=)]
											// DeclRefExpr- x - float
											// UnexposedExpr- x - float
												// UnexposedExpr- x - short
													// MemberRefExpr- x - short
														// ArraySubscriptExpr-  - stbtt_vertex
															// UnexposedExpr- vertices - stbtt_vertex *
																// DeclRefExpr- vertices - stbtt_vertex *
															// UnexposedExpr- i - int
																// DeclRefExpr- i - int
										// BinaryOperator-  - float [Binary Operator: Assign (=)]
											// DeclRefExpr- y - float
											// UnexposedExpr- y - float
												// UnexposedExpr- y - short
													// MemberRefExpr- y - short
														// ArraySubscriptExpr-  - stbtt_vertex
															// UnexposedExpr- vertices - stbtt_vertex *
																// DeclRefExpr- vertices - stbtt_vertex *
															// UnexposedExpr- i - int
																// DeclRefExpr- i - int
										// BreakStmt-  - 
						// BinaryOperator-  - int [Binary Operator: Assign (=)]
							// ArraySubscriptExpr-  - int
								// UnexposedExpr-  - int *
									// ParenExpr-  - int *
										// UnaryOperator-  - int * [Unary Operator: Deref (*)]
											// UnexposedExpr- contour_lengths - int **
												// DeclRefExpr- contour_lengths - int **
								// UnexposedExpr- n - int
									// DeclRefExpr- n - int
							// BinaryOperator-  - int [Binary Operator: Sub (-)]
								// UnexposedExpr- num_points - int
									// DeclRefExpr- num_points - int
								// UnexposedExpr- start - int
									// DeclRefExpr- start - int
				// ReturnStmt-  - 
					// UnexposedExpr- points - stbtt__point *
						// DeclRefExpr- points - stbtt__point *
				// LabelStmt- error - 
					// CallExpr- free - void
						// UnexposedExpr- free - void (*)(void *) __attribute__((cdecl))
							// DeclRefExpr- free - void (void *)
						// UnexposedExpr- points - void *
							// UnexposedExpr- points - stbtt__point *
								// DeclRefExpr- points - stbtt__point *
				// CallExpr- free - void
					// UnexposedExpr- free - void (*)(void *) __attribute__((cdecl))
						// DeclRefExpr- free - void (void *)
					// UnexposedExpr-  - void *
						// UnexposedExpr-  - int *
							// UnaryOperator-  - int * [Unary Operator: Deref (*)]
								// UnexposedExpr- contour_lengths - int **
									// DeclRefExpr- contour_lengths - int **
				// BinaryOperator-  - int * [Binary Operator: Assign (=)]
					// UnaryOperator-  - int * [Unary Operator: Deref (*)]
						// UnexposedExpr- contour_lengths - int **
							// DeclRefExpr- contour_lengths - int **
					// UnexposedExpr-  - int *
						// IntegerLiteral-  - int [Literal: 0]
				// BinaryOperator-  - int [Binary Operator: Assign (=)]
					// UnaryOperator-  - int [Unary Operator: Deref (*)]
						// UnexposedExpr- num_contours - int *
							// DeclRefExpr- num_contours - int *
					// IntegerLiteral-  - int [Literal: 0]
				// ReturnStmt-  - 
					// UnexposedExpr-  - stbtt__point *
						// ParenExpr-  - void *
							// CStyleCastExpr-  - void *
								// IntegerLiteral-  - int [Literal: 0]
		// FunctionDecl- stbtt_Rasterize - void (stbtt__bitmap *, float, stbtt_vertex *, int, float, float, float, float, int, int, int, void *)
			// ParmDecl- result - stbtt__bitmap *
				// TypeRef- stbtt__bitmap - stbtt__bitmap
			// ParmDecl- flatness_in_pixels - float
			// ParmDecl- vertices - stbtt_vertex *
				// TypeRef- stbtt_vertex - stbtt_vertex
			// ParmDecl- num_verts - int
			// ParmDecl- scale_x - float
			// ParmDecl- scale_y - float
			// ParmDecl- shift_x - float
			// ParmDecl- shift_y - float
			// ParmDecl- x_off - int
			// ParmDecl- y_off - int
			// ParmDecl- invert - int
			// ParmDecl- userdata - void *
			// CompoundStmt-  - 
				// DeclStmt-  - 
					// VarDecl- scale - float
						// ConditionalOperator-  - float
							// BinaryOperator-  - int [Binary Operator: GT (>)]
								// UnexposedExpr- scale_x - float
									// DeclRefExpr- scale_x - float
								// UnexposedExpr- scale_y - float
									// DeclRefExpr- scale_y - float
							// UnexposedExpr- scale_y - float
								// DeclRefExpr- scale_y - float
							// UnexposedExpr- scale_x - float
								// DeclRefExpr- scale_x - float
				// DeclStmt-  - 
					// VarDecl- winding_count - int
						// IntegerLiteral-  - int [Literal: 0]
				// DeclStmt-  - 
					// VarDecl- winding_lengths - int *
						// UnexposedExpr-  - int *
							// ParenExpr-  - void *
								// CStyleCastExpr-  - void *
									// IntegerLiteral-  - int [Literal: 0]
				// DeclStmt-  - 
					// VarDecl- windings - stbtt__point *
						// TypeRef- stbtt__point - stbtt__point
						// CallExpr- stbtt_FlattenCurves - stbtt__point *
							// UnexposedExpr- stbtt_FlattenCurves - stbtt__point *(*)(stbtt_vertex *, int, float, int **, int *, void *)
								// DeclRefExpr- stbtt_FlattenCurves - stbtt__point *(stbtt_vertex *, int, float, int **, int *, void *)
							// UnexposedExpr- vertices - stbtt_vertex *
								// DeclRefExpr- vertices - stbtt_vertex *
							// UnexposedExpr- num_verts - int
								// DeclRefExpr- num_verts - int
							// BinaryOperator-  - float [Binary Operator: Div (/)]
								// UnexposedExpr- flatness_in_pixels - float
									// DeclRefExpr- flatness_in_pixels - float
								// UnexposedExpr- scale - float
									// DeclRefExpr- scale - float
							// UnaryOperator-  - int ** [Unary Operator: AddrOf (&)]
								// DeclRefExpr- winding_lengths - int *
							// UnaryOperator-  - int * [Unary Operator: AddrOf (&)]
								// DeclRefExpr- winding_count - int
							// UnexposedExpr- userdata - void *
								// DeclRefExpr- userdata - void *
				// IfStmt-  - 
					// UnexposedExpr- windings - stbtt__point *
						// DeclRefExpr- windings - stbtt__point *
					// CompoundStmt-  - 
						// CallExpr- stbtt__rasterize - void
							// UnexposedExpr- stbtt__rasterize - void (*)(stbtt__bitmap *, stbtt__point *, int *, int, float, float, float, float, int, int, int, void *)
								// DeclRefExpr- stbtt__rasterize - void (stbtt__bitmap *, stbtt__point *, int *, int, float, float, float, float, int, int, int, void *)
							// UnexposedExpr- result - stbtt__bitmap *
								// DeclRefExpr- result - stbtt__bitmap *
							// UnexposedExpr- windings - stbtt__point *
								// DeclRefExpr- windings - stbtt__point *
							// UnexposedExpr- winding_lengths - int *
								// DeclRefExpr- winding_lengths - int *
							// UnexposedExpr- winding_count - int
								// DeclRefExpr- winding_count - int
							// UnexposedExpr- scale_x - float
								// DeclRefExpr- scale_x - float
							// UnexposedExpr- scale_y - float
								// DeclRefExpr- scale_y - float
							// UnexposedExpr- shift_x - float
								// DeclRefExpr- shift_x - float
							// UnexposedExpr- shift_y - float
								// DeclRefExpr- shift_y - float
							// UnexposedExpr- x_off - int
								// DeclRefExpr- x_off - int
							// UnexposedExpr- y_off - int
								// DeclRefExpr- y_off - int
							// UnexposedExpr- invert - int
								// DeclRefExpr- invert - int
							// UnexposedExpr- userdata - void *
								// DeclRefExpr- userdata - void *
						// CallExpr- free - void
							// UnexposedExpr- free - void (*)(void *) __attribute__((cdecl))
								// DeclRefExpr- free - void (void *)
							// UnexposedExpr- winding_lengths - void *
								// UnexposedExpr- winding_lengths - int *
									// DeclRefExpr- winding_lengths - int *
						// CallExpr- free - void
							// UnexposedExpr- free - void (*)(void *) __attribute__((cdecl))
								// DeclRefExpr- free - void (void *)
							// UnexposedExpr- windings - void *
								// UnexposedExpr- windings - stbtt__point *
									// DeclRefExpr- windings - stbtt__point *
		// FunctionDecl- stbtt_FreeBitmap - void (unsigned char *, void *)
			// ParmDecl- bitmap - unsigned char *
			// ParmDecl- userdata - void *
			// CompoundStmt-  - 
				// CallExpr- free - void
					// UnexposedExpr- free - void (*)(void *) __attribute__((cdecl))
						// DeclRefExpr- free - void (void *)
					// UnexposedExpr- bitmap - void *
						// UnexposedExpr- bitmap - unsigned char *
							// DeclRefExpr- bitmap - unsigned char *
		// FunctionDecl- stbtt_GetGlyphBitmapSubpixel - unsigned char *(const stbtt_fontinfo *, float, float, float, float, int, int *, int *, int *, int *)
			// ParmDecl- info - const stbtt_fontinfo *
				// TypeRef- stbtt_fontinfo - stbtt_fontinfo
			// ParmDecl- scale_x - float
			// ParmDecl- scale_y - float
			// ParmDecl- shift_x - float
			// ParmDecl- shift_y - float
			// ParmDecl- glyph - int
			// ParmDecl- width - int *
			// ParmDecl- height - int *
			// ParmDecl- xoff - int *
			// ParmDecl- yoff - int *
			// CompoundStmt-  - 
				// DeclStmt-  - 
					// VarDecl- ix0 - int
					// VarDecl- iy0 - int
					// VarDecl- ix1 - int
					// VarDecl- iy1 - int
				// DeclStmt-  - 
					// VarDecl- gbm - stbtt__bitmap
						// TypeRef- stbtt__bitmap - stbtt__bitmap
				// DeclStmt-  - 
					// VarDecl- vertices - stbtt_vertex *
						// TypeRef- stbtt_vertex - stbtt_vertex
				// DeclStmt-  - 
					// VarDecl- num_verts - int
						// CallExpr- stbtt_GetGlyphShape - int
							// UnexposedExpr- stbtt_GetGlyphShape - int (*)(const stbtt_fontinfo *, int, stbtt_vertex **)
								// DeclRefExpr- stbtt_GetGlyphShape - int (const stbtt_fontinfo *, int, stbtt_vertex **)
							// UnexposedExpr- info - const stbtt_fontinfo *
								// DeclRefExpr- info - const stbtt_fontinfo *
							// UnexposedExpr- glyph - int
								// DeclRefExpr- glyph - int
							// UnaryOperator-  - stbtt_vertex ** [Unary Operator: AddrOf (&)]
								// DeclRefExpr- vertices - stbtt_vertex *
				// IfStmt-  - 
					// BinaryOperator-  - int [Binary Operator: EQ (==)]
						// UnexposedExpr- scale_x - float
							// DeclRefExpr- scale_x - float
						// UnexposedExpr-  - float
							// IntegerLiteral-  - int [Literal: 0]
					// BinaryOperator-  - float [Binary Operator: Assign (=)]
						// DeclRefExpr- scale_x - float
						// UnexposedExpr- scale_y - float
							// DeclRefExpr- scale_y - float
				// IfStmt-  - 
					// BinaryOperator-  - int [Binary Operator: EQ (==)]
						// UnexposedExpr- scale_y - float
							// DeclRefExpr- scale_y - float
						// UnexposedExpr-  - float
							// IntegerLiteral-  - int [Literal: 0]
					// CompoundStmt-  - 
						// IfStmt-  - 
							// BinaryOperator-  - int [Binary Operator: EQ (==)]
								// UnexposedExpr- scale_x - float
									// DeclRefExpr- scale_x - float
								// UnexposedExpr-  - float
									// IntegerLiteral-  - int [Literal: 0]
							// CompoundStmt-  - 
								// CallExpr- free - void
									// UnexposedExpr- free - void (*)(void *) __attribute__((cdecl))
										// DeclRefExpr- free - void (void *)
									// UnexposedExpr- vertices - void *
										// UnexposedExpr- vertices - stbtt_vertex *
											// DeclRefExpr- vertices - stbtt_vertex *
								// ReturnStmt-  - 
									// UnexposedExpr-  - unsigned char *
										// ParenExpr-  - void *
											// CStyleCastExpr-  - void *
												// IntegerLiteral-  - int [Literal: 0]
						// BinaryOperator-  - float [Binary Operator: Assign (=)]
							// DeclRefExpr- scale_y - float
							// UnexposedExpr- scale_x - float
								// DeclRefExpr- scale_x - float
				// CallExpr- stbtt_GetGlyphBitmapBoxSubpixel - void
					// UnexposedExpr- stbtt_GetGlyphBitmapBoxSubpixel - void (*)(const stbtt_fontinfo *, int, float, float, float, float, int *, int *, int *, int *)
						// DeclRefExpr- stbtt_GetGlyphBitmapBoxSubpixel - void (const stbtt_fontinfo *, int, float, float, float, float, int *, int *, int *, int *)
					// UnexposedExpr- info - const stbtt_fontinfo *
						// DeclRefExpr- info - const stbtt_fontinfo *
					// UnexposedExpr- glyph - int
						// DeclRefExpr- glyph - int
					// UnexposedExpr- scale_x - float
						// DeclRefExpr- scale_x - float
					// UnexposedExpr- scale_y - float
						// DeclRefExpr- scale_y - float
					// UnexposedExpr- shift_x - float
						// DeclRefExpr- shift_x - float
					// UnexposedExpr- shift_y - float
						// DeclRefExpr- shift_y - float
					// UnaryOperator-  - int * [Unary Operator: AddrOf (&)]
						// DeclRefExpr- ix0 - int
					// UnaryOperator-  - int * [Unary Operator: AddrOf (&)]
						// DeclRefExpr- iy0 - int
					// UnaryOperator-  - int * [Unary Operator: AddrOf (&)]
						// DeclRefExpr- ix1 - int
					// UnaryOperator-  - int * [Unary Operator: AddrOf (&)]
						// DeclRefExpr- iy1 - int
				// BinaryOperator-  - int [Binary Operator: Assign (=)]
					// MemberRefExpr- w - int
						// DeclRefExpr- gbm - stbtt__bitmap
					// ParenExpr-  - int
						// BinaryOperator-  - int [Binary Operator: Sub (-)]
							// UnexposedExpr- ix1 - int
								// DeclRefExpr- ix1 - int
							// UnexposedExpr- ix0 - int
								// DeclRefExpr- ix0 - int
				// BinaryOperator-  - int [Binary Operator: Assign (=)]
					// MemberRefExpr- h - int
						// DeclRefExpr- gbm - stbtt__bitmap
					// ParenExpr-  - int
						// BinaryOperator-  - int [Binary Operator: Sub (-)]
							// UnexposedExpr- iy1 - int
								// DeclRefExpr- iy1 - int
							// UnexposedExpr- iy0 - int
								// DeclRefExpr- iy0 - int
				// BinaryOperator-  - unsigned char * [Binary Operator: Assign (=)]
					// MemberRefExpr- pixels - unsigned char *
						// DeclRefExpr- gbm - stbtt__bitmap
					// UnexposedExpr-  - unsigned char *
						// ParenExpr-  - void *
							// CStyleCastExpr-  - void *
								// IntegerLiteral-  - int [Literal: 0]
				// IfStmt-  - 
					// UnexposedExpr- width - int *
						// DeclRefExpr- width - int *
					// BinaryOperator-  - int [Binary Operator: Assign (=)]
						// UnaryOperator-  - int [Unary Operator: Deref (*)]
							// UnexposedExpr- width - int *
								// DeclRefExpr- width - int *
						// UnexposedExpr- w - int
							// MemberRefExpr- w - int
								// DeclRefExpr- gbm - stbtt__bitmap
				// IfStmt-  - 
					// UnexposedExpr- height - int *
						// DeclRefExpr- height - int *
					// BinaryOperator-  - int [Binary Operator: Assign (=)]
						// UnaryOperator-  - int [Unary Operator: Deref (*)]
							// UnexposedExpr- height - int *
								// DeclRefExpr- height - int *
						// UnexposedExpr- h - int
							// MemberRefExpr- h - int
								// DeclRefExpr- gbm - stbtt__bitmap
				// IfStmt-  - 
					// UnexposedExpr- xoff - int *
						// DeclRefExpr- xoff - int *
					// BinaryOperator-  - int [Binary Operator: Assign (=)]
						// UnaryOperator-  - int [Unary Operator: Deref (*)]
							// UnexposedExpr- xoff - int *
								// DeclRefExpr- xoff - int *
						// UnexposedExpr- ix0 - int
							// DeclRefExpr- ix0 - int
				// IfStmt-  - 
					// UnexposedExpr- yoff - int *
						// DeclRefExpr- yoff - int *
					// BinaryOperator-  - int [Binary Operator: Assign (=)]
						// UnaryOperator-  - int [Unary Operator: Deref (*)]
							// UnexposedExpr- yoff - int *
								// DeclRefExpr- yoff - int *
						// UnexposedExpr- iy0 - int
							// DeclRefExpr- iy0 - int
				// IfStmt-  - 
					// BinaryOperator-  - int [Binary Operator: LAnd (&&)]
						// UnexposedExpr- w - int
							// MemberRefExpr- w - int
								// DeclRefExpr- gbm - stbtt__bitmap
						// UnexposedExpr- h - int
							// MemberRefExpr- h - int
								// DeclRefExpr- gbm - stbtt__bitmap
					// CompoundStmt-  - 
						// BinaryOperator-  - unsigned char * [Binary Operator: Assign (=)]
							// MemberRefExpr- pixels - unsigned char *
								// DeclRefExpr- gbm - stbtt__bitmap
							// CStyleCastExpr-  - unsigned char *
								// CallExpr- malloc - void *
									// UnexposedExpr- malloc - void *(*)(unsigned long long)
										// DeclRefExpr- malloc - void *(unsigned long long)
									// UnexposedExpr-  - unsigned long long
										// BinaryOperator-  - int [Binary Operator: Mul (*)]
											// UnexposedExpr- w - int
												// MemberRefExpr- w - int
													// DeclRefExpr- gbm - stbtt__bitmap
											// UnexposedExpr- h - int
												// MemberRefExpr- h - int
													// DeclRefExpr- gbm - stbtt__bitmap
						// IfStmt-  - 
							// UnexposedExpr- pixels - unsigned char *
								// MemberRefExpr- pixels - unsigned char *
									// DeclRefExpr- gbm - stbtt__bitmap
							// CompoundStmt-  - 
								// BinaryOperator-  - int [Binary Operator: Assign (=)]
									// MemberRefExpr- stride - int
										// DeclRefExpr- gbm - stbtt__bitmap
									// UnexposedExpr- w - int
										// MemberRefExpr- w - int
											// DeclRefExpr- gbm - stbtt__bitmap
								// CallExpr- stbtt_Rasterize - void
									// UnexposedExpr- stbtt_Rasterize - void (*)(stbtt__bitmap *, float, stbtt_vertex *, int, float, float, float, float, int, int, int, void *)
										// DeclRefExpr- stbtt_Rasterize - void (stbtt__bitmap *, float, stbtt_vertex *, int, float, float, float, float, int, int, int, void *)
									// UnaryOperator-  - stbtt__bitmap * [Unary Operator: AddrOf (&)]
										// DeclRefExpr- gbm - stbtt__bitmap
									// FloatingLiteral-  - float [Literal: 0.349999994]
									// UnexposedExpr- vertices - stbtt_vertex *
										// DeclRefExpr- vertices - stbtt_vertex *
									// UnexposedExpr- num_verts - int
										// DeclRefExpr- num_verts - int
									// UnexposedExpr- scale_x - float
										// DeclRefExpr- scale_x - float
									// UnexposedExpr- scale_y - float
										// DeclRefExpr- scale_y - float
									// UnexposedExpr- shift_x - float
										// DeclRefExpr- shift_x - float
									// UnexposedExpr- shift_y - float
										// DeclRefExpr- shift_y - float
									// UnexposedExpr- ix0 - int
										// DeclRefExpr- ix0 - int
									// UnexposedExpr- iy0 - int
										// DeclRefExpr- iy0 - int
									// IntegerLiteral-  - int [Literal: 1]
									// UnexposedExpr- userdata - void *
										// MemberRefExpr- userdata - void *const
											// UnexposedExpr- info - const stbtt_fontinfo *
												// DeclRefExpr- info - const stbtt_fontinfo *
				// CallExpr- free - void
					// UnexposedExpr- free - void (*)(void *) __attribute__((cdecl))
						// DeclRefExpr- free - void (void *)
					// UnexposedExpr- vertices - void *
						// UnexposedExpr- vertices - stbtt_vertex *
							// DeclRefExpr- vertices - stbtt_vertex *
				// ReturnStmt-  - 
					// UnexposedExpr- pixels - unsigned char *
						// MemberRefExpr- pixels - unsigned char *
							// DeclRefExpr- gbm - stbtt__bitmap
		// FunctionDecl- stbtt_GetGlyphBitmap - unsigned char *(const stbtt_fontinfo *, float, float, int, int *, int *, int *, int *)
			// ParmDecl- info - const stbtt_fontinfo *
				// TypeRef- stbtt_fontinfo - stbtt_fontinfo
			// ParmDecl- scale_x - float
			// ParmDecl- scale_y - float
			// ParmDecl- glyph - int
			// ParmDecl- width - int *
			// ParmDecl- height - int *
			// ParmDecl- xoff - int *
			// ParmDecl- yoff - int *
			// CompoundStmt-  - 
				// ReturnStmt-  - 
					// CallExpr- stbtt_GetGlyphBitmapSubpixel - unsigned char *
						// UnexposedExpr- stbtt_GetGlyphBitmapSubpixel - unsigned char *(*)(const stbtt_fontinfo *, float, float, float, float, int, int *, int *, int *, int *)
							// DeclRefExpr- stbtt_GetGlyphBitmapSubpixel - unsigned char *(const stbtt_fontinfo *, float, float, float, float, int, int *, int *, int *, int *)
						// UnexposedExpr- info - const stbtt_fontinfo *
							// DeclRefExpr- info - const stbtt_fontinfo *
						// UnexposedExpr- scale_x - float
							// DeclRefExpr- scale_x - float
						// UnexposedExpr- scale_y - float
							// DeclRefExpr- scale_y - float
						// FloatingLiteral-  - float [Literal: 0]
						// FloatingLiteral-  - float [Literal: 0]
						// UnexposedExpr- glyph - int
							// DeclRefExpr- glyph - int
						// UnexposedExpr- width - int *
							// DeclRefExpr- width - int *
						// UnexposedExpr- height - int *
							// DeclRefExpr- height - int *
						// UnexposedExpr- xoff - int *
							// DeclRefExpr- xoff - int *
						// UnexposedExpr- yoff - int *
							// DeclRefExpr- yoff - int *
		// FunctionDecl- stbtt_MakeGlyphBitmapSubpixel - void (const stbtt_fontinfo *, unsigned char *, int, int, int, float, float, float, float, int)
			// ParmDecl- info - const stbtt_fontinfo *
				// TypeRef- stbtt_fontinfo - stbtt_fontinfo
			// ParmDecl- output - unsigned char *
			// ParmDecl- out_w - int
			// ParmDecl- out_h - int
			// ParmDecl- out_stride - int
			// ParmDecl- scale_x - float
			// ParmDecl- scale_y - float
			// ParmDecl- shift_x - float
			// ParmDecl- shift_y - float
			// ParmDecl- glyph - int
			// CompoundStmt-  - 
				// DeclStmt-  - 
					// VarDecl- ix0 - int
					// VarDecl- iy0 - int
				// DeclStmt-  - 
					// VarDecl- vertices - stbtt_vertex *
						// TypeRef- stbtt_vertex - stbtt_vertex
				// DeclStmt-  - 
					// VarDecl- num_verts - int
						// CallExpr- stbtt_GetGlyphShape - int
							// UnexposedExpr- stbtt_GetGlyphShape - int (*)(const stbtt_fontinfo *, int, stbtt_vertex **)
								// DeclRefExpr- stbtt_GetGlyphShape - int (const stbtt_fontinfo *, int, stbtt_vertex **)
							// UnexposedExpr- info - const stbtt_fontinfo *
								// DeclRefExpr- info - const stbtt_fontinfo *
							// UnexposedExpr- glyph - int
								// DeclRefExpr- glyph - int
							// UnaryOperator-  - stbtt_vertex ** [Unary Operator: AddrOf (&)]
								// DeclRefExpr- vertices - stbtt_vertex *
				// DeclStmt-  - 
					// VarDecl- gbm - stbtt__bitmap
						// TypeRef- stbtt__bitmap - stbtt__bitmap
				// CallExpr- stbtt_GetGlyphBitmapBoxSubpixel - void
					// UnexposedExpr- stbtt_GetGlyphBitmapBoxSubpixel - void (*)(const stbtt_fontinfo *, int, float, float, float, float, int *, int *, int *, int *)
						// DeclRefExpr- stbtt_GetGlyphBitmapBoxSubpixel - void (const stbtt_fontinfo *, int, float, float, float, float, int *, int *, int *, int *)
					// UnexposedExpr- info - const stbtt_fontinfo *
						// DeclRefExpr- info - const stbtt_fontinfo *
					// UnexposedExpr- glyph - int
						// DeclRefExpr- glyph - int
					// UnexposedExpr- scale_x - float
						// DeclRefExpr- scale_x - float
					// UnexposedExpr- scale_y - float
						// DeclRefExpr- scale_y - float
					// UnexposedExpr- shift_x - float
						// DeclRefExpr- shift_x - float
					// UnexposedExpr- shift_y - float
						// DeclRefExpr- shift_y - float
					// UnaryOperator-  - int * [Unary Operator: AddrOf (&)]
						// DeclRefExpr- ix0 - int
					// UnaryOperator-  - int * [Unary Operator: AddrOf (&)]
						// DeclRefExpr- iy0 - int
					// UnexposedExpr-  - int *
						// IntegerLiteral-  - int [Literal: 0]
					// UnexposedExpr-  - int *
						// IntegerLiteral-  - int [Literal: 0]
				// BinaryOperator-  - unsigned char * [Binary Operator: Assign (=)]
					// MemberRefExpr- pixels - unsigned char *
						// DeclRefExpr- gbm - stbtt__bitmap
					// UnexposedExpr- output - unsigned char *
						// DeclRefExpr- output - unsigned char *
				// BinaryOperator-  - int [Binary Operator: Assign (=)]
					// MemberRefExpr- w - int
						// DeclRefExpr- gbm - stbtt__bitmap
					// UnexposedExpr- out_w - int
						// DeclRefExpr- out_w - int
				// BinaryOperator-  - int [Binary Operator: Assign (=)]
					// MemberRefExpr- h - int
						// DeclRefExpr- gbm - stbtt__bitmap
					// UnexposedExpr- out_h - int
						// DeclRefExpr- out_h - int
				// BinaryOperator-  - int [Binary Operator: Assign (=)]
					// MemberRefExpr- stride - int
						// DeclRefExpr- gbm - stbtt__bitmap
					// UnexposedExpr- out_stride - int
						// DeclRefExpr- out_stride - int
				// IfStmt-  - 
					// BinaryOperator-  - int [Binary Operator: LAnd (&&)]
						// UnexposedExpr- w - int
							// MemberRefExpr- w - int
								// DeclRefExpr- gbm - stbtt__bitmap
						// UnexposedExpr- h - int
							// MemberRefExpr- h - int
								// DeclRefExpr- gbm - stbtt__bitmap
					// CallExpr- stbtt_Rasterize - void
						// UnexposedExpr- stbtt_Rasterize - void (*)(stbtt__bitmap *, float, stbtt_vertex *, int, float, float, float, float, int, int, int, void *)
							// DeclRefExpr- stbtt_Rasterize - void (stbtt__bitmap *, float, stbtt_vertex *, int, float, float, float, float, int, int, int, void *)
						// UnaryOperator-  - stbtt__bitmap * [Unary Operator: AddrOf (&)]
							// DeclRefExpr- gbm - stbtt__bitmap
						// FloatingLiteral-  - float [Literal: 0.349999994]
						// UnexposedExpr- vertices - stbtt_vertex *
							// DeclRefExpr- vertices - stbtt_vertex *
						// UnexposedExpr- num_verts - int
							// DeclRefExpr- num_verts - int
						// UnexposedExpr- scale_x - float
							// DeclRefExpr- scale_x - float
						// UnexposedExpr- scale_y - float
							// DeclRefExpr- scale_y - float
						// UnexposedExpr- shift_x - float
							// DeclRefExpr- shift_x - float
						// UnexposedExpr- shift_y - float
							// DeclRefExpr- shift_y - float
						// UnexposedExpr- ix0 - int
							// DeclRefExpr- ix0 - int
						// UnexposedExpr- iy0 - int
							// DeclRefExpr- iy0 - int
						// IntegerLiteral-  - int [Literal: 1]
						// UnexposedExpr- userdata - void *
							// MemberRefExpr- userdata - void *const
								// UnexposedExpr- info - const stbtt_fontinfo *
									// DeclRefExpr- info - const stbtt_fontinfo *
				// CallExpr- free - void
					// UnexposedExpr- free - void (*)(void *) __attribute__((cdecl))
						// DeclRefExpr- free - void (void *)
					// UnexposedExpr- vertices - void *
						// UnexposedExpr- vertices - stbtt_vertex *
							// DeclRefExpr- vertices - stbtt_vertex *
		// FunctionDecl- stbtt_MakeGlyphBitmap - void (const stbtt_fontinfo *, unsigned char *, int, int, int, float, float, int)
			// ParmDecl- info - const stbtt_fontinfo *
				// TypeRef- stbtt_fontinfo - stbtt_fontinfo
			// ParmDecl- output - unsigned char *
			// ParmDecl- out_w - int
			// ParmDecl- out_h - int
			// ParmDecl- out_stride - int
			// ParmDecl- scale_x - float
			// ParmDecl- scale_y - float
			// ParmDecl- glyph - int
			// CompoundStmt-  - 
				// CallExpr- stbtt_MakeGlyphBitmapSubpixel - void
					// UnexposedExpr- stbtt_MakeGlyphBitmapSubpixel - void (*)(const stbtt_fontinfo *, unsigned char *, int, int, int, float, float, float, float, int)
						// DeclRefExpr- stbtt_MakeGlyphBitmapSubpixel - void (const stbtt_fontinfo *, unsigned char *, int, int, int, float, float, float, float, int)
					// UnexposedExpr- info - const stbtt_fontinfo *
						// DeclRefExpr- info - const stbtt_fontinfo *
					// UnexposedExpr- output - unsigned char *
						// DeclRefExpr- output - unsigned char *
					// UnexposedExpr- out_w - int
						// DeclRefExpr- out_w - int
					// UnexposedExpr- out_h - int
						// DeclRefExpr- out_h - int
					// UnexposedExpr- out_stride - int
						// DeclRefExpr- out_stride - int
					// UnexposedExpr- scale_x - float
						// DeclRefExpr- scale_x - float
					// UnexposedExpr- scale_y - float
						// DeclRefExpr- scale_y - float
					// FloatingLiteral-  - float [Literal: 0]
					// FloatingLiteral-  - float [Literal: 0]
					// UnexposedExpr- glyph - int
						// DeclRefExpr- glyph - int
		// FunctionDecl- stbtt_GetCodepointBitmapSubpixel - unsigned char *(const stbtt_fontinfo *, float, float, float, float, int, int *, int *, int *, int *)
			// ParmDecl- info - const stbtt_fontinfo *
				// TypeRef- stbtt_fontinfo - stbtt_fontinfo
			// ParmDecl- scale_x - float
			// ParmDecl- scale_y - float
			// ParmDecl- shift_x - float
			// ParmDecl- shift_y - float
			// ParmDecl- codepoint - int
			// ParmDecl- width - int *
			// ParmDecl- height - int *
			// ParmDecl- xoff - int *
			// ParmDecl- yoff - int *
			// CompoundStmt-  - 
				// ReturnStmt-  - 
					// CallExpr- stbtt_GetGlyphBitmapSubpixel - unsigned char *
						// UnexposedExpr- stbtt_GetGlyphBitmapSubpixel - unsigned char *(*)(const stbtt_fontinfo *, float, float, float, float, int, int *, int *, int *, int *)
							// DeclRefExpr- stbtt_GetGlyphBitmapSubpixel - unsigned char *(const stbtt_fontinfo *, float, float, float, float, int, int *, int *, int *, int *)
						// UnexposedExpr- info - const stbtt_fontinfo *
							// DeclRefExpr- info - const stbtt_fontinfo *
						// UnexposedExpr- scale_x - float
							// DeclRefExpr- scale_x - float
						// UnexposedExpr- scale_y - float
							// DeclRefExpr- scale_y - float
						// UnexposedExpr- shift_x - float
							// DeclRefExpr- shift_x - float
						// UnexposedExpr- shift_y - float
							// DeclRefExpr- shift_y - float
						// CallExpr- stbtt_FindGlyphIndex - int
							// UnexposedExpr- stbtt_FindGlyphIndex - int (*)(const stbtt_fontinfo *, int)
								// DeclRefExpr- stbtt_FindGlyphIndex - int (const stbtt_fontinfo *, int)
							// UnexposedExpr- info - const stbtt_fontinfo *
								// DeclRefExpr- info - const stbtt_fontinfo *
							// UnexposedExpr- codepoint - int
								// DeclRefExpr- codepoint - int
						// UnexposedExpr- width - int *
							// DeclRefExpr- width - int *
						// UnexposedExpr- height - int *
							// DeclRefExpr- height - int *
						// UnexposedExpr- xoff - int *
							// DeclRefExpr- xoff - int *
						// UnexposedExpr- yoff - int *
							// DeclRefExpr- yoff - int *
		// FunctionDecl- stbtt_MakeCodepointBitmapSubpixelPrefilter - void (const stbtt_fontinfo *, unsigned char *, int, int, int, float, float, float, float, int, int, float *, float *, int)
			// ParmDecl- info - const stbtt_fontinfo *
				// TypeRef- stbtt_fontinfo - stbtt_fontinfo
			// ParmDecl- output - unsigned char *
			// ParmDecl- out_w - int
			// ParmDecl- out_h - int
			// ParmDecl- out_stride - int
			// ParmDecl- scale_x - float
			// ParmDecl- scale_y - float
			// ParmDecl- shift_x - float
			// ParmDecl- shift_y - float
			// ParmDecl- oversample_x - int
			// ParmDecl- oversample_y - int
			// ParmDecl- sub_x - float *
			// ParmDecl- sub_y - float *
			// ParmDecl- codepoint - int
			// CompoundStmt-  - 
				// CallExpr- stbtt_MakeGlyphBitmapSubpixelPrefilter - void
					// UnexposedExpr- stbtt_MakeGlyphBitmapSubpixelPrefilter - void (*)(const stbtt_fontinfo *, unsigned char *, int, int, int, float, float, float, float, int, int, float *, float *, int)
						// DeclRefExpr- stbtt_MakeGlyphBitmapSubpixelPrefilter - void (const stbtt_fontinfo *, unsigned char *, int, int, int, float, float, float, float, int, int, float *, float *, int)
					// UnexposedExpr- info - const stbtt_fontinfo *
						// DeclRefExpr- info - const stbtt_fontinfo *
					// UnexposedExpr- output - unsigned char *
						// DeclRefExpr- output - unsigned char *
					// UnexposedExpr- out_w - int
						// DeclRefExpr- out_w - int
					// UnexposedExpr- out_h - int
						// DeclRefExpr- out_h - int
					// UnexposedExpr- out_stride - int
						// DeclRefExpr- out_stride - int
					// UnexposedExpr- scale_x - float
						// DeclRefExpr- scale_x - float
					// UnexposedExpr- scale_y - float
						// DeclRefExpr- scale_y - float
					// UnexposedExpr- shift_x - float
						// DeclRefExpr- shift_x - float
					// UnexposedExpr- shift_y - float
						// DeclRefExpr- shift_y - float
					// UnexposedExpr- oversample_x - int
						// DeclRefExpr- oversample_x - int
					// UnexposedExpr- oversample_y - int
						// DeclRefExpr- oversample_y - int
					// UnexposedExpr- sub_x - float *
						// DeclRefExpr- sub_x - float *
					// UnexposedExpr- sub_y - float *
						// DeclRefExpr- sub_y - float *
					// CallExpr- stbtt_FindGlyphIndex - int
						// UnexposedExpr- stbtt_FindGlyphIndex - int (*)(const stbtt_fontinfo *, int)
							// DeclRefExpr- stbtt_FindGlyphIndex - int (const stbtt_fontinfo *, int)
						// UnexposedExpr- info - const stbtt_fontinfo *
							// DeclRefExpr- info - const stbtt_fontinfo *
						// UnexposedExpr- codepoint - int
							// DeclRefExpr- codepoint - int
		// FunctionDecl- stbtt_MakeCodepointBitmapSubpixel - void (const stbtt_fontinfo *, unsigned char *, int, int, int, float, float, float, float, int)
			// ParmDecl- info - const stbtt_fontinfo *
				// TypeRef- stbtt_fontinfo - stbtt_fontinfo
			// ParmDecl- output - unsigned char *
			// ParmDecl- out_w - int
			// ParmDecl- out_h - int
			// ParmDecl- out_stride - int
			// ParmDecl- scale_x - float
			// ParmDecl- scale_y - float
			// ParmDecl- shift_x - float
			// ParmDecl- shift_y - float
			// ParmDecl- codepoint - int
			// CompoundStmt-  - 
				// CallExpr- stbtt_MakeGlyphBitmapSubpixel - void
					// UnexposedExpr- stbtt_MakeGlyphBitmapSubpixel - void (*)(const stbtt_fontinfo *, unsigned char *, int, int, int, float, float, float, float, int)
						// DeclRefExpr- stbtt_MakeGlyphBitmapSubpixel - void (const stbtt_fontinfo *, unsigned char *, int, int, int, float, float, float, float, int)
					// UnexposedExpr- info - const stbtt_fontinfo *
						// DeclRefExpr- info - const stbtt_fontinfo *
					// UnexposedExpr- output - unsigned char *
						// DeclRefExpr- output - unsigned char *
					// UnexposedExpr- out_w - int
						// DeclRefExpr- out_w - int
					// UnexposedExpr- out_h - int
						// DeclRefExpr- out_h - int
					// UnexposedExpr- out_stride - int
						// DeclRefExpr- out_stride - int
					// UnexposedExpr- scale_x - float
						// DeclRefExpr- scale_x - float
					// UnexposedExpr- scale_y - float
						// DeclRefExpr- scale_y - float
					// UnexposedExpr- shift_x - float
						// DeclRefExpr- shift_x - float
					// UnexposedExpr- shift_y - float
						// DeclRefExpr- shift_y - float
					// CallExpr- stbtt_FindGlyphIndex - int
						// UnexposedExpr- stbtt_FindGlyphIndex - int (*)(const stbtt_fontinfo *, int)
							// DeclRefExpr- stbtt_FindGlyphIndex - int (const stbtt_fontinfo *, int)
						// UnexposedExpr- info - const stbtt_fontinfo *
							// DeclRefExpr- info - const stbtt_fontinfo *
						// UnexposedExpr- codepoint - int
							// DeclRefExpr- codepoint - int
		// FunctionDecl- stbtt_GetCodepointBitmap - unsigned char *(const stbtt_fontinfo *, float, float, int, int *, int *, int *, int *)
			// ParmDecl- info - const stbtt_fontinfo *
				// TypeRef- stbtt_fontinfo - stbtt_fontinfo
			// ParmDecl- scale_x - float
			// ParmDecl- scale_y - float
			// ParmDecl- codepoint - int
			// ParmDecl- width - int *
			// ParmDecl- height - int *
			// ParmDecl- xoff - int *
			// ParmDecl- yoff - int *
			// CompoundStmt-  - 
				// ReturnStmt-  - 
					// CallExpr- stbtt_GetCodepointBitmapSubpixel - unsigned char *
						// UnexposedExpr- stbtt_GetCodepointBitmapSubpixel - unsigned char *(*)(const stbtt_fontinfo *, float, float, float, float, int, int *, int *, int *, int *)
							// DeclRefExpr- stbtt_GetCodepointBitmapSubpixel - unsigned char *(const stbtt_fontinfo *, float, float, float, float, int, int *, int *, int *, int *)
						// UnexposedExpr- info - const stbtt_fontinfo *
							// DeclRefExpr- info - const stbtt_fontinfo *
						// UnexposedExpr- scale_x - float
							// DeclRefExpr- scale_x - float
						// UnexposedExpr- scale_y - float
							// DeclRefExpr- scale_y - float
						// FloatingLiteral-  - float [Literal: 0]
						// FloatingLiteral-  - float [Literal: 0]
						// UnexposedExpr- codepoint - int
							// DeclRefExpr- codepoint - int
						// UnexposedExpr- width - int *
							// DeclRefExpr- width - int *
						// UnexposedExpr- height - int *
							// DeclRefExpr- height - int *
						// UnexposedExpr- xoff - int *
							// DeclRefExpr- xoff - int *
						// UnexposedExpr- yoff - int *
							// DeclRefExpr- yoff - int *
		// FunctionDecl- stbtt_MakeCodepointBitmap - void (const stbtt_fontinfo *, unsigned char *, int, int, int, float, float, int)
			// ParmDecl- info - const stbtt_fontinfo *
				// TypeRef- stbtt_fontinfo - stbtt_fontinfo
			// ParmDecl- output - unsigned char *
			// ParmDecl- out_w - int
			// ParmDecl- out_h - int
			// ParmDecl- out_stride - int
			// ParmDecl- scale_x - float
			// ParmDecl- scale_y - float
			// ParmDecl- codepoint - int
			// CompoundStmt-  - 
				// CallExpr- stbtt_MakeCodepointBitmapSubpixel - void
					// UnexposedExpr- stbtt_MakeCodepointBitmapSubpixel - void (*)(const stbtt_fontinfo *, unsigned char *, int, int, int, float, float, float, float, int)
						// DeclRefExpr- stbtt_MakeCodepointBitmapSubpixel - void (const stbtt_fontinfo *, unsigned char *, int, int, int, float, float, float, float, int)
					// UnexposedExpr- info - const stbtt_fontinfo *
						// DeclRefExpr- info - const stbtt_fontinfo *
					// UnexposedExpr- output - unsigned char *
						// DeclRefExpr- output - unsigned char *
					// UnexposedExpr- out_w - int
						// DeclRefExpr- out_w - int
					// UnexposedExpr- out_h - int
						// DeclRefExpr- out_h - int
					// UnexposedExpr- out_stride - int
						// DeclRefExpr- out_stride - int
					// UnexposedExpr- scale_x - float
						// DeclRefExpr- scale_x - float
					// UnexposedExpr- scale_y - float
						// DeclRefExpr- scale_y - float
					// FloatingLiteral-  - float [Literal: 0]
					// FloatingLiteral-  - float [Literal: 0]
					// UnexposedExpr- codepoint - int
						// DeclRefExpr- codepoint - int
		// FunctionDecl- stbtt_BakeFontBitmap_internal - int (unsigned char *, int, float, unsigned char *, int, int, int, int, stbtt_bakedchar *)
			// ParmDecl- data - unsigned char *
			// ParmDecl- offset - int
			// ParmDecl- pixel_height - float
			// ParmDecl- pixels - unsigned char *
			// ParmDecl- pw - int
			// ParmDecl- ph - int
			// ParmDecl- first_char - int
			// ParmDecl- num_chars - int
			// ParmDecl- chardata - stbtt_bakedchar *
				// TypeRef- stbtt_bakedchar - stbtt_bakedchar
			// CompoundStmt-  - 
				// DeclStmt-  - 
					// VarDecl- scale - float
				// DeclStmt-  - 
					// VarDecl- x - int
					// VarDecl- y - int
					// VarDecl- bottom_y - int
					// VarDecl- i - int
				// DeclStmt-  - 
					// VarDecl- f - stbtt_fontinfo
						// TypeRef- stbtt_fontinfo - stbtt_fontinfo
				// BinaryOperator-  - void * [Binary Operator: Assign (=)]
					// MemberRefExpr- userdata - void *
						// DeclRefExpr- f - stbtt_fontinfo
					// ParenExpr-  - void *
						// CStyleCastExpr-  - void *
							// IntegerLiteral-  - int [Literal: 0]
				// IfStmt-  - 
					// UnaryOperator-  - int [Unary Operator: LNot (!)]
						// CallExpr- stbtt_InitFont - int
							// UnexposedExpr- stbtt_InitFont - int (*)(stbtt_fontinfo *, const unsigned char *, int)
								// DeclRefExpr- stbtt_InitFont - int (stbtt_fontinfo *, const unsigned char *, int)
							// UnaryOperator-  - stbtt_fontinfo * [Unary Operator: AddrOf (&)]
								// DeclRefExpr- f - stbtt_fontinfo
							// UnexposedExpr- data - const unsigned char *
								// UnexposedExpr- data - unsigned char *
									// DeclRefExpr- data - unsigned char *
							// UnexposedExpr- offset - int
								// DeclRefExpr- offset - int
					// ReturnStmt-  - 
						// UnaryOperator-  - int [Unary Operator: Minus (-)]
							// IntegerLiteral-  - int [Literal: 1]
				// CallExpr- memset - void *
					// UnexposedExpr- memset - void *(*)(void *, int, unsigned long long)
						// DeclRefExpr- memset - void *(void *, int, unsigned long long)
					// UnexposedExpr- pixels - void *
						// UnexposedExpr- pixels - unsigned char *
							// DeclRefExpr- pixels - unsigned char *
					// IntegerLiteral-  - int [Literal: 0]
					// UnexposedExpr-  - unsigned long long
						// BinaryOperator-  - int [Binary Operator: Mul (*)]
							// UnexposedExpr- pw - int
								// DeclRefExpr- pw - int
							// UnexposedExpr- ph - int
								// DeclRefExpr- ph - int
				// BinaryOperator-  - int [Binary Operator: Assign (=)]
					// DeclRefExpr- x - int
					// BinaryOperator-  - int [Binary Operator: Assign (=)]
						// DeclRefExpr- y - int
						// IntegerLiteral-  - int [Literal: 1]
				// BinaryOperator-  - int [Binary Operator: Assign (=)]
					// DeclRefExpr- bottom_y - int
					// IntegerLiteral-  - int [Literal: 1]
				// BinaryOperator-  - float [Binary Operator: Assign (=)]
					// DeclRefExpr- scale - float
					// CallExpr- stbtt_ScaleForPixelHeight - float
						// UnexposedExpr- stbtt_ScaleForPixelHeight - float (*)(const stbtt_fontinfo *, float)
							// DeclRefExpr- stbtt_ScaleForPixelHeight - float (const stbtt_fontinfo *, float)
						// UnexposedExpr-  - const stbtt_fontinfo *
							// UnaryOperator-  - stbtt_fontinfo * [Unary Operator: AddrOf (&)]
								// DeclRefExpr- f - stbtt_fontinfo
						// UnexposedExpr- pixel_height - float
							// DeclRefExpr- pixel_height - float
				// ForStmt-  - 
					// BinaryOperator-  - int [Binary Operator: Assign (=)]
						// DeclRefExpr- i - int
						// IntegerLiteral-  - int [Literal: 0]
					// BinaryOperator-  - int [Binary Operator: LT (<)]
						// UnexposedExpr- i - int
							// DeclRefExpr- i - int
						// UnexposedExpr- num_chars - int
							// DeclRefExpr- num_chars - int
					// UnaryOperator-  - int [Unary Operator: PreInc (++)]
						// DeclRefExpr- i - int
					// CompoundStmt-  - 
						// DeclStmt-  - 
							// VarDecl- advance - int
							// VarDecl- lsb - int
							// VarDecl- x0 - int
							// VarDecl- y0 - int
							// VarDecl- x1 - int
							// VarDecl- y1 - int
							// VarDecl- gw - int
							// VarDecl- gh - int
						// DeclStmt-  - 
							// VarDecl- g - int
								// CallExpr- stbtt_FindGlyphIndex - int
									// UnexposedExpr- stbtt_FindGlyphIndex - int (*)(const stbtt_fontinfo *, int)
										// DeclRefExpr- stbtt_FindGlyphIndex - int (const stbtt_fontinfo *, int)
									// UnexposedExpr-  - const stbtt_fontinfo *
										// UnaryOperator-  - stbtt_fontinfo * [Unary Operator: AddrOf (&)]
											// DeclRefExpr- f - stbtt_fontinfo
									// BinaryOperator-  - int [Binary Operator: Add (+)]
										// UnexposedExpr- first_char - int
											// DeclRefExpr- first_char - int
										// UnexposedExpr- i - int
											// DeclRefExpr- i - int
						// CallExpr- stbtt_GetGlyphHMetrics - void
							// UnexposedExpr- stbtt_GetGlyphHMetrics - void (*)(const stbtt_fontinfo *, int, int *, int *)
								// DeclRefExpr- stbtt_GetGlyphHMetrics - void (const stbtt_fontinfo *, int, int *, int *)
							// UnexposedExpr-  - const stbtt_fontinfo *
								// UnaryOperator-  - stbtt_fontinfo * [Unary Operator: AddrOf (&)]
									// DeclRefExpr- f - stbtt_fontinfo
							// UnexposedExpr- g - int
								// DeclRefExpr- g - int
							// UnaryOperator-  - int * [Unary Operator: AddrOf (&)]
								// DeclRefExpr- advance - int
							// UnaryOperator-  - int * [Unary Operator: AddrOf (&)]
								// DeclRefExpr- lsb - int
						// CallExpr- stbtt_GetGlyphBitmapBox - void
							// UnexposedExpr- stbtt_GetGlyphBitmapBox - void (*)(const stbtt_fontinfo *, int, float, float, int *, int *, int *, int *)
								// DeclRefExpr- stbtt_GetGlyphBitmapBox - void (const stbtt_fontinfo *, int, float, float, int *, int *, int *, int *)
							// UnexposedExpr-  - const stbtt_fontinfo *
								// UnaryOperator-  - stbtt_fontinfo * [Unary Operator: AddrOf (&)]
									// DeclRefExpr- f - stbtt_fontinfo
							// UnexposedExpr- g - int
								// DeclRefExpr- g - int
							// UnexposedExpr- scale - float
								// DeclRefExpr- scale - float
							// UnexposedExpr- scale - float
								// DeclRefExpr- scale - float
							// UnaryOperator-  - int * [Unary Operator: AddrOf (&)]
								// DeclRefExpr- x0 - int
							// UnaryOperator-  - int * [Unary Operator: AddrOf (&)]
								// DeclRefExpr- y0 - int
							// UnaryOperator-  - int * [Unary Operator: AddrOf (&)]
								// DeclRefExpr- x1 - int
							// UnaryOperator-  - int * [Unary Operator: AddrOf (&)]
								// DeclRefExpr- y1 - int
						// BinaryOperator-  - int [Binary Operator: Assign (=)]
							// DeclRefExpr- gw - int
							// BinaryOperator-  - int [Binary Operator: Sub (-)]
								// UnexposedExpr- x1 - int
									// DeclRefExpr- x1 - int
								// UnexposedExpr- x0 - int
									// DeclRefExpr- x0 - int
						// BinaryOperator-  - int [Binary Operator: Assign (=)]
							// DeclRefExpr- gh - int
							// BinaryOperator-  - int [Binary Operator: Sub (-)]
								// UnexposedExpr- y1 - int
									// DeclRefExpr- y1 - int
								// UnexposedExpr- y0 - int
									// DeclRefExpr- y0 - int
						// IfStmt-  - 
							// BinaryOperator-  - int [Binary Operator: GE (>=)]
								// BinaryOperator-  - int [Binary Operator: Add (+)]
									// BinaryOperator-  - int [Binary Operator: Add (+)]
										// UnexposedExpr- x - int
											// DeclRefExpr- x - int
										// UnexposedExpr- gw - int
											// DeclRefExpr- gw - int
									// IntegerLiteral-  - int [Literal: 1]
								// UnexposedExpr- pw - int
									// DeclRefExpr- pw - int
							// CompoundStmt-  - 
								// BinaryOperator-  - int [Binary Operator: Assign (=)]
									// DeclRefExpr- y - int
									// UnexposedExpr- bottom_y - int
										// DeclRefExpr- bottom_y - int
								// BinaryOperator-  - int [Binary Operator: Assign (=)]
									// DeclRefExpr- x - int
									// IntegerLiteral-  - int [Literal: 1]
						// IfStmt-  - 
							// BinaryOperator-  - int [Binary Operator: GE (>=)]
								// BinaryOperator-  - int [Binary Operator: Add (+)]
									// BinaryOperator-  - int [Binary Operator: Add (+)]
										// UnexposedExpr- y - int
											// DeclRefExpr- y - int
										// UnexposedExpr- gh - int
											// DeclRefExpr- gh - int
									// IntegerLiteral-  - int [Literal: 1]
								// UnexposedExpr- ph - int
									// DeclRefExpr- ph - int
							// ReturnStmt-  - 
								// UnaryOperator-  - int [Unary Operator: Minus (-)]
									// UnexposedExpr- i - int
										// DeclRefExpr- i - int
						// NullStmt-  - 
						// NullStmt-  - 
						// CallExpr- stbtt_MakeGlyphBitmap - void
							// UnexposedExpr- stbtt_MakeGlyphBitmap - void (*)(const stbtt_fontinfo *, unsigned char *, int, int, int, float, float, int)
								// DeclRefExpr- stbtt_MakeGlyphBitmap - void (const stbtt_fontinfo *, unsigned char *, int, int, int, float, float, int)
							// UnexposedExpr-  - const stbtt_fontinfo *
								// UnaryOperator-  - stbtt_fontinfo * [Unary Operator: AddrOf (&)]
									// DeclRefExpr- f - stbtt_fontinfo
							// BinaryOperator-  - unsigned char * [Binary Operator: Add (+)]
								// BinaryOperator-  - unsigned char * [Binary Operator: Add (+)]
									// UnexposedExpr- pixels - unsigned char *
										// DeclRefExpr- pixels - unsigned char *
									// UnexposedExpr- x - int
										// DeclRefExpr- x - int
								// BinaryOperator-  - int [Binary Operator: Mul (*)]
									// UnexposedExpr- y - int
										// DeclRefExpr- y - int
									// UnexposedExpr- pw - int
										// DeclRefExpr- pw - int
							// UnexposedExpr- gw - int
								// DeclRefExpr- gw - int
							// UnexposedExpr- gh - int
								// DeclRefExpr- gh - int
							// UnexposedExpr- pw - int
								// DeclRefExpr- pw - int
							// UnexposedExpr- scale - float
								// DeclRefExpr- scale - float
							// UnexposedExpr- scale - float
								// DeclRefExpr- scale - float
							// UnexposedExpr- g - int
								// DeclRefExpr- g - int
						// BinaryOperator-  - unsigned short [Binary Operator: Assign (=)]
							// MemberRefExpr- x0 - unsigned short
								// ArraySubscriptExpr-  - stbtt_bakedchar
									// UnexposedExpr- chardata - stbtt_bakedchar *
										// DeclRefExpr- chardata - stbtt_bakedchar *
									// UnexposedExpr- i - int
										// DeclRefExpr- i - int
							// UnexposedExpr-  - unsigned short
								// CStyleCastExpr-  - stbtt_int16
									// TypeRef- stbtt_int16 - stbtt_int16
									// UnexposedExpr- x - int
										// DeclRefExpr- x - int
						// BinaryOperator-  - unsigned short [Binary Operator: Assign (=)]
							// MemberRefExpr- y0 - unsigned short
								// ArraySubscriptExpr-  - stbtt_bakedchar
									// UnexposedExpr- chardata - stbtt_bakedchar *
										// DeclRefExpr- chardata - stbtt_bakedchar *
									// UnexposedExpr- i - int
										// DeclRefExpr- i - int
							// UnexposedExpr-  - unsigned short
								// CStyleCastExpr-  - stbtt_int16
									// TypeRef- stbtt_int16 - stbtt_int16
									// UnexposedExpr- y - int
										// DeclRefExpr- y - int
						// BinaryOperator-  - unsigned short [Binary Operator: Assign (=)]
							// MemberRefExpr- x1 - unsigned short
								// ArraySubscriptExpr-  - stbtt_bakedchar
									// UnexposedExpr- chardata - stbtt_bakedchar *
										// DeclRefExpr- chardata - stbtt_bakedchar *
									// UnexposedExpr- i - int
										// DeclRefExpr- i - int
							// UnexposedExpr-  - unsigned short
								// CStyleCastExpr-  - stbtt_int16
									// TypeRef- stbtt_int16 - stbtt_int16
									// ParenExpr-  - int
										// BinaryOperator-  - int [Binary Operator: Add (+)]
											// UnexposedExpr- x - int
												// DeclRefExpr- x - int
											// UnexposedExpr- gw - int
												// DeclRefExpr- gw - int
						// BinaryOperator-  - unsigned short [Binary Operator: Assign (=)]
							// MemberRefExpr- y1 - unsigned short
								// ArraySubscriptExpr-  - stbtt_bakedchar
									// UnexposedExpr- chardata - stbtt_bakedchar *
										// DeclRefExpr- chardata - stbtt_bakedchar *
									// UnexposedExpr- i - int
										// DeclRefExpr- i - int
							// UnexposedExpr-  - unsigned short
								// CStyleCastExpr-  - stbtt_int16
									// TypeRef- stbtt_int16 - stbtt_int16
									// ParenExpr-  - int
										// BinaryOperator-  - int [Binary Operator: Add (+)]
											// UnexposedExpr- y - int
												// DeclRefExpr- y - int
											// UnexposedExpr- gh - int
												// DeclRefExpr- gh - int
						// BinaryOperator-  - float [Binary Operator: Assign (=)]
							// MemberRefExpr- xadvance - float
								// ArraySubscriptExpr-  - stbtt_bakedchar
									// UnexposedExpr- chardata - stbtt_bakedchar *
										// DeclRefExpr- chardata - stbtt_bakedchar *
									// UnexposedExpr- i - int
										// DeclRefExpr- i - int
							// BinaryOperator-  - float [Binary Operator: Mul (*)]
								// UnexposedExpr- scale - float
									// DeclRefExpr- scale - float
								// UnexposedExpr- advance - float
									// UnexposedExpr- advance - int
										// DeclRefExpr- advance - int
						// BinaryOperator-  - float [Binary Operator: Assign (=)]
							// MemberRefExpr- xoff - float
								// ArraySubscriptExpr-  - stbtt_bakedchar
									// UnexposedExpr- chardata - stbtt_bakedchar *
										// DeclRefExpr- chardata - stbtt_bakedchar *
									// UnexposedExpr- i - int
										// DeclRefExpr- i - int
							// CStyleCastExpr-  - float
								// UnexposedExpr- x0 - int
									// DeclRefExpr- x0 - int
						// BinaryOperator-  - float [Binary Operator: Assign (=)]
							// MemberRefExpr- yoff - float
								// ArraySubscriptExpr-  - stbtt_bakedchar
									// UnexposedExpr- chardata - stbtt_bakedchar *
										// DeclRefExpr- chardata - stbtt_bakedchar *
									// UnexposedExpr- i - int
										// DeclRefExpr- i - int
							// CStyleCastExpr-  - float
								// UnexposedExpr- y0 - int
									// DeclRefExpr- y0 - int
						// BinaryOperator-  - int [Binary Operator: Assign (=)]
							// DeclRefExpr- x - int
							// BinaryOperator-  - int [Binary Operator: Add (+)]
								// BinaryOperator-  - int [Binary Operator: Add (+)]
									// UnexposedExpr- x - int
										// DeclRefExpr- x - int
									// UnexposedExpr- gw - int
										// DeclRefExpr- gw - int
								// IntegerLiteral-  - int [Literal: 1]
						// IfStmt-  - 
							// BinaryOperator-  - int [Binary Operator: GT (>)]
								// BinaryOperator-  - int [Binary Operator: Add (+)]
									// BinaryOperator-  - int [Binary Operator: Add (+)]
										// UnexposedExpr- y - int
											// DeclRefExpr- y - int
										// UnexposedExpr- gh - int
											// DeclRefExpr- gh - int
									// IntegerLiteral-  - int [Literal: 1]
								// UnexposedExpr- bottom_y - int
									// DeclRefExpr- bottom_y - int
							// BinaryOperator-  - int [Binary Operator: Assign (=)]
								// DeclRefExpr- bottom_y - int
								// BinaryOperator-  - int [Binary Operator: Add (+)]
									// BinaryOperator-  - int [Binary Operator: Add (+)]
										// UnexposedExpr- y - int
											// DeclRefExpr- y - int
										// UnexposedExpr- gh - int
											// DeclRefExpr- gh - int
									// IntegerLiteral-  - int [Literal: 1]
				// ReturnStmt-  - 
					// UnexposedExpr- bottom_y - int
						// DeclRefExpr- bottom_y - int
		// FunctionDecl- stbtt_GetBakedQuad - void (const stbtt_bakedchar *, int, int, int, float *, float *, stbtt_aligned_quad *, int)
			// ParmDecl- chardata - const stbtt_bakedchar *
				// TypeRef- stbtt_bakedchar - stbtt_bakedchar
			// ParmDecl- pw - int
			// ParmDecl- ph - int
			// ParmDecl- char_index - int
			// ParmDecl- xpos - float *
			// ParmDecl- ypos - float *
			// ParmDecl- q - stbtt_aligned_quad *
				// TypeRef- stbtt_aligned_quad - stbtt_aligned_quad
			// ParmDecl- opengl_fillrule - int
			// CompoundStmt-  - 
				// DeclStmt-  - 
					// VarDecl- d3d_bias - float
						// ConditionalOperator-  - float
							// UnexposedExpr- opengl_fillrule - int
								// DeclRefExpr- opengl_fillrule - int
							// UnexposedExpr-  - float
								// IntegerLiteral-  - int [Literal: 0]
							// UnaryOperator-  - float [Unary Operator: Minus (-)]
								// FloatingLiteral-  - float [Literal: 0.5]
				// DeclStmt-  - 
					// VarDecl- ipw - float
						// BinaryOperator-  - float [Binary Operator: Div (/)]
							// FloatingLiteral-  - float [Literal: 1]
							// UnexposedExpr- pw - float
								// UnexposedExpr- pw - int
									// DeclRefExpr- pw - int
					// VarDecl- iph - float
						// BinaryOperator-  - float [Binary Operator: Div (/)]
							// FloatingLiteral-  - float [Literal: 1]
							// UnexposedExpr- ph - float
								// UnexposedExpr- ph - int
									// DeclRefExpr- ph - int
				// DeclStmt-  - 
					// VarDecl- b - const stbtt_bakedchar *
						// TypeRef- stbtt_bakedchar - stbtt_bakedchar
						// BinaryOperator-  - const stbtt_bakedchar * [Binary Operator: Add (+)]
							// UnexposedExpr- chardata - const stbtt_bakedchar *
								// DeclRefExpr- chardata - const stbtt_bakedchar *
							// UnexposedExpr- char_index - int
								// DeclRefExpr- char_index - int
				// DeclStmt-  - 
					// VarDecl- round_x - int
						// ParenExpr-  - int
							// CStyleCastExpr-  - int
								// CallExpr- floor - double
									// UnexposedExpr- floor - double (*)(double)
										// DeclRefExpr- floor - double (double)
									// UnexposedExpr-  - double
										// BinaryOperator-  - float [Binary Operator: Add (+)]
											// ParenExpr-  - float
												// BinaryOperator-  - float [Binary Operator: Add (+)]
													// UnexposedExpr-  - float
														// UnaryOperator-  - float [Unary Operator: Deref (*)]
															// UnexposedExpr- xpos - float *
																// DeclRefExpr- xpos - float *
													// UnexposedExpr- xoff - float
														// MemberRefExpr- xoff - const float
															// UnexposedExpr- b - const stbtt_bakedchar *
																// DeclRefExpr- b - const stbtt_bakedchar *
											// FloatingLiteral-  - float [Literal: 0.5]
				// DeclStmt-  - 
					// VarDecl- round_y - int
						// ParenExpr-  - int
							// CStyleCastExpr-  - int
								// CallExpr- floor - double
									// UnexposedExpr- floor - double (*)(double)
										// DeclRefExpr- floor - double (double)
									// UnexposedExpr-  - double
										// BinaryOperator-  - float [Binary Operator: Add (+)]
											// ParenExpr-  - float
												// BinaryOperator-  - float [Binary Operator: Add (+)]
													// UnexposedExpr-  - float
														// UnaryOperator-  - float [Unary Operator: Deref (*)]
															// UnexposedExpr- ypos - float *
																// DeclRefExpr- ypos - float *
													// UnexposedExpr- yoff - float
														// MemberRefExpr- yoff - const float
															// UnexposedExpr- b - const stbtt_bakedchar *
																// DeclRefExpr- b - const stbtt_bakedchar *
											// FloatingLiteral-  - float [Literal: 0.5]
				// BinaryOperator-  - float [Binary Operator: Assign (=)]
					// MemberRefExpr- x0 - float
						// UnexposedExpr- q - stbtt_aligned_quad *
							// DeclRefExpr- q - stbtt_aligned_quad *
					// BinaryOperator-  - float [Binary Operator: Add (+)]
						// UnexposedExpr- round_x - float
							// UnexposedExpr- round_x - int
								// DeclRefExpr- round_x - int
						// UnexposedExpr- d3d_bias - float
							// DeclRefExpr- d3d_bias - float
				// BinaryOperator-  - float [Binary Operator: Assign (=)]
					// MemberRefExpr- y0 - float
						// UnexposedExpr- q - stbtt_aligned_quad *
							// DeclRefExpr- q - stbtt_aligned_quad *
					// BinaryOperator-  - float [Binary Operator: Add (+)]
						// UnexposedExpr- round_y - float
							// UnexposedExpr- round_y - int
								// DeclRefExpr- round_y - int
						// UnexposedExpr- d3d_bias - float
							// DeclRefExpr- d3d_bias - float
				// BinaryOperator-  - float [Binary Operator: Assign (=)]
					// MemberRefExpr- x1 - float
						// UnexposedExpr- q - stbtt_aligned_quad *
							// DeclRefExpr- q - stbtt_aligned_quad *
					// BinaryOperator-  - float [Binary Operator: Add (+)]
						// UnexposedExpr-  - float
							// BinaryOperator-  - int [Binary Operator: Sub (-)]
								// BinaryOperator-  - int [Binary Operator: Add (+)]
									// UnexposedExpr- round_x - int
										// DeclRefExpr- round_x - int
									// UnexposedExpr- x1 - int
										// UnexposedExpr- x1 - unsigned short
											// MemberRefExpr- x1 - const unsigned short
												// UnexposedExpr- b - const stbtt_bakedchar *
													// DeclRefExpr- b - const stbtt_bakedchar *
								// UnexposedExpr- x0 - int
									// UnexposedExpr- x0 - unsigned short
										// MemberRefExpr- x0 - const unsigned short
											// UnexposedExpr- b - const stbtt_bakedchar *
												// DeclRefExpr- b - const stbtt_bakedchar *
						// UnexposedExpr- d3d_bias - float
							// DeclRefExpr- d3d_bias - float
				// BinaryOperator-  - float [Binary Operator: Assign (=)]
					// MemberRefExpr- y1 - float
						// UnexposedExpr- q - stbtt_aligned_quad *
							// DeclRefExpr- q - stbtt_aligned_quad *
					// BinaryOperator-  - float [Binary Operator: Add (+)]
						// UnexposedExpr-  - float
							// BinaryOperator-  - int [Binary Operator: Sub (-)]
								// BinaryOperator-  - int [Binary Operator: Add (+)]
									// UnexposedExpr- round_y - int
										// DeclRefExpr- round_y - int
									// UnexposedExpr- y1 - int
										// UnexposedExpr- y1 - unsigned short
											// MemberRefExpr- y1 - const unsigned short
												// UnexposedExpr- b - const stbtt_bakedchar *
													// DeclRefExpr- b - const stbtt_bakedchar *
								// UnexposedExpr- y0 - int
									// UnexposedExpr- y0 - unsigned short
										// MemberRefExpr- y0 - const unsigned short
											// UnexposedExpr- b - const stbtt_bakedchar *
												// DeclRefExpr- b - const stbtt_bakedchar *
						// UnexposedExpr- d3d_bias - float
							// DeclRefExpr- d3d_bias - float
				// BinaryOperator-  - float [Binary Operator: Assign (=)]
					// MemberRefExpr- s0 - float
						// UnexposedExpr- q - stbtt_aligned_quad *
							// DeclRefExpr- q - stbtt_aligned_quad *
					// BinaryOperator-  - float [Binary Operator: Mul (*)]
						// UnexposedExpr- x0 - float
							// UnexposedExpr- x0 - int
								// UnexposedExpr- x0 - unsigned short
									// MemberRefExpr- x0 - const unsigned short
										// UnexposedExpr- b - const stbtt_bakedchar *
											// DeclRefExpr- b - const stbtt_bakedchar *
						// UnexposedExpr- ipw - float
							// DeclRefExpr- ipw - float
				// BinaryOperator-  - float [Binary Operator: Assign (=)]
					// MemberRefExpr- t0 - float
						// UnexposedExpr- q - stbtt_aligned_quad *
							// DeclRefExpr- q - stbtt_aligned_quad *
					// BinaryOperator-  - float [Binary Operator: Mul (*)]
						// UnexposedExpr- y0 - float
							// UnexposedExpr- y0 - int
								// UnexposedExpr- y0 - unsigned short
									// MemberRefExpr- y0 - const unsigned short
										// UnexposedExpr- b - const stbtt_bakedchar *
											// DeclRefExpr- b - const stbtt_bakedchar *
						// UnexposedExpr- iph - float
							// DeclRefExpr- iph - float
				// BinaryOperator-  - float [Binary Operator: Assign (=)]
					// MemberRefExpr- s1 - float
						// UnexposedExpr- q - stbtt_aligned_quad *
							// DeclRefExpr- q - stbtt_aligned_quad *
					// BinaryOperator-  - float [Binary Operator: Mul (*)]
						// UnexposedExpr- x1 - float
							// UnexposedExpr- x1 - int
								// UnexposedExpr- x1 - unsigned short
									// MemberRefExpr- x1 - const unsigned short
										// UnexposedExpr- b - const stbtt_bakedchar *
											// DeclRefExpr- b - const stbtt_bakedchar *
						// UnexposedExpr- ipw - float
							// DeclRefExpr- ipw - float
				// BinaryOperator-  - float [Binary Operator: Assign (=)]
					// MemberRefExpr- t1 - float
						// UnexposedExpr- q - stbtt_aligned_quad *
							// DeclRefExpr- q - stbtt_aligned_quad *
					// BinaryOperator-  - float [Binary Operator: Mul (*)]
						// UnexposedExpr- y1 - float
							// UnexposedExpr- y1 - int
								// UnexposedExpr- y1 - unsigned short
									// MemberRefExpr- y1 - const unsigned short
										// UnexposedExpr- b - const stbtt_bakedchar *
											// DeclRefExpr- b - const stbtt_bakedchar *
						// UnexposedExpr- iph - float
							// DeclRefExpr- iph - float
				// CompoundAssignOperator-  - float
					// UnaryOperator-  - float [Unary Operator: Deref (*)]
						// UnexposedExpr- xpos - float *
							// DeclRefExpr- xpos - float *
					// UnexposedExpr- xadvance - float
						// MemberRefExpr- xadvance - const float
							// UnexposedExpr- b - const stbtt_bakedchar *
								// DeclRefExpr- b - const stbtt_bakedchar *
		// TypedefDecl- stbrp_coord - stbrp_coord
		// StructDecl-  - stbrp_context
			// FieldDecl- width - int
			// FieldDecl- height - int
			// FieldDecl- x - int
			// FieldDecl- y - int
			// FieldDecl- bottom_y - int
		// TypedefDecl- stbrp_context - stbrp_context
			// StructDecl-  - stbrp_context
				// FieldDecl- width - int
				// FieldDecl- height - int
				// FieldDecl- x - int
				// FieldDecl- y - int
				// FieldDecl- bottom_y - int
		// StructDecl-  - stbrp_node
			// FieldDecl- x - unsigned char
		// TypedefDecl- stbrp_node - stbrp_node
			// StructDecl-  - stbrp_node
				// FieldDecl- x - unsigned char
		// StructDecl- stbrp_rect - struct stbrp_rect
			// FieldDecl- x - stbrp_coord
				// TypeRef- stbrp_coord - stbrp_coord
			// FieldDecl- y - stbrp_coord
				// TypeRef- stbrp_coord - stbrp_coord
			// FieldDecl- id - int
			// FieldDecl- w - int
			// FieldDecl- h - int
			// FieldDecl- was_packed - int
		// FunctionDecl- stbrp_init_target - void (stbrp_context *, int, int, stbrp_node *, int)
			// ParmDecl- con - stbrp_context *
				// TypeRef- stbrp_context - stbrp_context
			// ParmDecl- pw - int
			// ParmDecl- ph - int
			// ParmDecl- nodes - stbrp_node *
				// TypeRef- stbrp_node - stbrp_node
			// ParmDecl- num_nodes - int
			// CompoundStmt-  - 
				// BinaryOperator-  - int [Binary Operator: Assign (=)]
					// MemberRefExpr- width - int
						// UnexposedExpr- con - stbrp_context *
							// DeclRefExpr- con - stbrp_context *
					// UnexposedExpr- pw - int
						// DeclRefExpr- pw - int
				// BinaryOperator-  - int [Binary Operator: Assign (=)]
					// MemberRefExpr- height - int
						// UnexposedExpr- con - stbrp_context *
							// DeclRefExpr- con - stbrp_context *
					// UnexposedExpr- ph - int
						// DeclRefExpr- ph - int
				// BinaryOperator-  - int [Binary Operator: Assign (=)]
					// MemberRefExpr- x - int
						// UnexposedExpr- con - stbrp_context *
							// DeclRefExpr- con - stbrp_context *
					// IntegerLiteral-  - int [Literal: 0]
				// BinaryOperator-  - int [Binary Operator: Assign (=)]
					// MemberRefExpr- y - int
						// UnexposedExpr- con - stbrp_context *
							// DeclRefExpr- con - stbrp_context *
					// IntegerLiteral-  - int [Literal: 0]
				// BinaryOperator-  - int [Binary Operator: Assign (=)]
					// MemberRefExpr- bottom_y - int
						// UnexposedExpr- con - stbrp_context *
							// DeclRefExpr- con - stbrp_context *
					// IntegerLiteral-  - int [Literal: 0]
				// NullStmt-  - 
				// NullStmt-  - 
		// FunctionDecl- stbrp_pack_rects - void (stbrp_context *, stbrp_rect *, int)
			// ParmDecl- con - stbrp_context *
				// TypeRef- stbrp_context - stbrp_context
			// ParmDecl- rects - stbrp_rect *
				// TypeRef- stbrp_rect - stbrp_rect
			// ParmDecl- num_rects - int
			// CompoundStmt-  - 
				// DeclStmt-  - 
					// VarDecl- i - int
				// ForStmt-  - 
					// BinaryOperator-  - int [Binary Operator: Assign (=)]
						// DeclRefExpr- i - int
						// IntegerLiteral-  - int [Literal: 0]
					// BinaryOperator-  - int [Binary Operator: LT (<)]
						// UnexposedExpr- i - int
							// DeclRefExpr- i - int
						// UnexposedExpr- num_rects - int
							// DeclRefExpr- num_rects - int
					// UnaryOperator-  - int [Unary Operator: PreInc (++)]
						// DeclRefExpr- i - int
					// CompoundStmt-  - 
						// IfStmt-  - 
							// BinaryOperator-  - int [Binary Operator: GT (>)]
								// BinaryOperator-  - int [Binary Operator: Add (+)]
									// UnexposedExpr- x - int
										// MemberRefExpr- x - int
											// UnexposedExpr- con - stbrp_context *
												// DeclRefExpr- con - stbrp_context *
									// UnexposedExpr- w - int
										// MemberRefExpr- w - int
											// ArraySubscriptExpr-  - stbrp_rect
												// UnexposedExpr- rects - stbrp_rect *
													// DeclRefExpr- rects - stbrp_rect *
												// UnexposedExpr- i - int
													// DeclRefExpr- i - int
								// UnexposedExpr- width - int
									// MemberRefExpr- width - int
										// UnexposedExpr- con - stbrp_context *
											// DeclRefExpr- con - stbrp_context *
							// CompoundStmt-  - 
								// BinaryOperator-  - int [Binary Operator: Assign (=)]
									// MemberRefExpr- x - int
										// UnexposedExpr- con - stbrp_context *
											// DeclRefExpr- con - stbrp_context *
									// IntegerLiteral-  - int [Literal: 0]
								// BinaryOperator-  - int [Binary Operator: Assign (=)]
									// MemberRefExpr- y - int
										// UnexposedExpr- con - stbrp_context *
											// DeclRefExpr- con - stbrp_context *
									// UnexposedExpr- bottom_y - int
										// MemberRefExpr- bottom_y - int
											// UnexposedExpr- con - stbrp_context *
												// DeclRefExpr- con - stbrp_context *
						// IfStmt-  - 
							// BinaryOperator-  - int [Binary Operator: GT (>)]
								// BinaryOperator-  - int [Binary Operator: Add (+)]
									// UnexposedExpr- y - int
										// MemberRefExpr- y - int
											// UnexposedExpr- con - stbrp_context *
												// DeclRefExpr- con - stbrp_context *
									// UnexposedExpr- h - int
										// MemberRefExpr- h - int
											// ArraySubscriptExpr-  - stbrp_rect
												// UnexposedExpr- rects - stbrp_rect *
													// DeclRefExpr- rects - stbrp_rect *
												// UnexposedExpr- i - int
													// DeclRefExpr- i - int
								// UnexposedExpr- height - int
									// MemberRefExpr- height - int
										// UnexposedExpr- con - stbrp_context *
											// DeclRefExpr- con - stbrp_context *
							// BreakStmt-  - 
						// BinaryOperator-  - stbrp_coord [Binary Operator: Assign (=)]
							// MemberRefExpr- x - stbrp_coord
								// ArraySubscriptExpr-  - stbrp_rect
									// UnexposedExpr- rects - stbrp_rect *
										// DeclRefExpr- rects - stbrp_rect *
									// UnexposedExpr- i - int
										// DeclRefExpr- i - int
							// UnexposedExpr- x - int
								// MemberRefExpr- x - int
									// UnexposedExpr- con - stbrp_context *
										// DeclRefExpr- con - stbrp_context *
						// BinaryOperator-  - stbrp_coord [Binary Operator: Assign (=)]
							// MemberRefExpr- y - stbrp_coord
								// ArraySubscriptExpr-  - stbrp_rect
									// UnexposedExpr- rects - stbrp_rect *
										// DeclRefExpr- rects - stbrp_rect *
									// UnexposedExpr- i - int
										// DeclRefExpr- i - int
							// UnexposedExpr- y - int
								// MemberRefExpr- y - int
									// UnexposedExpr- con - stbrp_context *
										// DeclRefExpr- con - stbrp_context *
						// BinaryOperator-  - int [Binary Operator: Assign (=)]
							// MemberRefExpr- was_packed - int
								// ArraySubscriptExpr-  - stbrp_rect
									// UnexposedExpr- rects - stbrp_rect *
										// DeclRefExpr- rects - stbrp_rect *
									// UnexposedExpr- i - int
										// DeclRefExpr- i - int
							// IntegerLiteral-  - int [Literal: 1]
						// CompoundAssignOperator-  - int
							// MemberRefExpr- x - int
								// UnexposedExpr- con - stbrp_context *
									// DeclRefExpr- con - stbrp_context *
							// UnexposedExpr- w - int
								// MemberRefExpr- w - int
									// ArraySubscriptExpr-  - stbrp_rect
										// UnexposedExpr- rects - stbrp_rect *
											// DeclRefExpr- rects - stbrp_rect *
										// UnexposedExpr- i - int
											// DeclRefExpr- i - int
						// IfStmt-  - 
							// BinaryOperator-  - int [Binary Operator: GT (>)]
								// BinaryOperator-  - int [Binary Operator: Add (+)]
									// UnexposedExpr- y - int
										// MemberRefExpr- y - int
											// UnexposedExpr- con - stbrp_context *
												// DeclRefExpr- con - stbrp_context *
									// UnexposedExpr- h - int
										// MemberRefExpr- h - int
											// ArraySubscriptExpr-  - stbrp_rect
												// UnexposedExpr- rects - stbrp_rect *
													// DeclRefExpr- rects - stbrp_rect *
												// UnexposedExpr- i - int
													// DeclRefExpr- i - int
								// UnexposedExpr- bottom_y - int
									// MemberRefExpr- bottom_y - int
										// UnexposedExpr- con - stbrp_context *
											// DeclRefExpr- con - stbrp_context *
							// BinaryOperator-  - int [Binary Operator: Assign (=)]
								// MemberRefExpr- bottom_y - int
									// UnexposedExpr- con - stbrp_context *
										// DeclRefExpr- con - stbrp_context *
								// BinaryOperator-  - int [Binary Operator: Add (+)]
									// UnexposedExpr- y - int
										// MemberRefExpr- y - int
											// UnexposedExpr- con - stbrp_context *
												// DeclRefExpr- con - stbrp_context *
									// UnexposedExpr- h - int
										// MemberRefExpr- h - int
											// ArraySubscriptExpr-  - stbrp_rect
												// UnexposedExpr- rects - stbrp_rect *
													// DeclRefExpr- rects - stbrp_rect *
												// UnexposedExpr- i - int
													// DeclRefExpr- i - int
				// ForStmt-  - 
					// BinaryOperator-  - int [Binary Operator: LT (<)]
						// UnexposedExpr- i - int
							// DeclRefExpr- i - int
						// UnexposedExpr- num_rects - int
							// DeclRefExpr- num_rects - int
					// UnaryOperator-  - int [Unary Operator: PreInc (++)]
						// DeclRefExpr- i - int
					// BinaryOperator-  - int [Binary Operator: Assign (=)]
						// MemberRefExpr- was_packed - int
							// ArraySubscriptExpr-  - stbrp_rect
								// UnexposedExpr- rects - stbrp_rect *
									// DeclRefExpr- rects - stbrp_rect *
								// UnexposedExpr- i - int
									// DeclRefExpr- i - int
						// IntegerLiteral-  - int [Literal: 0]
		// FunctionDecl- stbtt_PackBegin - int (stbtt_pack_context *, unsigned char *, int, int, int, int, void *)
			// ParmDecl- spc - stbtt_pack_context *
				// TypeRef- stbtt_pack_context - stbtt_pack_context
			// ParmDecl- pixels - unsigned char *
			// ParmDecl- pw - int
			// ParmDecl- ph - int
			// ParmDecl- stride_in_bytes - int
			// ParmDecl- padding - int
			// ParmDecl- alloc_context - void *
			// CompoundStmt-  - 
				// DeclStmt-  - 
					// VarDecl- context - stbrp_context *
						// TypeRef- stbrp_context - stbrp_context
						// CStyleCastExpr-  - stbrp_context *
							// TypeRef- stbrp_context - stbrp_context
							// CallExpr- malloc - void *
								// UnexposedExpr- malloc - void *(*)(unsigned long long)
									// DeclRefExpr- malloc - void *(unsigned long long)
								// UnaryExpr-  - unsigned long long [Unary Operator: 99999 ()]
									// ParenExpr-  - stbrp_context
										// UnaryOperator-  - stbrp_context [Unary Operator: Deref (*)]
											// UnexposedExpr- context - stbrp_context *
												// DeclRefExpr- context - stbrp_context *
				// DeclStmt-  - 
					// VarDecl- num_nodes - int
						// BinaryOperator-  - int [Binary Operator: Sub (-)]
							// UnexposedExpr- pw - int
								// DeclRefExpr- pw - int
							// UnexposedExpr- padding - int
								// DeclRefExpr- padding - int
				// DeclStmt-  - 
					// VarDecl- nodes - stbrp_node *
						// TypeRef- stbrp_node - stbrp_node
						// CStyleCastExpr-  - stbrp_node *
							// TypeRef- stbrp_node - stbrp_node
							// CallExpr- malloc - void *
								// UnexposedExpr- malloc - void *(*)(unsigned long long)
									// DeclRefExpr- malloc - void *(unsigned long long)
								// BinaryOperator-  - unsigned long long [Binary Operator: Mul (*)]
									// UnaryExpr-  - unsigned long long [Unary Operator: 99999 ()]
										// ParenExpr-  - stbrp_node
											// UnaryOperator-  - stbrp_node [Unary Operator: Deref (*)]
												// UnexposedExpr- nodes - stbrp_node *
													// DeclRefExpr- nodes - stbrp_node *
									// UnexposedExpr- num_nodes - unsigned long long
										// UnexposedExpr- num_nodes - int
											// DeclRefExpr- num_nodes - int
				// IfStmt-  - 
					// BinaryOperator-  - int [Binary Operator: LOr (||)]
						// BinaryOperator-  - int [Binary Operator: EQ (==)]
							// UnexposedExpr- context - stbrp_context *
								// DeclRefExpr- context - stbrp_context *
							// UnexposedExpr-  - stbrp_context *
								// ParenExpr-  - void *
									// CStyleCastExpr-  - void *
										// IntegerLiteral-  - int [Literal: 0]
						// BinaryOperator-  - int [Binary Operator: EQ (==)]
							// UnexposedExpr- nodes - stbrp_node *
								// DeclRefExpr- nodes - stbrp_node *
							// UnexposedExpr-  - stbrp_node *
								// ParenExpr-  - void *
									// CStyleCastExpr-  - void *
										// IntegerLiteral-  - int [Literal: 0]
					// CompoundStmt-  - 
						// IfStmt-  - 
							// BinaryOperator-  - int [Binary Operator: NE (!=)]
								// UnexposedExpr- context - stbrp_context *
									// DeclRefExpr- context - stbrp_context *
								// UnexposedExpr-  - stbrp_context *
									// ParenExpr-  - void *
										// CStyleCastExpr-  - void *
											// IntegerLiteral-  - int [Literal: 0]
							// CallExpr- free - void
								// UnexposedExpr- free - void (*)(void *) __attribute__((cdecl))
									// DeclRefExpr- free - void (void *)
								// UnexposedExpr- context - void *
									// UnexposedExpr- context - stbrp_context *
										// DeclRefExpr- context - stbrp_context *
						// IfStmt-  - 
							// BinaryOperator-  - int [Binary Operator: NE (!=)]
								// UnexposedExpr- nodes - stbrp_node *
									// DeclRefExpr- nodes - stbrp_node *
								// UnexposedExpr-  - stbrp_node *
									// ParenExpr-  - void *
										// CStyleCastExpr-  - void *
											// IntegerLiteral-  - int [Literal: 0]
							// CallExpr- free - void
								// UnexposedExpr- free - void (*)(void *) __attribute__((cdecl))
									// DeclRefExpr- free - void (void *)
								// UnexposedExpr- nodes - void *
									// UnexposedExpr- nodes - stbrp_node *
										// DeclRefExpr- nodes - stbrp_node *
						// ReturnStmt-  - 
							// IntegerLiteral-  - int [Literal: 0]
				// BinaryOperator-  - void * [Binary Operator: Assign (=)]
					// MemberRefExpr- user_allocator_context - void *
						// UnexposedExpr- spc - stbtt_pack_context *
							// DeclRefExpr- spc - stbtt_pack_context *
					// UnexposedExpr- alloc_context - void *
						// DeclRefExpr- alloc_context - void *
				// BinaryOperator-  - int [Binary Operator: Assign (=)]
					// MemberRefExpr- width - int
						// UnexposedExpr- spc - stbtt_pack_context *
							// DeclRefExpr- spc - stbtt_pack_context *
					// UnexposedExpr- pw - int
						// DeclRefExpr- pw - int
				// BinaryOperator-  - int [Binary Operator: Assign (=)]
					// MemberRefExpr- height - int
						// UnexposedExpr- spc - stbtt_pack_context *
							// DeclRefExpr- spc - stbtt_pack_context *
					// UnexposedExpr- ph - int
						// DeclRefExpr- ph - int
				// BinaryOperator-  - unsigned char * [Binary Operator: Assign (=)]
					// MemberRefExpr- pixels - unsigned char *
						// UnexposedExpr- spc - stbtt_pack_context *
							// DeclRefExpr- spc - stbtt_pack_context *
					// UnexposedExpr- pixels - unsigned char *
						// DeclRefExpr- pixels - unsigned char *
				// BinaryOperator-  - void * [Binary Operator: Assign (=)]
					// MemberRefExpr- pack_info - void *
						// UnexposedExpr- spc - stbtt_pack_context *
							// DeclRefExpr- spc - stbtt_pack_context *
					// UnexposedExpr- context - void *
						// UnexposedExpr- context - stbrp_context *
							// DeclRefExpr- context - stbrp_context *
				// BinaryOperator-  - void * [Binary Operator: Assign (=)]
					// MemberRefExpr- nodes - void *
						// UnexposedExpr- spc - stbtt_pack_context *
							// DeclRefExpr- spc - stbtt_pack_context *
					// UnexposedExpr- nodes - void *
						// UnexposedExpr- nodes - stbrp_node *
							// DeclRefExpr- nodes - stbrp_node *
				// BinaryOperator-  - int [Binary Operator: Assign (=)]
					// MemberRefExpr- padding - int
						// UnexposedExpr- spc - stbtt_pack_context *
							// DeclRefExpr- spc - stbtt_pack_context *
					// UnexposedExpr- padding - int
						// DeclRefExpr- padding - int
				// BinaryOperator-  - int [Binary Operator: Assign (=)]
					// MemberRefExpr- stride_in_bytes - int
						// UnexposedExpr- spc - stbtt_pack_context *
							// DeclRefExpr- spc - stbtt_pack_context *
					// ConditionalOperator-  - int
						// BinaryOperator-  - int [Binary Operator: NE (!=)]
							// UnexposedExpr- stride_in_bytes - int
								// DeclRefExpr- stride_in_bytes - int
							// IntegerLiteral-  - int [Literal: 0]
						// UnexposedExpr- stride_in_bytes - int
							// DeclRefExpr- stride_in_bytes - int
						// UnexposedExpr- pw - int
							// DeclRefExpr- pw - int
				// BinaryOperator-  - unsigned int [Binary Operator: Assign (=)]
					// MemberRefExpr- h_oversample - unsigned int
						// UnexposedExpr- spc - stbtt_pack_context *
							// DeclRefExpr- spc - stbtt_pack_context *
					// UnexposedExpr-  - unsigned int
						// IntegerLiteral-  - int [Literal: 1]
				// BinaryOperator-  - unsigned int [Binary Operator: Assign (=)]
					// MemberRefExpr- v_oversample - unsigned int
						// UnexposedExpr- spc - stbtt_pack_context *
							// DeclRefExpr- spc - stbtt_pack_context *
					// UnexposedExpr-  - unsigned int
						// IntegerLiteral-  - int [Literal: 1]
				// CallExpr- stbrp_init_target - void
					// UnexposedExpr- stbrp_init_target - void (*)(stbrp_context *, int, int, stbrp_node *, int)
						// DeclRefExpr- stbrp_init_target - void (stbrp_context *, int, int, stbrp_node *, int)
					// UnexposedExpr- context - stbrp_context *
						// DeclRefExpr- context - stbrp_context *
					// BinaryOperator-  - int [Binary Operator: Sub (-)]
						// UnexposedExpr- pw - int
							// DeclRefExpr- pw - int
						// UnexposedExpr- padding - int
							// DeclRefExpr- padding - int
					// BinaryOperator-  - int [Binary Operator: Sub (-)]
						// UnexposedExpr- ph - int
							// DeclRefExpr- ph - int
						// UnexposedExpr- padding - int
							// DeclRefExpr- padding - int
					// UnexposedExpr- nodes - stbrp_node *
						// DeclRefExpr- nodes - stbrp_node *
					// UnexposedExpr- num_nodes - int
						// DeclRefExpr- num_nodes - int
				// IfStmt-  - 
					// UnexposedExpr- pixels - unsigned char *
						// DeclRefExpr- pixels - unsigned char *
					// CallExpr- memset - void *
						// UnexposedExpr- memset - void *(*)(void *, int, unsigned long long)
							// DeclRefExpr- memset - void *(void *, int, unsigned long long)
						// UnexposedExpr- pixels - void *
							// UnexposedExpr- pixels - unsigned char *
								// DeclRefExpr- pixels - unsigned char *
						// IntegerLiteral-  - int [Literal: 0]
						// UnexposedExpr-  - unsigned long long
							// BinaryOperator-  - int [Binary Operator: Mul (*)]
								// UnexposedExpr- pw - int
									// DeclRefExpr- pw - int
								// UnexposedExpr- ph - int
									// DeclRefExpr- ph - int
				// ReturnStmt-  - 
					// IntegerLiteral-  - int [Literal: 1]
		// FunctionDecl- stbtt_PackEnd - void (stbtt_pack_context *)
			// ParmDecl- spc - stbtt_pack_context *
				// TypeRef- stbtt_pack_context - stbtt_pack_context
			// CompoundStmt-  - 
				// CallExpr- free - void
					// UnexposedExpr- free - void (*)(void *) __attribute__((cdecl))
						// DeclRefExpr- free - void (void *)
					// UnexposedExpr- nodes - void *
						// MemberRefExpr- nodes - void *
							// UnexposedExpr- spc - stbtt_pack_context *
								// DeclRefExpr- spc - stbtt_pack_context *
				// CallExpr- free - void
					// UnexposedExpr- free - void (*)(void *) __attribute__((cdecl))
						// DeclRefExpr- free - void (void *)
					// UnexposedExpr- pack_info - void *
						// MemberRefExpr- pack_info - void *
							// UnexposedExpr- spc - stbtt_pack_context *
								// DeclRefExpr- spc - stbtt_pack_context *
		// FunctionDecl- stbtt_PackSetOversampling - void (stbtt_pack_context *, unsigned int, unsigned int)
			// ParmDecl- spc - stbtt_pack_context *
				// TypeRef- stbtt_pack_context - stbtt_pack_context
			// ParmDecl- h_oversample - unsigned int
			// ParmDecl- v_oversample - unsigned int
			// CompoundStmt-  - 
				// NullStmt-  - 
				// NullStmt-  - 
				// IfStmt-  - 
					// BinaryOperator-  - int [Binary Operator: LE (<=)]
						// UnexposedExpr- h_oversample - unsigned int
							// DeclRefExpr- h_oversample - unsigned int
						// UnexposedExpr-  - unsigned int
							// IntegerLiteral-  - int [Literal: 8]
					// BinaryOperator-  - unsigned int [Binary Operator: Assign (=)]
						// MemberRefExpr- h_oversample - unsigned int
							// UnexposedExpr- spc - stbtt_pack_context *
								// DeclRefExpr- spc - stbtt_pack_context *
						// UnexposedExpr- h_oversample - unsigned int
							// DeclRefExpr- h_oversample - unsigned int
				// IfStmt-  - 
					// BinaryOperator-  - int [Binary Operator: LE (<=)]
						// UnexposedExpr- v_oversample - unsigned int
							// DeclRefExpr- v_oversample - unsigned int
						// UnexposedExpr-  - unsigned int
							// IntegerLiteral-  - int [Literal: 8]
					// BinaryOperator-  - unsigned int [Binary Operator: Assign (=)]
						// MemberRefExpr- v_oversample - unsigned int
							// UnexposedExpr- spc - stbtt_pack_context *
								// DeclRefExpr- spc - stbtt_pack_context *
						// UnexposedExpr- v_oversample - unsigned int
							// DeclRefExpr- v_oversample - unsigned int
		// FunctionDecl- stbtt__h_prefilter - void (unsigned char *, int, int, int, unsigned int)
			// ParmDecl- pixels - unsigned char *
			// ParmDecl- w - int
			// ParmDecl- h - int
			// ParmDecl- stride_in_bytes - int
			// ParmDecl- kernel_width - unsigned int
			// CompoundStmt-  - 
				// DeclStmt-  - 
					// VarDecl- buffer - unsigned char [8]
						// IntegerLiteral-  - int [Literal: 8]
				// DeclStmt-  - 
					// VarDecl- safe_w - int
						// UnexposedExpr-  - int
							// BinaryOperator-  - unsigned int [Binary Operator: Sub (-)]
								// UnexposedExpr- w - unsigned int
									// UnexposedExpr- w - int
										// DeclRefExpr- w - int
								// UnexposedExpr- kernel_width - unsigned int
									// DeclRefExpr- kernel_width - unsigned int
				// DeclStmt-  - 
					// VarDecl- j - int
				// CallExpr- memset - void *
					// UnexposedExpr- memset - void *(*)(void *, int, unsigned long long)
						// DeclRefExpr- memset - void *(void *, int, unsigned long long)
					// UnexposedExpr- buffer - void *
						// UnexposedExpr- buffer - unsigned char *
							// DeclRefExpr- buffer - unsigned char [8]
					// IntegerLiteral-  - int [Literal: 0]
					// UnexposedExpr-  - unsigned long long
						// IntegerLiteral-  - int [Literal: 8]
				// ForStmt-  - 
					// BinaryOperator-  - int [Binary Operator: Assign (=)]
						// DeclRefExpr- j - int
						// IntegerLiteral-  - int [Literal: 0]
					// BinaryOperator-  - int [Binary Operator: LT (<)]
						// UnexposedExpr- j - int
							// DeclRefExpr- j - int
						// UnexposedExpr- h - int
							// DeclRefExpr- h - int
					// UnaryOperator-  - int [Unary Operator: PreInc (++)]
						// DeclRefExpr- j - int
					// CompoundStmt-  - 
						// DeclStmt-  - 
							// VarDecl- i - int
						// DeclStmt-  - 
							// VarDecl- total - unsigned int
						// CallExpr- memset - void *
							// UnexposedExpr- memset - void *(*)(void *, int, unsigned long long)
								// DeclRefExpr- memset - void *(void *, int, unsigned long long)
							// UnexposedExpr- buffer - void *
								// UnexposedExpr- buffer - unsigned char *
									// DeclRefExpr- buffer - unsigned char [8]
							// IntegerLiteral-  - int [Literal: 0]
							// UnexposedExpr- kernel_width - unsigned long long
								// UnexposedExpr- kernel_width - unsigned int
									// DeclRefExpr- kernel_width - unsigned int
						// BinaryOperator-  - unsigned int [Binary Operator: Assign (=)]
							// DeclRefExpr- total - unsigned int
							// UnexposedExpr-  - unsigned int
								// IntegerLiteral-  - int [Literal: 0]
						// SwitchStmt-  - 
							// UnexposedExpr- kernel_width - unsigned int
								// DeclRefExpr- kernel_width - unsigned int
							// CompoundStmt-  - 
								// CaseStmt-  - 
									// UnexposedExpr-  - unsigned int
										// IntegerLiteral-  - int [Literal: 2]
									// ForStmt-  - 
										// BinaryOperator-  - int [Binary Operator: Assign (=)]
											// DeclRefExpr- i - int
											// IntegerLiteral-  - int [Literal: 0]
										// BinaryOperator-  - int [Binary Operator: LE (<=)]
											// UnexposedExpr- i - int
												// DeclRefExpr- i - int
											// UnexposedExpr- safe_w - int
												// DeclRefExpr- safe_w - int
										// UnaryOperator-  - int [Unary Operator: PreInc (++)]
											// DeclRefExpr- i - int
										// CompoundStmt-  - 
											// CompoundAssignOperator-  - unsigned int
												// DeclRefExpr- total - unsigned int
												// UnexposedExpr-  - unsigned int
													// BinaryOperator-  - int [Binary Operator: Sub (-)]
														// UnexposedExpr-  - int
															// UnexposedExpr-  - unsigned char
																// ArraySubscriptExpr-  - unsigned char
																	// UnexposedExpr- pixels - unsigned char *
																		// DeclRefExpr- pixels - unsigned char *
																	// UnexposedExpr- i - int
																		// DeclRefExpr- i - int
														// UnexposedExpr-  - int
															// UnexposedExpr-  - unsigned char
																// ArraySubscriptExpr-  - unsigned char
																	// UnexposedExpr- buffer - unsigned char *
																		// DeclRefExpr- buffer - unsigned char [8]
																	// BinaryOperator-  - int [Binary Operator: And (&)]
																		// UnexposedExpr- i - int
																			// DeclRefExpr- i - int
																		// ParenExpr-  - int
																			// BinaryOperator-  - int [Binary Operator: Sub (-)]
																				// IntegerLiteral-  - int [Literal: 8]
																				// IntegerLiteral-  - int [Literal: 1]
											// BinaryOperator-  - unsigned char [Binary Operator: Assign (=)]
												// ArraySubscriptExpr-  - unsigned char
													// UnexposedExpr- buffer - unsigned char *
														// DeclRefExpr- buffer - unsigned char [8]
													// BinaryOperator-  - unsigned int [Binary Operator: And (&)]
														// ParenExpr-  - unsigned int
															// BinaryOperator-  - unsigned int [Binary Operator: Add (+)]
																// UnexposedExpr- i - unsigned int
																	// UnexposedExpr- i - int
																		// DeclRefExpr- i - int
																// UnexposedExpr- kernel_width - unsigned int
																	// DeclRefExpr- kernel_width - unsigned int
														// UnexposedExpr-  - unsigned int
															// ParenExpr-  - int
																// BinaryOperator-  - int [Binary Operator: Sub (-)]
																	// IntegerLiteral-  - int [Literal: 8]
																	// IntegerLiteral-  - int [Literal: 1]
												// UnexposedExpr-  - unsigned char
													// ArraySubscriptExpr-  - unsigned char
														// UnexposedExpr- pixels - unsigned char *
															// DeclRefExpr- pixels - unsigned char *
														// UnexposedExpr- i - int
															// DeclRefExpr- i - int
											// BinaryOperator-  - unsigned char [Binary Operator: Assign (=)]
												// ArraySubscriptExpr-  - unsigned char
													// UnexposedExpr- pixels - unsigned char *
														// DeclRefExpr- pixels - unsigned char *
													// UnexposedExpr- i - int
														// DeclRefExpr- i - int
												// CStyleCastExpr-  - unsigned char
													// ParenExpr-  - unsigned int
														// BinaryOperator-  - unsigned int [Binary Operator: Div (/)]
															// UnexposedExpr- total - unsigned int
																// DeclRefExpr- total - unsigned int
															// UnexposedExpr-  - unsigned int
																// IntegerLiteral-  - int [Literal: 2]
								// BreakStmt-  - 
								// CaseStmt-  - 
									// UnexposedExpr-  - unsigned int
										// IntegerLiteral-  - int [Literal: 3]
									// ForStmt-  - 
										// BinaryOperator-  - int [Binary Operator: Assign (=)]
											// DeclRefExpr- i - int
											// IntegerLiteral-  - int [Literal: 0]
										// BinaryOperator-  - int [Binary Operator: LE (<=)]
											// UnexposedExpr- i - int
												// DeclRefExpr- i - int
											// UnexposedExpr- safe_w - int
												// DeclRefExpr- safe_w - int
										// UnaryOperator-  - int [Unary Operator: PreInc (++)]
											// DeclRefExpr- i - int
										// CompoundStmt-  - 
											// CompoundAssignOperator-  - unsigned int
												// DeclRefExpr- total - unsigned int
												// UnexposedExpr-  - unsigned int
													// BinaryOperator-  - int [Binary Operator: Sub (-)]
														// UnexposedExpr-  - int
															// UnexposedExpr-  - unsigned char
																// ArraySubscriptExpr-  - unsigned char
																	// UnexposedExpr- pixels - unsigned char *
																		// DeclRefExpr- pixels - unsigned char *
																	// UnexposedExpr- i - int
																		// DeclRefExpr- i - int
														// UnexposedExpr-  - int
															// UnexposedExpr-  - unsigned char
																// ArraySubscriptExpr-  - unsigned char
																	// UnexposedExpr- buffer - unsigned char *
																		// DeclRefExpr- buffer - unsigned char [8]
																	// BinaryOperator-  - int [Binary Operator: And (&)]
																		// UnexposedExpr- i - int
																			// DeclRefExpr- i - int
																		// ParenExpr-  - int
																			// BinaryOperator-  - int [Binary Operator: Sub (-)]
																				// IntegerLiteral-  - int [Literal: 8]
																				// IntegerLiteral-  - int [Literal: 1]
											// BinaryOperator-  - unsigned char [Binary Operator: Assign (=)]
												// ArraySubscriptExpr-  - unsigned char
													// UnexposedExpr- buffer - unsigned char *
														// DeclRefExpr- buffer - unsigned char [8]
													// BinaryOperator-  - unsigned int [Binary Operator: And (&)]
														// ParenExpr-  - unsigned int
															// BinaryOperator-  - unsigned int [Binary Operator: Add (+)]
																// UnexposedExpr- i - unsigned int
																	// UnexposedExpr- i - int
																		// DeclRefExpr- i - int
																// UnexposedExpr- kernel_width - unsigned int
																	// DeclRefExpr- kernel_width - unsigned int
														// UnexposedExpr-  - unsigned int
															// ParenExpr-  - int
																// BinaryOperator-  - int [Binary Operator: Sub (-)]
																	// IntegerLiteral-  - int [Literal: 8]
																	// IntegerLiteral-  - int [Literal: 1]
												// UnexposedExpr-  - unsigned char
													// ArraySubscriptExpr-  - unsigned char
														// UnexposedExpr- pixels - unsigned char *
															// DeclRefExpr- pixels - unsigned char *
														// UnexposedExpr- i - int
															// DeclRefExpr- i - int
											// BinaryOperator-  - unsigned char [Binary Operator: Assign (=)]
												// ArraySubscriptExpr-  - unsigned char
													// UnexposedExpr- pixels - unsigned char *
														// DeclRefExpr- pixels - unsigned char *
													// UnexposedExpr- i - int
														// DeclRefExpr- i - int
												// CStyleCastExpr-  - unsigned char
													// ParenExpr-  - unsigned int
														// BinaryOperator-  - unsigned int [Binary Operator: Div (/)]
															// UnexposedExpr- total - unsigned int
																// DeclRefExpr- total - unsigned int
															// UnexposedExpr-  - unsigned int
																// IntegerLiteral-  - int [Literal: 3]
								// BreakStmt-  - 
								// CaseStmt-  - 
									// UnexposedExpr-  - unsigned int
										// IntegerLiteral-  - int [Literal: 4]
									// ForStmt-  - 
										// BinaryOperator-  - int [Binary Operator: Assign (=)]
											// DeclRefExpr- i - int
											// IntegerLiteral-  - int [Literal: 0]
										// BinaryOperator-  - int [Binary Operator: LE (<=)]
											// UnexposedExpr- i - int
												// DeclRefExpr- i - int
											// UnexposedExpr- safe_w - int
												// DeclRefExpr- safe_w - int
										// UnaryOperator-  - int [Unary Operator: PreInc (++)]
											// DeclRefExpr- i - int
										// CompoundStmt-  - 
											// CompoundAssignOperator-  - unsigned int
												// DeclRefExpr- total - unsigned int
												// UnexposedExpr-  - unsigned int
													// BinaryOperator-  - int [Binary Operator: Sub (-)]
														// UnexposedExpr-  - int
															// UnexposedExpr-  - unsigned char
																// ArraySubscriptExpr-  - unsigned char
																	// UnexposedExpr- pixels - unsigned char *
																		// DeclRefExpr- pixels - unsigned char *
																	// UnexposedExpr- i - int
																		// DeclRefExpr- i - int
														// UnexposedExpr-  - int
															// UnexposedExpr-  - unsigned char
																// ArraySubscriptExpr-  - unsigned char
																	// UnexposedExpr- buffer - unsigned char *
																		// DeclRefExpr- buffer - unsigned char [8]
																	// BinaryOperator-  - int [Binary Operator: And (&)]
																		// UnexposedExpr- i - int
																			// DeclRefExpr- i - int
																		// ParenExpr-  - int
																			// BinaryOperator-  - int [Binary Operator: Sub (-)]
																				// IntegerLiteral-  - int [Literal: 8]
																				// IntegerLiteral-  - int [Literal: 1]
											// BinaryOperator-  - unsigned char [Binary Operator: Assign (=)]
												// ArraySubscriptExpr-  - unsigned char
													// UnexposedExpr- buffer - unsigned char *
														// DeclRefExpr- buffer - unsigned char [8]
													// BinaryOperator-  - unsigned int [Binary Operator: And (&)]
														// ParenExpr-  - unsigned int
															// BinaryOperator-  - unsigned int [Binary Operator: Add (+)]
																// UnexposedExpr- i - unsigned int
																	// UnexposedExpr- i - int
																		// DeclRefExpr- i - int
																// UnexposedExpr- kernel_width - unsigned int
																	// DeclRefExpr- kernel_width - unsigned int
														// UnexposedExpr-  - unsigned int
															// ParenExpr-  - int
																// BinaryOperator-  - int [Binary Operator: Sub (-)]
																	// IntegerLiteral-  - int [Literal: 8]
																	// IntegerLiteral-  - int [Literal: 1]
												// UnexposedExpr-  - unsigned char
													// ArraySubscriptExpr-  - unsigned char
														// UnexposedExpr- pixels - unsigned char *
															// DeclRefExpr- pixels - unsigned char *
														// UnexposedExpr- i - int
															// DeclRefExpr- i - int
											// BinaryOperator-  - unsigned char [Binary Operator: Assign (=)]
												// ArraySubscriptExpr-  - unsigned char
													// UnexposedExpr- pixels - unsigned char *
														// DeclRefExpr- pixels - unsigned char *
													// UnexposedExpr- i - int
														// DeclRefExpr- i - int
												// CStyleCastExpr-  - unsigned char
													// ParenExpr-  - unsigned int
														// BinaryOperator-  - unsigned int [Binary Operator: Div (/)]
															// UnexposedExpr- total - unsigned int
																// DeclRefExpr- total - unsigned int
															// UnexposedExpr-  - unsigned int
																// IntegerLiteral-  - int [Literal: 4]
								// BreakStmt-  - 
								// CaseStmt-  - 
									// UnexposedExpr-  - unsigned int
										// IntegerLiteral-  - int [Literal: 5]
									// ForStmt-  - 
										// BinaryOperator-  - int [Binary Operator: Assign (=)]
											// DeclRefExpr- i - int
											// IntegerLiteral-  - int [Literal: 0]
										// BinaryOperator-  - int [Binary Operator: LE (<=)]
											// UnexposedExpr- i - int
												// DeclRefExpr- i - int
											// UnexposedExpr- safe_w - int
												// DeclRefExpr- safe_w - int
										// UnaryOperator-  - int [Unary Operator: PreInc (++)]
											// DeclRefExpr- i - int
										// CompoundStmt-  - 
											// CompoundAssignOperator-  - unsigned int
												// DeclRefExpr- total - unsigned int
												// UnexposedExpr-  - unsigned int
													// BinaryOperator-  - int [Binary Operator: Sub (-)]
														// UnexposedExpr-  - int
															// UnexposedExpr-  - unsigned char
																// ArraySubscriptExpr-  - unsigned char
																	// UnexposedExpr- pixels - unsigned char *
																		// DeclRefExpr- pixels - unsigned char *
																	// UnexposedExpr- i - int
																		// DeclRefExpr- i - int
														// UnexposedExpr-  - int
															// UnexposedExpr-  - unsigned char
																// ArraySubscriptExpr-  - unsigned char
																	// UnexposedExpr- buffer - unsigned char *
																		// DeclRefExpr- buffer - unsigned char [8]
																	// BinaryOperator-  - int [Binary Operator: And (&)]
																		// UnexposedExpr- i - int
																			// DeclRefExpr- i - int
																		// ParenExpr-  - int
																			// BinaryOperator-  - int [Binary Operator: Sub (-)]
																				// IntegerLiteral-  - int [Literal: 8]
																				// IntegerLiteral-  - int [Literal: 1]
											// BinaryOperator-  - unsigned char [Binary Operator: Assign (=)]
												// ArraySubscriptExpr-  - unsigned char
													// UnexposedExpr- buffer - unsigned char *
														// DeclRefExpr- buffer - unsigned char [8]
													// BinaryOperator-  - unsigned int [Binary Operator: And (&)]
														// ParenExpr-  - unsigned int
															// BinaryOperator-  - unsigned int [Binary Operator: Add (+)]
																// UnexposedExpr- i - unsigned int
																	// UnexposedExpr- i - int
																		// DeclRefExpr- i - int
																// UnexposedExpr- kernel_width - unsigned int
																	// DeclRefExpr- kernel_width - unsigned int
														// UnexposedExpr-  - unsigned int
															// ParenExpr-  - int
																// BinaryOperator-  - int [Binary Operator: Sub (-)]
																	// IntegerLiteral-  - int [Literal: 8]
																	// IntegerLiteral-  - int [Literal: 1]
												// UnexposedExpr-  - unsigned char
													// ArraySubscriptExpr-  - unsigned char
														// UnexposedExpr- pixels - unsigned char *
															// DeclRefExpr- pixels - unsigned char *
														// UnexposedExpr- i - int
															// DeclRefExpr- i - int
											// BinaryOperator-  - unsigned char [Binary Operator: Assign (=)]
												// ArraySubscriptExpr-  - unsigned char
													// UnexposedExpr- pixels - unsigned char *
														// DeclRefExpr- pixels - unsigned char *
													// UnexposedExpr- i - int
														// DeclRefExpr- i - int
												// CStyleCastExpr-  - unsigned char
													// ParenExpr-  - unsigned int
														// BinaryOperator-  - unsigned int [Binary Operator: Div (/)]
															// UnexposedExpr- total - unsigned int
																// DeclRefExpr- total - unsigned int
															// UnexposedExpr-  - unsigned int
																// IntegerLiteral-  - int [Literal: 5]
								// BreakStmt-  - 
								// DefaultStmt-  - 
									// ForStmt-  - 
										// BinaryOperator-  - int [Binary Operator: Assign (=)]
											// DeclRefExpr- i - int
											// IntegerLiteral-  - int [Literal: 0]
										// BinaryOperator-  - int [Binary Operator: LE (<=)]
											// UnexposedExpr- i - int
												// DeclRefExpr- i - int
											// UnexposedExpr- safe_w - int
												// DeclRefExpr- safe_w - int
										// UnaryOperator-  - int [Unary Operator: PreInc (++)]
											// DeclRefExpr- i - int
										// CompoundStmt-  - 
											// CompoundAssignOperator-  - unsigned int
												// DeclRefExpr- total - unsigned int
												// UnexposedExpr-  - unsigned int
													// BinaryOperator-  - int [Binary Operator: Sub (-)]
														// UnexposedExpr-  - int
															// UnexposedExpr-  - unsigned char
																// ArraySubscriptExpr-  - unsigned char
																	// UnexposedExpr- pixels - unsigned char *
																		// DeclRefExpr- pixels - unsigned char *
																	// UnexposedExpr- i - int
																		// DeclRefExpr- i - int
														// UnexposedExpr-  - int
															// UnexposedExpr-  - unsigned char
																// ArraySubscriptExpr-  - unsigned char
																	// UnexposedExpr- buffer - unsigned char *
																		// DeclRefExpr- buffer - unsigned char [8]
																	// BinaryOperator-  - int [Binary Operator: And (&)]
																		// UnexposedExpr- i - int
																			// DeclRefExpr- i - int
																		// ParenExpr-  - int
																			// BinaryOperator-  - int [Binary Operator: Sub (-)]
																				// IntegerLiteral-  - int [Literal: 8]
																				// IntegerLiteral-  - int [Literal: 1]
											// BinaryOperator-  - unsigned char [Binary Operator: Assign (=)]
												// ArraySubscriptExpr-  - unsigned char
													// UnexposedExpr- buffer - unsigned char *
														// DeclRefExpr- buffer - unsigned char [8]
													// BinaryOperator-  - unsigned int [Binary Operator: And (&)]
														// ParenExpr-  - unsigned int
															// BinaryOperator-  - unsigned int [Binary Operator: Add (+)]
																// UnexposedExpr- i - unsigned int
																	// UnexposedExpr- i - int
																		// DeclRefExpr- i - int
																// UnexposedExpr- kernel_width - unsigned int
																	// DeclRefExpr- kernel_width - unsigned int
														// UnexposedExpr-  - unsigned int
															// ParenExpr-  - int
																// BinaryOperator-  - int [Binary Operator: Sub (-)]
																	// IntegerLiteral-  - int [Literal: 8]
																	// IntegerLiteral-  - int [Literal: 1]
												// UnexposedExpr-  - unsigned char
													// ArraySubscriptExpr-  - unsigned char
														// UnexposedExpr- pixels - unsigned char *
															// DeclRefExpr- pixels - unsigned char *
														// UnexposedExpr- i - int
															// DeclRefExpr- i - int
											// BinaryOperator-  - unsigned char [Binary Operator: Assign (=)]
												// ArraySubscriptExpr-  - unsigned char
													// UnexposedExpr- pixels - unsigned char *
														// DeclRefExpr- pixels - unsigned char *
													// UnexposedExpr- i - int
														// DeclRefExpr- i - int
												// CStyleCastExpr-  - unsigned char
													// ParenExpr-  - unsigned int
														// BinaryOperator-  - unsigned int [Binary Operator: Div (/)]
															// UnexposedExpr- total - unsigned int
																// DeclRefExpr- total - unsigned int
															// UnexposedExpr- kernel_width - unsigned int
																// DeclRefExpr- kernel_width - unsigned int
								// BreakStmt-  - 
						// ForStmt-  - 
							// BinaryOperator-  - int [Binary Operator: LT (<)]
								// UnexposedExpr- i - int
									// DeclRefExpr- i - int
								// UnexposedExpr- w - int
									// DeclRefExpr- w - int
							// UnaryOperator-  - int [Unary Operator: PreInc (++)]
								// DeclRefExpr- i - int
							// CompoundStmt-  - 
								// NullStmt-  - 
								// CompoundAssignOperator-  - unsigned int
									// DeclRefExpr- total - unsigned int
									// UnexposedExpr-  - unsigned int
										// UnexposedExpr-  - unsigned char
											// ArraySubscriptExpr-  - unsigned char
												// UnexposedExpr- buffer - unsigned char *
													// DeclRefExpr- buffer - unsigned char [8]
												// BinaryOperator-  - int [Binary Operator: And (&)]
													// UnexposedExpr- i - int
														// DeclRefExpr- i - int
													// ParenExpr-  - int
														// BinaryOperator-  - int [Binary Operator: Sub (-)]
															// IntegerLiteral-  - int [Literal: 8]
															// IntegerLiteral-  - int [Literal: 1]
								// BinaryOperator-  - unsigned char [Binary Operator: Assign (=)]
									// ArraySubscriptExpr-  - unsigned char
										// UnexposedExpr- pixels - unsigned char *
											// DeclRefExpr- pixels - unsigned char *
										// UnexposedExpr- i - int
											// DeclRefExpr- i - int
									// CStyleCastExpr-  - unsigned char
										// ParenExpr-  - unsigned int
											// BinaryOperator-  - unsigned int [Binary Operator: Div (/)]
												// UnexposedExpr- total - unsigned int
													// DeclRefExpr- total - unsigned int
												// UnexposedExpr- kernel_width - unsigned int
													// DeclRefExpr- kernel_width - unsigned int
						// CompoundAssignOperator-  - unsigned char *
							// DeclRefExpr- pixels - unsigned char *
							// UnexposedExpr- stride_in_bytes - int
								// DeclRefExpr- stride_in_bytes - int
		// FunctionDecl- stbtt__v_prefilter - void (unsigned char *, int, int, int, unsigned int)
			// ParmDecl- pixels - unsigned char *
			// ParmDecl- w - int
			// ParmDecl- h - int
			// ParmDecl- stride_in_bytes - int
			// ParmDecl- kernel_width - unsigned int
			// CompoundStmt-  - 
				// DeclStmt-  - 
					// VarDecl- buffer - unsigned char [8]
						// IntegerLiteral-  - int [Literal: 8]
				// DeclStmt-  - 
					// VarDecl- safe_h - int
						// UnexposedExpr-  - int
							// BinaryOperator-  - unsigned int [Binary Operator: Sub (-)]
								// UnexposedExpr- h - unsigned int
									// UnexposedExpr- h - int
										// DeclRefExpr- h - int
								// UnexposedExpr- kernel_width - unsigned int
									// DeclRefExpr- kernel_width - unsigned int
				// DeclStmt-  - 
					// VarDecl- j - int
				// CallExpr- memset - void *
					// UnexposedExpr- memset - void *(*)(void *, int, unsigned long long)
						// DeclRefExpr- memset - void *(void *, int, unsigned long long)
					// UnexposedExpr- buffer - void *
						// UnexposedExpr- buffer - unsigned char *
							// DeclRefExpr- buffer - unsigned char [8]
					// IntegerLiteral-  - int [Literal: 0]
					// UnexposedExpr-  - unsigned long long
						// IntegerLiteral-  - int [Literal: 8]
				// ForStmt-  - 
					// BinaryOperator-  - int [Binary Operator: Assign (=)]
						// DeclRefExpr- j - int
						// IntegerLiteral-  - int [Literal: 0]
					// BinaryOperator-  - int [Binary Operator: LT (<)]
						// UnexposedExpr- j - int
							// DeclRefExpr- j - int
						// UnexposedExpr- w - int
							// DeclRefExpr- w - int
					// UnaryOperator-  - int [Unary Operator: PreInc (++)]
						// DeclRefExpr- j - int
					// CompoundStmt-  - 
						// DeclStmt-  - 
							// VarDecl- i - int
						// DeclStmt-  - 
							// VarDecl- total - unsigned int
						// CallExpr- memset - void *
							// UnexposedExpr- memset - void *(*)(void *, int, unsigned long long)
								// DeclRefExpr- memset - void *(void *, int, unsigned long long)
							// UnexposedExpr- buffer - void *
								// UnexposedExpr- buffer - unsigned char *
									// DeclRefExpr- buffer - unsigned char [8]
							// IntegerLiteral-  - int [Literal: 0]
							// UnexposedExpr- kernel_width - unsigned long long
								// UnexposedExpr- kernel_width - unsigned int
									// DeclRefExpr- kernel_width - unsigned int
						// BinaryOperator-  - unsigned int [Binary Operator: Assign (=)]
							// DeclRefExpr- total - unsigned int
							// UnexposedExpr-  - unsigned int
								// IntegerLiteral-  - int [Literal: 0]
						// SwitchStmt-  - 
							// UnexposedExpr- kernel_width - unsigned int
								// DeclRefExpr- kernel_width - unsigned int
							// CompoundStmt-  - 
								// CaseStmt-  - 
									// UnexposedExpr-  - unsigned int
										// IntegerLiteral-  - int [Literal: 2]
									// ForStmt-  - 
										// BinaryOperator-  - int [Binary Operator: Assign (=)]
											// DeclRefExpr- i - int
											// IntegerLiteral-  - int [Literal: 0]
										// BinaryOperator-  - int [Binary Operator: LE (<=)]
											// UnexposedExpr- i - int
												// DeclRefExpr- i - int
											// UnexposedExpr- safe_h - int
												// DeclRefExpr- safe_h - int
										// UnaryOperator-  - int [Unary Operator: PreInc (++)]
											// DeclRefExpr- i - int
										// CompoundStmt-  - 
											// CompoundAssignOperator-  - unsigned int
												// DeclRefExpr- total - unsigned int
												// UnexposedExpr-  - unsigned int
													// BinaryOperator-  - int [Binary Operator: Sub (-)]
														// UnexposedExpr-  - int
															// UnexposedExpr-  - unsigned char
																// ArraySubscriptExpr-  - unsigned char
																	// UnexposedExpr- pixels - unsigned char *
																		// DeclRefExpr- pixels - unsigned char *
																	// BinaryOperator-  - int [Binary Operator: Mul (*)]
																		// UnexposedExpr- i - int
																			// DeclRefExpr- i - int
																		// UnexposedExpr- stride_in_bytes - int
																			// DeclRefExpr- stride_in_bytes - int
														// UnexposedExpr-  - int
															// UnexposedExpr-  - unsigned char
																// ArraySubscriptExpr-  - unsigned char
																	// UnexposedExpr- buffer - unsigned char *
																		// DeclRefExpr- buffer - unsigned char [8]
																	// BinaryOperator-  - int [Binary Operator: And (&)]
																		// UnexposedExpr- i - int
																			// DeclRefExpr- i - int
																		// ParenExpr-  - int
																			// BinaryOperator-  - int [Binary Operator: Sub (-)]
																				// IntegerLiteral-  - int [Literal: 8]
																				// IntegerLiteral-  - int [Literal: 1]
											// BinaryOperator-  - unsigned char [Binary Operator: Assign (=)]
												// ArraySubscriptExpr-  - unsigned char
													// UnexposedExpr- buffer - unsigned char *
														// DeclRefExpr- buffer - unsigned char [8]
													// BinaryOperator-  - unsigned int [Binary Operator: And (&)]
														// ParenExpr-  - unsigned int
															// BinaryOperator-  - unsigned int [Binary Operator: Add (+)]
																// UnexposedExpr- i - unsigned int
																	// UnexposedExpr- i - int
																		// DeclRefExpr- i - int
																// UnexposedExpr- kernel_width - unsigned int
																	// DeclRefExpr- kernel_width - unsigned int
														// UnexposedExpr-  - unsigned int
															// ParenExpr-  - int
																// BinaryOperator-  - int [Binary Operator: Sub (-)]
																	// IntegerLiteral-  - int [Literal: 8]
																	// IntegerLiteral-  - int [Literal: 1]
												// UnexposedExpr-  - unsigned char
													// ArraySubscriptExpr-  - unsigned char
														// UnexposedExpr- pixels - unsigned char *
															// DeclRefExpr- pixels - unsigned char *
														// BinaryOperator-  - int [Binary Operator: Mul (*)]
															// UnexposedExpr- i - int
																// DeclRefExpr- i - int
															// UnexposedExpr- stride_in_bytes - int
																// DeclRefExpr- stride_in_bytes - int
											// BinaryOperator-  - unsigned char [Binary Operator: Assign (=)]
												// ArraySubscriptExpr-  - unsigned char
													// UnexposedExpr- pixels - unsigned char *
														// DeclRefExpr- pixels - unsigned char *
													// BinaryOperator-  - int [Binary Operator: Mul (*)]
														// UnexposedExpr- i - int
															// DeclRefExpr- i - int
														// UnexposedExpr- stride_in_bytes - int
															// DeclRefExpr- stride_in_bytes - int
												// CStyleCastExpr-  - unsigned char
													// ParenExpr-  - unsigned int
														// BinaryOperator-  - unsigned int [Binary Operator: Div (/)]
															// UnexposedExpr- total - unsigned int
																// DeclRefExpr- total - unsigned int
															// UnexposedExpr-  - unsigned int
																// IntegerLiteral-  - int [Literal: 2]
								// BreakStmt-  - 
								// CaseStmt-  - 
									// UnexposedExpr-  - unsigned int
										// IntegerLiteral-  - int [Literal: 3]
									// ForStmt-  - 
										// BinaryOperator-  - int [Binary Operator: Assign (=)]
											// DeclRefExpr- i - int
											// IntegerLiteral-  - int [Literal: 0]
										// BinaryOperator-  - int [Binary Operator: LE (<=)]
											// UnexposedExpr- i - int
												// DeclRefExpr- i - int
											// UnexposedExpr- safe_h - int
												// DeclRefExpr- safe_h - int
										// UnaryOperator-  - int [Unary Operator: PreInc (++)]
											// DeclRefExpr- i - int
										// CompoundStmt-  - 
											// CompoundAssignOperator-  - unsigned int
												// DeclRefExpr- total - unsigned int
												// UnexposedExpr-  - unsigned int
													// BinaryOperator-  - int [Binary Operator: Sub (-)]
														// UnexposedExpr-  - int
															// UnexposedExpr-  - unsigned char
																// ArraySubscriptExpr-  - unsigned char
																	// UnexposedExpr- pixels - unsigned char *
																		// DeclRefExpr- pixels - unsigned char *
																	// BinaryOperator-  - int [Binary Operator: Mul (*)]
																		// UnexposedExpr- i - int
																			// DeclRefExpr- i - int
																		// UnexposedExpr- stride_in_bytes - int
																			// DeclRefExpr- stride_in_bytes - int
														// UnexposedExpr-  - int
															// UnexposedExpr-  - unsigned char
																// ArraySubscriptExpr-  - unsigned char
																	// UnexposedExpr- buffer - unsigned char *
																		// DeclRefExpr- buffer - unsigned char [8]
																	// BinaryOperator-  - int [Binary Operator: And (&)]
																		// UnexposedExpr- i - int
																			// DeclRefExpr- i - int
																		// ParenExpr-  - int
																			// BinaryOperator-  - int [Binary Operator: Sub (-)]
																				// IntegerLiteral-  - int [Literal: 8]
																				// IntegerLiteral-  - int [Literal: 1]
											// BinaryOperator-  - unsigned char [Binary Operator: Assign (=)]
												// ArraySubscriptExpr-  - unsigned char
													// UnexposedExpr- buffer - unsigned char *
														// DeclRefExpr- buffer - unsigned char [8]
													// BinaryOperator-  - unsigned int [Binary Operator: And (&)]
														// ParenExpr-  - unsigned int
															// BinaryOperator-  - unsigned int [Binary Operator: Add (+)]
																// UnexposedExpr- i - unsigned int
																	// UnexposedExpr- i - int
																		// DeclRefExpr- i - int
																// UnexposedExpr- kernel_width - unsigned int
																	// DeclRefExpr- kernel_width - unsigned int
														// UnexposedExpr-  - unsigned int
															// ParenExpr-  - int
																// BinaryOperator-  - int [Binary Operator: Sub (-)]
																	// IntegerLiteral-  - int [Literal: 8]
																	// IntegerLiteral-  - int [Literal: 1]
												// UnexposedExpr-  - unsigned char
													// ArraySubscriptExpr-  - unsigned char
														// UnexposedExpr- pixels - unsigned char *
															// DeclRefExpr- pixels - unsigned char *
														// BinaryOperator-  - int [Binary Operator: Mul (*)]
															// UnexposedExpr- i - int
																// DeclRefExpr- i - int
															// UnexposedExpr- stride_in_bytes - int
																// DeclRefExpr- stride_in_bytes - int
											// BinaryOperator-  - unsigned char [Binary Operator: Assign (=)]
												// ArraySubscriptExpr-  - unsigned char
													// UnexposedExpr- pixels - unsigned char *
														// DeclRefExpr- pixels - unsigned char *
													// BinaryOperator-  - int [Binary Operator: Mul (*)]
														// UnexposedExpr- i - int
															// DeclRefExpr- i - int
														// UnexposedExpr- stride_in_bytes - int
															// DeclRefExpr- stride_in_bytes - int
												// CStyleCastExpr-  - unsigned char
													// ParenExpr-  - unsigned int
														// BinaryOperator-  - unsigned int [Binary Operator: Div (/)]
															// UnexposedExpr- total - unsigned int
																// DeclRefExpr- total - unsigned int
															// UnexposedExpr-  - unsigned int
																// IntegerLiteral-  - int [Literal: 3]
								// BreakStmt-  - 
								// CaseStmt-  - 
									// UnexposedExpr-  - unsigned int
										// IntegerLiteral-  - int [Literal: 4]
									// ForStmt-  - 
										// BinaryOperator-  - int [Binary Operator: Assign (=)]
											// DeclRefExpr- i - int
											// IntegerLiteral-  - int [Literal: 0]
										// BinaryOperator-  - int [Binary Operator: LE (<=)]
											// UnexposedExpr- i - int
												// DeclRefExpr- i - int
											// UnexposedExpr- safe_h - int
												// DeclRefExpr- safe_h - int
										// UnaryOperator-  - int [Unary Operator: PreInc (++)]
											// DeclRefExpr- i - int
										// CompoundStmt-  - 
											// CompoundAssignOperator-  - unsigned int
												// DeclRefExpr- total - unsigned int
												// UnexposedExpr-  - unsigned int
													// BinaryOperator-  - int [Binary Operator: Sub (-)]
														// UnexposedExpr-  - int
															// UnexposedExpr-  - unsigned char
																// ArraySubscriptExpr-  - unsigned char
																	// UnexposedExpr- pixels - unsigned char *
																		// DeclRefExpr- pixels - unsigned char *
																	// BinaryOperator-  - int [Binary Operator: Mul (*)]
																		// UnexposedExpr- i - int
																			// DeclRefExpr- i - int
																		// UnexposedExpr- stride_in_bytes - int
																			// DeclRefExpr- stride_in_bytes - int
														// UnexposedExpr-  - int
															// UnexposedExpr-  - unsigned char
																// ArraySubscriptExpr-  - unsigned char
																	// UnexposedExpr- buffer - unsigned char *
																		// DeclRefExpr- buffer - unsigned char [8]
																	// BinaryOperator-  - int [Binary Operator: And (&)]
																		// UnexposedExpr- i - int
																			// DeclRefExpr- i - int
																		// ParenExpr-  - int
																			// BinaryOperator-  - int [Binary Operator: Sub (-)]
																				// IntegerLiteral-  - int [Literal: 8]
																				// IntegerLiteral-  - int [Literal: 1]
											// BinaryOperator-  - unsigned char [Binary Operator: Assign (=)]
												// ArraySubscriptExpr-  - unsigned char
													// UnexposedExpr- buffer - unsigned char *
														// DeclRefExpr- buffer - unsigned char [8]
													// BinaryOperator-  - unsigned int [Binary Operator: And (&)]
														// ParenExpr-  - unsigned int
															// BinaryOperator-  - unsigned int [Binary Operator: Add (+)]
																// UnexposedExpr- i - unsigned int
																	// UnexposedExpr- i - int
																		// DeclRefExpr- i - int
																// UnexposedExpr- kernel_width - unsigned int
																	// DeclRefExpr- kernel_width - unsigned int
														// UnexposedExpr-  - unsigned int
															// ParenExpr-  - int
																// BinaryOperator-  - int [Binary Operator: Sub (-)]
																	// IntegerLiteral-  - int [Literal: 8]
																	// IntegerLiteral-  - int [Literal: 1]
												// UnexposedExpr-  - unsigned char
													// ArraySubscriptExpr-  - unsigned char
														// UnexposedExpr- pixels - unsigned char *
															// DeclRefExpr- pixels - unsigned char *
														// BinaryOperator-  - int [Binary Operator: Mul (*)]
															// UnexposedExpr- i - int
																// DeclRefExpr- i - int
															// UnexposedExpr- stride_in_bytes - int
																// DeclRefExpr- stride_in_bytes - int
											// BinaryOperator-  - unsigned char [Binary Operator: Assign (=)]
												// ArraySubscriptExpr-  - unsigned char
													// UnexposedExpr- pixels - unsigned char *
														// DeclRefExpr- pixels - unsigned char *
													// BinaryOperator-  - int [Binary Operator: Mul (*)]
														// UnexposedExpr- i - int
															// DeclRefExpr- i - int
														// UnexposedExpr- stride_in_bytes - int
															// DeclRefExpr- stride_in_bytes - int
												// CStyleCastExpr-  - unsigned char
													// ParenExpr-  - unsigned int
														// BinaryOperator-  - unsigned int [Binary Operator: Div (/)]
															// UnexposedExpr- total - unsigned int
																// DeclRefExpr- total - unsigned int
															// UnexposedExpr-  - unsigned int
																// IntegerLiteral-  - int [Literal: 4]
								// BreakStmt-  - 
								// CaseStmt-  - 
									// UnexposedExpr-  - unsigned int
										// IntegerLiteral-  - int [Literal: 5]
									// ForStmt-  - 
										// BinaryOperator-  - int [Binary Operator: Assign (=)]
											// DeclRefExpr- i - int
											// IntegerLiteral-  - int [Literal: 0]
										// BinaryOperator-  - int [Binary Operator: LE (<=)]
											// UnexposedExpr- i - int
												// DeclRefExpr- i - int
											// UnexposedExpr- safe_h - int
												// DeclRefExpr- safe_h - int
										// UnaryOperator-  - int [Unary Operator: PreInc (++)]
											// DeclRefExpr- i - int
										// CompoundStmt-  - 
											// CompoundAssignOperator-  - unsigned int
												// DeclRefExpr- total - unsigned int
												// UnexposedExpr-  - unsigned int
													// BinaryOperator-  - int [Binary Operator: Sub (-)]
														// UnexposedExpr-  - int
															// UnexposedExpr-  - unsigned char
																// ArraySubscriptExpr-  - unsigned char
																	// UnexposedExpr- pixels - unsigned char *
																		// DeclRefExpr- pixels - unsigned char *
																	// BinaryOperator-  - int [Binary Operator: Mul (*)]
																		// UnexposedExpr- i - int
																			// DeclRefExpr- i - int
																		// UnexposedExpr- stride_in_bytes - int
																			// DeclRefExpr- stride_in_bytes - int
														// UnexposedExpr-  - int
															// UnexposedExpr-  - unsigned char
																// ArraySubscriptExpr-  - unsigned char
																	// UnexposedExpr- buffer - unsigned char *
																		// DeclRefExpr- buffer - unsigned char [8]
																	// BinaryOperator-  - int [Binary Operator: And (&)]
																		// UnexposedExpr- i - int
																			// DeclRefExpr- i - int
																		// ParenExpr-  - int
																			// BinaryOperator-  - int [Binary Operator: Sub (-)]
																				// IntegerLiteral-  - int [Literal: 8]
																				// IntegerLiteral-  - int [Literal: 1]
											// BinaryOperator-  - unsigned char [Binary Operator: Assign (=)]
												// ArraySubscriptExpr-  - unsigned char
													// UnexposedExpr- buffer - unsigned char *
														// DeclRefExpr- buffer - unsigned char [8]
													// BinaryOperator-  - unsigned int [Binary Operator: And (&)]
														// ParenExpr-  - unsigned int
															// BinaryOperator-  - unsigned int [Binary Operator: Add (+)]
																// UnexposedExpr- i - unsigned int
																	// UnexposedExpr- i - int
																		// DeclRefExpr- i - int
																// UnexposedExpr- kernel_width - unsigned int
																	// DeclRefExpr- kernel_width - unsigned int
														// UnexposedExpr-  - unsigned int
															// ParenExpr-  - int
																// BinaryOperator-  - int [Binary Operator: Sub (-)]
																	// IntegerLiteral-  - int [Literal: 8]
																	// IntegerLiteral-  - int [Literal: 1]
												// UnexposedExpr-  - unsigned char
													// ArraySubscriptExpr-  - unsigned char
														// UnexposedExpr- pixels - unsigned char *
															// DeclRefExpr- pixels - unsigned char *
														// BinaryOperator-  - int [Binary Operator: Mul (*)]
															// UnexposedExpr- i - int
																// DeclRefExpr- i - int
															// UnexposedExpr- stride_in_bytes - int
																// DeclRefExpr- stride_in_bytes - int
											// BinaryOperator-  - unsigned char [Binary Operator: Assign (=)]
												// ArraySubscriptExpr-  - unsigned char
													// UnexposedExpr- pixels - unsigned char *
														// DeclRefExpr- pixels - unsigned char *
													// BinaryOperator-  - int [Binary Operator: Mul (*)]
														// UnexposedExpr- i - int
															// DeclRefExpr- i - int
														// UnexposedExpr- stride_in_bytes - int
															// DeclRefExpr- stride_in_bytes - int
												// CStyleCastExpr-  - unsigned char
													// ParenExpr-  - unsigned int
														// BinaryOperator-  - unsigned int [Binary Operator: Div (/)]
															// UnexposedExpr- total - unsigned int
																// DeclRefExpr- total - unsigned int
															// UnexposedExpr-  - unsigned int
																// IntegerLiteral-  - int [Literal: 5]
								// BreakStmt-  - 
								// DefaultStmt-  - 
									// ForStmt-  - 
										// BinaryOperator-  - int [Binary Operator: Assign (=)]
											// DeclRefExpr- i - int
											// IntegerLiteral-  - int [Literal: 0]
										// BinaryOperator-  - int [Binary Operator: LE (<=)]
											// UnexposedExpr- i - int
												// DeclRefExpr- i - int
											// UnexposedExpr- safe_h - int
												// DeclRefExpr- safe_h - int
										// UnaryOperator-  - int [Unary Operator: PreInc (++)]
											// DeclRefExpr- i - int
										// CompoundStmt-  - 
											// CompoundAssignOperator-  - unsigned int
												// DeclRefExpr- total - unsigned int
												// UnexposedExpr-  - unsigned int
													// BinaryOperator-  - int [Binary Operator: Sub (-)]
														// UnexposedExpr-  - int
															// UnexposedExpr-  - unsigned char
																// ArraySubscriptExpr-  - unsigned char
																	// UnexposedExpr- pixels - unsigned char *
																		// DeclRefExpr- pixels - unsigned char *
																	// BinaryOperator-  - int [Binary Operator: Mul (*)]
																		// UnexposedExpr- i - int
																			// DeclRefExpr- i - int
																		// UnexposedExpr- stride_in_bytes - int
																			// DeclRefExpr- stride_in_bytes - int
														// UnexposedExpr-  - int
															// UnexposedExpr-  - unsigned char
																// ArraySubscriptExpr-  - unsigned char
																	// UnexposedExpr- buffer - unsigned char *
																		// DeclRefExpr- buffer - unsigned char [8]
																	// BinaryOperator-  - int [Binary Operator: And (&)]
																		// UnexposedExpr- i - int
																			// DeclRefExpr- i - int
																		// ParenExpr-  - int
																			// BinaryOperator-  - int [Binary Operator: Sub (-)]
																				// IntegerLiteral-  - int [Literal: 8]
																				// IntegerLiteral-  - int [Literal: 1]
											// BinaryOperator-  - unsigned char [Binary Operator: Assign (=)]
												// ArraySubscriptExpr-  - unsigned char
													// UnexposedExpr- buffer - unsigned char *
														// DeclRefExpr- buffer - unsigned char [8]
													// BinaryOperator-  - unsigned int [Binary Operator: And (&)]
														// ParenExpr-  - unsigned int
															// BinaryOperator-  - unsigned int [Binary Operator: Add (+)]
																// UnexposedExpr- i - unsigned int
																	// UnexposedExpr- i - int
																		// DeclRefExpr- i - int
																// UnexposedExpr- kernel_width - unsigned int
																	// DeclRefExpr- kernel_width - unsigned int
														// UnexposedExpr-  - unsigned int
															// ParenExpr-  - int
																// BinaryOperator-  - int [Binary Operator: Sub (-)]
																	// IntegerLiteral-  - int [Literal: 8]
																	// IntegerLiteral-  - int [Literal: 1]
												// UnexposedExpr-  - unsigned char
													// ArraySubscriptExpr-  - unsigned char
														// UnexposedExpr- pixels - unsigned char *
															// DeclRefExpr- pixels - unsigned char *
														// BinaryOperator-  - int [Binary Operator: Mul (*)]
															// UnexposedExpr- i - int
																// DeclRefExpr- i - int
															// UnexposedExpr- stride_in_bytes - int
																// DeclRefExpr- stride_in_bytes - int
											// BinaryOperator-  - unsigned char [Binary Operator: Assign (=)]
												// ArraySubscriptExpr-  - unsigned char
													// UnexposedExpr- pixels - unsigned char *
														// DeclRefExpr- pixels - unsigned char *
													// BinaryOperator-  - int [Binary Operator: Mul (*)]
														// UnexposedExpr- i - int
															// DeclRefExpr- i - int
														// UnexposedExpr- stride_in_bytes - int
															// DeclRefExpr- stride_in_bytes - int
												// CStyleCastExpr-  - unsigned char
													// ParenExpr-  - unsigned int
														// BinaryOperator-  - unsigned int [Binary Operator: Div (/)]
															// UnexposedExpr- total - unsigned int
																// DeclRefExpr- total - unsigned int
															// UnexposedExpr- kernel_width - unsigned int
																// DeclRefExpr- kernel_width - unsigned int
								// BreakStmt-  - 
						// ForStmt-  - 
							// BinaryOperator-  - int [Binary Operator: LT (<)]
								// UnexposedExpr- i - int
									// DeclRefExpr- i - int
								// UnexposedExpr- h - int
									// DeclRefExpr- h - int
							// UnaryOperator-  - int [Unary Operator: PreInc (++)]
								// DeclRefExpr- i - int
							// CompoundStmt-  - 
								// NullStmt-  - 
								// CompoundAssignOperator-  - unsigned int
									// DeclRefExpr- total - unsigned int
									// UnexposedExpr-  - unsigned int
										// UnexposedExpr-  - unsigned char
											// ArraySubscriptExpr-  - unsigned char
												// UnexposedExpr- buffer - unsigned char *
													// DeclRefExpr- buffer - unsigned char [8]
												// BinaryOperator-  - int [Binary Operator: And (&)]
													// UnexposedExpr- i - int
														// DeclRefExpr- i - int
													// ParenExpr-  - int
														// BinaryOperator-  - int [Binary Operator: Sub (-)]
															// IntegerLiteral-  - int [Literal: 8]
															// IntegerLiteral-  - int [Literal: 1]
								// BinaryOperator-  - unsigned char [Binary Operator: Assign (=)]
									// ArraySubscriptExpr-  - unsigned char
										// UnexposedExpr- pixels - unsigned char *
											// DeclRefExpr- pixels - unsigned char *
										// BinaryOperator-  - int [Binary Operator: Mul (*)]
											// UnexposedExpr- i - int
												// DeclRefExpr- i - int
											// UnexposedExpr- stride_in_bytes - int
												// DeclRefExpr- stride_in_bytes - int
									// CStyleCastExpr-  - unsigned char
										// ParenExpr-  - unsigned int
											// BinaryOperator-  - unsigned int [Binary Operator: Div (/)]
												// UnexposedExpr- total - unsigned int
													// DeclRefExpr- total - unsigned int
												// UnexposedExpr- kernel_width - unsigned int
													// DeclRefExpr- kernel_width - unsigned int
						// CompoundAssignOperator-  - unsigned char *
							// DeclRefExpr- pixels - unsigned char *
							// IntegerLiteral-  - int [Literal: 1]
		// FunctionDecl- stbtt__oversample_shift - float (int)
			// ParmDecl- oversample - int
			// CompoundStmt-  - 
				// IfStmt-  - 
					// UnaryOperator-  - int [Unary Operator: LNot (!)]
						// UnexposedExpr- oversample - int
							// DeclRefExpr- oversample - int
					// ReturnStmt-  - 
						// FloatingLiteral-  - float [Literal: 0]
				// ReturnStmt-  - 
					// BinaryOperator-  - float [Binary Operator: Div (/)]
						// CStyleCastExpr-  - float
							// UnaryOperator-  - int [Unary Operator: Minus (-)]
								// ParenExpr-  - int
									// BinaryOperator-  - int [Binary Operator: Sub (-)]
										// UnexposedExpr- oversample - int
											// DeclRefExpr- oversample - int
										// IntegerLiteral-  - int [Literal: 1]
						// ParenExpr-  - float
							// BinaryOperator-  - float [Binary Operator: Mul (*)]
								// FloatingLiteral-  - float [Literal: 2]
								// CStyleCastExpr-  - float
									// UnexposedExpr- oversample - int
										// DeclRefExpr- oversample - int
		// FunctionDecl- stbtt_PackFontRangesGatherRects - int (stbtt_pack_context *, const stbtt_fontinfo *, stbtt_pack_range *, int, stbrp_rect *)
			// ParmDecl- spc - stbtt_pack_context *
				// TypeRef- stbtt_pack_context - stbtt_pack_context
			// ParmDecl- info - const stbtt_fontinfo *
				// TypeRef- stbtt_fontinfo - stbtt_fontinfo
			// ParmDecl- ranges - stbtt_pack_range *
				// TypeRef- stbtt_pack_range - stbtt_pack_range
			// ParmDecl- num_ranges - int
			// ParmDecl- rects - stbrp_rect *
				// TypeRef- stbrp_rect - stbrp_rect
			// CompoundStmt-  - 
				// DeclStmt-  - 
					// VarDecl- i - int
					// VarDecl- j - int
					// VarDecl- k - int
				// BinaryOperator-  - int [Binary Operator: Assign (=)]
					// DeclRefExpr- k - int
					// IntegerLiteral-  - int [Literal: 0]
				// ForStmt-  - 
					// BinaryOperator-  - int [Binary Operator: Assign (=)]
						// DeclRefExpr- i - int
						// IntegerLiteral-  - int [Literal: 0]
					// BinaryOperator-  - int [Binary Operator: LT (<)]
						// UnexposedExpr- i - int
							// DeclRefExpr- i - int
						// UnexposedExpr- num_ranges - int
							// DeclRefExpr- num_ranges - int
					// UnaryOperator-  - int [Unary Operator: PreInc (++)]
						// DeclRefExpr- i - int
					// CompoundStmt-  - 
						// DeclStmt-  - 
							// VarDecl- fh - float
								// UnexposedExpr- font_size - float
									// MemberRefExpr- font_size - float
										// ArraySubscriptExpr-  - stbtt_pack_range
											// UnexposedExpr- ranges - stbtt_pack_range *
												// DeclRefExpr- ranges - stbtt_pack_range *
											// UnexposedExpr- i - int
												// DeclRefExpr- i - int
						// DeclStmt-  - 
							// VarDecl- scale - float
								// ConditionalOperator-  - float
									// BinaryOperator-  - int [Binary Operator: GT (>)]
										// UnexposedExpr- fh - float
											// DeclRefExpr- fh - float
										// UnexposedExpr-  - float
											// IntegerLiteral-  - int [Literal: 0]
									// CallExpr- stbtt_ScaleForPixelHeight - float
										// UnexposedExpr- stbtt_ScaleForPixelHeight - float (*)(const stbtt_fontinfo *, float)
											// DeclRefExpr- stbtt_ScaleForPixelHeight - float (const stbtt_fontinfo *, float)
										// UnexposedExpr- info - const stbtt_fontinfo *
											// DeclRefExpr- info - const stbtt_fontinfo *
										// UnexposedExpr- fh - float
											// DeclRefExpr- fh - float
									// CallExpr- stbtt_ScaleForMappingEmToPixels - float
										// UnexposedExpr- stbtt_ScaleForMappingEmToPixels - float (*)(const stbtt_fontinfo *, float)
											// DeclRefExpr- stbtt_ScaleForMappingEmToPixels - float (const stbtt_fontinfo *, float)
										// UnexposedExpr- info - const stbtt_fontinfo *
											// DeclRefExpr- info - const stbtt_fontinfo *
										// UnaryOperator-  - float [Unary Operator: Minus (-)]
											// UnexposedExpr- fh - float
												// DeclRefExpr- fh - float
						// BinaryOperator-  - unsigned char [Binary Operator: Assign (=)]
							// MemberRefExpr- h_oversample - unsigned char
								// ArraySubscriptExpr-  - stbtt_pack_range
									// UnexposedExpr- ranges - stbtt_pack_range *
										// DeclRefExpr- ranges - stbtt_pack_range *
									// UnexposedExpr- i - int
										// DeclRefExpr- i - int
							// CStyleCastExpr-  - unsigned char
								// UnexposedExpr- h_oversample - unsigned int
									// MemberRefExpr- h_oversample - unsigned int
										// UnexposedExpr- spc - stbtt_pack_context *
											// DeclRefExpr- spc - stbtt_pack_context *
						// BinaryOperator-  - unsigned char [Binary Operator: Assign (=)]
							// MemberRefExpr- v_oversample - unsigned char
								// ArraySubscriptExpr-  - stbtt_pack_range
									// UnexposedExpr- ranges - stbtt_pack_range *
										// DeclRefExpr- ranges - stbtt_pack_range *
									// UnexposedExpr- i - int
										// DeclRefExpr- i - int
							// CStyleCastExpr-  - unsigned char
								// UnexposedExpr- v_oversample - unsigned int
									// MemberRefExpr- v_oversample - unsigned int
										// UnexposedExpr- spc - stbtt_pack_context *
											// DeclRefExpr- spc - stbtt_pack_context *
						// ForStmt-  - 
							// BinaryOperator-  - int [Binary Operator: Assign (=)]
								// DeclRefExpr- j - int
								// IntegerLiteral-  - int [Literal: 0]
							// BinaryOperator-  - int [Binary Operator: LT (<)]
								// UnexposedExpr- j - int
									// DeclRefExpr- j - int
								// UnexposedExpr- num_chars - int
									// MemberRefExpr- num_chars - int
										// ArraySubscriptExpr-  - stbtt_pack_range
											// UnexposedExpr- ranges - stbtt_pack_range *
												// DeclRefExpr- ranges - stbtt_pack_range *
											// UnexposedExpr- i - int
												// DeclRefExpr- i - int
							// UnaryOperator-  - int [Unary Operator: PreInc (++)]
								// DeclRefExpr- j - int
							// CompoundStmt-  - 
								// DeclStmt-  - 
									// VarDecl- x0 - int
									// VarDecl- y0 - int
									// VarDecl- x1 - int
									// VarDecl- y1 - int
								// DeclStmt-  - 
									// VarDecl- codepoint - int
										// ConditionalOperator-  - int
											// BinaryOperator-  - int [Binary Operator: EQ (==)]
												// UnexposedExpr- array_of_unicode_codepoints - int *
													// MemberRefExpr- array_of_unicode_codepoints - int *
														// ArraySubscriptExpr-  - stbtt_pack_range
															// UnexposedExpr- ranges - stbtt_pack_range *
																// DeclRefExpr- ranges - stbtt_pack_range *
															// UnexposedExpr- i - int
																// DeclRefExpr- i - int
												// UnexposedExpr-  - int *
													// ParenExpr-  - void *
														// CStyleCastExpr-  - void *
															// IntegerLiteral-  - int [Literal: 0]
											// BinaryOperator-  - int [Binary Operator: Add (+)]
												// UnexposedExpr- first_unicode_codepoint_in_range - int
													// MemberRefExpr- first_unicode_codepoint_in_range - int
														// ArraySubscriptExpr-  - stbtt_pack_range
															// UnexposedExpr- ranges - stbtt_pack_range *
																// DeclRefExpr- ranges - stbtt_pack_range *
															// UnexposedExpr- i - int
																// DeclRefExpr- i - int
												// UnexposedExpr- j - int
													// DeclRefExpr- j - int
											// UnexposedExpr-  - int
												// ArraySubscriptExpr-  - int
													// UnexposedExpr- array_of_unicode_codepoints - int *
														// MemberRefExpr- array_of_unicode_codepoints - int *
															// ArraySubscriptExpr-  - stbtt_pack_range
																// UnexposedExpr- ranges - stbtt_pack_range *
																	// DeclRefExpr- ranges - stbtt_pack_range *
																// UnexposedExpr- i - int
																	// DeclRefExpr- i - int
													// UnexposedExpr- j - int
														// DeclRefExpr- j - int
								// DeclStmt-  - 
									// VarDecl- glyph - int
										// CallExpr- stbtt_FindGlyphIndex - int
											// UnexposedExpr- stbtt_FindGlyphIndex - int (*)(const stbtt_fontinfo *, int)
												// DeclRefExpr- stbtt_FindGlyphIndex - int (const stbtt_fontinfo *, int)
											// UnexposedExpr- info - const stbtt_fontinfo *
												// DeclRefExpr- info - const stbtt_fontinfo *
											// UnexposedExpr- codepoint - int
												// DeclRefExpr- codepoint - int
								// CallExpr- stbtt_GetGlyphBitmapBoxSubpixel - void
									// UnexposedExpr- stbtt_GetGlyphBitmapBoxSubpixel - void (*)(const stbtt_fontinfo *, int, float, float, float, float, int *, int *, int *, int *)
										// DeclRefExpr- stbtt_GetGlyphBitmapBoxSubpixel - void (const stbtt_fontinfo *, int, float, float, float, float, int *, int *, int *, int *)
									// UnexposedExpr- info - const stbtt_fontinfo *
										// DeclRefExpr- info - const stbtt_fontinfo *
									// UnexposedExpr- glyph - int
										// DeclRefExpr- glyph - int
									// BinaryOperator-  - float [Binary Operator: Mul (*)]
										// UnexposedExpr- scale - float
											// DeclRefExpr- scale - float
										// UnexposedExpr- h_oversample - float
											// UnexposedExpr- h_oversample - unsigned int
												// MemberRefExpr- h_oversample - unsigned int
													// UnexposedExpr- spc - stbtt_pack_context *
														// DeclRefExpr- spc - stbtt_pack_context *
									// BinaryOperator-  - float [Binary Operator: Mul (*)]
										// UnexposedExpr- scale - float
											// DeclRefExpr- scale - float
										// UnexposedExpr- v_oversample - float
											// UnexposedExpr- v_oversample - unsigned int
												// MemberRefExpr- v_oversample - unsigned int
													// UnexposedExpr- spc - stbtt_pack_context *
														// DeclRefExpr- spc - stbtt_pack_context *
									// UnexposedExpr-  - float
										// IntegerLiteral-  - int [Literal: 0]
									// UnexposedExpr-  - float
										// IntegerLiteral-  - int [Literal: 0]
									// UnaryOperator-  - int * [Unary Operator: AddrOf (&)]
										// DeclRefExpr- x0 - int
									// UnaryOperator-  - int * [Unary Operator: AddrOf (&)]
										// DeclRefExpr- y0 - int
									// UnaryOperator-  - int * [Unary Operator: AddrOf (&)]
										// DeclRefExpr- x1 - int
									// UnaryOperator-  - int * [Unary Operator: AddrOf (&)]
										// DeclRefExpr- y1 - int
								// BinaryOperator-  - int [Binary Operator: Assign (=)]
									// MemberRefExpr- w - int
										// ArraySubscriptExpr-  - stbrp_rect
											// UnexposedExpr- rects - stbrp_rect *
												// DeclRefExpr- rects - stbrp_rect *
											// UnexposedExpr- k - int
												// DeclRefExpr- k - int
									// CStyleCastExpr-  - stbrp_coord
										// TypeRef- stbrp_coord - stbrp_coord
										// ParenExpr-  - unsigned int
											// BinaryOperator-  - unsigned int [Binary Operator: Sub (-)]
												// BinaryOperator-  - unsigned int [Binary Operator: Add (+)]
													// UnexposedExpr-  - unsigned int
														// BinaryOperator-  - int [Binary Operator: Add (+)]
															// BinaryOperator-  - int [Binary Operator: Sub (-)]
																// UnexposedExpr- x1 - int
																	// DeclRefExpr- x1 - int
																// UnexposedExpr- x0 - int
																	// DeclRefExpr- x0 - int
															// UnexposedExpr- padding - int
																// MemberRefExpr- padding - int
																	// UnexposedExpr- spc - stbtt_pack_context *
																		// DeclRefExpr- spc - stbtt_pack_context *
													// UnexposedExpr- h_oversample - unsigned int
														// MemberRefExpr- h_oversample - unsigned int
															// UnexposedExpr- spc - stbtt_pack_context *
																// DeclRefExpr- spc - stbtt_pack_context *
												// UnexposedExpr-  - unsigned int
													// IntegerLiteral-  - int [Literal: 1]
								// BinaryOperator-  - int [Binary Operator: Assign (=)]
									// MemberRefExpr- h - int
										// ArraySubscriptExpr-  - stbrp_rect
											// UnexposedExpr- rects - stbrp_rect *
												// DeclRefExpr- rects - stbrp_rect *
											// UnexposedExpr- k - int
												// DeclRefExpr- k - int
									// CStyleCastExpr-  - stbrp_coord
										// TypeRef- stbrp_coord - stbrp_coord
										// ParenExpr-  - unsigned int
											// BinaryOperator-  - unsigned int [Binary Operator: Sub (-)]
												// BinaryOperator-  - unsigned int [Binary Operator: Add (+)]
													// UnexposedExpr-  - unsigned int
														// BinaryOperator-  - int [Binary Operator: Add (+)]
															// BinaryOperator-  - int [Binary Operator: Sub (-)]
																// UnexposedExpr- y1 - int
																	// DeclRefExpr- y1 - int
																// UnexposedExpr- y0 - int
																	// DeclRefExpr- y0 - int
															// UnexposedExpr- padding - int
																// MemberRefExpr- padding - int
																	// UnexposedExpr- spc - stbtt_pack_context *
																		// DeclRefExpr- spc - stbtt_pack_context *
													// UnexposedExpr- v_oversample - unsigned int
														// MemberRefExpr- v_oversample - unsigned int
															// UnexposedExpr- spc - stbtt_pack_context *
																// DeclRefExpr- spc - stbtt_pack_context *
												// UnexposedExpr-  - unsigned int
													// IntegerLiteral-  - int [Literal: 1]
								// UnaryOperator-  - int [Unary Operator: PreInc (++)]
									// DeclRefExpr- k - int
				// ReturnStmt-  - 
					// UnexposedExpr- k - int
						// DeclRefExpr- k - int
		// FunctionDecl- stbtt_MakeGlyphBitmapSubpixelPrefilter - void (const stbtt_fontinfo *, unsigned char *, int, int, int, float, float, float, float, int, int, float *, float *, int)
			// ParmDecl- info - const stbtt_fontinfo *
				// TypeRef- stbtt_fontinfo - stbtt_fontinfo
			// ParmDecl- output - unsigned char *
			// ParmDecl- out_w - int
			// ParmDecl- out_h - int
			// ParmDecl- out_stride - int
			// ParmDecl- scale_x - float
			// ParmDecl- scale_y - float
			// ParmDecl- shift_x - float
			// ParmDecl- shift_y - float
			// ParmDecl- prefilter_x - int
			// ParmDecl- prefilter_y - int
			// ParmDecl- sub_x - float *
			// ParmDecl- sub_y - float *
			// ParmDecl- glyph - int
			// CompoundStmt-  - 
				// CallExpr- stbtt_MakeGlyphBitmapSubpixel - void
					// UnexposedExpr- stbtt_MakeGlyphBitmapSubpixel - void (*)(const stbtt_fontinfo *, unsigned char *, int, int, int, float, float, float, float, int)
						// DeclRefExpr- stbtt_MakeGlyphBitmapSubpixel - void (const stbtt_fontinfo *, unsigned char *, int, int, int, float, float, float, float, int)
					// UnexposedExpr- info - const stbtt_fontinfo *
						// DeclRefExpr- info - const stbtt_fontinfo *
					// UnexposedExpr- output - unsigned char *
						// DeclRefExpr- output - unsigned char *
					// BinaryOperator-  - int [Binary Operator: Sub (-)]
						// UnexposedExpr- out_w - int
							// DeclRefExpr- out_w - int
						// ParenExpr-  - int
							// BinaryOperator-  - int [Binary Operator: Sub (-)]
								// UnexposedExpr- prefilter_x - int
									// DeclRefExpr- prefilter_x - int
								// IntegerLiteral-  - int [Literal: 1]
					// BinaryOperator-  - int [Binary Operator: Sub (-)]
						// UnexposedExpr- out_h - int
							// DeclRefExpr- out_h - int
						// ParenExpr-  - int
							// BinaryOperator-  - int [Binary Operator: Sub (-)]
								// UnexposedExpr- prefilter_y - int
									// DeclRefExpr- prefilter_y - int
								// IntegerLiteral-  - int [Literal: 1]
					// UnexposedExpr- out_stride - int
						// DeclRefExpr- out_stride - int
					// UnexposedExpr- scale_x - float
						// DeclRefExpr- scale_x - float
					// UnexposedExpr- scale_y - float
						// DeclRefExpr- scale_y - float
					// UnexposedExpr- shift_x - float
						// DeclRefExpr- shift_x - float
					// UnexposedExpr- shift_y - float
						// DeclRefExpr- shift_y - float
					// UnexposedExpr- glyph - int
						// DeclRefExpr- glyph - int
				// IfStmt-  - 
					// BinaryOperator-  - int [Binary Operator: GT (>)]
						// UnexposedExpr- prefilter_x - int
							// DeclRefExpr- prefilter_x - int
						// IntegerLiteral-  - int [Literal: 1]
					// CallExpr- stbtt__h_prefilter - void
						// UnexposedExpr- stbtt__h_prefilter - void (*)(unsigned char *, int, int, int, unsigned int)
							// DeclRefExpr- stbtt__h_prefilter - void (unsigned char *, int, int, int, unsigned int)
						// UnexposedExpr- output - unsigned char *
							// DeclRefExpr- output - unsigned char *
						// UnexposedExpr- out_w - int
							// DeclRefExpr- out_w - int
						// UnexposedExpr- out_h - int
							// DeclRefExpr- out_h - int
						// UnexposedExpr- out_stride - int
							// DeclRefExpr- out_stride - int
						// UnexposedExpr- prefilter_x - unsigned int
							// UnexposedExpr- prefilter_x - int
								// DeclRefExpr- prefilter_x - int
				// IfStmt-  - 
					// BinaryOperator-  - int [Binary Operator: GT (>)]
						// UnexposedExpr- prefilter_y - int
							// DeclRefExpr- prefilter_y - int
						// IntegerLiteral-  - int [Literal: 1]
					// CallExpr- stbtt__v_prefilter - void
						// UnexposedExpr- stbtt__v_prefilter - void (*)(unsigned char *, int, int, int, unsigned int)
							// DeclRefExpr- stbtt__v_prefilter - void (unsigned char *, int, int, int, unsigned int)
						// UnexposedExpr- output - unsigned char *
							// DeclRefExpr- output - unsigned char *
						// UnexposedExpr- out_w - int
							// DeclRefExpr- out_w - int
						// UnexposedExpr- out_h - int
							// DeclRefExpr- out_h - int
						// UnexposedExpr- out_stride - int
							// DeclRefExpr- out_stride - int
						// UnexposedExpr- prefilter_y - unsigned int
							// UnexposedExpr- prefilter_y - int
								// DeclRefExpr- prefilter_y - int
				// BinaryOperator-  - float [Binary Operator: Assign (=)]
					// UnaryOperator-  - float [Unary Operator: Deref (*)]
						// UnexposedExpr- sub_x - float *
							// DeclRefExpr- sub_x - float *
					// CallExpr- stbtt__oversample_shift - float
						// UnexposedExpr- stbtt__oversample_shift - float (*)(int)
							// DeclRefExpr- stbtt__oversample_shift - float (int)
						// UnexposedExpr- prefilter_x - int
							// DeclRefExpr- prefilter_x - int
				// BinaryOperator-  - float [Binary Operator: Assign (=)]
					// UnaryOperator-  - float [Unary Operator: Deref (*)]
						// UnexposedExpr- sub_y - float *
							// DeclRefExpr- sub_y - float *
					// CallExpr- stbtt__oversample_shift - float
						// UnexposedExpr- stbtt__oversample_shift - float (*)(int)
							// DeclRefExpr- stbtt__oversample_shift - float (int)
						// UnexposedExpr- prefilter_y - int
							// DeclRefExpr- prefilter_y - int
		// FunctionDecl- stbtt_PackFontRangesRenderIntoRects - int (stbtt_pack_context *, const stbtt_fontinfo *, stbtt_pack_range *, int, stbrp_rect *)
			// ParmDecl- spc - stbtt_pack_context *
				// TypeRef- stbtt_pack_context - stbtt_pack_context
			// ParmDecl- info - const stbtt_fontinfo *
				// TypeRef- stbtt_fontinfo - stbtt_fontinfo
			// ParmDecl- ranges - stbtt_pack_range *
				// TypeRef- stbtt_pack_range - stbtt_pack_range
			// ParmDecl- num_ranges - int
			// ParmDecl- rects - stbrp_rect *
				// TypeRef- stbrp_rect - stbrp_rect
			// CompoundStmt-  - 
				// DeclStmt-  - 
					// VarDecl- i - int
					// VarDecl- j - int
					// VarDecl- k - int
					// VarDecl- return_value - int
						// IntegerLiteral-  - int [Literal: 1]
				// DeclStmt-  - 
					// VarDecl- old_h_over - int
						// UnexposedExpr- h_oversample - int
							// UnexposedExpr- h_oversample - unsigned int
								// MemberRefExpr- h_oversample - unsigned int
									// UnexposedExpr- spc - stbtt_pack_context *
										// DeclRefExpr- spc - stbtt_pack_context *
				// DeclStmt-  - 
					// VarDecl- old_v_over - int
						// UnexposedExpr- v_oversample - int
							// UnexposedExpr- v_oversample - unsigned int
								// MemberRefExpr- v_oversample - unsigned int
									// UnexposedExpr- spc - stbtt_pack_context *
										// DeclRefExpr- spc - stbtt_pack_context *
				// BinaryOperator-  - int [Binary Operator: Assign (=)]
					// DeclRefExpr- k - int
					// IntegerLiteral-  - int [Literal: 0]
				// ForStmt-  - 
					// BinaryOperator-  - int [Binary Operator: Assign (=)]
						// DeclRefExpr- i - int
						// IntegerLiteral-  - int [Literal: 0]
					// BinaryOperator-  - int [Binary Operator: LT (<)]
						// UnexposedExpr- i - int
							// DeclRefExpr- i - int
						// UnexposedExpr- num_ranges - int
							// DeclRefExpr- num_ranges - int
					// UnaryOperator-  - int [Unary Operator: PreInc (++)]
						// DeclRefExpr- i - int
					// CompoundStmt-  - 
						// DeclStmt-  - 
							// VarDecl- fh - float
								// UnexposedExpr- font_size - float
									// MemberRefExpr- font_size - float
										// ArraySubscriptExpr-  - stbtt_pack_range
											// UnexposedExpr- ranges - stbtt_pack_range *
												// DeclRefExpr- ranges - stbtt_pack_range *
											// UnexposedExpr- i - int
												// DeclRefExpr- i - int
						// DeclStmt-  - 
							// VarDecl- scale - float
								// ConditionalOperator-  - float
									// BinaryOperator-  - int [Binary Operator: GT (>)]
										// UnexposedExpr- fh - float
											// DeclRefExpr- fh - float
										// UnexposedExpr-  - float
											// IntegerLiteral-  - int [Literal: 0]
									// CallExpr- stbtt_ScaleForPixelHeight - float
										// UnexposedExpr- stbtt_ScaleForPixelHeight - float (*)(const stbtt_fontinfo *, float)
											// DeclRefExpr- stbtt_ScaleForPixelHeight - float (const stbtt_fontinfo *, float)
										// UnexposedExpr- info - const stbtt_fontinfo *
											// DeclRefExpr- info - const stbtt_fontinfo *
										// UnexposedExpr- fh - float
											// DeclRefExpr- fh - float
									// CallExpr- stbtt_ScaleForMappingEmToPixels - float
										// UnexposedExpr- stbtt_ScaleForMappingEmToPixels - float (*)(const stbtt_fontinfo *, float)
											// DeclRefExpr- stbtt_ScaleForMappingEmToPixels - float (const stbtt_fontinfo *, float)
										// UnexposedExpr- info - const stbtt_fontinfo *
											// DeclRefExpr- info - const stbtt_fontinfo *
										// UnaryOperator-  - float [Unary Operator: Minus (-)]
											// UnexposedExpr- fh - float
												// DeclRefExpr- fh - float
						// DeclStmt-  - 
							// VarDecl- recip_h - float
							// VarDecl- recip_v - float
							// VarDecl- sub_x - float
							// VarDecl- sub_y - float
						// BinaryOperator-  - unsigned int [Binary Operator: Assign (=)]
							// MemberRefExpr- h_oversample - unsigned int
								// UnexposedExpr- spc - stbtt_pack_context *
									// DeclRefExpr- spc - stbtt_pack_context *
							// UnexposedExpr- h_oversample - unsigned int
								// UnexposedExpr- h_oversample - unsigned char
									// MemberRefExpr- h_oversample - unsigned char
										// ArraySubscriptExpr-  - stbtt_pack_range
											// UnexposedExpr- ranges - stbtt_pack_range *
												// DeclRefExpr- ranges - stbtt_pack_range *
											// UnexposedExpr- i - int
												// DeclRefExpr- i - int
						// BinaryOperator-  - unsigned int [Binary Operator: Assign (=)]
							// MemberRefExpr- v_oversample - unsigned int
								// UnexposedExpr- spc - stbtt_pack_context *
									// DeclRefExpr- spc - stbtt_pack_context *
							// UnexposedExpr- v_oversample - unsigned int
								// UnexposedExpr- v_oversample - unsigned char
									// MemberRefExpr- v_oversample - unsigned char
										// ArraySubscriptExpr-  - stbtt_pack_range
											// UnexposedExpr- ranges - stbtt_pack_range *
												// DeclRefExpr- ranges - stbtt_pack_range *
											// UnexposedExpr- i - int
												// DeclRefExpr- i - int
						// BinaryOperator-  - float [Binary Operator: Assign (=)]
							// DeclRefExpr- recip_h - float
							// BinaryOperator-  - float [Binary Operator: Div (/)]
								// FloatingLiteral-  - float [Literal: 1]
								// UnexposedExpr- h_oversample - float
									// UnexposedExpr- h_oversample - unsigned int
										// MemberRefExpr- h_oversample - unsigned int
											// UnexposedExpr- spc - stbtt_pack_context *
												// DeclRefExpr- spc - stbtt_pack_context *
						// BinaryOperator-  - float [Binary Operator: Assign (=)]
							// DeclRefExpr- recip_v - float
							// BinaryOperator-  - float [Binary Operator: Div (/)]
								// FloatingLiteral-  - float [Literal: 1]
								// UnexposedExpr- v_oversample - float
									// UnexposedExpr- v_oversample - unsigned int
										// MemberRefExpr- v_oversample - unsigned int
											// UnexposedExpr- spc - stbtt_pack_context *
												// DeclRefExpr- spc - stbtt_pack_context *
						// BinaryOperator-  - float [Binary Operator: Assign (=)]
							// DeclRefExpr- sub_x - float
							// CallExpr- stbtt__oversample_shift - float
								// UnexposedExpr- stbtt__oversample_shift - float (*)(int)
									// DeclRefExpr- stbtt__oversample_shift - float (int)
								// UnexposedExpr- h_oversample - int
									// UnexposedExpr- h_oversample - unsigned int
										// MemberRefExpr- h_oversample - unsigned int
											// UnexposedExpr- spc - stbtt_pack_context *
												// DeclRefExpr- spc - stbtt_pack_context *
						// BinaryOperator-  - float [Binary Operator: Assign (=)]
							// DeclRefExpr- sub_y - float
							// CallExpr- stbtt__oversample_shift - float
								// UnexposedExpr- stbtt__oversample_shift - float (*)(int)
									// DeclRefExpr- stbtt__oversample_shift - float (int)
								// UnexposedExpr- v_oversample - int
									// UnexposedExpr- v_oversample - unsigned int
										// MemberRefExpr- v_oversample - unsigned int
											// UnexposedExpr- spc - stbtt_pack_context *
												// DeclRefExpr- spc - stbtt_pack_context *
						// ForStmt-  - 
							// BinaryOperator-  - int [Binary Operator: Assign (=)]
								// DeclRefExpr- j - int
								// IntegerLiteral-  - int [Literal: 0]
							// BinaryOperator-  - int [Binary Operator: LT (<)]
								// UnexposedExpr- j - int
									// DeclRefExpr- j - int
								// UnexposedExpr- num_chars - int
									// MemberRefExpr- num_chars - int
										// ArraySubscriptExpr-  - stbtt_pack_range
											// UnexposedExpr- ranges - stbtt_pack_range *
												// DeclRefExpr- ranges - stbtt_pack_range *
											// UnexposedExpr- i - int
												// DeclRefExpr- i - int
							// UnaryOperator-  - int [Unary Operator: PreInc (++)]
								// DeclRefExpr- j - int
							// CompoundStmt-  - 
								// DeclStmt-  - 
									// VarDecl- r - stbrp_rect *
										// TypeRef- stbrp_rect - stbrp_rect
										// UnaryOperator-  - stbrp_rect * [Unary Operator: AddrOf (&)]
											// ArraySubscriptExpr-  - stbrp_rect
												// UnexposedExpr- rects - stbrp_rect *
													// DeclRefExpr- rects - stbrp_rect *
												// UnexposedExpr- k - int
													// DeclRefExpr- k - int
								// IfStmt-  - 
									// UnexposedExpr- was_packed - int
										// MemberRefExpr- was_packed - int
											// UnexposedExpr- r - stbrp_rect *
												// DeclRefExpr- r - stbrp_rect *
									// CompoundStmt-  - 
										// DeclStmt-  - 
											// VarDecl- bc - stbtt_packedchar *
												// TypeRef- stbtt_packedchar - stbtt_packedchar
												// UnaryOperator-  - stbtt_packedchar * [Unary Operator: AddrOf (&)]
													// ArraySubscriptExpr-  - stbtt_packedchar
														// UnexposedExpr- chardata_for_range - stbtt_packedchar *
															// MemberRefExpr- chardata_for_range - stbtt_packedchar *
																// ArraySubscriptExpr-  - stbtt_pack_range
																	// UnexposedExpr- ranges - stbtt_pack_range *
																		// DeclRefExpr- ranges - stbtt_pack_range *
																	// UnexposedExpr- i - int
																		// DeclRefExpr- i - int
														// UnexposedExpr- j - int
															// DeclRefExpr- j - int
										// DeclStmt-  - 
											// VarDecl- advance - int
											// VarDecl- lsb - int
											// VarDecl- x0 - int
											// VarDecl- y0 - int
											// VarDecl- x1 - int
											// VarDecl- y1 - int
										// DeclStmt-  - 
											// VarDecl- codepoint - int
												// ConditionalOperator-  - int
													// BinaryOperator-  - int [Binary Operator: EQ (==)]
														// UnexposedExpr- array_of_unicode_codepoints - int *
															// MemberRefExpr- array_of_unicode_codepoints - int *
																// ArraySubscriptExpr-  - stbtt_pack_range
																	// UnexposedExpr- ranges - stbtt_pack_range *
																		// DeclRefExpr- ranges - stbtt_pack_range *
																	// UnexposedExpr- i - int
																		// DeclRefExpr- i - int
														// UnexposedExpr-  - int *
															// ParenExpr-  - void *
																// CStyleCastExpr-  - void *
																	// IntegerLiteral-  - int [Literal: 0]
													// BinaryOperator-  - int [Binary Operator: Add (+)]
														// UnexposedExpr- first_unicode_codepoint_in_range - int
															// MemberRefExpr- first_unicode_codepoint_in_range - int
																// ArraySubscriptExpr-  - stbtt_pack_range
																	// UnexposedExpr- ranges - stbtt_pack_range *
																		// DeclRefExpr- ranges - stbtt_pack_range *
																	// UnexposedExpr- i - int
																		// DeclRefExpr- i - int
														// UnexposedExpr- j - int
															// DeclRefExpr- j - int
													// UnexposedExpr-  - int
														// ArraySubscriptExpr-  - int
															// UnexposedExpr- array_of_unicode_codepoints - int *
																// MemberRefExpr- array_of_unicode_codepoints - int *
																	// ArraySubscriptExpr-  - stbtt_pack_range
																		// UnexposedExpr- ranges - stbtt_pack_range *
																			// DeclRefExpr- ranges - stbtt_pack_range *
																		// UnexposedExpr- i - int
																			// DeclRefExpr- i - int
															// UnexposedExpr- j - int
																// DeclRefExpr- j - int
										// DeclStmt-  - 
											// VarDecl- glyph - int
												// CallExpr- stbtt_FindGlyphIndex - int
													// UnexposedExpr- stbtt_FindGlyphIndex - int (*)(const stbtt_fontinfo *, int)
														// DeclRefExpr- stbtt_FindGlyphIndex - int (const stbtt_fontinfo *, int)
													// UnexposedExpr- info - const stbtt_fontinfo *
														// DeclRefExpr- info - const stbtt_fontinfo *
													// UnexposedExpr- codepoint - int
														// DeclRefExpr- codepoint - int
										// DeclStmt-  - 
											// VarDecl- pad - stbrp_coord
												// TypeRef- stbrp_coord - stbrp_coord
												// CStyleCastExpr-  - stbrp_coord
													// TypeRef- stbrp_coord - stbrp_coord
													// UnexposedExpr- padding - int
														// MemberRefExpr- padding - int
															// UnexposedExpr- spc - stbtt_pack_context *
																// DeclRefExpr- spc - stbtt_pack_context *
										// CompoundAssignOperator-  - stbrp_coord
											// MemberRefExpr- x - stbrp_coord
												// UnexposedExpr- r - stbrp_rect *
													// DeclRefExpr- r - stbrp_rect *
											// UnexposedExpr- pad - stbrp_coord
												// DeclRefExpr- pad - stbrp_coord
										// CompoundAssignOperator-  - stbrp_coord
											// MemberRefExpr- y - stbrp_coord
												// UnexposedExpr- r - stbrp_rect *
													// DeclRefExpr- r - stbrp_rect *
											// UnexposedExpr- pad - stbrp_coord
												// DeclRefExpr- pad - stbrp_coord
										// CompoundAssignOperator-  - int
											// MemberRefExpr- w - int
												// UnexposedExpr- r - stbrp_rect *
													// DeclRefExpr- r - stbrp_rect *
											// UnexposedExpr- pad - stbrp_coord
												// DeclRefExpr- pad - stbrp_coord
										// CompoundAssignOperator-  - int
											// MemberRefExpr- h - int
												// UnexposedExpr- r - stbrp_rect *
													// DeclRefExpr- r - stbrp_rect *
											// UnexposedExpr- pad - stbrp_coord
												// DeclRefExpr- pad - stbrp_coord
										// CallExpr- stbtt_GetGlyphHMetrics - void
											// UnexposedExpr- stbtt_GetGlyphHMetrics - void (*)(const stbtt_fontinfo *, int, int *, int *)
												// DeclRefExpr- stbtt_GetGlyphHMetrics - void (const stbtt_fontinfo *, int, int *, int *)
											// UnexposedExpr- info - const stbtt_fontinfo *
												// DeclRefExpr- info - const stbtt_fontinfo *
											// UnexposedExpr- glyph - int
												// DeclRefExpr- glyph - int
											// UnaryOperator-  - int * [Unary Operator: AddrOf (&)]
												// DeclRefExpr- advance - int
											// UnaryOperator-  - int * [Unary Operator: AddrOf (&)]
												// DeclRefExpr- lsb - int
										// CallExpr- stbtt_GetGlyphBitmapBox - void
											// UnexposedExpr- stbtt_GetGlyphBitmapBox - void (*)(const stbtt_fontinfo *, int, float, float, int *, int *, int *, int *)
												// DeclRefExpr- stbtt_GetGlyphBitmapBox - void (const stbtt_fontinfo *, int, float, float, int *, int *, int *, int *)
											// UnexposedExpr- info - const stbtt_fontinfo *
												// DeclRefExpr- info - const stbtt_fontinfo *
											// UnexposedExpr- glyph - int
												// DeclRefExpr- glyph - int
											// BinaryOperator-  - float [Binary Operator: Mul (*)]
												// UnexposedExpr- scale - float
													// DeclRefExpr- scale - float
												// UnexposedExpr- h_oversample - float
													// UnexposedExpr- h_oversample - unsigned int
														// MemberRefExpr- h_oversample - unsigned int
															// UnexposedExpr- spc - stbtt_pack_context *
																// DeclRefExpr- spc - stbtt_pack_context *
											// BinaryOperator-  - float [Binary Operator: Mul (*)]
												// UnexposedExpr- scale - float
													// DeclRefExpr- scale - float
												// UnexposedExpr- v_oversample - float
													// UnexposedExpr- v_oversample - unsigned int
														// MemberRefExpr- v_oversample - unsigned int
															// UnexposedExpr- spc - stbtt_pack_context *
																// DeclRefExpr- spc - stbtt_pack_context *
											// UnaryOperator-  - int * [Unary Operator: AddrOf (&)]
												// DeclRefExpr- x0 - int
											// UnaryOperator-  - int * [Unary Operator: AddrOf (&)]
												// DeclRefExpr- y0 - int
											// UnaryOperator-  - int * [Unary Operator: AddrOf (&)]
												// DeclRefExpr- x1 - int
											// UnaryOperator-  - int * [Unary Operator: AddrOf (&)]
												// DeclRefExpr- y1 - int
										// CallExpr- stbtt_MakeGlyphBitmapSubpixel - void
											// UnexposedExpr- stbtt_MakeGlyphBitmapSubpixel - void (*)(const stbtt_fontinfo *, unsigned char *, int, int, int, float, float, float, float, int)
												// DeclRefExpr- stbtt_MakeGlyphBitmapSubpixel - void (const stbtt_fontinfo *, unsigned char *, int, int, int, float, float, float, float, int)
											// UnexposedExpr- info - const stbtt_fontinfo *
												// DeclRefExpr- info - const stbtt_fontinfo *
											// BinaryOperator-  - unsigned char * [Binary Operator: Add (+)]
												// BinaryOperator-  - unsigned char * [Binary Operator: Add (+)]
													// UnexposedExpr- pixels - unsigned char *
														// MemberRefExpr- pixels - unsigned char *
															// UnexposedExpr- spc - stbtt_pack_context *
																// DeclRefExpr- spc - stbtt_pack_context *
													// UnexposedExpr- x - stbrp_coord
														// MemberRefExpr- x - stbrp_coord
															// UnexposedExpr- r - stbrp_rect *
																// DeclRefExpr- r - stbrp_rect *
												// BinaryOperator-  - int [Binary Operator: Mul (*)]
													// UnexposedExpr- y - stbrp_coord
														// MemberRefExpr- y - stbrp_coord
															// UnexposedExpr- r - stbrp_rect *
																// DeclRefExpr- r - stbrp_rect *
													// UnexposedExpr- stride_in_bytes - int
														// MemberRefExpr- stride_in_bytes - int
															// UnexposedExpr- spc - stbtt_pack_context *
																// DeclRefExpr- spc - stbtt_pack_context *
											// UnexposedExpr-  - int
												// BinaryOperator-  - unsigned int [Binary Operator: Add (+)]
													// BinaryOperator-  - unsigned int [Binary Operator: Sub (-)]
														// UnexposedExpr- w - unsigned int
															// UnexposedExpr- w - int
																// MemberRefExpr- w - int
																	// UnexposedExpr- r - stbrp_rect *
																		// DeclRefExpr- r - stbrp_rect *
														// UnexposedExpr- h_oversample - unsigned int
															// MemberRefExpr- h_oversample - unsigned int
																// UnexposedExpr- spc - stbtt_pack_context *
																	// DeclRefExpr- spc - stbtt_pack_context *
													// UnexposedExpr-  - unsigned int
														// IntegerLiteral-  - int [Literal: 1]
											// UnexposedExpr-  - int
												// BinaryOperator-  - unsigned int [Binary Operator: Add (+)]
													// BinaryOperator-  - unsigned int [Binary Operator: Sub (-)]
														// UnexposedExpr- h - unsigned int
															// UnexposedExpr- h - int
																// MemberRefExpr- h - int
																	// UnexposedExpr- r - stbrp_rect *
																		// DeclRefExpr- r - stbrp_rect *
														// UnexposedExpr- v_oversample - unsigned int
															// MemberRefExpr- v_oversample - unsigned int
																// UnexposedExpr- spc - stbtt_pack_context *
																	// DeclRefExpr- spc - stbtt_pack_context *
													// UnexposedExpr-  - unsigned int
														// IntegerLiteral-  - int [Literal: 1]
											// UnexposedExpr- stride_in_bytes - int
												// MemberRefExpr- stride_in_bytes - int
													// UnexposedExpr- spc - stbtt_pack_context *
														// DeclRefExpr- spc - stbtt_pack_context *
											// BinaryOperator-  - float [Binary Operator: Mul (*)]
												// UnexposedExpr- scale - float
													// DeclRefExpr- scale - float
												// UnexposedExpr- h_oversample - float
													// UnexposedExpr- h_oversample - unsigned int
														// MemberRefExpr- h_oversample - unsigned int
															// UnexposedExpr- spc - stbtt_pack_context *
																// DeclRefExpr- spc - stbtt_pack_context *
											// BinaryOperator-  - float [Binary Operator: Mul (*)]
												// UnexposedExpr- scale - float
													// DeclRefExpr- scale - float
												// UnexposedExpr- v_oversample - float
													// UnexposedExpr- v_oversample - unsigned int
														// MemberRefExpr- v_oversample - unsigned int
															// UnexposedExpr- spc - stbtt_pack_context *
																// DeclRefExpr- spc - stbtt_pack_context *
											// UnexposedExpr-  - float
												// IntegerLiteral-  - int [Literal: 0]
											// UnexposedExpr-  - float
												// IntegerLiteral-  - int [Literal: 0]
											// UnexposedExpr- glyph - int
												// DeclRefExpr- glyph - int
										// IfStmt-  - 
											// BinaryOperator-  - int [Binary Operator: GT (>)]
												// UnexposedExpr- h_oversample - unsigned int
													// MemberRefExpr- h_oversample - unsigned int
														// UnexposedExpr- spc - stbtt_pack_context *
															// DeclRefExpr- spc - stbtt_pack_context *
												// UnexposedExpr-  - unsigned int
													// IntegerLiteral-  - int [Literal: 1]
											// CallExpr- stbtt__h_prefilter - void
												// UnexposedExpr- stbtt__h_prefilter - void (*)(unsigned char *, int, int, int, unsigned int)
													// DeclRefExpr- stbtt__h_prefilter - void (unsigned char *, int, int, int, unsigned int)
												// BinaryOperator-  - unsigned char * [Binary Operator: Add (+)]
													// BinaryOperator-  - unsigned char * [Binary Operator: Add (+)]
														// UnexposedExpr- pixels - unsigned char *
															// MemberRefExpr- pixels - unsigned char *
																// UnexposedExpr- spc - stbtt_pack_context *
																	// DeclRefExpr- spc - stbtt_pack_context *
														// UnexposedExpr- x - stbrp_coord
															// MemberRefExpr- x - stbrp_coord
																// UnexposedExpr- r - stbrp_rect *
																	// DeclRefExpr- r - stbrp_rect *
													// BinaryOperator-  - int [Binary Operator: Mul (*)]
														// UnexposedExpr- y - stbrp_coord
															// MemberRefExpr- y - stbrp_coord
																// UnexposedExpr- r - stbrp_rect *
																	// DeclRefExpr- r - stbrp_rect *
														// UnexposedExpr- stride_in_bytes - int
															// MemberRefExpr- stride_in_bytes - int
																// UnexposedExpr- spc - stbtt_pack_context *
																	// DeclRefExpr- spc - stbtt_pack_context *
												// UnexposedExpr- w - int
													// MemberRefExpr- w - int
														// UnexposedExpr- r - stbrp_rect *
															// DeclRefExpr- r - stbrp_rect *
												// UnexposedExpr- h - int
													// MemberRefExpr- h - int
														// UnexposedExpr- r - stbrp_rect *
															// DeclRefExpr- r - stbrp_rect *
												// UnexposedExpr- stride_in_bytes - int
													// MemberRefExpr- stride_in_bytes - int
														// UnexposedExpr- spc - stbtt_pack_context *
															// DeclRefExpr- spc - stbtt_pack_context *
												// UnexposedExpr- h_oversample - unsigned int
													// MemberRefExpr- h_oversample - unsigned int
														// UnexposedExpr- spc - stbtt_pack_context *
															// DeclRefExpr- spc - stbtt_pack_context *
										// IfStmt-  - 
											// BinaryOperator-  - int [Binary Operator: GT (>)]
												// UnexposedExpr- v_oversample - unsigned int
													// MemberRefExpr- v_oversample - unsigned int
														// UnexposedExpr- spc - stbtt_pack_context *
															// DeclRefExpr- spc - stbtt_pack_context *
												// UnexposedExpr-  - unsigned int
													// IntegerLiteral-  - int [Literal: 1]
											// CallExpr- stbtt__v_prefilter - void
												// UnexposedExpr- stbtt__v_prefilter - void (*)(unsigned char *, int, int, int, unsigned int)
													// DeclRefExpr- stbtt__v_prefilter - void (unsigned char *, int, int, int, unsigned int)
												// BinaryOperator-  - unsigned char * [Binary Operator: Add (+)]
													// BinaryOperator-  - unsigned char * [Binary Operator: Add (+)]
														// UnexposedExpr- pixels - unsigned char *
															// MemberRefExpr- pixels - unsigned char *
																// UnexposedExpr- spc - stbtt_pack_context *
																	// DeclRefExpr- spc - stbtt_pack_context *
														// UnexposedExpr- x - stbrp_coord
															// MemberRefExpr- x - stbrp_coord
																// UnexposedExpr- r - stbrp_rect *
																	// DeclRefExpr- r - stbrp_rect *
													// BinaryOperator-  - int [Binary Operator: Mul (*)]
														// UnexposedExpr- y - stbrp_coord
															// MemberRefExpr- y - stbrp_coord
																// UnexposedExpr- r - stbrp_rect *
																	// DeclRefExpr- r - stbrp_rect *
														// UnexposedExpr- stride_in_bytes - int
															// MemberRefExpr- stride_in_bytes - int
																// UnexposedExpr- spc - stbtt_pack_context *
																	// DeclRefExpr- spc - stbtt_pack_context *
												// UnexposedExpr- w - int
													// MemberRefExpr- w - int
														// UnexposedExpr- r - stbrp_rect *
															// DeclRefExpr- r - stbrp_rect *
												// UnexposedExpr- h - int
													// MemberRefExpr- h - int
														// UnexposedExpr- r - stbrp_rect *
															// DeclRefExpr- r - stbrp_rect *
												// UnexposedExpr- stride_in_bytes - int
													// MemberRefExpr- stride_in_bytes - int
														// UnexposedExpr- spc - stbtt_pack_context *
															// DeclRefExpr- spc - stbtt_pack_context *
												// UnexposedExpr- v_oversample - unsigned int
													// MemberRefExpr- v_oversample - unsigned int
														// UnexposedExpr- spc - stbtt_pack_context *
															// DeclRefExpr- spc - stbtt_pack_context *
										// BinaryOperator-  - unsigned short [Binary Operator: Assign (=)]
											// MemberRefExpr- x0 - unsigned short
												// UnexposedExpr- bc - stbtt_packedchar *
													// DeclRefExpr- bc - stbtt_packedchar *
											// UnexposedExpr-  - unsigned short
												// CStyleCastExpr-  - stbtt_int16
													// TypeRef- stbtt_int16 - stbtt_int16
													// UnexposedExpr- x - stbrp_coord
														// MemberRefExpr- x - stbrp_coord
															// UnexposedExpr- r - stbrp_rect *
																// DeclRefExpr- r - stbrp_rect *
										// BinaryOperator-  - unsigned short [Binary Operator: Assign (=)]
											// MemberRefExpr- y0 - unsigned short
												// UnexposedExpr- bc - stbtt_packedchar *
													// DeclRefExpr- bc - stbtt_packedchar *
											// UnexposedExpr-  - unsigned short
												// CStyleCastExpr-  - stbtt_int16
													// TypeRef- stbtt_int16 - stbtt_int16
													// UnexposedExpr- y - stbrp_coord
														// MemberRefExpr- y - stbrp_coord
															// UnexposedExpr- r - stbrp_rect *
																// DeclRefExpr- r - stbrp_rect *
										// BinaryOperator-  - unsigned short [Binary Operator: Assign (=)]
											// MemberRefExpr- x1 - unsigned short
												// UnexposedExpr- bc - stbtt_packedchar *
													// DeclRefExpr- bc - stbtt_packedchar *
											// UnexposedExpr-  - unsigned short
												// CStyleCastExpr-  - stbtt_int16
													// TypeRef- stbtt_int16 - stbtt_int16
													// ParenExpr-  - int
														// BinaryOperator-  - int [Binary Operator: Add (+)]
															// UnexposedExpr- x - stbrp_coord
																// MemberRefExpr- x - stbrp_coord
																	// UnexposedExpr- r - stbrp_rect *
																		// DeclRefExpr- r - stbrp_rect *
															// UnexposedExpr- w - int
																// MemberRefExpr- w - int
																	// UnexposedExpr- r - stbrp_rect *
																		// DeclRefExpr- r - stbrp_rect *
										// BinaryOperator-  - unsigned short [Binary Operator: Assign (=)]
											// MemberRefExpr- y1 - unsigned short
												// UnexposedExpr- bc - stbtt_packedchar *
													// DeclRefExpr- bc - stbtt_packedchar *
											// UnexposedExpr-  - unsigned short
												// CStyleCastExpr-  - stbtt_int16
													// TypeRef- stbtt_int16 - stbtt_int16
													// ParenExpr-  - int
														// BinaryOperator-  - int [Binary Operator: Add (+)]
															// UnexposedExpr- y - stbrp_coord
																// MemberRefExpr- y - stbrp_coord
																	// UnexposedExpr- r - stbrp_rect *
																		// DeclRefExpr- r - stbrp_rect *
															// UnexposedExpr- h - int
																// MemberRefExpr- h - int
																	// UnexposedExpr- r - stbrp_rect *
																		// DeclRefExpr- r - stbrp_rect *
										// BinaryOperator-  - float [Binary Operator: Assign (=)]
											// MemberRefExpr- xadvance - float
												// UnexposedExpr- bc - stbtt_packedchar *
													// DeclRefExpr- bc - stbtt_packedchar *
											// BinaryOperator-  - float [Binary Operator: Mul (*)]
												// UnexposedExpr- scale - float
													// DeclRefExpr- scale - float
												// UnexposedExpr- advance - float
													// UnexposedExpr- advance - int
														// DeclRefExpr- advance - int
										// BinaryOperator-  - float [Binary Operator: Assign (=)]
											// MemberRefExpr- xoff - float
												// UnexposedExpr- bc - stbtt_packedchar *
													// DeclRefExpr- bc - stbtt_packedchar *
											// BinaryOperator-  - float [Binary Operator: Add (+)]
												// BinaryOperator-  - float [Binary Operator: Mul (*)]
													// CStyleCastExpr-  - float
														// UnexposedExpr- x0 - int
															// DeclRefExpr- x0 - int
													// UnexposedExpr- recip_h - float
														// DeclRefExpr- recip_h - float
												// UnexposedExpr- sub_x - float
													// DeclRefExpr- sub_x - float
										// BinaryOperator-  - float [Binary Operator: Assign (=)]
											// MemberRefExpr- yoff - float
												// UnexposedExpr- bc - stbtt_packedchar *
													// DeclRefExpr- bc - stbtt_packedchar *
											// BinaryOperator-  - float [Binary Operator: Add (+)]
												// BinaryOperator-  - float [Binary Operator: Mul (*)]
													// CStyleCastExpr-  - float
														// UnexposedExpr- y0 - int
															// DeclRefExpr- y0 - int
													// UnexposedExpr- recip_v - float
														// DeclRefExpr- recip_v - float
												// UnexposedExpr- sub_y - float
													// DeclRefExpr- sub_y - float
										// BinaryOperator-  - float [Binary Operator: Assign (=)]
											// MemberRefExpr- xoff2 - float
												// UnexposedExpr- bc - stbtt_packedchar *
													// DeclRefExpr- bc - stbtt_packedchar *
											// BinaryOperator-  - float [Binary Operator: Add (+)]
												// BinaryOperator-  - float [Binary Operator: Mul (*)]
													// UnexposedExpr-  - float
														// ParenExpr-  - int
															// BinaryOperator-  - int [Binary Operator: Add (+)]
																// UnexposedExpr- x0 - int
																	// DeclRefExpr- x0 - int
																// UnexposedExpr- w - int
																	// MemberRefExpr- w - int
																		// UnexposedExpr- r - stbrp_rect *
																			// DeclRefExpr- r - stbrp_rect *
													// UnexposedExpr- recip_h - float
														// DeclRefExpr- recip_h - float
												// UnexposedExpr- sub_x - float
													// DeclRefExpr- sub_x - float
										// BinaryOperator-  - float [Binary Operator: Assign (=)]
											// MemberRefExpr- yoff2 - float
												// UnexposedExpr- bc - stbtt_packedchar *
													// DeclRefExpr- bc - stbtt_packedchar *
											// BinaryOperator-  - float [Binary Operator: Add (+)]
												// BinaryOperator-  - float [Binary Operator: Mul (*)]
													// UnexposedExpr-  - float
														// ParenExpr-  - int
															// BinaryOperator-  - int [Binary Operator: Add (+)]
																// UnexposedExpr- y0 - int
																	// DeclRefExpr- y0 - int
																// UnexposedExpr- h - int
																	// MemberRefExpr- h - int
																		// UnexposedExpr- r - stbrp_rect *
																			// DeclRefExpr- r - stbrp_rect *
													// UnexposedExpr- recip_v - float
														// DeclRefExpr- recip_v - float
												// UnexposedExpr- sub_y - float
													// DeclRefExpr- sub_y - float
									// CompoundStmt-  - 
										// BinaryOperator-  - int [Binary Operator: Assign (=)]
											// DeclRefExpr- return_value - int
											// IntegerLiteral-  - int [Literal: 0]
								// UnaryOperator-  - int [Unary Operator: PreInc (++)]
									// DeclRefExpr- k - int
				// BinaryOperator-  - unsigned int [Binary Operator: Assign (=)]
					// MemberRefExpr- h_oversample - unsigned int
						// UnexposedExpr- spc - stbtt_pack_context *
							// DeclRefExpr- spc - stbtt_pack_context *
					// UnexposedExpr- old_h_over - unsigned int
						// UnexposedExpr- old_h_over - int
							// DeclRefExpr- old_h_over - int
				// BinaryOperator-  - unsigned int [Binary Operator: Assign (=)]
					// MemberRefExpr- v_oversample - unsigned int
						// UnexposedExpr- spc - stbtt_pack_context *
							// DeclRefExpr- spc - stbtt_pack_context *
					// UnexposedExpr- old_v_over - unsigned int
						// UnexposedExpr- old_v_over - int
							// DeclRefExpr- old_v_over - int
				// ReturnStmt-  - 
					// UnexposedExpr- return_value - int
						// DeclRefExpr- return_value - int
		// FunctionDecl- stbtt_PackFontRangesPackRects - void (stbtt_pack_context *, stbrp_rect *, int)
			// ParmDecl- spc - stbtt_pack_context *
				// TypeRef- stbtt_pack_context - stbtt_pack_context
			// ParmDecl- rects - stbrp_rect *
				// TypeRef- stbrp_rect - stbrp_rect
			// ParmDecl- num_rects - int
			// CompoundStmt-  - 
				// CallExpr- stbrp_pack_rects - void
					// UnexposedExpr- stbrp_pack_rects - void (*)(stbrp_context *, stbrp_rect *, int)
						// DeclRefExpr- stbrp_pack_rects - void (stbrp_context *, stbrp_rect *, int)
					// CStyleCastExpr-  - stbrp_context *
						// TypeRef- stbrp_context - stbrp_context
						// UnexposedExpr- pack_info - void *
							// MemberRefExpr- pack_info - void *
								// UnexposedExpr- spc - stbtt_pack_context *
									// DeclRefExpr- spc - stbtt_pack_context *
					// UnexposedExpr- rects - stbrp_rect *
						// DeclRefExpr- rects - stbrp_rect *
					// UnexposedExpr- num_rects - int
						// DeclRefExpr- num_rects - int
		// FunctionDecl- stbtt_PackFontRanges - int (stbtt_pack_context *, const unsigned char *, int, stbtt_pack_range *, int)
			// ParmDecl- spc - stbtt_pack_context *
				// TypeRef- stbtt_pack_context - stbtt_pack_context
			// ParmDecl- fontdata - const unsigned char *
			// ParmDecl- font_index - int
			// ParmDecl- ranges - stbtt_pack_range *
				// TypeRef- stbtt_pack_range - stbtt_pack_range
			// ParmDecl- num_ranges - int
			// CompoundStmt-  - 
				// DeclStmt-  - 
					// VarDecl- info - stbtt_fontinfo
						// TypeRef- stbtt_fontinfo - stbtt_fontinfo
				// DeclStmt-  - 
					// VarDecl- i - int
					// VarDecl- j - int
					// VarDecl- n - int
					// VarDecl- return_value - int
						// IntegerLiteral-  - int [Literal: 1]
				// DeclStmt-  - 
					// VarDecl- rects - stbrp_rect *
						// TypeRef- stbrp_rect - stbrp_rect
				// ForStmt-  - 
					// BinaryOperator-  - int [Binary Operator: Assign (=)]
						// DeclRefExpr- i - int
						// IntegerLiteral-  - int [Literal: 0]
					// BinaryOperator-  - int [Binary Operator: LT (<)]
						// UnexposedExpr- i - int
							// DeclRefExpr- i - int
						// UnexposedExpr- num_ranges - int
							// DeclRefExpr- num_ranges - int
					// UnaryOperator-  - int [Unary Operator: PreInc (++)]
						// DeclRefExpr- i - int
					// ForStmt-  - 
						// BinaryOperator-  - int [Binary Operator: Assign (=)]
							// DeclRefExpr- j - int
							// IntegerLiteral-  - int [Literal: 0]
						// BinaryOperator-  - int [Binary Operator: LT (<)]
							// UnexposedExpr- j - int
								// DeclRefExpr- j - int
							// UnexposedExpr- num_chars - int
								// MemberRefExpr- num_chars - int
									// ArraySubscriptExpr-  - stbtt_pack_range
										// UnexposedExpr- ranges - stbtt_pack_range *
											// DeclRefExpr- ranges - stbtt_pack_range *
										// UnexposedExpr- i - int
											// DeclRefExpr- i - int
						// UnaryOperator-  - int [Unary Operator: PreInc (++)]
							// DeclRefExpr- j - int
						// BinaryOperator-  - unsigned short [Binary Operator: Assign (=)]
							// MemberRefExpr- x0 - unsigned short
								// ArraySubscriptExpr-  - stbtt_packedchar
									// UnexposedExpr- chardata_for_range - stbtt_packedchar *
										// MemberRefExpr- chardata_for_range - stbtt_packedchar *
											// ArraySubscriptExpr-  - stbtt_pack_range
												// UnexposedExpr- ranges - stbtt_pack_range *
													// DeclRefExpr- ranges - stbtt_pack_range *
												// UnexposedExpr- i - int
													// DeclRefExpr- i - int
									// UnexposedExpr- j - int
										// DeclRefExpr- j - int
							// BinaryOperator-  - unsigned short [Binary Operator: Assign (=)]
								// MemberRefExpr- y0 - unsigned short
									// ArraySubscriptExpr-  - stbtt_packedchar
										// UnexposedExpr- chardata_for_range - stbtt_packedchar *
											// MemberRefExpr- chardata_for_range - stbtt_packedchar *
												// ArraySubscriptExpr-  - stbtt_pack_range
													// UnexposedExpr- ranges - stbtt_pack_range *
														// DeclRefExpr- ranges - stbtt_pack_range *
													// UnexposedExpr- i - int
														// DeclRefExpr- i - int
										// UnexposedExpr- j - int
											// DeclRefExpr- j - int
								// BinaryOperator-  - unsigned short [Binary Operator: Assign (=)]
									// MemberRefExpr- x1 - unsigned short
										// ArraySubscriptExpr-  - stbtt_packedchar
											// UnexposedExpr- chardata_for_range - stbtt_packedchar *
												// MemberRefExpr- chardata_for_range - stbtt_packedchar *
													// ArraySubscriptExpr-  - stbtt_pack_range
														// UnexposedExpr- ranges - stbtt_pack_range *
															// DeclRefExpr- ranges - stbtt_pack_range *
														// UnexposedExpr- i - int
															// DeclRefExpr- i - int
											// UnexposedExpr- j - int
												// DeclRefExpr- j - int
									// BinaryOperator-  - unsigned short [Binary Operator: Assign (=)]
										// MemberRefExpr- y1 - unsigned short
											// ArraySubscriptExpr-  - stbtt_packedchar
												// UnexposedExpr- chardata_for_range - stbtt_packedchar *
													// MemberRefExpr- chardata_for_range - stbtt_packedchar *
														// ArraySubscriptExpr-  - stbtt_pack_range
															// UnexposedExpr- ranges - stbtt_pack_range *
																// DeclRefExpr- ranges - stbtt_pack_range *
															// UnexposedExpr- i - int
																// DeclRefExpr- i - int
												// UnexposedExpr- j - int
													// DeclRefExpr- j - int
										// UnexposedExpr-  - unsigned short
											// IntegerLiteral-  - int [Literal: 0]
				// BinaryOperator-  - int [Binary Operator: Assign (=)]
					// DeclRefExpr- n - int
					// IntegerLiteral-  - int [Literal: 0]
				// ForStmt-  - 
					// BinaryOperator-  - int [Binary Operator: Assign (=)]
						// DeclRefExpr- i - int
						// IntegerLiteral-  - int [Literal: 0]
					// BinaryOperator-  - int [Binary Operator: LT (<)]
						// UnexposedExpr- i - int
							// DeclRefExpr- i - int
						// UnexposedExpr- num_ranges - int
							// DeclRefExpr- num_ranges - int
					// UnaryOperator-  - int [Unary Operator: PreInc (++)]
						// DeclRefExpr- i - int
					// CompoundAssignOperator-  - int
						// DeclRefExpr- n - int
						// UnexposedExpr- num_chars - int
							// MemberRefExpr- num_chars - int
								// ArraySubscriptExpr-  - stbtt_pack_range
									// UnexposedExpr- ranges - stbtt_pack_range *
										// DeclRefExpr- ranges - stbtt_pack_range *
									// UnexposedExpr- i - int
										// DeclRefExpr- i - int
				// BinaryOperator-  - stbrp_rect * [Binary Operator: Assign (=)]
					// DeclRefExpr- rects - stbrp_rect *
					// CStyleCastExpr-  - stbrp_rect *
						// TypeRef- stbrp_rect - stbrp_rect
						// CallExpr- malloc - void *
							// UnexposedExpr- malloc - void *(*)(unsigned long long)
								// DeclRefExpr- malloc - void *(unsigned long long)
							// BinaryOperator-  - unsigned long long [Binary Operator: Mul (*)]
								// UnaryExpr-  - unsigned long long [Unary Operator: 99999 ()]
									// ParenExpr-  - stbrp_rect
										// UnaryOperator-  - stbrp_rect [Unary Operator: Deref (*)]
											// UnexposedExpr- rects - stbrp_rect *
												// DeclRefExpr- rects - stbrp_rect *
								// UnexposedExpr- n - unsigned long long
									// UnexposedExpr- n - int
										// DeclRefExpr- n - int
				// IfStmt-  - 
					// BinaryOperator-  - int [Binary Operator: EQ (==)]
						// UnexposedExpr- rects - stbrp_rect *
							// DeclRefExpr- rects - stbrp_rect *
						// UnexposedExpr-  - stbrp_rect *
							// ParenExpr-  - void *
								// CStyleCastExpr-  - void *
									// IntegerLiteral-  - int [Literal: 0]
					// ReturnStmt-  - 
						// IntegerLiteral-  - int [Literal: 0]
				// BinaryOperator-  - void * [Binary Operator: Assign (=)]
					// MemberRefExpr- userdata - void *
						// DeclRefExpr- info - stbtt_fontinfo
					// UnexposedExpr- user_allocator_context - void *
						// MemberRefExpr- user_allocator_context - void *
							// UnexposedExpr- spc - stbtt_pack_context *
								// DeclRefExpr- spc - stbtt_pack_context *
				// CallExpr- stbtt_InitFont - int
					// UnexposedExpr- stbtt_InitFont - int (*)(stbtt_fontinfo *, const unsigned char *, int)
						// DeclRefExpr- stbtt_InitFont - int (stbtt_fontinfo *, const unsigned char *, int)
					// UnaryOperator-  - stbtt_fontinfo * [Unary Operator: AddrOf (&)]
						// DeclRefExpr- info - stbtt_fontinfo
					// UnexposedExpr- fontdata - const unsigned char *
						// DeclRefExpr- fontdata - const unsigned char *
					// CallExpr- stbtt_GetFontOffsetForIndex - int
						// UnexposedExpr- stbtt_GetFontOffsetForIndex - int (*)(const unsigned char *, int)
							// DeclRefExpr- stbtt_GetFontOffsetForIndex - int (const unsigned char *, int)
						// UnexposedExpr- fontdata - const unsigned char *
							// DeclRefExpr- fontdata - const unsigned char *
						// UnexposedExpr- font_index - int
							// DeclRefExpr- font_index - int
				// BinaryOperator-  - int [Binary Operator: Assign (=)]
					// DeclRefExpr- n - int
					// CallExpr- stbtt_PackFontRangesGatherRects - int
						// UnexposedExpr- stbtt_PackFontRangesGatherRects - int (*)(stbtt_pack_context *, const stbtt_fontinfo *, stbtt_pack_range *, int, stbrp_rect *)
							// DeclRefExpr- stbtt_PackFontRangesGatherRects - int (stbtt_pack_context *, const stbtt_fontinfo *, stbtt_pack_range *, int, stbrp_rect *)
						// UnexposedExpr- spc - stbtt_pack_context *
							// DeclRefExpr- spc - stbtt_pack_context *
						// UnexposedExpr-  - const stbtt_fontinfo *
							// UnaryOperator-  - stbtt_fontinfo * [Unary Operator: AddrOf (&)]
								// DeclRefExpr- info - stbtt_fontinfo
						// UnexposedExpr- ranges - stbtt_pack_range *
							// DeclRefExpr- ranges - stbtt_pack_range *
						// UnexposedExpr- num_ranges - int
							// DeclRefExpr- num_ranges - int
						// UnexposedExpr- rects - stbrp_rect *
							// DeclRefExpr- rects - stbrp_rect *
				// CallExpr- stbtt_PackFontRangesPackRects - void
					// UnexposedExpr- stbtt_PackFontRangesPackRects - void (*)(stbtt_pack_context *, stbrp_rect *, int)
						// DeclRefExpr- stbtt_PackFontRangesPackRects - void (stbtt_pack_context *, stbrp_rect *, int)
					// UnexposedExpr- spc - stbtt_pack_context *
						// DeclRefExpr- spc - stbtt_pack_context *
					// UnexposedExpr- rects - stbrp_rect *
						// DeclRefExpr- rects - stbrp_rect *
					// UnexposedExpr- n - int
						// DeclRefExpr- n - int
				// BinaryOperator-  - int [Binary Operator: Assign (=)]
					// DeclRefExpr- return_value - int
					// CallExpr- stbtt_PackFontRangesRenderIntoRects - int
						// UnexposedExpr- stbtt_PackFontRangesRenderIntoRects - int (*)(stbtt_pack_context *, const stbtt_fontinfo *, stbtt_pack_range *, int, stbrp_rect *)
							// DeclRefExpr- stbtt_PackFontRangesRenderIntoRects - int (stbtt_pack_context *, const stbtt_fontinfo *, stbtt_pack_range *, int, stbrp_rect *)
						// UnexposedExpr- spc - stbtt_pack_context *
							// DeclRefExpr- spc - stbtt_pack_context *
						// UnexposedExpr-  - const stbtt_fontinfo *
							// UnaryOperator-  - stbtt_fontinfo * [Unary Operator: AddrOf (&)]
								// DeclRefExpr- info - stbtt_fontinfo
						// UnexposedExpr- ranges - stbtt_pack_range *
							// DeclRefExpr- ranges - stbtt_pack_range *
						// UnexposedExpr- num_ranges - int
							// DeclRefExpr- num_ranges - int
						// UnexposedExpr- rects - stbrp_rect *
							// DeclRefExpr- rects - stbrp_rect *
				// CallExpr- free - void
					// UnexposedExpr- free - void (*)(void *) __attribute__((cdecl))
						// DeclRefExpr- free - void (void *)
					// UnexposedExpr- rects - void *
						// UnexposedExpr- rects - stbrp_rect *
							// DeclRefExpr- rects - stbrp_rect *
				// ReturnStmt-  - 
					// UnexposedExpr- return_value - int
						// DeclRefExpr- return_value - int
		// FunctionDecl- stbtt_PackFontRange - int (stbtt_pack_context *, const unsigned char *, int, float, int, int, stbtt_packedchar *)
			// ParmDecl- spc - stbtt_pack_context *
				// TypeRef- stbtt_pack_context - stbtt_pack_context
			// ParmDecl- fontdata - const unsigned char *
			// ParmDecl- font_index - int
			// ParmDecl- font_size - float
			// ParmDecl- first_unicode_codepoint_in_range - int
			// ParmDecl- num_chars_in_range - int
			// ParmDecl- chardata_for_range - stbtt_packedchar *
				// TypeRef- stbtt_packedchar - stbtt_packedchar
			// CompoundStmt-  - 
				// DeclStmt-  - 
					// VarDecl- range - stbtt_pack_range
						// TypeRef- stbtt_pack_range - stbtt_pack_range
				// BinaryOperator-  - int [Binary Operator: Assign (=)]
					// MemberRefExpr- first_unicode_codepoint_in_range - int
						// DeclRefExpr- range - stbtt_pack_range
					// UnexposedExpr- first_unicode_codepoint_in_range - int
						// DeclRefExpr- first_unicode_codepoint_in_range - int
				// BinaryOperator-  - int * [Binary Operator: Assign (=)]
					// MemberRefExpr- array_of_unicode_codepoints - int *
						// DeclRefExpr- range - stbtt_pack_range
					// UnexposedExpr-  - int *
						// ParenExpr-  - void *
							// CStyleCastExpr-  - void *
								// IntegerLiteral-  - int [Literal: 0]
				// BinaryOperator-  - int [Binary Operator: Assign (=)]
					// MemberRefExpr- num_chars - int
						// DeclRefExpr- range - stbtt_pack_range
					// UnexposedExpr- num_chars_in_range - int
						// DeclRefExpr- num_chars_in_range - int
				// BinaryOperator-  - stbtt_packedchar * [Binary Operator: Assign (=)]
					// MemberRefExpr- chardata_for_range - stbtt_packedchar *
						// DeclRefExpr- range - stbtt_pack_range
					// UnexposedExpr- chardata_for_range - stbtt_packedchar *
						// DeclRefExpr- chardata_for_range - stbtt_packedchar *
				// BinaryOperator-  - float [Binary Operator: Assign (=)]
					// MemberRefExpr- font_size - float
						// DeclRefExpr- range - stbtt_pack_range
					// UnexposedExpr- font_size - float
						// DeclRefExpr- font_size - float
				// ReturnStmt-  - 
					// CallExpr- stbtt_PackFontRanges - int
						// UnexposedExpr- stbtt_PackFontRanges - int (*)(stbtt_pack_context *, const unsigned char *, int, stbtt_pack_range *, int)
							// DeclRefExpr- stbtt_PackFontRanges - int (stbtt_pack_context *, const unsigned char *, int, stbtt_pack_range *, int)
						// UnexposedExpr- spc - stbtt_pack_context *
							// DeclRefExpr- spc - stbtt_pack_context *
						// UnexposedExpr- fontdata - const unsigned char *
							// DeclRefExpr- fontdata - const unsigned char *
						// UnexposedExpr- font_index - int
							// DeclRefExpr- font_index - int
						// UnaryOperator-  - stbtt_pack_range * [Unary Operator: AddrOf (&)]
							// DeclRefExpr- range - stbtt_pack_range
						// IntegerLiteral-  - int [Literal: 1]
		// FunctionDecl- stbtt_GetPackedQuad - void (const stbtt_packedchar *, int, int, int, float *, float *, stbtt_aligned_quad *, int)
			// ParmDecl- chardata - const stbtt_packedchar *
				// TypeRef- stbtt_packedchar - stbtt_packedchar
			// ParmDecl- pw - int
			// ParmDecl- ph - int
			// ParmDecl- char_index - int
			// ParmDecl- xpos - float *
			// ParmDecl- ypos - float *
			// ParmDecl- q - stbtt_aligned_quad *
				// TypeRef- stbtt_aligned_quad - stbtt_aligned_quad
			// ParmDecl- align_to_integer - int
			// CompoundStmt-  - 
				// DeclStmt-  - 
					// VarDecl- ipw - float
						// BinaryOperator-  - float [Binary Operator: Div (/)]
							// FloatingLiteral-  - float [Literal: 1]
							// UnexposedExpr- pw - float
								// UnexposedExpr- pw - int
									// DeclRefExpr- pw - int
					// VarDecl- iph - float
						// BinaryOperator-  - float [Binary Operator: Div (/)]
							// FloatingLiteral-  - float [Literal: 1]
							// UnexposedExpr- ph - float
								// UnexposedExpr- ph - int
									// DeclRefExpr- ph - int
				// DeclStmt-  - 
					// VarDecl- b - const stbtt_packedchar *
						// TypeRef- stbtt_packedchar - stbtt_packedchar
						// BinaryOperator-  - const stbtt_packedchar * [Binary Operator: Add (+)]
							// UnexposedExpr- chardata - const stbtt_packedchar *
								// DeclRefExpr- chardata - const stbtt_packedchar *
							// UnexposedExpr- char_index - int
								// DeclRefExpr- char_index - int
				// IfStmt-  - 
					// UnexposedExpr- align_to_integer - int
						// DeclRefExpr- align_to_integer - int
					// CompoundStmt-  - 
						// DeclStmt-  - 
							// VarDecl- x - float
								// CStyleCastExpr-  - float
									// ParenExpr-  - int
										// CStyleCastExpr-  - int
											// CallExpr- floor - double
												// UnexposedExpr- floor - double (*)(double)
													// DeclRefExpr- floor - double (double)
												// UnexposedExpr-  - double
													// BinaryOperator-  - float [Binary Operator: Add (+)]
														// ParenExpr-  - float
															// BinaryOperator-  - float [Binary Operator: Add (+)]
																// UnexposedExpr-  - float
																	// UnaryOperator-  - float [Unary Operator: Deref (*)]
																		// UnexposedExpr- xpos - float *
																			// DeclRefExpr- xpos - float *
																// UnexposedExpr- xoff - float
																	// MemberRefExpr- xoff - const float
																		// UnexposedExpr- b - const stbtt_packedchar *
																			// DeclRefExpr- b - const stbtt_packedchar *
														// FloatingLiteral-  - float [Literal: 0.5]
						// DeclStmt-  - 
							// VarDecl- y - float
								// CStyleCastExpr-  - float
									// ParenExpr-  - int
										// CStyleCastExpr-  - int
											// CallExpr- floor - double
												// UnexposedExpr- floor - double (*)(double)
													// DeclRefExpr- floor - double (double)
												// UnexposedExpr-  - double
													// BinaryOperator-  - float [Binary Operator: Add (+)]
														// ParenExpr-  - float
															// BinaryOperator-  - float [Binary Operator: Add (+)]
																// UnexposedExpr-  - float
																	// UnaryOperator-  - float [Unary Operator: Deref (*)]
																		// UnexposedExpr- ypos - float *
																			// DeclRefExpr- ypos - float *
																// UnexposedExpr- yoff - float
																	// MemberRefExpr- yoff - const float
																		// UnexposedExpr- b - const stbtt_packedchar *
																			// DeclRefExpr- b - const stbtt_packedchar *
														// FloatingLiteral-  - float [Literal: 0.5]
						// BinaryOperator-  - float [Binary Operator: Assign (=)]
							// MemberRefExpr- x0 - float
								// UnexposedExpr- q - stbtt_aligned_quad *
									// DeclRefExpr- q - stbtt_aligned_quad *
							// UnexposedExpr- x - float
								// DeclRefExpr- x - float
						// BinaryOperator-  - float [Binary Operator: Assign (=)]
							// MemberRefExpr- y0 - float
								// UnexposedExpr- q - stbtt_aligned_quad *
									// DeclRefExpr- q - stbtt_aligned_quad *
							// UnexposedExpr- y - float
								// DeclRefExpr- y - float
						// BinaryOperator-  - float [Binary Operator: Assign (=)]
							// MemberRefExpr- x1 - float
								// UnexposedExpr- q - stbtt_aligned_quad *
									// DeclRefExpr- q - stbtt_aligned_quad *
							// BinaryOperator-  - float [Binary Operator: Sub (-)]
								// BinaryOperator-  - float [Binary Operator: Add (+)]
									// UnexposedExpr- x - float
										// DeclRefExpr- x - float
									// UnexposedExpr- xoff2 - float
										// MemberRefExpr- xoff2 - const float
											// UnexposedExpr- b - const stbtt_packedchar *
												// DeclRefExpr- b - const stbtt_packedchar *
								// UnexposedExpr- xoff - float
									// MemberRefExpr- xoff - const float
										// UnexposedExpr- b - const stbtt_packedchar *
											// DeclRefExpr- b - const stbtt_packedchar *
						// BinaryOperator-  - float [Binary Operator: Assign (=)]
							// MemberRefExpr- y1 - float
								// UnexposedExpr- q - stbtt_aligned_quad *
									// DeclRefExpr- q - stbtt_aligned_quad *
							// BinaryOperator-  - float [Binary Operator: Sub (-)]
								// BinaryOperator-  - float [Binary Operator: Add (+)]
									// UnexposedExpr- y - float
										// DeclRefExpr- y - float
									// UnexposedExpr- yoff2 - float
										// MemberRefExpr- yoff2 - const float
											// UnexposedExpr- b - const stbtt_packedchar *
												// DeclRefExpr- b - const stbtt_packedchar *
								// UnexposedExpr- yoff - float
									// MemberRefExpr- yoff - const float
										// UnexposedExpr- b - const stbtt_packedchar *
											// DeclRefExpr- b - const stbtt_packedchar *
					// CompoundStmt-  - 
						// BinaryOperator-  - float [Binary Operator: Assign (=)]
							// MemberRefExpr- x0 - float
								// UnexposedExpr- q - stbtt_aligned_quad *
									// DeclRefExpr- q - stbtt_aligned_quad *
							// BinaryOperator-  - float [Binary Operator: Add (+)]
								// UnexposedExpr-  - float
									// UnaryOperator-  - float [Unary Operator: Deref (*)]
										// UnexposedExpr- xpos - float *
											// DeclRefExpr- xpos - float *
								// UnexposedExpr- xoff - float
									// MemberRefExpr- xoff - const float
										// UnexposedExpr- b - const stbtt_packedchar *
											// DeclRefExpr- b - const stbtt_packedchar *
						// BinaryOperator-  - float [Binary Operator: Assign (=)]
							// MemberRefExpr- y0 - float
								// UnexposedExpr- q - stbtt_aligned_quad *
									// DeclRefExpr- q - stbtt_aligned_quad *
							// BinaryOperator-  - float [Binary Operator: Add (+)]
								// UnexposedExpr-  - float
									// UnaryOperator-  - float [Unary Operator: Deref (*)]
										// UnexposedExpr- ypos - float *
											// DeclRefExpr- ypos - float *
								// UnexposedExpr- yoff - float
									// MemberRefExpr- yoff - const float
										// UnexposedExpr- b - const stbtt_packedchar *
											// DeclRefExpr- b - const stbtt_packedchar *
						// BinaryOperator-  - float [Binary Operator: Assign (=)]
							// MemberRefExpr- x1 - float
								// UnexposedExpr- q - stbtt_aligned_quad *
									// DeclRefExpr- q - stbtt_aligned_quad *
							// BinaryOperator-  - float [Binary Operator: Add (+)]
								// UnexposedExpr-  - float
									// UnaryOperator-  - float [Unary Operator: Deref (*)]
										// UnexposedExpr- xpos - float *
											// DeclRefExpr- xpos - float *
								// UnexposedExpr- xoff2 - float
									// MemberRefExpr- xoff2 - const float
										// UnexposedExpr- b - const stbtt_packedchar *
											// DeclRefExpr- b - const stbtt_packedchar *
						// BinaryOperator-  - float [Binary Operator: Assign (=)]
							// MemberRefExpr- y1 - float
								// UnexposedExpr- q - stbtt_aligned_quad *
									// DeclRefExpr- q - stbtt_aligned_quad *
							// BinaryOperator-  - float [Binary Operator: Add (+)]
								// UnexposedExpr-  - float
									// UnaryOperator-  - float [Unary Operator: Deref (*)]
										// UnexposedExpr- ypos - float *
											// DeclRefExpr- ypos - float *
								// UnexposedExpr- yoff2 - float
									// MemberRefExpr- yoff2 - const float
										// UnexposedExpr- b - const stbtt_packedchar *
											// DeclRefExpr- b - const stbtt_packedchar *
				// BinaryOperator-  - float [Binary Operator: Assign (=)]
					// MemberRefExpr- s0 - float
						// UnexposedExpr- q - stbtt_aligned_quad *
							// DeclRefExpr- q - stbtt_aligned_quad *
					// BinaryOperator-  - float [Binary Operator: Mul (*)]
						// UnexposedExpr- x0 - float
							// UnexposedExpr- x0 - int
								// UnexposedExpr- x0 - unsigned short
									// MemberRefExpr- x0 - const unsigned short
										// UnexposedExpr- b - const stbtt_packedchar *
											// DeclRefExpr- b - const stbtt_packedchar *
						// UnexposedExpr- ipw - float
							// DeclRefExpr- ipw - float
				// BinaryOperator-  - float [Binary Operator: Assign (=)]
					// MemberRefExpr- t0 - float
						// UnexposedExpr- q - stbtt_aligned_quad *
							// DeclRefExpr- q - stbtt_aligned_quad *
					// BinaryOperator-  - float [Binary Operator: Mul (*)]
						// UnexposedExpr- y0 - float
							// UnexposedExpr- y0 - int
								// UnexposedExpr- y0 - unsigned short
									// MemberRefExpr- y0 - const unsigned short
										// UnexposedExpr- b - const stbtt_packedchar *
											// DeclRefExpr- b - const stbtt_packedchar *
						// UnexposedExpr- iph - float
							// DeclRefExpr- iph - float
				// BinaryOperator-  - float [Binary Operator: Assign (=)]
					// MemberRefExpr- s1 - float
						// UnexposedExpr- q - stbtt_aligned_quad *
							// DeclRefExpr- q - stbtt_aligned_quad *
					// BinaryOperator-  - float [Binary Operator: Mul (*)]
						// UnexposedExpr- x1 - float
							// UnexposedExpr- x1 - int
								// UnexposedExpr- x1 - unsigned short
									// MemberRefExpr- x1 - const unsigned short
										// UnexposedExpr- b - const stbtt_packedchar *
											// DeclRefExpr- b - const stbtt_packedchar *
						// UnexposedExpr- ipw - float
							// DeclRefExpr- ipw - float
				// BinaryOperator-  - float [Binary Operator: Assign (=)]
					// MemberRefExpr- t1 - float
						// UnexposedExpr- q - stbtt_aligned_quad *
							// DeclRefExpr- q - stbtt_aligned_quad *
					// BinaryOperator-  - float [Binary Operator: Mul (*)]
						// UnexposedExpr- y1 - float
							// UnexposedExpr- y1 - int
								// UnexposedExpr- y1 - unsigned short
									// MemberRefExpr- y1 - const unsigned short
										// UnexposedExpr- b - const stbtt_packedchar *
											// DeclRefExpr- b - const stbtt_packedchar *
						// UnexposedExpr- iph - float
							// DeclRefExpr- iph - float
				// CompoundAssignOperator-  - float
					// UnaryOperator-  - float [Unary Operator: Deref (*)]
						// UnexposedExpr- xpos - float *
							// DeclRefExpr- xpos - float *
					// UnexposedExpr- xadvance - float
						// MemberRefExpr- xadvance - const float
							// UnexposedExpr- b - const stbtt_packedchar *
								// DeclRefExpr- b - const stbtt_packedchar *
		// FunctionDecl- stbtt__ray_intersect_bezier - int (float *, float *, float *, float *, float *, float *)
			// ParmDecl- orig - float [2]
				// IntegerLiteral-  - int [Literal: 2]
			// ParmDecl- ray - float [2]
				// IntegerLiteral-  - int [Literal: 2]
			// ParmDecl- q0 - float [2]
				// IntegerLiteral-  - int [Literal: 2]
			// ParmDecl- q1 - float [2]
				// IntegerLiteral-  - int [Literal: 2]
			// ParmDecl- q2 - float [2]
				// IntegerLiteral-  - int [Literal: 2]
			// ParmDecl- hits - float [4]
				// IntegerLiteral-  - int [Literal: 4]
			// CompoundStmt-  - 
				// DeclStmt-  - 
					// VarDecl- q0perp - float
						// BinaryOperator-  - float [Binary Operator: Sub (-)]
							// BinaryOperator-  - float [Binary Operator: Mul (*)]
								// UnexposedExpr-  - float
									// ArraySubscriptExpr-  - float
										// UnexposedExpr- q0 - float [2]
											// DeclRefExpr- q0 - float [2]
										// IntegerLiteral-  - int [Literal: 1]
								// UnexposedExpr-  - float
									// ArraySubscriptExpr-  - float
										// UnexposedExpr- ray - float [2]
											// DeclRefExpr- ray - float [2]
										// IntegerLiteral-  - int [Literal: 0]
							// BinaryOperator-  - float [Binary Operator: Mul (*)]
								// UnexposedExpr-  - float
									// ArraySubscriptExpr-  - float
										// UnexposedExpr- q0 - float [2]
											// DeclRefExpr- q0 - float [2]
										// IntegerLiteral-  - int [Literal: 0]
								// UnexposedExpr-  - float
									// ArraySubscriptExpr-  - float
										// UnexposedExpr- ray - float [2]
											// DeclRefExpr- ray - float [2]
										// IntegerLiteral-  - int [Literal: 1]
				// DeclStmt-  - 
					// VarDecl- q1perp - float
						// BinaryOperator-  - float [Binary Operator: Sub (-)]
							// BinaryOperator-  - float [Binary Operator: Mul (*)]
								// UnexposedExpr-  - float
									// ArraySubscriptExpr-  - float
										// UnexposedExpr- q1 - float [2]
											// DeclRefExpr- q1 - float [2]
										// IntegerLiteral-  - int [Literal: 1]
								// UnexposedExpr-  - float
									// ArraySubscriptExpr-  - float
										// UnexposedExpr- ray - float [2]
											// DeclRefExpr- ray - float [2]
										// IntegerLiteral-  - int [Literal: 0]
							// BinaryOperator-  - float [Binary Operator: Mul (*)]
								// UnexposedExpr-  - float
									// ArraySubscriptExpr-  - float
										// UnexposedExpr- q1 - float [2]
											// DeclRefExpr- q1 - float [2]
										// IntegerLiteral-  - int [Literal: 0]
								// UnexposedExpr-  - float
									// ArraySubscriptExpr-  - float
										// UnexposedExpr- ray - float [2]
											// DeclRefExpr- ray - float [2]
										// IntegerLiteral-  - int [Literal: 1]
				// DeclStmt-  - 
					// VarDecl- q2perp - float
						// BinaryOperator-  - float [Binary Operator: Sub (-)]
							// BinaryOperator-  - float [Binary Operator: Mul (*)]
								// UnexposedExpr-  - float
									// ArraySubscriptExpr-  - float
										// UnexposedExpr- q2 - float [2]
											// DeclRefExpr- q2 - float [2]
										// IntegerLiteral-  - int [Literal: 1]
								// UnexposedExpr-  - float
									// ArraySubscriptExpr-  - float
										// UnexposedExpr- ray - float [2]
											// DeclRefExpr- ray - float [2]
										// IntegerLiteral-  - int [Literal: 0]
							// BinaryOperator-  - float [Binary Operator: Mul (*)]
								// UnexposedExpr-  - float
									// ArraySubscriptExpr-  - float
										// UnexposedExpr- q2 - float [2]
											// DeclRefExpr- q2 - float [2]
										// IntegerLiteral-  - int [Literal: 0]
								// UnexposedExpr-  - float
									// ArraySubscriptExpr-  - float
										// UnexposedExpr- ray - float [2]
											// DeclRefExpr- ray - float [2]
										// IntegerLiteral-  - int [Literal: 1]
				// DeclStmt-  - 
					// VarDecl- roperp - float
						// BinaryOperator-  - float [Binary Operator: Sub (-)]
							// BinaryOperator-  - float [Binary Operator: Mul (*)]
								// UnexposedExpr-  - float
									// ArraySubscriptExpr-  - float
										// UnexposedExpr- orig - float [2]
											// DeclRefExpr- orig - float [2]
										// IntegerLiteral-  - int [Literal: 1]
								// UnexposedExpr-  - float
									// ArraySubscriptExpr-  - float
										// UnexposedExpr- ray - float [2]
											// DeclRefExpr- ray - float [2]
										// IntegerLiteral-  - int [Literal: 0]
							// BinaryOperator-  - float [Binary Operator: Mul (*)]
								// UnexposedExpr-  - float
									// ArraySubscriptExpr-  - float
										// UnexposedExpr- orig - float [2]
											// DeclRefExpr- orig - float [2]
										// IntegerLiteral-  - int [Literal: 0]
								// UnexposedExpr-  - float
									// ArraySubscriptExpr-  - float
										// UnexposedExpr- ray - float [2]
											// DeclRefExpr- ray - float [2]
										// IntegerLiteral-  - int [Literal: 1]
				// DeclStmt-  - 
					// VarDecl- a - float
						// BinaryOperator-  - float [Binary Operator: Add (+)]
							// BinaryOperator-  - float [Binary Operator: Sub (-)]
								// UnexposedExpr- q0perp - float
									// DeclRefExpr- q0perp - float
								// BinaryOperator-  - float [Binary Operator: Mul (*)]
									// UnexposedExpr-  - float
										// IntegerLiteral-  - int [Literal: 2]
									// UnexposedExpr- q1perp - float
										// DeclRefExpr- q1perp - float
							// UnexposedExpr- q2perp - float
								// DeclRefExpr- q2perp - float
				// DeclStmt-  - 
					// VarDecl- b - float
						// BinaryOperator-  - float [Binary Operator: Sub (-)]
							// UnexposedExpr- q1perp - float
								// DeclRefExpr- q1perp - float
							// UnexposedExpr- q0perp - float
								// DeclRefExpr- q0perp - float
				// DeclStmt-  - 
					// VarDecl- c - float
						// BinaryOperator-  - float [Binary Operator: Sub (-)]
							// UnexposedExpr- q0perp - float
								// DeclRefExpr- q0perp - float
							// UnexposedExpr- roperp - float
								// DeclRefExpr- roperp - float
				// DeclStmt-  - 
					// VarDecl- s0 - float
						// UnexposedExpr-  - float
							// IntegerLiteral-  - int [Literal: 0]
					// VarDecl- s1 - float
						// UnexposedExpr-  - float
							// IntegerLiteral-  - int [Literal: 0]
				// DeclStmt-  - 
					// VarDecl- num_s - int
						// IntegerLiteral-  - int [Literal: 0]
				// IfStmt-  - 
					// BinaryOperator-  - int [Binary Operator: NE (!=)]
						// UnexposedExpr- a - double
							// UnexposedExpr- a - float
								// DeclRefExpr- a - float
						// FloatingLiteral-  - double [Literal: 0]
					// CompoundStmt-  - 
						// DeclStmt-  - 
							// VarDecl- discr - float
								// BinaryOperator-  - float [Binary Operator: Sub (-)]
									// BinaryOperator-  - float [Binary Operator: Mul (*)]
										// UnexposedExpr- b - float
											// DeclRefExpr- b - float
										// UnexposedExpr- b - float
											// DeclRefExpr- b - float
									// BinaryOperator-  - float [Binary Operator: Mul (*)]
										// UnexposedExpr- a - float
											// DeclRefExpr- a - float
										// UnexposedExpr- c - float
											// DeclRefExpr- c - float
						// IfStmt-  - 
							// BinaryOperator-  - int [Binary Operator: GT (>)]
								// UnexposedExpr- discr - double
									// UnexposedExpr- discr - float
										// DeclRefExpr- discr - float
								// FloatingLiteral-  - double [Literal: 0]
							// CompoundStmt-  - 
								// DeclStmt-  - 
									// VarDecl- rcpna - float
										// BinaryOperator-  - float [Binary Operator: Div (/)]
											// UnexposedExpr-  - float
												// UnaryOperator-  - int [Unary Operator: Minus (-)]
													// IntegerLiteral-  - int [Literal: 1]
											// UnexposedExpr- a - float
												// DeclRefExpr- a - float
								// DeclStmt-  - 
									// VarDecl- d - float
										// CStyleCastExpr-  - float
											// CallExpr- sqrt - double
												// UnexposedExpr- sqrt - double (*)(double)
													// DeclRefExpr- sqrt - double (double)
												// UnexposedExpr- discr - double
													// UnexposedExpr- discr - float
														// DeclRefExpr- discr - float
								// BinaryOperator-  - float [Binary Operator: Assign (=)]
									// DeclRefExpr- s0 - float
									// BinaryOperator-  - float [Binary Operator: Mul (*)]
										// ParenExpr-  - float
											// BinaryOperator-  - float [Binary Operator: Add (+)]
												// UnexposedExpr- b - float
													// DeclRefExpr- b - float
												// UnexposedExpr- d - float
													// DeclRefExpr- d - float
										// UnexposedExpr- rcpna - float
											// DeclRefExpr- rcpna - float
								// BinaryOperator-  - float [Binary Operator: Assign (=)]
									// DeclRefExpr- s1 - float
									// BinaryOperator-  - float [Binary Operator: Mul (*)]
										// ParenExpr-  - float
											// BinaryOperator-  - float [Binary Operator: Sub (-)]
												// UnexposedExpr- b - float
													// DeclRefExpr- b - float
												// UnexposedExpr- d - float
													// DeclRefExpr- d - float
										// UnexposedExpr- rcpna - float
											// DeclRefExpr- rcpna - float
								// IfStmt-  - 
									// BinaryOperator-  - int [Binary Operator: LAnd (&&)]
										// BinaryOperator-  - int [Binary Operator: GE (>=)]
											// UnexposedExpr- s0 - double
												// UnexposedExpr- s0 - float
													// DeclRefExpr- s0 - float
											// FloatingLiteral-  - double [Literal: 0]
										// BinaryOperator-  - int [Binary Operator: LE (<=)]
											// UnexposedExpr- s0 - double
												// UnexposedExpr- s0 - float
													// DeclRefExpr- s0 - float
											// FloatingLiteral-  - double [Literal: 1]
									// BinaryOperator-  - int [Binary Operator: Assign (=)]
										// DeclRefExpr- num_s - int
										// IntegerLiteral-  - int [Literal: 1]
								// IfStmt-  - 
									// BinaryOperator-  - int [Binary Operator: LAnd (&&)]
										// BinaryOperator-  - int [Binary Operator: LAnd (&&)]
											// BinaryOperator-  - int [Binary Operator: GT (>)]
												// UnexposedExpr- d - double
													// UnexposedExpr- d - float
														// DeclRefExpr- d - float
												// FloatingLiteral-  - double [Literal: 0]
											// BinaryOperator-  - int [Binary Operator: GE (>=)]
												// UnexposedExpr- s1 - double
													// UnexposedExpr- s1 - float
														// DeclRefExpr- s1 - float
												// FloatingLiteral-  - double [Literal: 0]
										// BinaryOperator-  - int [Binary Operator: LE (<=)]
											// UnexposedExpr- s1 - double
												// UnexposedExpr- s1 - float
													// DeclRefExpr- s1 - float
											// FloatingLiteral-  - double [Literal: 1]
									// CompoundStmt-  - 
										// IfStmt-  - 
											// BinaryOperator-  - int [Binary Operator: EQ (==)]
												// UnexposedExpr- num_s - int
													// DeclRefExpr- num_s - int
												// IntegerLiteral-  - int [Literal: 0]
											// BinaryOperator-  - float [Binary Operator: Assign (=)]
												// DeclRefExpr- s0 - float
												// UnexposedExpr- s1 - float
													// DeclRefExpr- s1 - float
										// UnaryOperator-  - int [Unary Operator: PreInc (++)]
											// DeclRefExpr- num_s - int
					// CompoundStmt-  - 
						// BinaryOperator-  - float [Binary Operator: Assign (=)]
							// DeclRefExpr- s0 - float
							// BinaryOperator-  - float [Binary Operator: Div (/)]
								// UnexposedExpr- c - float
									// DeclRefExpr- c - float
								// ParenExpr-  - float
									// BinaryOperator-  - float [Binary Operator: Mul (*)]
										// UnexposedExpr-  - float
											// UnaryOperator-  - int [Unary Operator: Minus (-)]
												// IntegerLiteral-  - int [Literal: 2]
										// UnexposedExpr- b - float
											// DeclRefExpr- b - float
						// IfStmt-  - 
							// BinaryOperator-  - int [Binary Operator: LAnd (&&)]
								// BinaryOperator-  - int [Binary Operator: GE (>=)]
									// UnexposedExpr- s0 - double
										// UnexposedExpr- s0 - float
											// DeclRefExpr- s0 - float
									// FloatingLiteral-  - double [Literal: 0]
								// BinaryOperator-  - int [Binary Operator: LE (<=)]
									// UnexposedExpr- s0 - double
										// UnexposedExpr- s0 - float
											// DeclRefExpr- s0 - float
									// FloatingLiteral-  - double [Literal: 1]
							// BinaryOperator-  - int [Binary Operator: Assign (=)]
								// DeclRefExpr- num_s - int
								// IntegerLiteral-  - int [Literal: 1]
				// IfStmt-  - 
					// BinaryOperator-  - int [Binary Operator: EQ (==)]
						// UnexposedExpr- num_s - int
							// DeclRefExpr- num_s - int
						// IntegerLiteral-  - int [Literal: 0]
					// ReturnStmt-  - 
						// IntegerLiteral-  - int [Literal: 0]
					// CompoundStmt-  - 
						// DeclStmt-  - 
							// VarDecl- rcp_len2 - float
								// BinaryOperator-  - float [Binary Operator: Div (/)]
									// UnexposedExpr-  - float
										// IntegerLiteral-  - int [Literal: 1]
									// ParenExpr-  - float
										// BinaryOperator-  - float [Binary Operator: Add (+)]
											// BinaryOperator-  - float [Binary Operator: Mul (*)]
												// UnexposedExpr-  - float
													// ArraySubscriptExpr-  - float
														// UnexposedExpr- ray - float [2]
															// DeclRefExpr- ray - float [2]
														// IntegerLiteral-  - int [Literal: 0]
												// UnexposedExpr-  - float
													// ArraySubscriptExpr-  - float
														// UnexposedExpr- ray - float [2]
															// DeclRefExpr- ray - float [2]
														// IntegerLiteral-  - int [Literal: 0]
											// BinaryOperator-  - float [Binary Operator: Mul (*)]
												// UnexposedExpr-  - float
													// ArraySubscriptExpr-  - float
														// UnexposedExpr- ray - float [2]
															// DeclRefExpr- ray - float [2]
														// IntegerLiteral-  - int [Literal: 1]
												// UnexposedExpr-  - float
													// ArraySubscriptExpr-  - float
														// UnexposedExpr- ray - float [2]
															// DeclRefExpr- ray - float [2]
														// IntegerLiteral-  - int [Literal: 1]
						// DeclStmt-  - 
							// VarDecl- rayn_x - float
								// BinaryOperator-  - float [Binary Operator: Mul (*)]
									// UnexposedExpr-  - float
										// ArraySubscriptExpr-  - float
											// UnexposedExpr- ray - float [2]
												// DeclRefExpr- ray - float [2]
											// IntegerLiteral-  - int [Literal: 0]
									// UnexposedExpr- rcp_len2 - float
										// DeclRefExpr- rcp_len2 - float
							// VarDecl- rayn_y - float
								// BinaryOperator-  - float [Binary Operator: Mul (*)]
									// UnexposedExpr-  - float
										// ArraySubscriptExpr-  - float
											// UnexposedExpr- ray - float [2]
												// DeclRefExpr- ray - float [2]
											// IntegerLiteral-  - int [Literal: 1]
									// UnexposedExpr- rcp_len2 - float
										// DeclRefExpr- rcp_len2 - float
						// DeclStmt-  - 
							// VarDecl- q0d - float
								// BinaryOperator-  - float [Binary Operator: Add (+)]
									// BinaryOperator-  - float [Binary Operator: Mul (*)]
										// UnexposedExpr-  - float
											// ArraySubscriptExpr-  - float
												// UnexposedExpr- q0 - float [2]
													// DeclRefExpr- q0 - float [2]
												// IntegerLiteral-  - int [Literal: 0]
										// UnexposedExpr- rayn_x - float
											// DeclRefExpr- rayn_x - float
									// BinaryOperator-  - float [Binary Operator: Mul (*)]
										// UnexposedExpr-  - float
											// ArraySubscriptExpr-  - float
												// UnexposedExpr- q0 - float [2]
													// DeclRefExpr- q0 - float [2]
												// IntegerLiteral-  - int [Literal: 1]
										// UnexposedExpr- rayn_y - float
											// DeclRefExpr- rayn_y - float
						// DeclStmt-  - 
							// VarDecl- q1d - float
								// BinaryOperator-  - float [Binary Operator: Add (+)]
									// BinaryOperator-  - float [Binary Operator: Mul (*)]
										// UnexposedExpr-  - float
											// ArraySubscriptExpr-  - float
												// UnexposedExpr- q1 - float [2]
													// DeclRefExpr- q1 - float [2]
												// IntegerLiteral-  - int [Literal: 0]
										// UnexposedExpr- rayn_x - float
											// DeclRefExpr- rayn_x - float
									// BinaryOperator-  - float [Binary Operator: Mul (*)]
										// UnexposedExpr-  - float
											// ArraySubscriptExpr-  - float
												// UnexposedExpr- q1 - float [2]
													// DeclRefExpr- q1 - float [2]
												// IntegerLiteral-  - int [Literal: 1]
										// UnexposedExpr- rayn_y - float
											// DeclRefExpr- rayn_y - float
						// DeclStmt-  - 
							// VarDecl- q2d - float
								// BinaryOperator-  - float [Binary Operator: Add (+)]
									// BinaryOperator-  - float [Binary Operator: Mul (*)]
										// UnexposedExpr-  - float
											// ArraySubscriptExpr-  - float
												// UnexposedExpr- q2 - float [2]
													// DeclRefExpr- q2 - float [2]
												// IntegerLiteral-  - int [Literal: 0]
										// UnexposedExpr- rayn_x - float
											// DeclRefExpr- rayn_x - float
									// BinaryOperator-  - float [Binary Operator: Mul (*)]
										// UnexposedExpr-  - float
											// ArraySubscriptExpr-  - float
												// UnexposedExpr- q2 - float [2]
													// DeclRefExpr- q2 - float [2]
												// IntegerLiteral-  - int [Literal: 1]
										// UnexposedExpr- rayn_y - float
											// DeclRefExpr- rayn_y - float
						// DeclStmt-  - 
							// VarDecl- rod - float
								// BinaryOperator-  - float [Binary Operator: Add (+)]
									// BinaryOperator-  - float [Binary Operator: Mul (*)]
										// UnexposedExpr-  - float
											// ArraySubscriptExpr-  - float
												// UnexposedExpr- orig - float [2]
													// DeclRefExpr- orig - float [2]
												// IntegerLiteral-  - int [Literal: 0]
										// UnexposedExpr- rayn_x - float
											// DeclRefExpr- rayn_x - float
									// BinaryOperator-  - float [Binary Operator: Mul (*)]
										// UnexposedExpr-  - float
											// ArraySubscriptExpr-  - float
												// UnexposedExpr- orig - float [2]
													// DeclRefExpr- orig - float [2]
												// IntegerLiteral-  - int [Literal: 1]
										// UnexposedExpr- rayn_y - float
											// DeclRefExpr- rayn_y - float
						// DeclStmt-  - 
							// VarDecl- q10d - float
								// BinaryOperator-  - float [Binary Operator: Sub (-)]
									// UnexposedExpr- q1d - float
										// DeclRefExpr- q1d - float
									// UnexposedExpr- q0d - float
										// DeclRefExpr- q0d - float
						// DeclStmt-  - 
							// VarDecl- q20d - float
								// BinaryOperator-  - float [Binary Operator: Sub (-)]
									// UnexposedExpr- q2d - float
										// DeclRefExpr- q2d - float
									// UnexposedExpr- q0d - float
										// DeclRefExpr- q0d - float
						// DeclStmt-  - 
							// VarDecl- q0rd - float
								// BinaryOperator-  - float [Binary Operator: Sub (-)]
									// UnexposedExpr- q0d - float
										// DeclRefExpr- q0d - float
									// UnexposedExpr- rod - float
										// DeclRefExpr- rod - float
						// BinaryOperator-  - float [Binary Operator: Assign (=)]
							// ArraySubscriptExpr-  - float
								// UnexposedExpr- hits - float [4]
									// DeclRefExpr- hits - float [4]
								// IntegerLiteral-  - int [Literal: 0]
							// BinaryOperator-  - float [Binary Operator: Add (+)]
								// BinaryOperator-  - float [Binary Operator: Add (+)]
									// UnexposedExpr- q0rd - float
										// DeclRefExpr- q0rd - float
									// BinaryOperator-  - float [Binary Operator: Mul (*)]
										// BinaryOperator-  - float [Binary Operator: Mul (*)]
											// UnexposedExpr- s0 - float
												// DeclRefExpr- s0 - float
											// ParenExpr-  - float
												// BinaryOperator-  - float [Binary Operator: Sub (-)]
													// FloatingLiteral-  - float [Literal: 2]
													// BinaryOperator-  - float [Binary Operator: Mul (*)]
														// FloatingLiteral-  - float [Literal: 2]
														// UnexposedExpr- s0 - float
															// DeclRefExpr- s0 - float
										// UnexposedExpr- q10d - float
											// DeclRefExpr- q10d - float
								// BinaryOperator-  - float [Binary Operator: Mul (*)]
									// BinaryOperator-  - float [Binary Operator: Mul (*)]
										// UnexposedExpr- s0 - float
											// DeclRefExpr- s0 - float
										// UnexposedExpr- s0 - float
											// DeclRefExpr- s0 - float
									// UnexposedExpr- q20d - float
										// DeclRefExpr- q20d - float
						// BinaryOperator-  - float [Binary Operator: Assign (=)]
							// ArraySubscriptExpr-  - float
								// UnexposedExpr- hits - float [4]
									// DeclRefExpr- hits - float [4]
								// IntegerLiteral-  - int [Literal: 1]
							// BinaryOperator-  - float [Binary Operator: Add (+)]
								// BinaryOperator-  - float [Binary Operator: Mul (*)]
									// UnexposedExpr- a - float
										// DeclRefExpr- a - float
									// UnexposedExpr- s0 - float
										// DeclRefExpr- s0 - float
								// UnexposedExpr- b - float
									// DeclRefExpr- b - float
						// IfStmt-  - 
							// BinaryOperator-  - int [Binary Operator: GT (>)]
								// UnexposedExpr- num_s - int
									// DeclRefExpr- num_s - int
								// IntegerLiteral-  - int [Literal: 1]
							// CompoundStmt-  - 
								// BinaryOperator-  - float [Binary Operator: Assign (=)]
									// ArraySubscriptExpr-  - float
										// UnexposedExpr- hits - float [4]
											// DeclRefExpr- hits - float [4]
										// IntegerLiteral-  - int [Literal: 2]
									// BinaryOperator-  - float [Binary Operator: Add (+)]
										// BinaryOperator-  - float [Binary Operator: Add (+)]
											// UnexposedExpr- q0rd - float
												// DeclRefExpr- q0rd - float
											// BinaryOperator-  - float [Binary Operator: Mul (*)]
												// BinaryOperator-  - float [Binary Operator: Mul (*)]
													// UnexposedExpr- s1 - float
														// DeclRefExpr- s1 - float
													// ParenExpr-  - float
														// BinaryOperator-  - float [Binary Operator: Sub (-)]
															// FloatingLiteral-  - float [Literal: 2]
															// BinaryOperator-  - float [Binary Operator: Mul (*)]
																// FloatingLiteral-  - float [Literal: 2]
																// UnexposedExpr- s1 - float
																	// DeclRefExpr- s1 - float
												// UnexposedExpr- q10d - float
													// DeclRefExpr- q10d - float
										// BinaryOperator-  - float [Binary Operator: Mul (*)]
											// BinaryOperator-  - float [Binary Operator: Mul (*)]
												// UnexposedExpr- s1 - float
													// DeclRefExpr- s1 - float
												// UnexposedExpr- s1 - float
													// DeclRefExpr- s1 - float
											// UnexposedExpr- q20d - float
												// DeclRefExpr- q20d - float
								// BinaryOperator-  - float [Binary Operator: Assign (=)]
									// ArraySubscriptExpr-  - float
										// UnexposedExpr- hits - float [4]
											// DeclRefExpr- hits - float [4]
										// IntegerLiteral-  - int [Literal: 3]
									// BinaryOperator-  - float [Binary Operator: Add (+)]
										// BinaryOperator-  - float [Binary Operator: Mul (*)]
											// UnexposedExpr- a - float
												// DeclRefExpr- a - float
											// UnexposedExpr- s1 - float
												// DeclRefExpr- s1 - float
										// UnexposedExpr- b - float
											// DeclRefExpr- b - float
								// ReturnStmt-  - 
									// IntegerLiteral-  - int [Literal: 2]
							// CompoundStmt-  - 
								// ReturnStmt-  - 
									// IntegerLiteral-  - int [Literal: 1]
		// FunctionDecl- equal - int (float *, float *)
			// ParmDecl- a - float *
			// ParmDecl- b - float *
			// CompoundStmt-  - 
				// ReturnStmt-  - 
					// ParenExpr-  - int
						// BinaryOperator-  - int [Binary Operator: LAnd (&&)]
							// BinaryOperator-  - int [Binary Operator: EQ (==)]
								// UnexposedExpr-  - float
									// ArraySubscriptExpr-  - float
										// UnexposedExpr- a - float *
											// DeclRefExpr- a - float *
										// IntegerLiteral-  - int [Literal: 0]
								// UnexposedExpr-  - float
									// ArraySubscriptExpr-  - float
										// UnexposedExpr- b - float *
											// DeclRefExpr- b - float *
										// IntegerLiteral-  - int [Literal: 0]
							// BinaryOperator-  - int [Binary Operator: EQ (==)]
								// UnexposedExpr-  - float
									// ArraySubscriptExpr-  - float
										// UnexposedExpr- a - float *
											// DeclRefExpr- a - float *
										// IntegerLiteral-  - int [Literal: 1]
								// UnexposedExpr-  - float
									// ArraySubscriptExpr-  - float
										// UnexposedExpr- b - float *
											// DeclRefExpr- b - float *
										// IntegerLiteral-  - int [Literal: 1]
		// FunctionDecl- stbtt__compute_crossings_x - int (float, float, int, stbtt_vertex *)
			// ParmDecl- x - float
			// ParmDecl- y - float
			// ParmDecl- nverts - int
			// ParmDecl- verts - stbtt_vertex *
				// TypeRef- stbtt_vertex - stbtt_vertex
			// CompoundStmt-  - 
				// DeclStmt-  - 
					// VarDecl- i - int
				// DeclStmt-  - 
					// VarDecl- orig - float [2]
						// IntegerLiteral-  - int [Literal: 2]
					// VarDecl- ray - float [2]
						// IntegerLiteral-  - int [Literal: 2]
						// InitListExpr-  - float [2]
							// UnexposedExpr-  - float
								// IntegerLiteral-  - int [Literal: 1]
							// UnexposedExpr-  - float
								// IntegerLiteral-  - int [Literal: 0]
				// DeclStmt-  - 
					// VarDecl- y_frac - float
				// DeclStmt-  - 
					// VarDecl- winding - int
						// IntegerLiteral-  - int [Literal: 0]
				// BinaryOperator-  - float [Binary Operator: Assign (=)]
					// ArraySubscriptExpr-  - float
						// UnexposedExpr- orig - float *
							// DeclRefExpr- orig - float [2]
						// IntegerLiteral-  - int [Literal: 0]
					// UnexposedExpr- x - float
						// DeclRefExpr- x - float
				// BinaryOperator-  - float [Binary Operator: Assign (=)]
					// ArraySubscriptExpr-  - float
						// UnexposedExpr- orig - float *
							// DeclRefExpr- orig - float [2]
						// IntegerLiteral-  - int [Literal: 1]
					// UnexposedExpr- y - float
						// DeclRefExpr- y - float
				// BinaryOperator-  - float [Binary Operator: Assign (=)]
					// DeclRefExpr- y_frac - float
					// CStyleCastExpr-  - float
						// CallExpr- fmod - double
							// UnexposedExpr- fmod - double (*)(double, double)
								// DeclRefExpr- fmod - double (double, double)
							// UnexposedExpr- y - double
								// UnexposedExpr- y - float
									// DeclRefExpr- y - float
							// UnexposedExpr-  - double
								// FloatingLiteral-  - float [Literal: 1]
				// IfStmt-  - 
					// BinaryOperator-  - int [Binary Operator: LT (<)]
						// UnexposedExpr- y_frac - float
							// DeclRefExpr- y_frac - float
						// FloatingLiteral-  - float [Literal: 0.00999999977]
					// CompoundAssignOperator-  - float
						// DeclRefExpr- y - float
						// FloatingLiteral-  - float [Literal: 0.00999999977]
					// IfStmt-  - 
						// BinaryOperator-  - int [Binary Operator: GT (>)]
							// UnexposedExpr- y_frac - float
								// DeclRefExpr- y_frac - float
							// FloatingLiteral-  - float [Literal: 0.990000009]
						// CompoundAssignOperator-  - float
							// DeclRefExpr- y - float
							// FloatingLiteral-  - float [Literal: 0.00999999977]
				// BinaryOperator-  - float [Binary Operator: Assign (=)]
					// ArraySubscriptExpr-  - float
						// UnexposedExpr- orig - float *
							// DeclRefExpr- orig - float [2]
						// IntegerLiteral-  - int [Literal: 1]
					// UnexposedExpr- y - float
						// DeclRefExpr- y - float
				// ForStmt-  - 
					// BinaryOperator-  - int [Binary Operator: Assign (=)]
						// DeclRefExpr- i - int
						// IntegerLiteral-  - int [Literal: 0]
					// BinaryOperator-  - int [Binary Operator: LT (<)]
						// UnexposedExpr- i - int
							// DeclRefExpr- i - int
						// UnexposedExpr- nverts - int
							// DeclRefExpr- nverts - int
					// UnaryOperator-  - int [Unary Operator: PreInc (++)]
						// DeclRefExpr- i - int
					// CompoundStmt-  - 
						// IfStmt-  - 
							// BinaryOperator-  - int [Binary Operator: EQ (==)]
								// UnexposedExpr- type - int
									// UnexposedExpr- type - unsigned char
										// MemberRefExpr- type - unsigned char
											// ArraySubscriptExpr-  - stbtt_vertex
												// UnexposedExpr- verts - stbtt_vertex *
													// DeclRefExpr- verts - stbtt_vertex *
												// UnexposedExpr- i - int
													// DeclRefExpr- i - int
								// DeclRefExpr- STBTT_vline - int
							// CompoundStmt-  - 
								// DeclStmt-  - 
									// VarDecl- x0 - int
										// CStyleCastExpr-  - int
											// UnexposedExpr- x - short
												// MemberRefExpr- x - short
													// ArraySubscriptExpr-  - stbtt_vertex
														// UnexposedExpr- verts - stbtt_vertex *
															// DeclRefExpr- verts - stbtt_vertex *
														// BinaryOperator-  - int [Binary Operator: Sub (-)]
															// UnexposedExpr- i - int
																// DeclRefExpr- i - int
															// IntegerLiteral-  - int [Literal: 1]
									// VarDecl- y0 - int
										// CStyleCastExpr-  - int
											// UnexposedExpr- y - short
												// MemberRefExpr- y - short
													// ArraySubscriptExpr-  - stbtt_vertex
														// UnexposedExpr- verts - stbtt_vertex *
															// DeclRefExpr- verts - stbtt_vertex *
														// BinaryOperator-  - int [Binary Operator: Sub (-)]
															// UnexposedExpr- i - int
																// DeclRefExpr- i - int
															// IntegerLiteral-  - int [Literal: 1]
								// DeclStmt-  - 
									// VarDecl- x1 - int
										// CStyleCastExpr-  - int
											// UnexposedExpr- x - short
												// MemberRefExpr- x - short
													// ArraySubscriptExpr-  - stbtt_vertex
														// UnexposedExpr- verts - stbtt_vertex *
															// DeclRefExpr- verts - stbtt_vertex *
														// UnexposedExpr- i - int
															// DeclRefExpr- i - int
									// VarDecl- y1 - int
										// CStyleCastExpr-  - int
											// UnexposedExpr- y - short
												// MemberRefExpr- y - short
													// ArraySubscriptExpr-  - stbtt_vertex
														// UnexposedExpr- verts - stbtt_vertex *
															// DeclRefExpr- verts - stbtt_vertex *
														// UnexposedExpr- i - int
															// DeclRefExpr- i - int
								// IfStmt-  - 
									// BinaryOperator-  - int [Binary Operator: LAnd (&&)]
										// BinaryOperator-  - int [Binary Operator: LAnd (&&)]
											// BinaryOperator-  - int [Binary Operator: GT (>)]
												// UnexposedExpr- y - float
													// DeclRefExpr- y - float
												// UnexposedExpr-  - float
													// ParenExpr-  - int
														// ConditionalOperator-  - int
															// BinaryOperator-  - int [Binary Operator: LT (<)]
																// UnexposedExpr-  - int
																	// ParenExpr-  - int
																		// DeclRefExpr- y0 - int
																// UnexposedExpr-  - int
																	// ParenExpr-  - int
																		// DeclRefExpr- y1 - int
															// UnexposedExpr-  - int
																// ParenExpr-  - int
																	// DeclRefExpr- y0 - int
															// UnexposedExpr-  - int
																// ParenExpr-  - int
																	// DeclRefExpr- y1 - int
											// BinaryOperator-  - int [Binary Operator: LT (<)]
												// UnexposedExpr- y - float
													// DeclRefExpr- y - float
												// UnexposedExpr-  - float
													// ParenExpr-  - int
														// ConditionalOperator-  - int
															// BinaryOperator-  - int [Binary Operator: LT (<)]
																// UnexposedExpr-  - int
																	// ParenExpr-  - int
																		// DeclRefExpr- y0 - int
																// UnexposedExpr-  - int
																	// ParenExpr-  - int
																		// DeclRefExpr- y1 - int
															// UnexposedExpr-  - int
																// ParenExpr-  - int
																	// DeclRefExpr- y1 - int
															// UnexposedExpr-  - int
																// ParenExpr-  - int
																	// DeclRefExpr- y0 - int
										// BinaryOperator-  - int [Binary Operator: GT (>)]
											// UnexposedExpr- x - float
												// DeclRefExpr- x - float
											// UnexposedExpr-  - float
												// ParenExpr-  - int
													// ConditionalOperator-  - int
														// BinaryOperator-  - int [Binary Operator: LT (<)]
															// UnexposedExpr-  - int
																// ParenExpr-  - int
																	// DeclRefExpr- x0 - int
															// UnexposedExpr-  - int
																// ParenExpr-  - int
																	// DeclRefExpr- x1 - int
														// UnexposedExpr-  - int
															// ParenExpr-  - int
																// DeclRefExpr- x0 - int
														// UnexposedExpr-  - int
															// ParenExpr-  - int
																// DeclRefExpr- x1 - int
									// CompoundStmt-  - 
										// DeclStmt-  - 
											// VarDecl- x_inter - float
												// BinaryOperator-  - float [Binary Operator: Add (+)]
													// BinaryOperator-  - float [Binary Operator: Mul (*)]
														// BinaryOperator-  - float [Binary Operator: Div (/)]
															// ParenExpr-  - float
																// BinaryOperator-  - float [Binary Operator: Sub (-)]
																	// UnexposedExpr- y - float
																		// DeclRefExpr- y - float
																	// UnexposedExpr- y0 - float
																		// UnexposedExpr- y0 - int
																			// DeclRefExpr- y0 - int
															// UnexposedExpr-  - float
																// ParenExpr-  - int
																	// BinaryOperator-  - int [Binary Operator: Sub (-)]
																		// UnexposedExpr- y1 - int
																			// DeclRefExpr- y1 - int
																		// UnexposedExpr- y0 - int
																			// DeclRefExpr- y0 - int
														// UnexposedExpr-  - float
															// ParenExpr-  - int
																// BinaryOperator-  - int [Binary Operator: Sub (-)]
																	// UnexposedExpr- x1 - int
																		// DeclRefExpr- x1 - int
																	// UnexposedExpr- x0 - int
																		// DeclRefExpr- x0 - int
													// UnexposedExpr- x0 - float
														// UnexposedExpr- x0 - int
															// DeclRefExpr- x0 - int
										// IfStmt-  - 
											// BinaryOperator-  - int [Binary Operator: LT (<)]
												// UnexposedExpr- x_inter - float
													// DeclRefExpr- x_inter - float
												// UnexposedExpr- x - float
													// DeclRefExpr- x - float
											// CompoundAssignOperator-  - int
												// DeclRefExpr- winding - int
												// ConditionalOperator-  - int
													// ParenExpr-  - int
														// BinaryOperator-  - int [Binary Operator: LT (<)]
															// UnexposedExpr- y0 - int
																// DeclRefExpr- y0 - int
															// UnexposedExpr- y1 - int
																// DeclRefExpr- y1 - int
													// IntegerLiteral-  - int [Literal: 1]
													// UnaryOperator-  - int [Unary Operator: Minus (-)]
														// IntegerLiteral-  - int [Literal: 1]
						// IfStmt-  - 
							// BinaryOperator-  - int [Binary Operator: EQ (==)]
								// UnexposedExpr- type - int
									// UnexposedExpr- type - unsigned char
										// MemberRefExpr- type - unsigned char
											// ArraySubscriptExpr-  - stbtt_vertex
												// UnexposedExpr- verts - stbtt_vertex *
													// DeclRefExpr- verts - stbtt_vertex *
												// UnexposedExpr- i - int
													// DeclRefExpr- i - int
								// DeclRefExpr- STBTT_vcurve - int
							// CompoundStmt-  - 
								// DeclStmt-  - 
									// VarDecl- x0 - int
										// CStyleCastExpr-  - int
											// UnexposedExpr- x - short
												// MemberRefExpr- x - short
													// ArraySubscriptExpr-  - stbtt_vertex
														// UnexposedExpr- verts - stbtt_vertex *
															// DeclRefExpr- verts - stbtt_vertex *
														// BinaryOperator-  - int [Binary Operator: Sub (-)]
															// UnexposedExpr- i - int
																// DeclRefExpr- i - int
															// IntegerLiteral-  - int [Literal: 1]
									// VarDecl- y0 - int
										// CStyleCastExpr-  - int
											// UnexposedExpr- y - short
												// MemberRefExpr- y - short
													// ArraySubscriptExpr-  - stbtt_vertex
														// UnexposedExpr- verts - stbtt_vertex *
															// DeclRefExpr- verts - stbtt_vertex *
														// BinaryOperator-  - int [Binary Operator: Sub (-)]
															// UnexposedExpr- i - int
																// DeclRefExpr- i - int
															// IntegerLiteral-  - int [Literal: 1]
								// DeclStmt-  - 
									// VarDecl- x1 - int
										// CStyleCastExpr-  - int
											// UnexposedExpr- cx - short
												// MemberRefExpr- cx - short
													// ArraySubscriptExpr-  - stbtt_vertex
														// UnexposedExpr- verts - stbtt_vertex *
															// DeclRefExpr- verts - stbtt_vertex *
														// UnexposedExpr- i - int
															// DeclRefExpr- i - int
									// VarDecl- y1 - int
										// CStyleCastExpr-  - int
											// UnexposedExpr- cy - short
												// MemberRefExpr- cy - short
													// ArraySubscriptExpr-  - stbtt_vertex
														// UnexposedExpr- verts - stbtt_vertex *
															// DeclRefExpr- verts - stbtt_vertex *
														// UnexposedExpr- i - int
															// DeclRefExpr- i - int
								// DeclStmt-  - 
									// VarDecl- x2 - int
										// CStyleCastExpr-  - int
											// UnexposedExpr- x - short
												// MemberRefExpr- x - short
													// ArraySubscriptExpr-  - stbtt_vertex
														// UnexposedExpr- verts - stbtt_vertex *
															// DeclRefExpr- verts - stbtt_vertex *
														// UnexposedExpr- i - int
															// DeclRefExpr- i - int
									// VarDecl- y2 - int
										// CStyleCastExpr-  - int
											// UnexposedExpr- y - short
												// MemberRefExpr- y - short
													// ArraySubscriptExpr-  - stbtt_vertex
														// UnexposedExpr- verts - stbtt_vertex *
															// DeclRefExpr- verts - stbtt_vertex *
														// UnexposedExpr- i - int
															// DeclRefExpr- i - int
								// DeclStmt-  - 
									// VarDecl- ax - int
										// ParenExpr-  - int
											// ConditionalOperator-  - int
												// BinaryOperator-  - int [Binary Operator: LT (<)]
													// UnexposedExpr-  - int
														// ParenExpr-  - int
															// DeclRefExpr- x0 - int
													// ParenExpr-  - int
														// ParenExpr-  - int
															// ConditionalOperator-  - int
																// BinaryOperator-  - int [Binary Operator: LT (<)]
																	// UnexposedExpr-  - int
																		// ParenExpr-  - int
																			// DeclRefExpr- x1 - int
																	// UnexposedExpr-  - int
																		// ParenExpr-  - int
																			// DeclRefExpr- x2 - int
																// UnexposedExpr-  - int
																	// ParenExpr-  - int
																		// DeclRefExpr- x1 - int
																// UnexposedExpr-  - int
																	// ParenExpr-  - int
																		// DeclRefExpr- x2 - int
												// UnexposedExpr-  - int
													// ParenExpr-  - int
														// DeclRefExpr- x0 - int
												// ParenExpr-  - int
													// ParenExpr-  - int
														// ConditionalOperator-  - int
															// BinaryOperator-  - int [Binary Operator: LT (<)]
																// UnexposedExpr-  - int
																	// ParenExpr-  - int
																		// DeclRefExpr- x1 - int
																// UnexposedExpr-  - int
																	// ParenExpr-  - int
																		// DeclRefExpr- x2 - int
															// UnexposedExpr-  - int
																// ParenExpr-  - int
																	// DeclRefExpr- x1 - int
															// UnexposedExpr-  - int
																// ParenExpr-  - int
																	// DeclRefExpr- x2 - int
									// VarDecl- ay - int
										// ParenExpr-  - int
											// ConditionalOperator-  - int
												// BinaryOperator-  - int [Binary Operator: LT (<)]
													// UnexposedExpr-  - int
														// ParenExpr-  - int
															// DeclRefExpr- y0 - int
													// ParenExpr-  - int
														// ParenExpr-  - int
															// ConditionalOperator-  - int
																// BinaryOperator-  - int [Binary Operator: LT (<)]
																	// UnexposedExpr-  - int
																		// ParenExpr-  - int
																			// DeclRefExpr- y1 - int
																	// UnexposedExpr-  - int
																		// ParenExpr-  - int
																			// DeclRefExpr- y2 - int
																// UnexposedExpr-  - int
																	// ParenExpr-  - int
																		// DeclRefExpr- y1 - int
																// UnexposedExpr-  - int
																	// ParenExpr-  - int
																		// DeclRefExpr- y2 - int
												// UnexposedExpr-  - int
													// ParenExpr-  - int
														// DeclRefExpr- y0 - int
												// ParenExpr-  - int
													// ParenExpr-  - int
														// ConditionalOperator-  - int
															// BinaryOperator-  - int [Binary Operator: LT (<)]
																// UnexposedExpr-  - int
																	// ParenExpr-  - int
																		// DeclRefExpr- y1 - int
																// UnexposedExpr-  - int
																	// ParenExpr-  - int
																		// DeclRefExpr- y2 - int
															// UnexposedExpr-  - int
																// ParenExpr-  - int
																	// DeclRefExpr- y1 - int
															// UnexposedExpr-  - int
																// ParenExpr-  - int
																	// DeclRefExpr- y2 - int
								// DeclStmt-  - 
									// VarDecl- by - int
										// ParenExpr-  - int
											// ConditionalOperator-  - int
												// BinaryOperator-  - int [Binary Operator: LT (<)]
													// UnexposedExpr-  - int
														// ParenExpr-  - int
															// DeclRefExpr- y0 - int
													// ParenExpr-  - int
														// ParenExpr-  - int
															// ConditionalOperator-  - int
																// BinaryOperator-  - int [Binary Operator: LT (<)]
																	// UnexposedExpr-  - int
																		// ParenExpr-  - int
																			// DeclRefExpr- y1 - int
																	// UnexposedExpr-  - int
																		// ParenExpr-  - int
																			// DeclRefExpr- y2 - int
																// UnexposedExpr-  - int
																	// ParenExpr-  - int
																		// DeclRefExpr- y2 - int
																// UnexposedExpr-  - int
																	// ParenExpr-  - int
																		// DeclRefExpr- y1 - int
												// ParenExpr-  - int
													// ParenExpr-  - int
														// ConditionalOperator-  - int
															// BinaryOperator-  - int [Binary Operator: LT (<)]
																// UnexposedExpr-  - int
																	// ParenExpr-  - int
																		// DeclRefExpr- y1 - int
																// UnexposedExpr-  - int
																	// ParenExpr-  - int
																		// DeclRefExpr- y2 - int
															// UnexposedExpr-  - int
																// ParenExpr-  - int
																	// DeclRefExpr- y2 - int
															// UnexposedExpr-  - int
																// ParenExpr-  - int
																	// DeclRefExpr- y1 - int
												// UnexposedExpr-  - int
													// ParenExpr-  - int
														// DeclRefExpr- y0 - int
								// IfStmt-  - 
									// BinaryOperator-  - int [Binary Operator: LAnd (&&)]
										// BinaryOperator-  - int [Binary Operator: LAnd (&&)]
											// BinaryOperator-  - int [Binary Operator: GT (>)]
												// UnexposedExpr- y - float
													// DeclRefExpr- y - float
												// UnexposedExpr- ay - float
													// UnexposedExpr- ay - int
														// DeclRefExpr- ay - int
											// BinaryOperator-  - int [Binary Operator: LT (<)]
												// UnexposedExpr- y - float
													// DeclRefExpr- y - float
												// UnexposedExpr- by - float
													// UnexposedExpr- by - int
														// DeclRefExpr- by - int
										// BinaryOperator-  - int [Binary Operator: GT (>)]
											// UnexposedExpr- x - float
												// DeclRefExpr- x - float
											// UnexposedExpr- ax - float
												// UnexposedExpr- ax - int
													// DeclRefExpr- ax - int
									// CompoundStmt-  - 
										// DeclStmt-  - 
											// VarDecl- q0 - float [2]
												// IntegerLiteral-  - int [Literal: 2]
											// VarDecl- q1 - float [2]
												// IntegerLiteral-  - int [Literal: 2]
											// VarDecl- q2 - float [2]
												// IntegerLiteral-  - int [Literal: 2]
										// DeclStmt-  - 
											// VarDecl- hits - float [4]
												// IntegerLiteral-  - int [Literal: 4]
										// BinaryOperator-  - float [Binary Operator: Assign (=)]
											// ArraySubscriptExpr-  - float
												// UnexposedExpr- q0 - float *
													// DeclRefExpr- q0 - float [2]
												// IntegerLiteral-  - int [Literal: 0]
											// CStyleCastExpr-  - float
												// UnexposedExpr- x0 - int
													// DeclRefExpr- x0 - int
										// BinaryOperator-  - float [Binary Operator: Assign (=)]
											// ArraySubscriptExpr-  - float
												// UnexposedExpr- q0 - float *
													// DeclRefExpr- q0 - float [2]
												// IntegerLiteral-  - int [Literal: 1]
											// CStyleCastExpr-  - float
												// UnexposedExpr- y0 - int
													// DeclRefExpr- y0 - int
										// BinaryOperator-  - float [Binary Operator: Assign (=)]
											// ArraySubscriptExpr-  - float
												// UnexposedExpr- q1 - float *
													// DeclRefExpr- q1 - float [2]
												// IntegerLiteral-  - int [Literal: 0]
											// CStyleCastExpr-  - float
												// UnexposedExpr- x1 - int
													// DeclRefExpr- x1 - int
										// BinaryOperator-  - float [Binary Operator: Assign (=)]
											// ArraySubscriptExpr-  - float
												// UnexposedExpr- q1 - float *
													// DeclRefExpr- q1 - float [2]
												// IntegerLiteral-  - int [Literal: 1]
											// CStyleCastExpr-  - float
												// UnexposedExpr- y1 - int
													// DeclRefExpr- y1 - int
										// BinaryOperator-  - float [Binary Operator: Assign (=)]
											// ArraySubscriptExpr-  - float
												// UnexposedExpr- q2 - float *
													// DeclRefExpr- q2 - float [2]
												// IntegerLiteral-  - int [Literal: 0]
											// CStyleCastExpr-  - float
												// UnexposedExpr- x2 - int
													// DeclRefExpr- x2 - int
										// BinaryOperator-  - float [Binary Operator: Assign (=)]
											// ArraySubscriptExpr-  - float
												// UnexposedExpr- q2 - float *
													// DeclRefExpr- q2 - float [2]
												// IntegerLiteral-  - int [Literal: 1]
											// CStyleCastExpr-  - float
												// UnexposedExpr- y2 - int
													// DeclRefExpr- y2 - int
										// IfStmt-  - 
											// BinaryOperator-  - int [Binary Operator: LOr (||)]
												// CallExpr- equal - int
													// UnexposedExpr- equal - int (*)(float *, float *)
														// DeclRefExpr- equal - int (float *, float *)
													// UnexposedExpr- q0 - float *
														// DeclRefExpr- q0 - float [2]
													// UnexposedExpr- q1 - float *
														// DeclRefExpr- q1 - float [2]
												// CallExpr- equal - int
													// UnexposedExpr- equal - int (*)(float *, float *)
														// DeclRefExpr- equal - int (float *, float *)
													// UnexposedExpr- q1 - float *
														// DeclRefExpr- q1 - float [2]
													// UnexposedExpr- q2 - float *
														// DeclRefExpr- q2 - float [2]
											// CompoundStmt-  - 
												// BinaryOperator-  - int [Binary Operator: Assign (=)]
													// DeclRefExpr- x0 - int
													// CStyleCastExpr-  - int
														// UnexposedExpr- x - short
															// MemberRefExpr- x - short
																// ArraySubscriptExpr-  - stbtt_vertex
																	// UnexposedExpr- verts - stbtt_vertex *
																		// DeclRefExpr- verts - stbtt_vertex *
																	// BinaryOperator-  - int [Binary Operator: Sub (-)]
																		// UnexposedExpr- i - int
																			// DeclRefExpr- i - int
																		// IntegerLiteral-  - int [Literal: 1]
												// BinaryOperator-  - int [Binary Operator: Assign (=)]
													// DeclRefExpr- y0 - int
													// CStyleCastExpr-  - int
														// UnexposedExpr- y - short
															// MemberRefExpr- y - short
																// ArraySubscriptExpr-  - stbtt_vertex
																	// UnexposedExpr- verts - stbtt_vertex *
																		// DeclRefExpr- verts - stbtt_vertex *
																	// BinaryOperator-  - int [Binary Operator: Sub (-)]
																		// UnexposedExpr- i - int
																			// DeclRefExpr- i - int
																		// IntegerLiteral-  - int [Literal: 1]
												// BinaryOperator-  - int [Binary Operator: Assign (=)]
													// DeclRefExpr- x1 - int
													// CStyleCastExpr-  - int
														// UnexposedExpr- x - short
															// MemberRefExpr- x - short
																// ArraySubscriptExpr-  - stbtt_vertex
																	// UnexposedExpr- verts - stbtt_vertex *
																		// DeclRefExpr- verts - stbtt_vertex *
																	// UnexposedExpr- i - int
																		// DeclRefExpr- i - int
												// BinaryOperator-  - int [Binary Operator: Assign (=)]
													// DeclRefExpr- y1 - int
													// CStyleCastExpr-  - int
														// UnexposedExpr- y - short
															// MemberRefExpr- y - short
																// ArraySubscriptExpr-  - stbtt_vertex
																	// UnexposedExpr- verts - stbtt_vertex *
																		// DeclRefExpr- verts - stbtt_vertex *
																	// UnexposedExpr- i - int
																		// DeclRefExpr- i - int
												// IfStmt-  - 
													// BinaryOperator-  - int [Binary Operator: LAnd (&&)]
														// BinaryOperator-  - int [Binary Operator: LAnd (&&)]
															// BinaryOperator-  - int [Binary Operator: GT (>)]
																// UnexposedExpr- y - float
																	// DeclRefExpr- y - float
																// UnexposedExpr-  - float
																	// ParenExpr-  - int
																		// ConditionalOperator-  - int
																			// BinaryOperator-  - int [Binary Operator: LT (<)]
																				// UnexposedExpr-  - int
																					// ParenExpr-  - int
																						// DeclRefExpr- y0 - int
																				// UnexposedExpr-  - int
																					// ParenExpr-  - int
																						// DeclRefExpr- y1 - int
																			// UnexposedExpr-  - int
																				// ParenExpr-  - int
																					// DeclRefExpr- y0 - int
																			// UnexposedExpr-  - int
																				// ParenExpr-  - int
																					// DeclRefExpr- y1 - int
															// BinaryOperator-  - int [Binary Operator: LT (<)]
																// UnexposedExpr- y - float
																	// DeclRefExpr- y - float
																// UnexposedExpr-  - float
																	// ParenExpr-  - int
																		// ConditionalOperator-  - int
																			// BinaryOperator-  - int [Binary Operator: LT (<)]
																				// UnexposedExpr-  - int
																					// ParenExpr-  - int
																						// DeclRefExpr- y0 - int
																				// UnexposedExpr-  - int
																					// ParenExpr-  - int
																						// DeclRefExpr- y1 - int
																			// UnexposedExpr-  - int
																				// ParenExpr-  - int
																					// DeclRefExpr- y1 - int
																			// UnexposedExpr-  - int
																				// ParenExpr-  - int
																					// DeclRefExpr- y0 - int
														// BinaryOperator-  - int [Binary Operator: GT (>)]
															// UnexposedExpr- x - float
																// DeclRefExpr- x - float
															// UnexposedExpr-  - float
																// ParenExpr-  - int
																	// ConditionalOperator-  - int
																		// BinaryOperator-  - int [Binary Operator: LT (<)]
																			// UnexposedExpr-  - int
																				// ParenExpr-  - int
																					// DeclRefExpr- x0 - int
																			// UnexposedExpr-  - int
																				// ParenExpr-  - int
																					// DeclRefExpr- x1 - int
																		// UnexposedExpr-  - int
																			// ParenExpr-  - int
																				// DeclRefExpr- x0 - int
																		// UnexposedExpr-  - int
																			// ParenExpr-  - int
																				// DeclRefExpr- x1 - int
													// CompoundStmt-  - 
														// DeclStmt-  - 
															// VarDecl- x_inter - float
																// BinaryOperator-  - float [Binary Operator: Add (+)]
																	// BinaryOperator-  - float [Binary Operator: Mul (*)]
																		// BinaryOperator-  - float [Binary Operator: Div (/)]
																			// ParenExpr-  - float
																				// BinaryOperator-  - float [Binary Operator: Sub (-)]
																					// UnexposedExpr- y - float
																						// DeclRefExpr- y - float
																					// UnexposedExpr- y0 - float
																						// UnexposedExpr- y0 - int
																							// DeclRefExpr- y0 - int
																			// UnexposedExpr-  - float
																				// ParenExpr-  - int
																					// BinaryOperator-  - int [Binary Operator: Sub (-)]
																						// UnexposedExpr- y1 - int
																							// DeclRefExpr- y1 - int
																						// UnexposedExpr- y0 - int
																							// DeclRefExpr- y0 - int
																		// UnexposedExpr-  - float
																			// ParenExpr-  - int
																				// BinaryOperator-  - int [Binary Operator: Sub (-)]
																					// UnexposedExpr- x1 - int
																						// DeclRefExpr- x1 - int
																					// UnexposedExpr- x0 - int
																						// DeclRefExpr- x0 - int
																	// UnexposedExpr- x0 - float
																		// UnexposedExpr- x0 - int
																			// DeclRefExpr- x0 - int
														// IfStmt-  - 
															// BinaryOperator-  - int [Binary Operator: LT (<)]
																// UnexposedExpr- x_inter - float
																	// DeclRefExpr- x_inter - float
																// UnexposedExpr- x - float
																	// DeclRefExpr- x - float
															// CompoundAssignOperator-  - int
																// DeclRefExpr- winding - int
																// ConditionalOperator-  - int
																	// ParenExpr-  - int
																		// BinaryOperator-  - int [Binary Operator: LT (<)]
																			// UnexposedExpr- y0 - int
																				// DeclRefExpr- y0 - int
																			// UnexposedExpr- y1 - int
																				// DeclRefExpr- y1 - int
																	// IntegerLiteral-  - int [Literal: 1]
																	// UnaryOperator-  - int [Unary Operator: Minus (-)]
																		// IntegerLiteral-  - int [Literal: 1]
											// CompoundStmt-  - 
												// DeclStmt-  - 
													// VarDecl- num_hits - int
														// CallExpr- stbtt__ray_intersect_bezier - int
															// UnexposedExpr- stbtt__ray_intersect_bezier - int (*)(float *, float *, float *, float *, float *, float *)
																// DeclRefExpr- stbtt__ray_intersect_bezier - int (float *, float *, float *, float *, float *, float *)
															// UnexposedExpr- orig - float *
																// DeclRefExpr- orig - float [2]
															// UnexposedExpr- ray - float *
																// DeclRefExpr- ray - float [2]
															// UnexposedExpr- q0 - float *
																// DeclRefExpr- q0 - float [2]
															// UnexposedExpr- q1 - float *
																// DeclRefExpr- q1 - float [2]
															// UnexposedExpr- q2 - float *
																// DeclRefExpr- q2 - float [2]
															// UnexposedExpr- hits - float *
																// DeclRefExpr- hits - float [4]
												// IfStmt-  - 
													// BinaryOperator-  - int [Binary Operator: GE (>=)]
														// UnexposedExpr- num_hits - int
															// DeclRefExpr- num_hits - int
														// IntegerLiteral-  - int [Literal: 1]
													// IfStmt-  - 
														// BinaryOperator-  - int [Binary Operator: LT (<)]
															// UnexposedExpr-  - float
																// ArraySubscriptExpr-  - float
																	// UnexposedExpr- hits - float *
																		// DeclRefExpr- hits - float [4]
																	// IntegerLiteral-  - int [Literal: 0]
															// UnexposedExpr-  - float
																// IntegerLiteral-  - int [Literal: 0]
														// CompoundAssignOperator-  - int
															// DeclRefExpr- winding - int
															// ParenExpr-  - int
																// ConditionalOperator-  - int
																	// BinaryOperator-  - int [Binary Operator: LT (<)]
																		// UnexposedExpr-  - float
																			// ArraySubscriptExpr-  - float
																				// UnexposedExpr- hits - float *
																					// DeclRefExpr- hits - float [4]
																				// IntegerLiteral-  - int [Literal: 1]
																		// UnexposedExpr-  - float
																			// IntegerLiteral-  - int [Literal: 0]
																	// UnaryOperator-  - int [Unary Operator: Minus (-)]
																		// IntegerLiteral-  - int [Literal: 1]
																	// IntegerLiteral-  - int [Literal: 1]
												// IfStmt-  - 
													// BinaryOperator-  - int [Binary Operator: GE (>=)]
														// UnexposedExpr- num_hits - int
															// DeclRefExpr- num_hits - int
														// IntegerLiteral-  - int [Literal: 2]
													// IfStmt-  - 
														// BinaryOperator-  - int [Binary Operator: LT (<)]
															// UnexposedExpr-  - float
																// ArraySubscriptExpr-  - float
																	// UnexposedExpr- hits - float *
																		// DeclRefExpr- hits - float [4]
																	// IntegerLiteral-  - int [Literal: 2]
															// UnexposedExpr-  - float
																// IntegerLiteral-  - int [Literal: 0]
														// CompoundAssignOperator-  - int
															// DeclRefExpr- winding - int
															// ParenExpr-  - int
																// ConditionalOperator-  - int
																	// BinaryOperator-  - int [Binary Operator: LT (<)]
																		// UnexposedExpr-  - float
																			// ArraySubscriptExpr-  - float
																				// UnexposedExpr- hits - float *
																					// DeclRefExpr- hits - float [4]
																				// IntegerLiteral-  - int [Literal: 3]
																		// UnexposedExpr-  - float
																			// IntegerLiteral-  - int [Literal: 0]
																	// UnaryOperator-  - int [Unary Operator: Minus (-)]
																		// IntegerLiteral-  - int [Literal: 1]
																	// IntegerLiteral-  - int [Literal: 1]
				// ReturnStmt-  - 
					// UnexposedExpr- winding - int
						// DeclRefExpr- winding - int
		// FunctionDecl- stbtt__cuberoot - float (float)
			// ParmDecl- x - float
			// CompoundStmt-  - 
				// IfStmt-  - 
					// BinaryOperator-  - int [Binary Operator: LT (<)]
						// UnexposedExpr- x - float
							// DeclRefExpr- x - float
						// UnexposedExpr-  - float
							// IntegerLiteral-  - int [Literal: 0]
					// ReturnStmt-  - 
						// UnaryOperator-  - float [Unary Operator: Minus (-)]
							// CStyleCastExpr-  - float
								// CallExpr- pow - double
									// UnexposedExpr- pow - double (*)(double, double)
										// DeclRefExpr- pow - double (double, double)
									// UnexposedExpr-  - double
										// UnaryOperator-  - float [Unary Operator: Minus (-)]
											// UnexposedExpr- x - float
												// DeclRefExpr- x - float
									// UnexposedExpr-  - double
										// BinaryOperator-  - float [Binary Operator: Div (/)]
											// FloatingLiteral-  - float [Literal: 1]
											// FloatingLiteral-  - float [Literal: 3]
					// ReturnStmt-  - 
						// CStyleCastExpr-  - float
							// CallExpr- pow - double
								// UnexposedExpr- pow - double (*)(double, double)
									// DeclRefExpr- pow - double (double, double)
								// UnexposedExpr- x - double
									// UnexposedExpr- x - float
										// DeclRefExpr- x - float
								// UnexposedExpr-  - double
									// BinaryOperator-  - float [Binary Operator: Div (/)]
										// FloatingLiteral-  - float [Literal: 1]
										// FloatingLiteral-  - float [Literal: 3]
		// FunctionDecl- stbtt__solve_cubic - int (float, float, float, float *)
			// ParmDecl- a - float
			// ParmDecl- b - float
			// ParmDecl- c - float
			// ParmDecl- r - float *
			// CompoundStmt-  - 
				// DeclStmt-  - 
					// VarDecl- s - float
						// BinaryOperator-  - float [Binary Operator: Div (/)]
							// UnaryOperator-  - float [Unary Operator: Minus (-)]
								// UnexposedExpr- a - float
									// DeclRefExpr- a - float
							// UnexposedExpr-  - float
								// IntegerLiteral-  - int [Literal: 3]
				// DeclStmt-  - 
					// VarDecl- p - float
						// BinaryOperator-  - float [Binary Operator: Sub (-)]
							// UnexposedExpr- b - float
								// DeclRefExpr- b - float
							// BinaryOperator-  - float [Binary Operator: Div (/)]
								// BinaryOperator-  - float [Binary Operator: Mul (*)]
									// UnexposedExpr- a - float
										// DeclRefExpr- a - float
									// UnexposedExpr- a - float
										// DeclRefExpr- a - float
								// UnexposedExpr-  - float
									// IntegerLiteral-  - int [Literal: 3]
				// DeclStmt-  - 
					// VarDecl- q - float
						// BinaryOperator-  - float [Binary Operator: Add (+)]
							// BinaryOperator-  - float [Binary Operator: Div (/)]
								// BinaryOperator-  - float [Binary Operator: Mul (*)]
									// UnexposedExpr- a - float
										// DeclRefExpr- a - float
									// ParenExpr-  - float
										// BinaryOperator-  - float [Binary Operator: Sub (-)]
											// BinaryOperator-  - float [Binary Operator: Mul (*)]
												// BinaryOperator-  - float [Binary Operator: Mul (*)]
													// UnexposedExpr-  - float
														// IntegerLiteral-  - int [Literal: 2]
													// UnexposedExpr- a - float
														// DeclRefExpr- a - float
												// UnexposedExpr- a - float
													// DeclRefExpr- a - float
											// BinaryOperator-  - float [Binary Operator: Mul (*)]
												// UnexposedExpr-  - float
													// IntegerLiteral-  - int [Literal: 9]
												// UnexposedExpr- b - float
													// DeclRefExpr- b - float
								// UnexposedExpr-  - float
									// IntegerLiteral-  - int [Literal: 27]
							// UnexposedExpr- c - float
								// DeclRefExpr- c - float
				// DeclStmt-  - 
					// VarDecl- p3 - float
						// BinaryOperator-  - float [Binary Operator: Mul (*)]
							// BinaryOperator-  - float [Binary Operator: Mul (*)]
								// UnexposedExpr- p - float
									// DeclRefExpr- p - float
								// UnexposedExpr- p - float
									// DeclRefExpr- p - float
							// UnexposedExpr- p - float
								// DeclRefExpr- p - float
				// DeclStmt-  - 
					// VarDecl- d - float
						// BinaryOperator-  - float [Binary Operator: Add (+)]
							// BinaryOperator-  - float [Binary Operator: Mul (*)]
								// UnexposedExpr- q - float
									// DeclRefExpr- q - float
								// UnexposedExpr- q - float
									// DeclRefExpr- q - float
							// BinaryOperator-  - float [Binary Operator: Div (/)]
								// BinaryOperator-  - float [Binary Operator: Mul (*)]
									// UnexposedExpr-  - float
										// IntegerLiteral-  - int [Literal: 4]
									// UnexposedExpr- p3 - float
										// DeclRefExpr- p3 - float
								// UnexposedExpr-  - float
									// IntegerLiteral-  - int [Literal: 27]
				// IfStmt-  - 
					// BinaryOperator-  - int [Binary Operator: GE (>=)]
						// UnexposedExpr- d - float
							// DeclRefExpr- d - float
						// UnexposedExpr-  - float
							// IntegerLiteral-  - int [Literal: 0]
					// CompoundStmt-  - 
						// DeclStmt-  - 
							// VarDecl- z - float
								// CStyleCastExpr-  - float
									// CallExpr- sqrt - double
										// UnexposedExpr- sqrt - double (*)(double)
											// DeclRefExpr- sqrt - double (double)
										// UnexposedExpr- d - double
											// UnexposedExpr- d - float
												// DeclRefExpr- d - float
						// DeclStmt-  - 
							// VarDecl- u - float
								// BinaryOperator-  - float [Binary Operator: Div (/)]
									// ParenExpr-  - float
										// BinaryOperator-  - float [Binary Operator: Add (+)]
											// UnaryOperator-  - float [Unary Operator: Minus (-)]
												// UnexposedExpr- q - float
													// DeclRefExpr- q - float
											// UnexposedExpr- z - float
												// DeclRefExpr- z - float
									// UnexposedExpr-  - float
										// IntegerLiteral-  - int [Literal: 2]
						// DeclStmt-  - 
							// VarDecl- v - float
								// BinaryOperator-  - float [Binary Operator: Div (/)]
									// ParenExpr-  - float
										// BinaryOperator-  - float [Binary Operator: Sub (-)]
											// UnaryOperator-  - float [Unary Operator: Minus (-)]
												// UnexposedExpr- q - float
													// DeclRefExpr- q - float
											// UnexposedExpr- z - float
												// DeclRefExpr- z - float
									// UnexposedExpr-  - float
										// IntegerLiteral-  - int [Literal: 2]
						// BinaryOperator-  - float [Binary Operator: Assign (=)]
							// DeclRefExpr- u - float
							// CallExpr- stbtt__cuberoot - float
								// UnexposedExpr- stbtt__cuberoot - float (*)(float)
									// DeclRefExpr- stbtt__cuberoot - float (float)
								// UnexposedExpr- u - float
									// DeclRefExpr- u - float
						// BinaryOperator-  - float [Binary Operator: Assign (=)]
							// DeclRefExpr- v - float
							// CallExpr- stbtt__cuberoot - float
								// UnexposedExpr- stbtt__cuberoot - float (*)(float)
									// DeclRefExpr- stbtt__cuberoot - float (float)
								// UnexposedExpr- v - float
									// DeclRefExpr- v - float
						// BinaryOperator-  - float [Binary Operator: Assign (=)]
							// ArraySubscriptExpr-  - float
								// UnexposedExpr- r - float *
									// DeclRefExpr- r - float *
								// IntegerLiteral-  - int [Literal: 0]
							// BinaryOperator-  - float [Binary Operator: Add (+)]
								// BinaryOperator-  - float [Binary Operator: Add (+)]
									// UnexposedExpr- s - float
										// DeclRefExpr- s - float
									// UnexposedExpr- u - float
										// DeclRefExpr- u - float
								// UnexposedExpr- v - float
									// DeclRefExpr- v - float
						// ReturnStmt-  - 
							// IntegerLiteral-  - int [Literal: 1]
					// CompoundStmt-  - 
						// DeclStmt-  - 
							// VarDecl- u - float
								// CStyleCastExpr-  - float
									// CallExpr- sqrt - double
										// UnexposedExpr- sqrt - double (*)(double)
											// DeclRefExpr- sqrt - double (double)
										// UnexposedExpr-  - double
											// BinaryOperator-  - float [Binary Operator: Div (/)]
												// UnaryOperator-  - float [Unary Operator: Minus (-)]
													// UnexposedExpr- p - float
														// DeclRefExpr- p - float
												// UnexposedExpr-  - float
													// IntegerLiteral-  - int [Literal: 3]
						// DeclStmt-  - 
							// VarDecl- v - float
								// BinaryOperator-  - float [Binary Operator: Div (/)]
									// CStyleCastExpr-  - float
										// CallExpr- acos - double
											// UnexposedExpr- acos - double (*)(double)
												// DeclRefExpr- acos - double (double)
											// BinaryOperator-  - double [Binary Operator: Div (/)]
												// BinaryOperator-  - double [Binary Operator: Mul (*)]
													// UnaryOperator-  - double [Unary Operator: Minus (-)]
														// CallExpr- sqrt - double
															// UnexposedExpr- sqrt - double (*)(double)
																// DeclRefExpr- sqrt - double (double)
															// UnexposedExpr-  - double
																// BinaryOperator-  - float [Binary Operator: Div (/)]
																	// UnexposedExpr-  - float
																		// UnaryOperator-  - int [Unary Operator: Minus (-)]
																			// IntegerLiteral-  - int [Literal: 27]
																	// UnexposedExpr- p3 - float
																		// DeclRefExpr- p3 - float
													// UnexposedExpr- q - double
														// UnexposedExpr- q - float
															// DeclRefExpr- q - float
												// UnexposedExpr-  - double
													// IntegerLiteral-  - int [Literal: 2]
									// UnexposedExpr-  - float
										// IntegerLiteral-  - int [Literal: 3]
						// DeclStmt-  - 
							// VarDecl- m - float
								// CStyleCastExpr-  - float
									// CallExpr- cos - double
										// UnexposedExpr- cos - double (*)(double)
											// DeclRefExpr- cos - double (double)
										// UnexposedExpr- v - double
											// UnexposedExpr- v - float
												// DeclRefExpr- v - float
						// DeclStmt-  - 
							// VarDecl- n - float
								// BinaryOperator-  - float [Binary Operator: Mul (*)]
									// CStyleCastExpr-  - float
										// CallExpr- cos - double
											// UnexposedExpr- cos - double (*)(double)
												// DeclRefExpr- cos - double (double)
											// BinaryOperator-  - double [Binary Operator: Sub (-)]
												// UnexposedExpr- v - double
													// UnexposedExpr- v - float
														// DeclRefExpr- v - float
												// BinaryOperator-  - double [Binary Operator: Div (/)]
													// FloatingLiteral-  - double [Literal: 3.1415920000000002]
													// UnexposedExpr-  - double
														// IntegerLiteral-  - int [Literal: 2]
									// FloatingLiteral-  - float [Literal: 1.73205078]
						// BinaryOperator-  - float [Binary Operator: Assign (=)]
							// ArraySubscriptExpr-  - float
								// UnexposedExpr- r - float *
									// DeclRefExpr- r - float *
								// IntegerLiteral-  - int [Literal: 0]
							// BinaryOperator-  - float [Binary Operator: Add (+)]
								// UnexposedExpr- s - float
									// DeclRefExpr- s - float
								// BinaryOperator-  - float [Binary Operator: Mul (*)]
									// BinaryOperator-  - float [Binary Operator: Mul (*)]
										// UnexposedExpr- u - float
											// DeclRefExpr- u - float
										// UnexposedExpr-  - float
											// IntegerLiteral-  - int [Literal: 2]
									// UnexposedExpr- m - float
										// DeclRefExpr- m - float
						// BinaryOperator-  - float [Binary Operator: Assign (=)]
							// ArraySubscriptExpr-  - float
								// UnexposedExpr- r - float *
									// DeclRefExpr- r - float *
								// IntegerLiteral-  - int [Literal: 1]
							// BinaryOperator-  - float [Binary Operator: Sub (-)]
								// UnexposedExpr- s - float
									// DeclRefExpr- s - float
								// BinaryOperator-  - float [Binary Operator: Mul (*)]
									// UnexposedExpr- u - float
										// DeclRefExpr- u - float
									// ParenExpr-  - float
										// BinaryOperator-  - float [Binary Operator: Add (+)]
											// UnexposedExpr- m - float
												// DeclRefExpr- m - float
											// UnexposedExpr- n - float
												// DeclRefExpr- n - float
						// BinaryOperator-  - float [Binary Operator: Assign (=)]
							// ArraySubscriptExpr-  - float
								// UnexposedExpr- r - float *
									// DeclRefExpr- r - float *
								// IntegerLiteral-  - int [Literal: 2]
							// BinaryOperator-  - float [Binary Operator: Sub (-)]
								// UnexposedExpr- s - float
									// DeclRefExpr- s - float
								// BinaryOperator-  - float [Binary Operator: Mul (*)]
									// UnexposedExpr- u - float
										// DeclRefExpr- u - float
									// ParenExpr-  - float
										// BinaryOperator-  - float [Binary Operator: Sub (-)]
											// UnexposedExpr- m - float
												// DeclRefExpr- m - float
											// UnexposedExpr- n - float
												// DeclRefExpr- n - float
						// ReturnStmt-  - 
							// IntegerLiteral-  - int [Literal: 3]
		// FunctionDecl- stbtt_GetGlyphSDF - unsigned char *(const stbtt_fontinfo *, float, int, int, unsigned char, float, int *, int *, int *, int *)
			// ParmDecl- info - const stbtt_fontinfo *
				// TypeRef- stbtt_fontinfo - stbtt_fontinfo
			// ParmDecl- scale - float
			// ParmDecl- glyph - int
			// ParmDecl- padding - int
			// ParmDecl- onedge_value - unsigned char
			// ParmDecl- pixel_dist_scale - float
			// ParmDecl- width - int *
			// ParmDecl- height - int *
			// ParmDecl- xoff - int *
			// ParmDecl- yoff - int *
			// CompoundStmt-  - 
				// DeclStmt-  - 
					// VarDecl- scale_x - float
						// UnexposedExpr- scale - float
							// DeclRefExpr- scale - float
					// VarDecl- scale_y - float
						// UnexposedExpr- scale - float
							// DeclRefExpr- scale - float
				// DeclStmt-  - 
					// VarDecl- ix0 - int
					// VarDecl- iy0 - int
					// VarDecl- ix1 - int
					// VarDecl- iy1 - int
				// DeclStmt-  - 
					// VarDecl- w - int
					// VarDecl- h - int
				// DeclStmt-  - 
					// VarDecl- data - unsigned char *
				// IfStmt-  - 
					// BinaryOperator-  - int [Binary Operator: EQ (==)]
						// UnexposedExpr- scale_x - float
							// DeclRefExpr- scale_x - float
						// UnexposedExpr-  - float
							// IntegerLiteral-  - int [Literal: 0]
					// BinaryOperator-  - float [Binary Operator: Assign (=)]
						// DeclRefExpr- scale_x - float
						// UnexposedExpr- scale_y - float
							// DeclRefExpr- scale_y - float
				// IfStmt-  - 
					// BinaryOperator-  - int [Binary Operator: EQ (==)]
						// UnexposedExpr- scale_y - float
							// DeclRefExpr- scale_y - float
						// UnexposedExpr-  - float
							// IntegerLiteral-  - int [Literal: 0]
					// CompoundStmt-  - 
						// IfStmt-  - 
							// BinaryOperator-  - int [Binary Operator: EQ (==)]
								// UnexposedExpr- scale_x - float
									// DeclRefExpr- scale_x - float
								// UnexposedExpr-  - float
									// IntegerLiteral-  - int [Literal: 0]
							// ReturnStmt-  - 
								// UnexposedExpr-  - unsigned char *
									// ParenExpr-  - void *
										// CStyleCastExpr-  - void *
											// IntegerLiteral-  - int [Literal: 0]
						// BinaryOperator-  - float [Binary Operator: Assign (=)]
							// DeclRefExpr- scale_y - float
							// UnexposedExpr- scale_x - float
								// DeclRefExpr- scale_x - float
				// CallExpr- stbtt_GetGlyphBitmapBoxSubpixel - void
					// UnexposedExpr- stbtt_GetGlyphBitmapBoxSubpixel - void (*)(const stbtt_fontinfo *, int, float, float, float, float, int *, int *, int *, int *)
						// DeclRefExpr- stbtt_GetGlyphBitmapBoxSubpixel - void (const stbtt_fontinfo *, int, float, float, float, float, int *, int *, int *, int *)
					// UnexposedExpr- info - const stbtt_fontinfo *
						// DeclRefExpr- info - const stbtt_fontinfo *
					// UnexposedExpr- glyph - int
						// DeclRefExpr- glyph - int
					// UnexposedExpr- scale - float
						// DeclRefExpr- scale - float
					// UnexposedExpr- scale - float
						// DeclRefExpr- scale - float
					// FloatingLiteral-  - float [Literal: 0]
					// FloatingLiteral-  - float [Literal: 0]
					// UnaryOperator-  - int * [Unary Operator: AddrOf (&)]
						// DeclRefExpr- ix0 - int
					// UnaryOperator-  - int * [Unary Operator: AddrOf (&)]
						// DeclRefExpr- iy0 - int
					// UnaryOperator-  - int * [Unary Operator: AddrOf (&)]
						// DeclRefExpr- ix1 - int
					// UnaryOperator-  - int * [Unary Operator: AddrOf (&)]
						// DeclRefExpr- iy1 - int
				// IfStmt-  - 
					// BinaryOperator-  - int [Binary Operator: LOr (||)]
						// BinaryOperator-  - int [Binary Operator: EQ (==)]
							// UnexposedExpr- ix0 - int
								// DeclRefExpr- ix0 - int
							// UnexposedExpr- ix1 - int
								// DeclRefExpr- ix1 - int
						// BinaryOperator-  - int [Binary Operator: EQ (==)]
							// UnexposedExpr- iy0 - int
								// DeclRefExpr- iy0 - int
							// UnexposedExpr- iy1 - int
								// DeclRefExpr- iy1 - int
					// ReturnStmt-  - 
						// UnexposedExpr-  - unsigned char *
							// ParenExpr-  - void *
								// CStyleCastExpr-  - void *
									// IntegerLiteral-  - int [Literal: 0]
				// CompoundAssignOperator-  - int
					// DeclRefExpr- ix0 - int
					// UnexposedExpr- padding - int
						// DeclRefExpr- padding - int
				// CompoundAssignOperator-  - int
					// DeclRefExpr- iy0 - int
					// UnexposedExpr- padding - int
						// DeclRefExpr- padding - int
				// CompoundAssignOperator-  - int
					// DeclRefExpr- ix1 - int
					// UnexposedExpr- padding - int
						// DeclRefExpr- padding - int
				// CompoundAssignOperator-  - int
					// DeclRefExpr- iy1 - int
					// UnexposedExpr- padding - int
						// DeclRefExpr- padding - int
				// BinaryOperator-  - int [Binary Operator: Assign (=)]
					// DeclRefExpr- w - int
					// ParenExpr-  - int
						// BinaryOperator-  - int [Binary Operator: Sub (-)]
							// UnexposedExpr- ix1 - int
								// DeclRefExpr- ix1 - int
							// UnexposedExpr- ix0 - int
								// DeclRefExpr- ix0 - int
				// BinaryOperator-  - int [Binary Operator: Assign (=)]
					// DeclRefExpr- h - int
					// ParenExpr-  - int
						// BinaryOperator-  - int [Binary Operator: Sub (-)]
							// UnexposedExpr- iy1 - int
								// DeclRefExpr- iy1 - int
							// UnexposedExpr- iy0 - int
								// DeclRefExpr- iy0 - int
				// IfStmt-  - 
					// UnexposedExpr- width - int *
						// DeclRefExpr- width - int *
					// BinaryOperator-  - int [Binary Operator: Assign (=)]
						// UnaryOperator-  - int [Unary Operator: Deref (*)]
							// UnexposedExpr- width - int *
								// DeclRefExpr- width - int *
						// UnexposedExpr- w - int
							// DeclRefExpr- w - int
				// IfStmt-  - 
					// UnexposedExpr- height - int *
						// DeclRefExpr- height - int *
					// BinaryOperator-  - int [Binary Operator: Assign (=)]
						// UnaryOperator-  - int [Unary Operator: Deref (*)]
							// UnexposedExpr- height - int *
								// DeclRefExpr- height - int *
						// UnexposedExpr- h - int
							// DeclRefExpr- h - int
				// IfStmt-  - 
					// UnexposedExpr- xoff - int *
						// DeclRefExpr- xoff - int *
					// BinaryOperator-  - int [Binary Operator: Assign (=)]
						// UnaryOperator-  - int [Unary Operator: Deref (*)]
							// UnexposedExpr- xoff - int *
								// DeclRefExpr- xoff - int *
						// UnexposedExpr- ix0 - int
							// DeclRefExpr- ix0 - int
				// IfStmt-  - 
					// UnexposedExpr- yoff - int *
						// DeclRefExpr- yoff - int *
					// BinaryOperator-  - int [Binary Operator: Assign (=)]
						// UnaryOperator-  - int [Unary Operator: Deref (*)]
							// UnexposedExpr- yoff - int *
								// DeclRefExpr- yoff - int *
						// UnexposedExpr- iy0 - int
							// DeclRefExpr- iy0 - int
				// BinaryOperator-  - float [Binary Operator: Assign (=)]
					// DeclRefExpr- scale_y - float
					// UnaryOperator-  - float [Unary Operator: Minus (-)]
						// UnexposedExpr- scale_y - float
							// DeclRefExpr- scale_y - float
				// CompoundStmt-  - 
					// DeclStmt-  - 
						// VarDecl- x - int
						// VarDecl- y - int
						// VarDecl- i - int
						// VarDecl- j - int
					// DeclStmt-  - 
						// VarDecl- precompute - float *
					// DeclStmt-  - 
						// VarDecl- verts - stbtt_vertex *
							// TypeRef- stbtt_vertex - stbtt_vertex
					// DeclStmt-  - 
						// VarDecl- num_verts - int
							// CallExpr- stbtt_GetGlyphShape - int
								// UnexposedExpr- stbtt_GetGlyphShape - int (*)(const stbtt_fontinfo *, int, stbtt_vertex **)
									// DeclRefExpr- stbtt_GetGlyphShape - int (const stbtt_fontinfo *, int, stbtt_vertex **)
								// UnexposedExpr- info - const stbtt_fontinfo *
									// DeclRefExpr- info - const stbtt_fontinfo *
								// UnexposedExpr- glyph - int
									// DeclRefExpr- glyph - int
								// UnaryOperator-  - stbtt_vertex ** [Unary Operator: AddrOf (&)]
									// DeclRefExpr- verts - stbtt_vertex *
					// BinaryOperator-  - unsigned char * [Binary Operator: Assign (=)]
						// DeclRefExpr- data - unsigned char *
						// CStyleCastExpr-  - unsigned char *
							// CallExpr- malloc - void *
								// UnexposedExpr- malloc - void *(*)(unsigned long long)
									// DeclRefExpr- malloc - void *(unsigned long long)
								// UnexposedExpr-  - unsigned long long
									// BinaryOperator-  - int [Binary Operator: Mul (*)]
										// UnexposedExpr- w - int
											// DeclRefExpr- w - int
										// UnexposedExpr- h - int
											// DeclRefExpr- h - int
					// BinaryOperator-  - float * [Binary Operator: Assign (=)]
						// DeclRefExpr- precompute - float *
						// CStyleCastExpr-  - float *
							// CallExpr- malloc - void *
								// UnexposedExpr- malloc - void *(*)(unsigned long long)
									// DeclRefExpr- malloc - void *(unsigned long long)
								// BinaryOperator-  - unsigned long long [Binary Operator: Mul (*)]
									// UnexposedExpr- num_verts - unsigned long long
										// UnexposedExpr- num_verts - int
											// DeclRefExpr- num_verts - int
									// UnaryExpr-  - unsigned long long [Unary Operator: 99999 ()]
					// ForStmt-  - 
						// BinaryOperator-  - int [Binary Operator: Comma ()]
							// BinaryOperator-  - int [Binary Operator: Assign (=)]
								// DeclRefExpr- i - int
								// IntegerLiteral-  - int [Literal: 0]
							// BinaryOperator-  - int [Binary Operator: Assign (=)]
								// DeclRefExpr- j - int
								// BinaryOperator-  - int [Binary Operator: Sub (-)]
									// UnexposedExpr- num_verts - int
										// DeclRefExpr- num_verts - int
									// IntegerLiteral-  - int [Literal: 1]
						// BinaryOperator-  - int [Binary Operator: LT (<)]
							// UnexposedExpr- i - int
								// DeclRefExpr- i - int
							// UnexposedExpr- num_verts - int
								// DeclRefExpr- num_verts - int
						// BinaryOperator-  - int [Binary Operator: Assign (=)]
							// DeclRefExpr- j - int
							// UnaryOperator-  - int [Unary Operator: PostInc (++)]
								// DeclRefExpr- i - int
						// CompoundStmt-  - 
							// IfStmt-  - 
								// BinaryOperator-  - int [Binary Operator: EQ (==)]
									// UnexposedExpr- type - int
										// UnexposedExpr- type - unsigned char
											// MemberRefExpr- type - unsigned char
												// ArraySubscriptExpr-  - stbtt_vertex
													// UnexposedExpr- verts - stbtt_vertex *
														// DeclRefExpr- verts - stbtt_vertex *
													// UnexposedExpr- i - int
														// DeclRefExpr- i - int
									// DeclRefExpr- STBTT_vline - int
								// CompoundStmt-  - 
									// DeclStmt-  - 
										// VarDecl- x0 - float
											// BinaryOperator-  - float [Binary Operator: Mul (*)]
												// UnexposedExpr- x - float
													// UnexposedExpr- x - int
														// UnexposedExpr- x - short
															// MemberRefExpr- x - short
																// ArraySubscriptExpr-  - stbtt_vertex
																	// UnexposedExpr- verts - stbtt_vertex *
																		// DeclRefExpr- verts - stbtt_vertex *
																	// UnexposedExpr- i - int
																		// DeclRefExpr- i - int
												// UnexposedExpr- scale_x - float
													// DeclRefExpr- scale_x - float
										// VarDecl- y0 - float
											// BinaryOperator-  - float [Binary Operator: Mul (*)]
												// UnexposedExpr- y - float
													// UnexposedExpr- y - int
														// UnexposedExpr- y - short
															// MemberRefExpr- y - short
																// ArraySubscriptExpr-  - stbtt_vertex
																	// UnexposedExpr- verts - stbtt_vertex *
																		// DeclRefExpr- verts - stbtt_vertex *
																	// UnexposedExpr- i - int
																		// DeclRefExpr- i - int
												// UnexposedExpr- scale_y - float
													// DeclRefExpr- scale_y - float
									// DeclStmt-  - 
										// VarDecl- x1 - float
											// BinaryOperator-  - float [Binary Operator: Mul (*)]
												// UnexposedExpr- x - float
													// UnexposedExpr- x - int
														// UnexposedExpr- x - short
															// MemberRefExpr- x - short
																// ArraySubscriptExpr-  - stbtt_vertex
																	// UnexposedExpr- verts - stbtt_vertex *
																		// DeclRefExpr- verts - stbtt_vertex *
																	// UnexposedExpr- j - int
																		// DeclRefExpr- j - int
												// UnexposedExpr- scale_x - float
													// DeclRefExpr- scale_x - float
										// VarDecl- y1 - float
											// BinaryOperator-  - float [Binary Operator: Mul (*)]
												// UnexposedExpr- y - float
													// UnexposedExpr- y - int
														// UnexposedExpr- y - short
															// MemberRefExpr- y - short
																// ArraySubscriptExpr-  - stbtt_vertex
																	// UnexposedExpr- verts - stbtt_vertex *
																		// DeclRefExpr- verts - stbtt_vertex *
																	// UnexposedExpr- j - int
																		// DeclRefExpr- j - int
												// UnexposedExpr- scale_y - float
													// DeclRefExpr- scale_y - float
									// DeclStmt-  - 
										// VarDecl- dist - float
											// CStyleCastExpr-  - float
												// CallExpr- sqrt - double
													// UnexposedExpr- sqrt - double (*)(double)
														// DeclRefExpr- sqrt - double (double)
													// UnexposedExpr-  - double
														// BinaryOperator-  - float [Binary Operator: Add (+)]
															// BinaryOperator-  - float [Binary Operator: Mul (*)]
																// ParenExpr-  - float
																	// BinaryOperator-  - float [Binary Operator: Sub (-)]
																		// UnexposedExpr- x1 - float
																			// DeclRefExpr- x1 - float
																		// UnexposedExpr- x0 - float
																			// DeclRefExpr- x0 - float
																// ParenExpr-  - float
																	// BinaryOperator-  - float [Binary Operator: Sub (-)]
																		// UnexposedExpr- x1 - float
																			// DeclRefExpr- x1 - float
																		// UnexposedExpr- x0 - float
																			// DeclRefExpr- x0 - float
															// BinaryOperator-  - float [Binary Operator: Mul (*)]
																// ParenExpr-  - float
																	// BinaryOperator-  - float [Binary Operator: Sub (-)]
																		// UnexposedExpr- y1 - float
																			// DeclRefExpr- y1 - float
																		// UnexposedExpr- y0 - float
																			// DeclRefExpr- y0 - float
																// ParenExpr-  - float
																	// BinaryOperator-  - float [Binary Operator: Sub (-)]
																		// UnexposedExpr- y1 - float
																			// DeclRefExpr- y1 - float
																		// UnexposedExpr- y0 - float
																			// DeclRefExpr- y0 - float
									// BinaryOperator-  - float [Binary Operator: Assign (=)]
										// ArraySubscriptExpr-  - float
											// UnexposedExpr- precompute - float *
												// DeclRefExpr- precompute - float *
											// UnexposedExpr- i - int
												// DeclRefExpr- i - int
										// ConditionalOperator-  - float
											// ParenExpr-  - int
												// BinaryOperator-  - int [Binary Operator: EQ (==)]
													// UnexposedExpr- dist - float
														// DeclRefExpr- dist - float
													// UnexposedExpr-  - float
														// IntegerLiteral-  - int [Literal: 0]
											// FloatingLiteral-  - float [Literal: 0]
											// BinaryOperator-  - float [Binary Operator: Div (/)]
												// FloatingLiteral-  - float [Literal: 1]
												// UnexposedExpr- dist - float
													// DeclRefExpr- dist - float
								// IfStmt-  - 
									// BinaryOperator-  - int [Binary Operator: EQ (==)]
										// UnexposedExpr- type - int
											// UnexposedExpr- type - unsigned char
												// MemberRefExpr- type - unsigned char
													// ArraySubscriptExpr-  - stbtt_vertex
														// UnexposedExpr- verts - stbtt_vertex *
															// DeclRefExpr- verts - stbtt_vertex *
														// UnexposedExpr- i - int
															// DeclRefExpr- i - int
										// DeclRefExpr- STBTT_vcurve - int
									// CompoundStmt-  - 
										// DeclStmt-  - 
											// VarDecl- x2 - float
												// BinaryOperator-  - float [Binary Operator: Mul (*)]
													// UnexposedExpr- x - float
														// UnexposedExpr- x - int
															// UnexposedExpr- x - short
																// MemberRefExpr- x - short
																	// ArraySubscriptExpr-  - stbtt_vertex
																		// UnexposedExpr- verts - stbtt_vertex *
																			// DeclRefExpr- verts - stbtt_vertex *
																		// UnexposedExpr- j - int
																			// DeclRefExpr- j - int
													// UnexposedExpr- scale_x - float
														// DeclRefExpr- scale_x - float
											// VarDecl- y2 - float
												// BinaryOperator-  - float [Binary Operator: Mul (*)]
													// UnexposedExpr- y - float
														// UnexposedExpr- y - int
															// UnexposedExpr- y - short
																// MemberRefExpr- y - short
																	// ArraySubscriptExpr-  - stbtt_vertex
																		// UnexposedExpr- verts - stbtt_vertex *
																			// DeclRefExpr- verts - stbtt_vertex *
																		// UnexposedExpr- j - int
																			// DeclRefExpr- j - int
													// UnexposedExpr- scale_y - float
														// DeclRefExpr- scale_y - float
										// DeclStmt-  - 
											// VarDecl- x1 - float
												// BinaryOperator-  - float [Binary Operator: Mul (*)]
													// UnexposedExpr- cx - float
														// UnexposedExpr- cx - int
															// UnexposedExpr- cx - short
																// MemberRefExpr- cx - short
																	// ArraySubscriptExpr-  - stbtt_vertex
																		// UnexposedExpr- verts - stbtt_vertex *
																			// DeclRefExpr- verts - stbtt_vertex *
																		// UnexposedExpr- i - int
																			// DeclRefExpr- i - int
													// UnexposedExpr- scale_x - float
														// DeclRefExpr- scale_x - float
											// VarDecl- y1 - float
												// BinaryOperator-  - float [Binary Operator: Mul (*)]
													// UnexposedExpr- cy - float
														// UnexposedExpr- cy - int
															// UnexposedExpr- cy - short
																// MemberRefExpr- cy - short
																	// ArraySubscriptExpr-  - stbtt_vertex
																		// UnexposedExpr- verts - stbtt_vertex *
																			// DeclRefExpr- verts - stbtt_vertex *
																		// UnexposedExpr- i - int
																			// DeclRefExpr- i - int
													// UnexposedExpr- scale_y - float
														// DeclRefExpr- scale_y - float
										// DeclStmt-  - 
											// VarDecl- x0 - float
												// BinaryOperator-  - float [Binary Operator: Mul (*)]
													// UnexposedExpr- x - float
														// UnexposedExpr- x - int
															// UnexposedExpr- x - short
																// MemberRefExpr- x - short
																	// ArraySubscriptExpr-  - stbtt_vertex
																		// UnexposedExpr- verts - stbtt_vertex *
																			// DeclRefExpr- verts - stbtt_vertex *
																		// UnexposedExpr- i - int
																			// DeclRefExpr- i - int
													// UnexposedExpr- scale_x - float
														// DeclRefExpr- scale_x - float
											// VarDecl- y0 - float
												// BinaryOperator-  - float [Binary Operator: Mul (*)]
													// UnexposedExpr- y - float
														// UnexposedExpr- y - int
															// UnexposedExpr- y - short
																// MemberRefExpr- y - short
																	// ArraySubscriptExpr-  - stbtt_vertex
																		// UnexposedExpr- verts - stbtt_vertex *
																			// DeclRefExpr- verts - stbtt_vertex *
																		// UnexposedExpr- i - int
																			// DeclRefExpr- i - int
													// UnexposedExpr- scale_y - float
														// DeclRefExpr- scale_y - float
										// DeclStmt-  - 
											// VarDecl- bx - float
												// BinaryOperator-  - float [Binary Operator: Add (+)]
													// BinaryOperator-  - float [Binary Operator: Sub (-)]
														// UnexposedExpr- x0 - float
															// DeclRefExpr- x0 - float
														// BinaryOperator-  - float [Binary Operator: Mul (*)]
															// UnexposedExpr-  - float
																// IntegerLiteral-  - int [Literal: 2]
															// UnexposedExpr- x1 - float
																// DeclRefExpr- x1 - float
													// UnexposedExpr- x2 - float
														// DeclRefExpr- x2 - float
											// VarDecl- by - float
												// BinaryOperator-  - float [Binary Operator: Add (+)]
													// BinaryOperator-  - float [Binary Operator: Sub (-)]
														// UnexposedExpr- y0 - float
															// DeclRefExpr- y0 - float
														// BinaryOperator-  - float [Binary Operator: Mul (*)]
															// UnexposedExpr-  - float
																// IntegerLiteral-  - int [Literal: 2]
															// UnexposedExpr- y1 - float
																// DeclRefExpr- y1 - float
													// UnexposedExpr- y2 - float
														// DeclRefExpr- y2 - float
										// DeclStmt-  - 
											// VarDecl- len2 - float
												// BinaryOperator-  - float [Binary Operator: Add (+)]
													// BinaryOperator-  - float [Binary Operator: Mul (*)]
														// UnexposedExpr- bx - float
															// DeclRefExpr- bx - float
														// UnexposedExpr- bx - float
															// DeclRefExpr- bx - float
													// BinaryOperator-  - float [Binary Operator: Mul (*)]
														// UnexposedExpr- by - float
															// DeclRefExpr- by - float
														// UnexposedExpr- by - float
															// DeclRefExpr- by - float
										// IfStmt-  - 
											// BinaryOperator-  - int [Binary Operator: NE (!=)]
												// UnexposedExpr- len2 - float
													// DeclRefExpr- len2 - float
												// FloatingLiteral-  - float [Literal: 0]
											// BinaryOperator-  - float [Binary Operator: Assign (=)]
												// ArraySubscriptExpr-  - float
													// UnexposedExpr- precompute - float *
														// DeclRefExpr- precompute - float *
													// UnexposedExpr- i - int
														// DeclRefExpr- i - int
												// BinaryOperator-  - float [Binary Operator: Div (/)]
													// FloatingLiteral-  - float [Literal: 1]
													// ParenExpr-  - float
														// BinaryOperator-  - float [Binary Operator: Add (+)]
															// BinaryOperator-  - float [Binary Operator: Mul (*)]
																// UnexposedExpr- bx - float
																	// DeclRefExpr- bx - float
																// UnexposedExpr- bx - float
																	// DeclRefExpr- bx - float
															// BinaryOperator-  - float [Binary Operator: Mul (*)]
																// UnexposedExpr- by - float
																	// DeclRefExpr- by - float
																// UnexposedExpr- by - float
																	// DeclRefExpr- by - float
											// BinaryOperator-  - float [Binary Operator: Assign (=)]
												// ArraySubscriptExpr-  - float
													// UnexposedExpr- precompute - float *
														// DeclRefExpr- precompute - float *
													// UnexposedExpr- i - int
														// DeclRefExpr- i - int
												// FloatingLiteral-  - float [Literal: 0]
									// BinaryOperator-  - float [Binary Operator: Assign (=)]
										// ArraySubscriptExpr-  - float
											// UnexposedExpr- precompute - float *
												// DeclRefExpr- precompute - float *
											// UnexposedExpr- i - int
												// DeclRefExpr- i - int
										// FloatingLiteral-  - float [Literal: 0]
					// ForStmt-  - 
						// BinaryOperator-  - int [Binary Operator: Assign (=)]
							// DeclRefExpr- y - int
							// UnexposedExpr- iy0 - int
								// DeclRefExpr- iy0 - int
						// BinaryOperator-  - int [Binary Operator: LT (<)]
							// UnexposedExpr- y - int
								// DeclRefExpr- y - int
							// UnexposedExpr- iy1 - int
								// DeclRefExpr- iy1 - int
						// UnaryOperator-  - int [Unary Operator: PreInc (++)]
							// DeclRefExpr- y - int
						// CompoundStmt-  - 
							// ForStmt-  - 
								// BinaryOperator-  - int [Binary Operator: Assign (=)]
									// DeclRefExpr- x - int
									// UnexposedExpr- ix0 - int
										// DeclRefExpr- ix0 - int
								// BinaryOperator-  - int [Binary Operator: LT (<)]
									// UnexposedExpr- x - int
										// DeclRefExpr- x - int
									// UnexposedExpr- ix1 - int
										// DeclRefExpr- ix1 - int
								// UnaryOperator-  - int [Unary Operator: PreInc (++)]
									// DeclRefExpr- x - int
								// CompoundStmt-  - 
									// DeclStmt-  - 
										// VarDecl- val - float
									// DeclStmt-  - 
										// VarDecl- min_dist - float
											// FloatingLiteral-  - float [Literal: 999999]
									// DeclStmt-  - 
										// VarDecl- sx - float
											// BinaryOperator-  - float [Binary Operator: Add (+)]
												// CStyleCastExpr-  - float
													// UnexposedExpr- x - int
														// DeclRefExpr- x - int
												// FloatingLiteral-  - float [Literal: 0.5]
									// DeclStmt-  - 
										// VarDecl- sy - float
											// BinaryOperator-  - float [Binary Operator: Add (+)]
												// CStyleCastExpr-  - float
													// UnexposedExpr- y - int
														// DeclRefExpr- y - int
												// FloatingLiteral-  - float [Literal: 0.5]
									// DeclStmt-  - 
										// VarDecl- x_gspace - float
											// ParenExpr-  - float
												// BinaryOperator-  - float [Binary Operator: Div (/)]
													// UnexposedExpr- sx - float
														// DeclRefExpr- sx - float
													// UnexposedExpr- scale_x - float
														// DeclRefExpr- scale_x - float
									// DeclStmt-  - 
										// VarDecl- y_gspace - float
											// ParenExpr-  - float
												// BinaryOperator-  - float [Binary Operator: Div (/)]
													// UnexposedExpr- sy - float
														// DeclRefExpr- sy - float
													// UnexposedExpr- scale_y - float
														// DeclRefExpr- scale_y - float
									// DeclStmt-  - 
										// VarDecl- winding - int
											// CallExpr- stbtt__compute_crossings_x - int
												// UnexposedExpr- stbtt__compute_crossings_x - int (*)(float, float, int, stbtt_vertex *)
													// DeclRefExpr- stbtt__compute_crossings_x - int (float, float, int, stbtt_vertex *)
												// UnexposedExpr- x_gspace - float
													// DeclRefExpr- x_gspace - float
												// UnexposedExpr- y_gspace - float
													// DeclRefExpr- y_gspace - float
												// UnexposedExpr- num_verts - int
													// DeclRefExpr- num_verts - int
												// UnexposedExpr- verts - stbtt_vertex *
													// DeclRefExpr- verts - stbtt_vertex *
									// ForStmt-  - 
										// BinaryOperator-  - int [Binary Operator: Assign (=)]
											// DeclRefExpr- i - int
											// IntegerLiteral-  - int [Literal: 0]
										// BinaryOperator-  - int [Binary Operator: LT (<)]
											// UnexposedExpr- i - int
												// DeclRefExpr- i - int
											// UnexposedExpr- num_verts - int
												// DeclRefExpr- num_verts - int
										// UnaryOperator-  - int [Unary Operator: PreInc (++)]
											// DeclRefExpr- i - int
										// CompoundStmt-  - 
											// DeclStmt-  - 
												// VarDecl- x0 - float
													// BinaryOperator-  - float [Binary Operator: Mul (*)]
														// UnexposedExpr- x - float
															// UnexposedExpr- x - int
																// UnexposedExpr- x - short
																	// MemberRefExpr- x - short
																		// ArraySubscriptExpr-  - stbtt_vertex
																			// UnexposedExpr- verts - stbtt_vertex *
																				// DeclRefExpr- verts - stbtt_vertex *
																			// UnexposedExpr- i - int
																				// DeclRefExpr- i - int
														// UnexposedExpr- scale_x - float
															// DeclRefExpr- scale_x - float
												// VarDecl- y0 - float
													// BinaryOperator-  - float [Binary Operator: Mul (*)]
														// UnexposedExpr- y - float
															// UnexposedExpr- y - int
																// UnexposedExpr- y - short
																	// MemberRefExpr- y - short
																		// ArraySubscriptExpr-  - stbtt_vertex
																			// UnexposedExpr- verts - stbtt_vertex *
																				// DeclRefExpr- verts - stbtt_vertex *
																			// UnexposedExpr- i - int
																				// DeclRefExpr- i - int
														// UnexposedExpr- scale_y - float
															// DeclRefExpr- scale_y - float
											// DeclStmt-  - 
												// VarDecl- dist2 - float
													// BinaryOperator-  - float [Binary Operator: Add (+)]
														// BinaryOperator-  - float [Binary Operator: Mul (*)]
															// ParenExpr-  - float
																// BinaryOperator-  - float [Binary Operator: Sub (-)]
																	// UnexposedExpr- x0 - float
																		// DeclRefExpr- x0 - float
																	// UnexposedExpr- sx - float
																		// DeclRefExpr- sx - float
															// ParenExpr-  - float
																// BinaryOperator-  - float [Binary Operator: Sub (-)]
																	// UnexposedExpr- x0 - float
																		// DeclRefExpr- x0 - float
																	// UnexposedExpr- sx - float
																		// DeclRefExpr- sx - float
														// BinaryOperator-  - float [Binary Operator: Mul (*)]
															// ParenExpr-  - float
																// BinaryOperator-  - float [Binary Operator: Sub (-)]
																	// UnexposedExpr- y0 - float
																		// DeclRefExpr- y0 - float
																	// UnexposedExpr- sy - float
																		// DeclRefExpr- sy - float
															// ParenExpr-  - float
																// BinaryOperator-  - float [Binary Operator: Sub (-)]
																	// UnexposedExpr- y0 - float
																		// DeclRefExpr- y0 - float
																	// UnexposedExpr- sy - float
																		// DeclRefExpr- sy - float
											// IfStmt-  - 
												// BinaryOperator-  - int [Binary Operator: LT (<)]
													// UnexposedExpr- dist2 - float
														// DeclRefExpr- dist2 - float
													// BinaryOperator-  - float [Binary Operator: Mul (*)]
														// UnexposedExpr- min_dist - float
															// DeclRefExpr- min_dist - float
														// UnexposedExpr- min_dist - float
															// DeclRefExpr- min_dist - float
												// BinaryOperator-  - float [Binary Operator: Assign (=)]
													// DeclRefExpr- min_dist - float
													// CStyleCastExpr-  - float
														// CallExpr- sqrt - double
															// UnexposedExpr- sqrt - double (*)(double)
																// DeclRefExpr- sqrt - double (double)
															// UnexposedExpr- dist2 - double
																// UnexposedExpr- dist2 - float
																	// DeclRefExpr- dist2 - float
											// IfStmt-  - 
												// BinaryOperator-  - int [Binary Operator: EQ (==)]
													// UnexposedExpr- type - int
														// UnexposedExpr- type - unsigned char
															// MemberRefExpr- type - unsigned char
																// ArraySubscriptExpr-  - stbtt_vertex
																	// UnexposedExpr- verts - stbtt_vertex *
																		// DeclRefExpr- verts - stbtt_vertex *
																	// UnexposedExpr- i - int
																		// DeclRefExpr- i - int
													// DeclRefExpr- STBTT_vline - int
												// CompoundStmt-  - 
													// DeclStmt-  - 
														// VarDecl- x1 - float
															// BinaryOperator-  - float [Binary Operator: Mul (*)]
																// UnexposedExpr- x - float
																	// UnexposedExpr- x - int
																		// UnexposedExpr- x - short
																			// MemberRefExpr- x - short
																				// ArraySubscriptExpr-  - stbtt_vertex
																					// UnexposedExpr- verts - stbtt_vertex *
																						// DeclRefExpr- verts - stbtt_vertex *
																					// BinaryOperator-  - int [Binary Operator: Sub (-)]
																						// UnexposedExpr- i - int
																							// DeclRefExpr- i - int
																						// IntegerLiteral-  - int [Literal: 1]
																// UnexposedExpr- scale_x - float
																	// DeclRefExpr- scale_x - float
														// VarDecl- y1 - float
															// BinaryOperator-  - float [Binary Operator: Mul (*)]
																// UnexposedExpr- y - float
																	// UnexposedExpr- y - int
																		// UnexposedExpr- y - short
																			// MemberRefExpr- y - short
																				// ArraySubscriptExpr-  - stbtt_vertex
																					// UnexposedExpr- verts - stbtt_vertex *
																						// DeclRefExpr- verts - stbtt_vertex *
																					// BinaryOperator-  - int [Binary Operator: Sub (-)]
																						// UnexposedExpr- i - int
																							// DeclRefExpr- i - int
																						// IntegerLiteral-  - int [Literal: 1]
																// UnexposedExpr- scale_y - float
																	// DeclRefExpr- scale_y - float
													// DeclStmt-  - 
														// VarDecl- dist - float
															// BinaryOperator-  - float [Binary Operator: Mul (*)]
																// CStyleCastExpr-  - float
																	// CallExpr- fabs - double
																		// UnexposedExpr- fabs - double (*)(double)
																			// DeclRefExpr- fabs - double (double)
																		// UnexposedExpr-  - double
																			// BinaryOperator-  - float [Binary Operator: Sub (-)]
																				// BinaryOperator-  - float [Binary Operator: Mul (*)]
																					// ParenExpr-  - float
																						// BinaryOperator-  - float [Binary Operator: Sub (-)]
																							// UnexposedExpr- x1 - float
																								// DeclRefExpr- x1 - float
																							// UnexposedExpr- x0 - float
																								// DeclRefExpr- x0 - float
																					// ParenExpr-  - float
																						// BinaryOperator-  - float [Binary Operator: Sub (-)]
																							// UnexposedExpr- y0 - float
																								// DeclRefExpr- y0 - float
																							// UnexposedExpr- sy - float
																								// DeclRefExpr- sy - float
																				// BinaryOperator-  - float [Binary Operator: Mul (*)]
																					// ParenExpr-  - float
																						// BinaryOperator-  - float [Binary Operator: Sub (-)]
																							// UnexposedExpr- y1 - float
																								// DeclRefExpr- y1 - float
																							// UnexposedExpr- y0 - float
																								// DeclRefExpr- y0 - float
																					// ParenExpr-  - float
																						// BinaryOperator-  - float [Binary Operator: Sub (-)]
																							// UnexposedExpr- x0 - float
																								// DeclRefExpr- x0 - float
																							// UnexposedExpr- sx - float
																								// DeclRefExpr- sx - float
																// UnexposedExpr-  - float
																	// ArraySubscriptExpr-  - float
																		// UnexposedExpr- precompute - float *
																			// DeclRefExpr- precompute - float *
																		// UnexposedExpr- i - int
																			// DeclRefExpr- i - int
													// NullStmt-  - 
													// IfStmt-  - 
														// BinaryOperator-  - int [Binary Operator: LT (<)]
															// UnexposedExpr- dist - float
																// DeclRefExpr- dist - float
															// UnexposedExpr- min_dist - float
																// DeclRefExpr- min_dist - float
														// CompoundStmt-  - 
															// DeclStmt-  - 
																// VarDecl- dx - float
																	// BinaryOperator-  - float [Binary Operator: Sub (-)]
																		// UnexposedExpr- x1 - float
																			// DeclRefExpr- x1 - float
																		// UnexposedExpr- x0 - float
																			// DeclRefExpr- x0 - float
																// VarDecl- dy - float
																	// BinaryOperator-  - float [Binary Operator: Sub (-)]
																		// UnexposedExpr- y1 - float
																			// DeclRefExpr- y1 - float
																		// UnexposedExpr- y0 - float
																			// DeclRefExpr- y0 - float
															// DeclStmt-  - 
																// VarDecl- px - float
																	// BinaryOperator-  - float [Binary Operator: Sub (-)]
																		// UnexposedExpr- x0 - float
																			// DeclRefExpr- x0 - float
																		// UnexposedExpr- sx - float
																			// DeclRefExpr- sx - float
																// VarDecl- py - float
																	// BinaryOperator-  - float [Binary Operator: Sub (-)]
																		// UnexposedExpr- y0 - float
																			// DeclRefExpr- y0 - float
																		// UnexposedExpr- sy - float
																			// DeclRefExpr- sy - float
															// DeclStmt-  - 
																// VarDecl- t - float
																	// BinaryOperator-  - float [Binary Operator: Div (/)]
																		// UnaryOperator-  - float [Unary Operator: Minus (-)]
																			// ParenExpr-  - float
																				// BinaryOperator-  - float [Binary Operator: Add (+)]
																					// BinaryOperator-  - float [Binary Operator: Mul (*)]
																						// UnexposedExpr- px - float
																							// DeclRefExpr- px - float
																						// UnexposedExpr- dx - float
																							// DeclRefExpr- dx - float
																					// BinaryOperator-  - float [Binary Operator: Mul (*)]
																						// UnexposedExpr- py - float
																							// DeclRefExpr- py - float
																						// UnexposedExpr- dy - float
																							// DeclRefExpr- dy - float
																		// ParenExpr-  - float
																			// BinaryOperator-  - float [Binary Operator: Add (+)]
																				// BinaryOperator-  - float [Binary Operator: Mul (*)]
																					// UnexposedExpr- dx - float
																						// DeclRefExpr- dx - float
																					// UnexposedExpr- dx - float
																						// DeclRefExpr- dx - float
																				// BinaryOperator-  - float [Binary Operator: Mul (*)]
																					// UnexposedExpr- dy - float
																						// DeclRefExpr- dy - float
																					// UnexposedExpr- dy - float
																						// DeclRefExpr- dy - float
															// IfStmt-  - 
																// BinaryOperator-  - int [Binary Operator: LAnd (&&)]
																	// BinaryOperator-  - int [Binary Operator: GE (>=)]
																		// UnexposedExpr- t - float
																			// DeclRefExpr- t - float
																		// FloatingLiteral-  - float [Literal: 0]
																	// BinaryOperator-  - int [Binary Operator: LE (<=)]
																		// UnexposedExpr- t - float
																			// DeclRefExpr- t - float
																		// FloatingLiteral-  - float [Literal: 1]
																// BinaryOperator-  - float [Binary Operator: Assign (=)]
																	// DeclRefExpr- min_dist - float
																	// UnexposedExpr- dist - float
																		// DeclRefExpr- dist - float
												// IfStmt-  - 
													// BinaryOperator-  - int [Binary Operator: EQ (==)]
														// UnexposedExpr- type - int
															// UnexposedExpr- type - unsigned char
																// MemberRefExpr- type - unsigned char
																	// ArraySubscriptExpr-  - stbtt_vertex
																		// UnexposedExpr- verts - stbtt_vertex *
																			// DeclRefExpr- verts - stbtt_vertex *
																		// UnexposedExpr- i - int
																			// DeclRefExpr- i - int
														// DeclRefExpr- STBTT_vcurve - int
													// CompoundStmt-  - 
														// DeclStmt-  - 
															// VarDecl- x2 - float
																// BinaryOperator-  - float [Binary Operator: Mul (*)]
																	// UnexposedExpr- x - float
																		// UnexposedExpr- x - int
																			// UnexposedExpr- x - short
																				// MemberRefExpr- x - short
																					// ArraySubscriptExpr-  - stbtt_vertex
																						// UnexposedExpr- verts - stbtt_vertex *
																							// DeclRefExpr- verts - stbtt_vertex *
																						// BinaryOperator-  - int [Binary Operator: Sub (-)]
																							// UnexposedExpr- i - int
																								// DeclRefExpr- i - int
																							// IntegerLiteral-  - int [Literal: 1]
																	// UnexposedExpr- scale_x - float
																		// DeclRefExpr- scale_x - float
															// VarDecl- y2 - float
																// BinaryOperator-  - float [Binary Operator: Mul (*)]
																	// UnexposedExpr- y - float
																		// UnexposedExpr- y - int
																			// UnexposedExpr- y - short
																				// MemberRefExpr- y - short
																					// ArraySubscriptExpr-  - stbtt_vertex
																						// UnexposedExpr- verts - stbtt_vertex *
																							// DeclRefExpr- verts - stbtt_vertex *
																						// BinaryOperator-  - int [Binary Operator: Sub (-)]
																							// UnexposedExpr- i - int
																								// DeclRefExpr- i - int
																							// IntegerLiteral-  - int [Literal: 1]
																	// UnexposedExpr- scale_y - float
																		// DeclRefExpr- scale_y - float
														// DeclStmt-  - 
															// VarDecl- x1 - float
																// BinaryOperator-  - float [Binary Operator: Mul (*)]
																	// UnexposedExpr- cx - float
																		// UnexposedExpr- cx - int
																			// UnexposedExpr- cx - short
																				// MemberRefExpr- cx - short
																					// ArraySubscriptExpr-  - stbtt_vertex
																						// UnexposedExpr- verts - stbtt_vertex *
																							// DeclRefExpr- verts - stbtt_vertex *
																						// UnexposedExpr- i - int
																							// DeclRefExpr- i - int
																	// UnexposedExpr- scale_x - float
																		// DeclRefExpr- scale_x - float
															// VarDecl- y1 - float
																// BinaryOperator-  - float [Binary Operator: Mul (*)]
																	// UnexposedExpr- cy - float
																		// UnexposedExpr- cy - int
																			// UnexposedExpr- cy - short
																				// MemberRefExpr- cy - short
																					// ArraySubscriptExpr-  - stbtt_vertex
																						// UnexposedExpr- verts - stbtt_vertex *
																							// DeclRefExpr- verts - stbtt_vertex *
																						// UnexposedExpr- i - int
																							// DeclRefExpr- i - int
																	// UnexposedExpr- scale_y - float
																		// DeclRefExpr- scale_y - float
														// DeclStmt-  - 
															// VarDecl- box_x0 - float
																// ParenExpr-  - float
																	// ConditionalOperator-  - float
																		// BinaryOperator-  - int [Binary Operator: LT (<)]
																			// ParenExpr-  - float
																				// ParenExpr-  - float
																					// ConditionalOperator-  - float
																						// BinaryOperator-  - int [Binary Operator: LT (<)]
																							// UnexposedExpr-  - float
																								// ParenExpr-  - float
																									// DeclRefExpr- x0 - float
																							// UnexposedExpr-  - float
																								// ParenExpr-  - float
																									// DeclRefExpr- x1 - float
																						// UnexposedExpr-  - float
																							// ParenExpr-  - float
																								// DeclRefExpr- x0 - float
																						// UnexposedExpr-  - float
																							// ParenExpr-  - float
																								// DeclRefExpr- x1 - float
																			// UnexposedExpr-  - float
																				// ParenExpr-  - float
																					// DeclRefExpr- x2 - float
																		// ParenExpr-  - float
																			// ParenExpr-  - float
																				// ConditionalOperator-  - float
																					// BinaryOperator-  - int [Binary Operator: LT (<)]
																						// UnexposedExpr-  - float
																							// ParenExpr-  - float
																								// DeclRefExpr- x0 - float
																						// UnexposedExpr-  - float
																							// ParenExpr-  - float
																								// DeclRefExpr- x1 - float
																					// UnexposedExpr-  - float
																						// ParenExpr-  - float
																							// DeclRefExpr- x0 - float
																					// UnexposedExpr-  - float
																						// ParenExpr-  - float
																							// DeclRefExpr- x1 - float
																		// UnexposedExpr-  - float
																			// ParenExpr-  - float
																				// DeclRefExpr- x2 - float
														// DeclStmt-  - 
															// VarDecl- box_y0 - float
																// ParenExpr-  - float
																	// ConditionalOperator-  - float
																		// BinaryOperator-  - int [Binary Operator: LT (<)]
																			// ParenExpr-  - float
																				// ParenExpr-  - float
																					// ConditionalOperator-  - float
																						// BinaryOperator-  - int [Binary Operator: LT (<)]
																							// UnexposedExpr-  - float
																								// ParenExpr-  - float
																									// DeclRefExpr- y0 - float
																							// UnexposedExpr-  - float
																								// ParenExpr-  - float
																									// DeclRefExpr- y1 - float
																						// UnexposedExpr-  - float
																							// ParenExpr-  - float
																								// DeclRefExpr- y0 - float
																						// UnexposedExpr-  - float
																							// ParenExpr-  - float
																								// DeclRefExpr- y1 - float
																			// UnexposedExpr-  - float
																				// ParenExpr-  - float
																					// DeclRefExpr- y2 - float
																		// ParenExpr-  - float
																			// ParenExpr-  - float
																				// ConditionalOperator-  - float
																					// BinaryOperator-  - int [Binary Operator: LT (<)]
																						// UnexposedExpr-  - float
																							// ParenExpr-  - float
																								// DeclRefExpr- y0 - float
																						// UnexposedExpr-  - float
																							// ParenExpr-  - float
																								// DeclRefExpr- y1 - float
																					// UnexposedExpr-  - float
																						// ParenExpr-  - float
																							// DeclRefExpr- y0 - float
																					// UnexposedExpr-  - float
																						// ParenExpr-  - float
																							// DeclRefExpr- y1 - float
																		// UnexposedExpr-  - float
																			// ParenExpr-  - float
																				// DeclRefExpr- y2 - float
														// DeclStmt-  - 
															// VarDecl- box_x1 - float
																// ParenExpr-  - float
																	// ConditionalOperator-  - float
																		// BinaryOperator-  - int [Binary Operator: LT (<)]
																			// ParenExpr-  - float
																				// ParenExpr-  - float
																					// ConditionalOperator-  - float
																						// BinaryOperator-  - int [Binary Operator: LT (<)]
																							// UnexposedExpr-  - float
																								// ParenExpr-  - float
																									// DeclRefExpr- x0 - float
																							// UnexposedExpr-  - float
																								// ParenExpr-  - float
																									// DeclRefExpr- x1 - float
																						// UnexposedExpr-  - float
																							// ParenExpr-  - float
																								// DeclRefExpr- x1 - float
																						// UnexposedExpr-  - float
																							// ParenExpr-  - float
																								// DeclRefExpr- x0 - float
																			// UnexposedExpr-  - float
																				// ParenExpr-  - float
																					// DeclRefExpr- x2 - float
																		// UnexposedExpr-  - float
																			// ParenExpr-  - float
																				// DeclRefExpr- x2 - float
																		// ParenExpr-  - float
																			// ParenExpr-  - float
																				// ConditionalOperator-  - float
																					// BinaryOperator-  - int [Binary Operator: LT (<)]
																						// UnexposedExpr-  - float
																							// ParenExpr-  - float
																								// DeclRefExpr- x0 - float
																						// UnexposedExpr-  - float
																							// ParenExpr-  - float
																								// DeclRefExpr- x1 - float
																					// UnexposedExpr-  - float
																						// ParenExpr-  - float
																							// DeclRefExpr- x1 - float
																					// UnexposedExpr-  - float
																						// ParenExpr-  - float
																							// DeclRefExpr- x0 - float
														// DeclStmt-  - 
															// VarDecl- box_y1 - float
																// ParenExpr-  - float
																	// ConditionalOperator-  - float
																		// BinaryOperator-  - int [Binary Operator: LT (<)]
																			// ParenExpr-  - float
																				// ParenExpr-  - float
																					// ConditionalOperator-  - float
																						// BinaryOperator-  - int [Binary Operator: LT (<)]
																							// UnexposedExpr-  - float
																								// ParenExpr-  - float
																									// DeclRefExpr- y0 - float
																							// UnexposedExpr-  - float
																								// ParenExpr-  - float
																									// DeclRefExpr- y1 - float
																						// UnexposedExpr-  - float
																							// ParenExpr-  - float
																								// DeclRefExpr- y1 - float
																						// UnexposedExpr-  - float
																							// ParenExpr-  - float
																								// DeclRefExpr- y0 - float
																			// UnexposedExpr-  - float
																				// ParenExpr-  - float
																					// DeclRefExpr- y2 - float
																		// UnexposedExpr-  - float
																			// ParenExpr-  - float
																				// DeclRefExpr- y2 - float
																		// ParenExpr-  - float
																			// ParenExpr-  - float
																				// ConditionalOperator-  - float
																					// BinaryOperator-  - int [Binary Operator: LT (<)]
																						// UnexposedExpr-  - float
																							// ParenExpr-  - float
																								// DeclRefExpr- y0 - float
																						// UnexposedExpr-  - float
																							// ParenExpr-  - float
																								// DeclRefExpr- y1 - float
																					// UnexposedExpr-  - float
																						// ParenExpr-  - float
																							// DeclRefExpr- y1 - float
																					// UnexposedExpr-  - float
																						// ParenExpr-  - float
																							// DeclRefExpr- y0 - float
														// IfStmt-  - 
															// BinaryOperator-  - int [Binary Operator: LAnd (&&)]
																// BinaryOperator-  - int [Binary Operator: LAnd (&&)]
																	// BinaryOperator-  - int [Binary Operator: LAnd (&&)]
																		// BinaryOperator-  - int [Binary Operator: GT (>)]
																			// UnexposedExpr- sx - float
																				// DeclRefExpr- sx - float
																			// BinaryOperator-  - float [Binary Operator: Sub (-)]
																				// UnexposedExpr- box_x0 - float
																					// DeclRefExpr- box_x0 - float
																				// UnexposedExpr- min_dist - float
																					// DeclRefExpr- min_dist - float
																		// BinaryOperator-  - int [Binary Operator: LT (<)]
																			// UnexposedExpr- sx - float
																				// DeclRefExpr- sx - float
																			// BinaryOperator-  - float [Binary Operator: Add (+)]
																				// UnexposedExpr- box_x1 - float
																					// DeclRefExpr- box_x1 - float
																				// UnexposedExpr- min_dist - float
																					// DeclRefExpr- min_dist - float
																	// BinaryOperator-  - int [Binary Operator: GT (>)]
																		// UnexposedExpr- sy - float
																			// DeclRefExpr- sy - float
																		// BinaryOperator-  - float [Binary Operator: Sub (-)]
																			// UnexposedExpr- box_y0 - float
																				// DeclRefExpr- box_y0 - float
																			// UnexposedExpr- min_dist - float
																				// DeclRefExpr- min_dist - float
																// BinaryOperator-  - int [Binary Operator: LT (<)]
																	// UnexposedExpr- sy - float
																		// DeclRefExpr- sy - float
																	// BinaryOperator-  - float [Binary Operator: Add (+)]
																		// UnexposedExpr- box_y1 - float
																			// DeclRefExpr- box_y1 - float
																		// UnexposedExpr- min_dist - float
																			// DeclRefExpr- min_dist - float
															// CompoundStmt-  - 
																// DeclStmt-  - 
																	// VarDecl- num - int
																		// IntegerLiteral-  - int [Literal: 0]
																// DeclStmt-  - 
																	// VarDecl- ax - float
																		// BinaryOperator-  - float [Binary Operator: Sub (-)]
																			// UnexposedExpr- x1 - float
																				// DeclRefExpr- x1 - float
																			// UnexposedExpr- x0 - float
																				// DeclRefExpr- x0 - float
																	// VarDecl- ay - float
																		// BinaryOperator-  - float [Binary Operator: Sub (-)]
																			// UnexposedExpr- y1 - float
																				// DeclRefExpr- y1 - float
																			// UnexposedExpr- y0 - float
																				// DeclRefExpr- y0 - float
																// DeclStmt-  - 
																	// VarDecl- bx - float
																		// BinaryOperator-  - float [Binary Operator: Add (+)]
																			// BinaryOperator-  - float [Binary Operator: Sub (-)]
																				// UnexposedExpr- x0 - float
																					// DeclRefExpr- x0 - float
																				// BinaryOperator-  - float [Binary Operator: Mul (*)]
																					// UnexposedExpr-  - float
																						// IntegerLiteral-  - int [Literal: 2]
																					// UnexposedExpr- x1 - float
																						// DeclRefExpr- x1 - float
																			// UnexposedExpr- x2 - float
																				// DeclRefExpr- x2 - float
																	// VarDecl- by - float
																		// BinaryOperator-  - float [Binary Operator: Add (+)]
																			// BinaryOperator-  - float [Binary Operator: Sub (-)]
																				// UnexposedExpr- y0 - float
																					// DeclRefExpr- y0 - float
																				// BinaryOperator-  - float [Binary Operator: Mul (*)]
																					// UnexposedExpr-  - float
																						// IntegerLiteral-  - int [Literal: 2]
																					// UnexposedExpr- y1 - float
																						// DeclRefExpr- y1 - float
																			// UnexposedExpr- y2 - float
																				// DeclRefExpr- y2 - float
																// DeclStmt-  - 
																	// VarDecl- mx - float
																		// BinaryOperator-  - float [Binary Operator: Sub (-)]
																			// UnexposedExpr- x0 - float
																				// DeclRefExpr- x0 - float
																			// UnexposedExpr- sx - float
																				// DeclRefExpr- sx - float
																	// VarDecl- my - float
																		// BinaryOperator-  - float [Binary Operator: Sub (-)]
																			// UnexposedExpr- y0 - float
																				// DeclRefExpr- y0 - float
																			// UnexposedExpr- sy - float
																				// DeclRefExpr- sy - float
																// DeclStmt-  - 
																	// VarDecl- res - float [3]
																		// IntegerLiteral-  - int [Literal: 3]
																	// VarDecl- px - float
																	// VarDecl- py - float
																	// VarDecl- t - float
																	// VarDecl- it - float
																// DeclStmt-  - 
																	// VarDecl- a_inv - float
																		// UnexposedExpr-  - float
																			// ArraySubscriptExpr-  - float
																				// UnexposedExpr- precompute - float *
																					// DeclRefExpr- precompute - float *
																				// UnexposedExpr- i - int
																					// DeclRefExpr- i - int
																// IfStmt-  - 
																	// BinaryOperator-  - int [Binary Operator: EQ (==)]
																		// UnexposedExpr- a_inv - double
																			// UnexposedExpr- a_inv - float
																				// DeclRefExpr- a_inv - float
																		// FloatingLiteral-  - double [Literal: 0]
																	// CompoundStmt-  - 
																		// DeclStmt-  - 
																			// VarDecl- a - float
																				// BinaryOperator-  - float [Binary Operator: Mul (*)]
																					// UnexposedExpr-  - float
																						// IntegerLiteral-  - int [Literal: 3]
																					// ParenExpr-  - float
																						// BinaryOperator-  - float [Binary Operator: Add (+)]
																							// BinaryOperator-  - float [Binary Operator: Mul (*)]
																								// UnexposedExpr- ax - float
																									// DeclRefExpr- ax - float
																								// UnexposedExpr- bx - float
																									// DeclRefExpr- bx - float
																							// BinaryOperator-  - float [Binary Operator: Mul (*)]
																								// UnexposedExpr- ay - float
																									// DeclRefExpr- ay - float
																								// UnexposedExpr- by - float
																									// DeclRefExpr- by - float
																		// DeclStmt-  - 
																			// VarDecl- b - float
																				// BinaryOperator-  - float [Binary Operator: Add (+)]
																					// BinaryOperator-  - float [Binary Operator: Mul (*)]
																						// UnexposedExpr-  - float
																							// IntegerLiteral-  - int [Literal: 2]
																						// ParenExpr-  - float
																							// BinaryOperator-  - float [Binary Operator: Add (+)]
																								// BinaryOperator-  - float [Binary Operator: Mul (*)]
																									// UnexposedExpr- ax - float
																										// DeclRefExpr- ax - float
																									// UnexposedExpr- ax - float
																										// DeclRefExpr- ax - float
																								// BinaryOperator-  - float [Binary Operator: Mul (*)]
																									// UnexposedExpr- ay - float
																										// DeclRefExpr- ay - float
																									// UnexposedExpr- ay - float
																										// DeclRefExpr- ay - float
																					// ParenExpr-  - float
																						// BinaryOperator-  - float [Binary Operator: Add (+)]
																							// BinaryOperator-  - float [Binary Operator: Mul (*)]
																								// UnexposedExpr- mx - float
																									// DeclRefExpr- mx - float
																								// UnexposedExpr- bx - float
																									// DeclRefExpr- bx - float
																							// BinaryOperator-  - float [Binary Operator: Mul (*)]
																								// UnexposedExpr- my - float
																									// DeclRefExpr- my - float
																								// UnexposedExpr- by - float
																									// DeclRefExpr- by - float
																		// DeclStmt-  - 
																			// VarDecl- c - float
																				// BinaryOperator-  - float [Binary Operator: Add (+)]
																					// BinaryOperator-  - float [Binary Operator: Mul (*)]
																						// UnexposedExpr- mx - float
																							// DeclRefExpr- mx - float
																						// UnexposedExpr- ax - float
																							// DeclRefExpr- ax - float
																					// BinaryOperator-  - float [Binary Operator: Mul (*)]
																						// UnexposedExpr- my - float
																							// DeclRefExpr- my - float
																						// UnexposedExpr- ay - float
																							// DeclRefExpr- ay - float
																		// IfStmt-  - 
																			// BinaryOperator-  - int [Binary Operator: EQ (==)]
																				// UnexposedExpr- a - double
																					// UnexposedExpr- a - float
																						// DeclRefExpr- a - float
																				// FloatingLiteral-  - double [Literal: 0]
																			// CompoundStmt-  - 
																				// IfStmt-  - 
																					// BinaryOperator-  - int [Binary Operator: NE (!=)]
																						// UnexposedExpr- b - double
																							// UnexposedExpr- b - float
																								// DeclRefExpr- b - float
																						// FloatingLiteral-  - double [Literal: 0]
																					// CompoundStmt-  - 
																						// BinaryOperator-  - float [Binary Operator: Assign (=)]
																							// ArraySubscriptExpr-  - float
																								// UnexposedExpr- res - float *
																									// DeclRefExpr- res - float [3]
																								// UnaryOperator-  - int [Unary Operator: PostInc (++)]
																									// DeclRefExpr- num - int
																							// BinaryOperator-  - float [Binary Operator: Div (/)]
																								// UnaryOperator-  - float [Unary Operator: Minus (-)]
																									// UnexposedExpr- c - float
																										// DeclRefExpr- c - float
																								// UnexposedExpr- b - float
																									// DeclRefExpr- b - float
																			// CompoundStmt-  - 
																				// DeclStmt-  - 
																					// VarDecl- discriminant - float
																						// BinaryOperator-  - float [Binary Operator: Sub (-)]
																							// BinaryOperator-  - float [Binary Operator: Mul (*)]
																								// UnexposedExpr- b - float
																									// DeclRefExpr- b - float
																								// UnexposedExpr- b - float
																									// DeclRefExpr- b - float
																							// BinaryOperator-  - float [Binary Operator: Mul (*)]
																								// BinaryOperator-  - float [Binary Operator: Mul (*)]
																									// UnexposedExpr-  - float
																										// IntegerLiteral-  - int [Literal: 4]
																									// UnexposedExpr- a - float
																										// DeclRefExpr- a - float
																								// UnexposedExpr- c - float
																									// DeclRefExpr- c - float
																				// IfStmt-  - 
																					// BinaryOperator-  - int [Binary Operator: LT (<)]
																						// UnexposedExpr- discriminant - float
																							// DeclRefExpr- discriminant - float
																						// UnexposedExpr-  - float
																							// IntegerLiteral-  - int [Literal: 0]
																					// BinaryOperator-  - int [Binary Operator: Assign (=)]
																						// DeclRefExpr- num - int
																						// IntegerLiteral-  - int [Literal: 0]
																					// CompoundStmt-  - 
																						// DeclStmt-  - 
																							// VarDecl- root - float
																								// CStyleCastExpr-  - float
																									// CallExpr- sqrt - double
																										// UnexposedExpr- sqrt - double (*)(double)
																											// DeclRefExpr- sqrt - double (double)
																										// UnexposedExpr- discriminant - double
																											// UnexposedExpr- discriminant - float
																												// DeclRefExpr- discriminant - float
																						// BinaryOperator-  - float [Binary Operator: Assign (=)]
																							// ArraySubscriptExpr-  - float
																								// UnexposedExpr- res - float *
																									// DeclRefExpr- res - float [3]
																								// IntegerLiteral-  - int [Literal: 0]
																							// BinaryOperator-  - float [Binary Operator: Div (/)]
																								// ParenExpr-  - float
																									// BinaryOperator-  - float [Binary Operator: Sub (-)]
																										// UnaryOperator-  - float [Unary Operator: Minus (-)]
																											// UnexposedExpr- b - float
																												// DeclRefExpr- b - float
																										// UnexposedExpr- root - float
																											// DeclRefExpr- root - float
																								// ParenExpr-  - float
																									// BinaryOperator-  - float [Binary Operator: Mul (*)]
																										// UnexposedExpr-  - float
																											// IntegerLiteral-  - int [Literal: 2]
																										// UnexposedExpr- a - float
																											// DeclRefExpr- a - float
																						// BinaryOperator-  - float [Binary Operator: Assign (=)]
																							// ArraySubscriptExpr-  - float
																								// UnexposedExpr- res - float *
																									// DeclRefExpr- res - float [3]
																								// IntegerLiteral-  - int [Literal: 1]
																							// BinaryOperator-  - float [Binary Operator: Div (/)]
																								// ParenExpr-  - float
																									// BinaryOperator-  - float [Binary Operator: Add (+)]
																										// UnaryOperator-  - float [Unary Operator: Minus (-)]
																											// UnexposedExpr- b - float
																												// DeclRefExpr- b - float
																										// UnexposedExpr- root - float
																											// DeclRefExpr- root - float
																								// ParenExpr-  - float
																									// BinaryOperator-  - float [Binary Operator: Mul (*)]
																										// UnexposedExpr-  - float
																											// IntegerLiteral-  - int [Literal: 2]
																										// UnexposedExpr- a - float
																											// DeclRefExpr- a - float
																						// BinaryOperator-  - int [Binary Operator: Assign (=)]
																							// DeclRefExpr- num - int
																							// IntegerLiteral-  - int [Literal: 2]
																	// CompoundStmt-  - 
																		// DeclStmt-  - 
																			// VarDecl- b - float
																				// BinaryOperator-  - float [Binary Operator: Mul (*)]
																					// BinaryOperator-  - float [Binary Operator: Mul (*)]
																						// UnexposedExpr-  - float
																							// IntegerLiteral-  - int [Literal: 3]
																						// ParenExpr-  - float
																							// BinaryOperator-  - float [Binary Operator: Add (+)]
																								// BinaryOperator-  - float [Binary Operator: Mul (*)]
																									// UnexposedExpr- ax - float
																										// DeclRefExpr- ax - float
																									// UnexposedExpr- bx - float
																										// DeclRefExpr- bx - float
																								// BinaryOperator-  - float [Binary Operator: Mul (*)]
																									// UnexposedExpr- ay - float
																										// DeclRefExpr- ay - float
																									// UnexposedExpr- by - float
																										// DeclRefExpr- by - float
																					// UnexposedExpr- a_inv - float
																						// DeclRefExpr- a_inv - float
																		// DeclStmt-  - 
																			// VarDecl- c - float
																				// BinaryOperator-  - float [Binary Operator: Mul (*)]
																					// ParenExpr-  - float
																						// BinaryOperator-  - float [Binary Operator: Add (+)]
																							// BinaryOperator-  - float [Binary Operator: Mul (*)]
																								// UnexposedExpr-  - float
																									// IntegerLiteral-  - int [Literal: 2]
																								// ParenExpr-  - float
																									// BinaryOperator-  - float [Binary Operator: Add (+)]
																										// BinaryOperator-  - float [Binary Operator: Mul (*)]
																											// UnexposedExpr- ax - float
																												// DeclRefExpr- ax - float
																											// UnexposedExpr- ax - float
																												// DeclRefExpr- ax - float
																										// BinaryOperator-  - float [Binary Operator: Mul (*)]
																											// UnexposedExpr- ay - float
																												// DeclRefExpr- ay - float
																											// UnexposedExpr- ay - float
																												// DeclRefExpr- ay - float
																							// ParenExpr-  - float
																								// BinaryOperator-  - float [Binary Operator: Add (+)]
																									// BinaryOperator-  - float [Binary Operator: Mul (*)]
																										// UnexposedExpr- mx - float
																											// DeclRefExpr- mx - float
																										// UnexposedExpr- bx - float
																											// DeclRefExpr- bx - float
																									// BinaryOperator-  - float [Binary Operator: Mul (*)]
																										// UnexposedExpr- my - float
																											// DeclRefExpr- my - float
																										// UnexposedExpr- by - float
																											// DeclRefExpr- by - float
																					// UnexposedExpr- a_inv - float
																						// DeclRefExpr- a_inv - float
																		// DeclStmt-  - 
																			// VarDecl- d - float
																				// BinaryOperator-  - float [Binary Operator: Mul (*)]
																					// ParenExpr-  - float
																						// BinaryOperator-  - float [Binary Operator: Add (+)]
																							// BinaryOperator-  - float [Binary Operator: Mul (*)]
																								// UnexposedExpr- mx - float
																									// DeclRefExpr- mx - float
																								// UnexposedExpr- ax - float
																									// DeclRefExpr- ax - float
																							// BinaryOperator-  - float [Binary Operator: Mul (*)]
																								// UnexposedExpr- my - float
																									// DeclRefExpr- my - float
																								// UnexposedExpr- ay - float
																									// DeclRefExpr- ay - float
																					// UnexposedExpr- a_inv - float
																						// DeclRefExpr- a_inv - float
																		// BinaryOperator-  - int [Binary Operator: Assign (=)]
																			// DeclRefExpr- num - int
																			// CallExpr- stbtt__solve_cubic - int
																				// UnexposedExpr- stbtt__solve_cubic - int (*)(float, float, float, float *)
																					// DeclRefExpr- stbtt__solve_cubic - int (float, float, float, float *)
																				// UnexposedExpr- b - float
																					// DeclRefExpr- b - float
																				// UnexposedExpr- c - float
																					// DeclRefExpr- c - float
																				// UnexposedExpr- d - float
																					// DeclRefExpr- d - float
																				// UnexposedExpr- res - float *
																					// DeclRefExpr- res - float [3]
																// IfStmt-  - 
																	// BinaryOperator-  - int [Binary Operator: LAnd (&&)]
																		// BinaryOperator-  - int [Binary Operator: LAnd (&&)]
																			// BinaryOperator-  - int [Binary Operator: GE (>=)]
																				// UnexposedExpr- num - int
																					// DeclRefExpr- num - int
																				// IntegerLiteral-  - int [Literal: 1]
																			// BinaryOperator-  - int [Binary Operator: GE (>=)]
																				// UnexposedExpr-  - float
																					// ArraySubscriptExpr-  - float
																						// UnexposedExpr- res - float *
																							// DeclRefExpr- res - float [3]
																						// IntegerLiteral-  - int [Literal: 0]
																				// FloatingLiteral-  - float [Literal: 0]
																		// BinaryOperator-  - int [Binary Operator: LE (<=)]
																			// UnexposedExpr-  - float
																				// ArraySubscriptExpr-  - float
																					// UnexposedExpr- res - float *
																						// DeclRefExpr- res - float [3]
																					// IntegerLiteral-  - int [Literal: 0]
																			// FloatingLiteral-  - float [Literal: 1]
																	// CompoundStmt-  - 
																		// BinaryOperator-  - float [Binary Operator: Assign (=)]
																			// DeclRefExpr- t - float
																			// UnexposedExpr-  - float
																				// ArraySubscriptExpr-  - float
																					// UnexposedExpr- res - float *
																						// DeclRefExpr- res - float [3]
																					// IntegerLiteral-  - int [Literal: 0]
																		// BinaryOperator-  - float [Binary Operator: Assign (=)]
																			// DeclRefExpr- it - float
																			// BinaryOperator-  - float [Binary Operator: Sub (-)]
																				// FloatingLiteral-  - float [Literal: 1]
																				// UnexposedExpr- t - float
																					// DeclRefExpr- t - float
																		// BinaryOperator-  - float [Binary Operator: Assign (=)]
																			// DeclRefExpr- px - float
																			// BinaryOperator-  - float [Binary Operator: Add (+)]
																				// BinaryOperator-  - float [Binary Operator: Add (+)]
																					// BinaryOperator-  - float [Binary Operator: Mul (*)]
																						// BinaryOperator-  - float [Binary Operator: Mul (*)]
																							// UnexposedExpr- it - float
																								// DeclRefExpr- it - float
																							// UnexposedExpr- it - float
																								// DeclRefExpr- it - float
																						// UnexposedExpr- x0 - float
																							// DeclRefExpr- x0 - float
																					// BinaryOperator-  - float [Binary Operator: Mul (*)]
																						// BinaryOperator-  - float [Binary Operator: Mul (*)]
																							// BinaryOperator-  - float [Binary Operator: Mul (*)]
																								// UnexposedExpr-  - float
																									// IntegerLiteral-  - int [Literal: 2]
																								// UnexposedExpr- t - float
																									// DeclRefExpr- t - float
																							// UnexposedExpr- it - float
																								// DeclRefExpr- it - float
																						// UnexposedExpr- x1 - float
																							// DeclRefExpr- x1 - float
																				// BinaryOperator-  - float [Binary Operator: Mul (*)]
																					// BinaryOperator-  - float [Binary Operator: Mul (*)]
																						// UnexposedExpr- t - float
																							// DeclRefExpr- t - float
																						// UnexposedExpr- t - float
																							// DeclRefExpr- t - float
																					// UnexposedExpr- x2 - float
																						// DeclRefExpr- x2 - float
																		// BinaryOperator-  - float [Binary Operator: Assign (=)]
																			// DeclRefExpr- py - float
																			// BinaryOperator-  - float [Binary Operator: Add (+)]
																				// BinaryOperator-  - float [Binary Operator: Add (+)]
																					// BinaryOperator-  - float [Binary Operator: Mul (*)]
																						// BinaryOperator-  - float [Binary Operator: Mul (*)]
																							// UnexposedExpr- it - float
																								// DeclRefExpr- it - float
																							// UnexposedExpr- it - float
																								// DeclRefExpr- it - float
																						// UnexposedExpr- y0 - float
																							// DeclRefExpr- y0 - float
																					// BinaryOperator-  - float [Binary Operator: Mul (*)]
																						// BinaryOperator-  - float [Binary Operator: Mul (*)]
																							// BinaryOperator-  - float [Binary Operator: Mul (*)]
																								// UnexposedExpr-  - float
																									// IntegerLiteral-  - int [Literal: 2]
																								// UnexposedExpr- t - float
																									// DeclRefExpr- t - float
																							// UnexposedExpr- it - float
																								// DeclRefExpr- it - float
																						// UnexposedExpr- y1 - float
																							// DeclRefExpr- y1 - float
																				// BinaryOperator-  - float [Binary Operator: Mul (*)]
																					// BinaryOperator-  - float [Binary Operator: Mul (*)]
																						// UnexposedExpr- t - float
																							// DeclRefExpr- t - float
																						// UnexposedExpr- t - float
																							// DeclRefExpr- t - float
																					// UnexposedExpr- y2 - float
																						// DeclRefExpr- y2 - float
																		// BinaryOperator-  - float [Binary Operator: Assign (=)]
																			// DeclRefExpr- dist2 - float
																			// BinaryOperator-  - float [Binary Operator: Add (+)]
																				// BinaryOperator-  - float [Binary Operator: Mul (*)]
																					// ParenExpr-  - float
																						// BinaryOperator-  - float [Binary Operator: Sub (-)]
																							// UnexposedExpr- px - float
																								// DeclRefExpr- px - float
																							// UnexposedExpr- sx - float
																								// DeclRefExpr- sx - float
																					// ParenExpr-  - float
																						// BinaryOperator-  - float [Binary Operator: Sub (-)]
																							// UnexposedExpr- px - float
																								// DeclRefExpr- px - float
																							// UnexposedExpr- sx - float
																								// DeclRefExpr- sx - float
																				// BinaryOperator-  - float [Binary Operator: Mul (*)]
																					// ParenExpr-  - float
																						// BinaryOperator-  - float [Binary Operator: Sub (-)]
																							// UnexposedExpr- py - float
																								// DeclRefExpr- py - float
																							// UnexposedExpr- sy - float
																								// DeclRefExpr- sy - float
																					// ParenExpr-  - float
																						// BinaryOperator-  - float [Binary Operator: Sub (-)]
																							// UnexposedExpr- py - float
																								// DeclRefExpr- py - float
																							// UnexposedExpr- sy - float
																								// DeclRefExpr- sy - float
																		// IfStmt-  - 
																			// BinaryOperator-  - int [Binary Operator: LT (<)]
																				// UnexposedExpr- dist2 - float
																					// DeclRefExpr- dist2 - float
																				// BinaryOperator-  - float [Binary Operator: Mul (*)]
																					// UnexposedExpr- min_dist - float
																						// DeclRefExpr- min_dist - float
																					// UnexposedExpr- min_dist - float
																						// DeclRefExpr- min_dist - float
																			// BinaryOperator-  - float [Binary Operator: Assign (=)]
																				// DeclRefExpr- min_dist - float
																				// CStyleCastExpr-  - float
																					// CallExpr- sqrt - double
																						// UnexposedExpr- sqrt - double (*)(double)
																							// DeclRefExpr- sqrt - double (double)
																						// UnexposedExpr- dist2 - double
																							// UnexposedExpr- dist2 - float
																								// DeclRefExpr- dist2 - float
																// IfStmt-  - 
																	// BinaryOperator-  - int [Binary Operator: LAnd (&&)]
																		// BinaryOperator-  - int [Binary Operator: LAnd (&&)]
																			// BinaryOperator-  - int [Binary Operator: GE (>=)]
																				// UnexposedExpr- num - int
																					// DeclRefExpr- num - int
																				// IntegerLiteral-  - int [Literal: 2]
																			// BinaryOperator-  - int [Binary Operator: GE (>=)]
																				// UnexposedExpr-  - float
																					// ArraySubscriptExpr-  - float
																						// UnexposedExpr- res - float *
																							// DeclRefExpr- res - float [3]
																						// IntegerLiteral-  - int [Literal: 1]
																				// FloatingLiteral-  - float [Literal: 0]
																		// BinaryOperator-  - int [Binary Operator: LE (<=)]
																			// UnexposedExpr-  - float
																				// ArraySubscriptExpr-  - float
																					// UnexposedExpr- res - float *
																						// DeclRefExpr- res - float [3]
																					// IntegerLiteral-  - int [Literal: 1]
																			// FloatingLiteral-  - float [Literal: 1]
																	// CompoundStmt-  - 
																		// BinaryOperator-  - float [Binary Operator: Assign (=)]
																			// DeclRefExpr- t - float
																			// UnexposedExpr-  - float
																				// ArraySubscriptExpr-  - float
																					// UnexposedExpr- res - float *
																						// DeclRefExpr- res - float [3]
																					// IntegerLiteral-  - int [Literal: 1]
																		// BinaryOperator-  - float [Binary Operator: Assign (=)]
																			// DeclRefExpr- it - float
																			// BinaryOperator-  - float [Binary Operator: Sub (-)]
																				// FloatingLiteral-  - float [Literal: 1]
																				// UnexposedExpr- t - float
																					// DeclRefExpr- t - float
																		// BinaryOperator-  - float [Binary Operator: Assign (=)]
																			// DeclRefExpr- px - float
																			// BinaryOperator-  - float [Binary Operator: Add (+)]
																				// BinaryOperator-  - float [Binary Operator: Add (+)]
																					// BinaryOperator-  - float [Binary Operator: Mul (*)]
																						// BinaryOperator-  - float [Binary Operator: Mul (*)]
																							// UnexposedExpr- it - float
																								// DeclRefExpr- it - float
																							// UnexposedExpr- it - float
																								// DeclRefExpr- it - float
																						// UnexposedExpr- x0 - float
																							// DeclRefExpr- x0 - float
																					// BinaryOperator-  - float [Binary Operator: Mul (*)]
																						// BinaryOperator-  - float [Binary Operator: Mul (*)]
																							// BinaryOperator-  - float [Binary Operator: Mul (*)]
																								// UnexposedExpr-  - float
																									// IntegerLiteral-  - int [Literal: 2]
																								// UnexposedExpr- t - float
																									// DeclRefExpr- t - float
																							// UnexposedExpr- it - float
																								// DeclRefExpr- it - float
																						// UnexposedExpr- x1 - float
																							// DeclRefExpr- x1 - float
																				// BinaryOperator-  - float [Binary Operator: Mul (*)]
																					// BinaryOperator-  - float [Binary Operator: Mul (*)]
																						// UnexposedExpr- t - float
																							// DeclRefExpr- t - float
																						// UnexposedExpr- t - float
																							// DeclRefExpr- t - float
																					// UnexposedExpr- x2 - float
																						// DeclRefExpr- x2 - float
																		// BinaryOperator-  - float [Binary Operator: Assign (=)]
																			// DeclRefExpr- py - float
																			// BinaryOperator-  - float [Binary Operator: Add (+)]
																				// BinaryOperator-  - float [Binary Operator: Add (+)]
																					// BinaryOperator-  - float [Binary Operator: Mul (*)]
																						// BinaryOperator-  - float [Binary Operator: Mul (*)]
																							// UnexposedExpr- it - float
																								// DeclRefExpr- it - float
																							// UnexposedExpr- it - float
																								// DeclRefExpr- it - float
																						// UnexposedExpr- y0 - float
																							// DeclRefExpr- y0 - float
																					// BinaryOperator-  - float [Binary Operator: Mul (*)]
																						// BinaryOperator-  - float [Binary Operator: Mul (*)]
																							// BinaryOperator-  - float [Binary Operator: Mul (*)]
																								// UnexposedExpr-  - float
																									// IntegerLiteral-  - int [Literal: 2]
																								// UnexposedExpr- t - float
																									// DeclRefExpr- t - float
																							// UnexposedExpr- it - float
																								// DeclRefExpr- it - float
																						// UnexposedExpr- y1 - float
																							// DeclRefExpr- y1 - float
																				// BinaryOperator-  - float [Binary Operator: Mul (*)]
																					// BinaryOperator-  - float [Binary Operator: Mul (*)]
																						// UnexposedExpr- t - float
																							// DeclRefExpr- t - float
																						// UnexposedExpr- t - float
																							// DeclRefExpr- t - float
																					// UnexposedExpr- y2 - float
																						// DeclRefExpr- y2 - float
																		// BinaryOperator-  - float [Binary Operator: Assign (=)]
																			// DeclRefExpr- dist2 - float
																			// BinaryOperator-  - float [Binary Operator: Add (+)]
																				// BinaryOperator-  - float [Binary Operator: Mul (*)]
																					// ParenExpr-  - float
																						// BinaryOperator-  - float [Binary Operator: Sub (-)]
																							// UnexposedExpr- px - float
																								// DeclRefExpr- px - float
																							// UnexposedExpr- sx - float
																								// DeclRefExpr- sx - float
																					// ParenExpr-  - float
																						// BinaryOperator-  - float [Binary Operator: Sub (-)]
																							// UnexposedExpr- px - float
																								// DeclRefExpr- px - float
																							// UnexposedExpr- sx - float
																								// DeclRefExpr- sx - float
																				// BinaryOperator-  - float [Binary Operator: Mul (*)]
																					// ParenExpr-  - float
																						// BinaryOperator-  - float [Binary Operator: Sub (-)]
																							// UnexposedExpr- py - float
																								// DeclRefExpr- py - float
																							// UnexposedExpr- sy - float
																								// DeclRefExpr- sy - float
																					// ParenExpr-  - float
																						// BinaryOperator-  - float [Binary Operator: Sub (-)]
																							// UnexposedExpr- py - float
																								// DeclRefExpr- py - float
																							// UnexposedExpr- sy - float
																								// DeclRefExpr- sy - float
																		// IfStmt-  - 
																			// BinaryOperator-  - int [Binary Operator: LT (<)]
																				// UnexposedExpr- dist2 - float
																					// DeclRefExpr- dist2 - float
																				// BinaryOperator-  - float [Binary Operator: Mul (*)]
																					// UnexposedExpr- min_dist - float
																						// DeclRefExpr- min_dist - float
																					// UnexposedExpr- min_dist - float
																						// DeclRefExpr- min_dist - float
																			// BinaryOperator-  - float [Binary Operator: Assign (=)]
																				// DeclRefExpr- min_dist - float
																				// CStyleCastExpr-  - float
																					// CallExpr- sqrt - double
																						// UnexposedExpr- sqrt - double (*)(double)
																							// DeclRefExpr- sqrt - double (double)
																						// UnexposedExpr- dist2 - double
																							// UnexposedExpr- dist2 - float
																								// DeclRefExpr- dist2 - float
																// IfStmt-  - 
																	// BinaryOperator-  - int [Binary Operator: LAnd (&&)]
																		// BinaryOperator-  - int [Binary Operator: LAnd (&&)]
																			// BinaryOperator-  - int [Binary Operator: GE (>=)]
																				// UnexposedExpr- num - int
																					// DeclRefExpr- num - int
																				// IntegerLiteral-  - int [Literal: 3]
																			// BinaryOperator-  - int [Binary Operator: GE (>=)]
																				// UnexposedExpr-  - float
																					// ArraySubscriptExpr-  - float
																						// UnexposedExpr- res - float *
																							// DeclRefExpr- res - float [3]
																						// IntegerLiteral-  - int [Literal: 2]
																				// FloatingLiteral-  - float [Literal: 0]
																		// BinaryOperator-  - int [Binary Operator: LE (<=)]
																			// UnexposedExpr-  - float
																				// ArraySubscriptExpr-  - float
																					// UnexposedExpr- res - float *
																						// DeclRefExpr- res - float [3]
																					// IntegerLiteral-  - int [Literal: 2]
																			// FloatingLiteral-  - float [Literal: 1]
																	// CompoundStmt-  - 
																		// BinaryOperator-  - float [Binary Operator: Assign (=)]
																			// DeclRefExpr- t - float
																			// UnexposedExpr-  - float
																				// ArraySubscriptExpr-  - float
																					// UnexposedExpr- res - float *
																						// DeclRefExpr- res - float [3]
																					// IntegerLiteral-  - int [Literal: 2]
																		// BinaryOperator-  - float [Binary Operator: Assign (=)]
																			// DeclRefExpr- it - float
																			// BinaryOperator-  - float [Binary Operator: Sub (-)]
																				// FloatingLiteral-  - float [Literal: 1]
																				// UnexposedExpr- t - float
																					// DeclRefExpr- t - float
																		// BinaryOperator-  - float [Binary Operator: Assign (=)]
																			// DeclRefExpr- px - float
																			// BinaryOperator-  - float [Binary Operator: Add (+)]
																				// BinaryOperator-  - float [Binary Operator: Add (+)]
																					// BinaryOperator-  - float [Binary Operator: Mul (*)]
																						// BinaryOperator-  - float [Binary Operator: Mul (*)]
																							// UnexposedExpr- it - float
																								// DeclRefExpr- it - float
																							// UnexposedExpr- it - float
																								// DeclRefExpr- it - float
																						// UnexposedExpr- x0 - float
																							// DeclRefExpr- x0 - float
																					// BinaryOperator-  - float [Binary Operator: Mul (*)]
																						// BinaryOperator-  - float [Binary Operator: Mul (*)]
																							// BinaryOperator-  - float [Binary Operator: Mul (*)]
																								// UnexposedExpr-  - float
																									// IntegerLiteral-  - int [Literal: 2]
																								// UnexposedExpr- t - float
																									// DeclRefExpr- t - float
																							// UnexposedExpr- it - float
																								// DeclRefExpr- it - float
																						// UnexposedExpr- x1 - float
																							// DeclRefExpr- x1 - float
																				// BinaryOperator-  - float [Binary Operator: Mul (*)]
																					// BinaryOperator-  - float [Binary Operator: Mul (*)]
																						// UnexposedExpr- t - float
																							// DeclRefExpr- t - float
																						// UnexposedExpr- t - float
																							// DeclRefExpr- t - float
																					// UnexposedExpr- x2 - float
																						// DeclRefExpr- x2 - float
																		// BinaryOperator-  - float [Binary Operator: Assign (=)]
																			// DeclRefExpr- py - float
																			// BinaryOperator-  - float [Binary Operator: Add (+)]
																				// BinaryOperator-  - float [Binary Operator: Add (+)]
																					// BinaryOperator-  - float [Binary Operator: Mul (*)]
																						// BinaryOperator-  - float [Binary Operator: Mul (*)]
																							// UnexposedExpr- it - float
																								// DeclRefExpr- it - float
																							// UnexposedExpr- it - float
																								// DeclRefExpr- it - float
																						// UnexposedExpr- y0 - float
																							// DeclRefExpr- y0 - float
																					// BinaryOperator-  - float [Binary Operator: Mul (*)]
																						// BinaryOperator-  - float [Binary Operator: Mul (*)]
																							// BinaryOperator-  - float [Binary Operator: Mul (*)]
																								// UnexposedExpr-  - float
																									// IntegerLiteral-  - int [Literal: 2]
																								// UnexposedExpr- t - float
																									// DeclRefExpr- t - float
																							// UnexposedExpr- it - float
																								// DeclRefExpr- it - float
																						// UnexposedExpr- y1 - float
																							// DeclRefExpr- y1 - float
																				// BinaryOperator-  - float [Binary Operator: Mul (*)]
																					// BinaryOperator-  - float [Binary Operator: Mul (*)]
																						// UnexposedExpr- t - float
																							// DeclRefExpr- t - float
																						// UnexposedExpr- t - float
																							// DeclRefExpr- t - float
																					// UnexposedExpr- y2 - float
																						// DeclRefExpr- y2 - float
																		// BinaryOperator-  - float [Binary Operator: Assign (=)]
																			// DeclRefExpr- dist2 - float
																			// BinaryOperator-  - float [Binary Operator: Add (+)]
																				// BinaryOperator-  - float [Binary Operator: Mul (*)]
																					// ParenExpr-  - float
																						// BinaryOperator-  - float [Binary Operator: Sub (-)]
																							// UnexposedExpr- px - float
																								// DeclRefExpr- px - float
																							// UnexposedExpr- sx - float
																								// DeclRefExpr- sx - float
																					// ParenExpr-  - float
																						// BinaryOperator-  - float [Binary Operator: Sub (-)]
																							// UnexposedExpr- px - float
																								// DeclRefExpr- px - float
																							// UnexposedExpr- sx - float
																								// DeclRefExpr- sx - float
																				// BinaryOperator-  - float [Binary Operator: Mul (*)]
																					// ParenExpr-  - float
																						// BinaryOperator-  - float [Binary Operator: Sub (-)]
																							// UnexposedExpr- py - float
																								// DeclRefExpr- py - float
																							// UnexposedExpr- sy - float
																								// DeclRefExpr- sy - float
																					// ParenExpr-  - float
																						// BinaryOperator-  - float [Binary Operator: Sub (-)]
																							// UnexposedExpr- py - float
																								// DeclRefExpr- py - float
																							// UnexposedExpr- sy - float
																								// DeclRefExpr- sy - float
																		// IfStmt-  - 
																			// BinaryOperator-  - int [Binary Operator: LT (<)]
																				// UnexposedExpr- dist2 - float
																					// DeclRefExpr- dist2 - float
																				// BinaryOperator-  - float [Binary Operator: Mul (*)]
																					// UnexposedExpr- min_dist - float
																						// DeclRefExpr- min_dist - float
																					// UnexposedExpr- min_dist - float
																						// DeclRefExpr- min_dist - float
																			// BinaryOperator-  - float [Binary Operator: Assign (=)]
																				// DeclRefExpr- min_dist - float
																				// CStyleCastExpr-  - float
																					// CallExpr- sqrt - double
																						// UnexposedExpr- sqrt - double (*)(double)
																							// DeclRefExpr- sqrt - double (double)
																						// UnexposedExpr- dist2 - double
																							// UnexposedExpr- dist2 - float
																								// DeclRefExpr- dist2 - float
									// IfStmt-  - 
										// BinaryOperator-  - int [Binary Operator: EQ (==)]
											// UnexposedExpr- winding - int
												// DeclRefExpr- winding - int
											// IntegerLiteral-  - int [Literal: 0]
										// BinaryOperator-  - float [Binary Operator: Assign (=)]
											// DeclRefExpr- min_dist - float
											// UnaryOperator-  - float [Unary Operator: Minus (-)]
												// UnexposedExpr- min_dist - float
													// DeclRefExpr- min_dist - float
									// BinaryOperator-  - float [Binary Operator: Assign (=)]
										// DeclRefExpr- val - float
										// BinaryOperator-  - float [Binary Operator: Add (+)]
											// UnexposedExpr- onedge_value - float
												// UnexposedExpr- onedge_value - int
													// UnexposedExpr- onedge_value - unsigned char
														// DeclRefExpr- onedge_value - unsigned char
											// BinaryOperator-  - float [Binary Operator: Mul (*)]
												// UnexposedExpr- pixel_dist_scale - float
													// DeclRefExpr- pixel_dist_scale - float
												// UnexposedExpr- min_dist - float
													// DeclRefExpr- min_dist - float
									// IfStmt-  - 
										// BinaryOperator-  - int [Binary Operator: LT (<)]
											// UnexposedExpr- val - float
												// DeclRefExpr- val - float
											// UnexposedExpr-  - float
												// IntegerLiteral-  - int [Literal: 0]
										// BinaryOperator-  - float [Binary Operator: Assign (=)]
											// DeclRefExpr- val - float
											// UnexposedExpr-  - float
												// IntegerLiteral-  - int [Literal: 0]
										// IfStmt-  - 
											// BinaryOperator-  - int [Binary Operator: GT (>)]
												// UnexposedExpr- val - float
													// DeclRefExpr- val - float
												// UnexposedExpr-  - float
													// IntegerLiteral-  - int [Literal: 255]
											// BinaryOperator-  - float [Binary Operator: Assign (=)]
												// DeclRefExpr- val - float
												// UnexposedExpr-  - float
													// IntegerLiteral-  - int [Literal: 255]
									// BinaryOperator-  - unsigned char [Binary Operator: Assign (=)]
										// ArraySubscriptExpr-  - unsigned char
											// UnexposedExpr- data - unsigned char *
												// DeclRefExpr- data - unsigned char *
											// BinaryOperator-  - int [Binary Operator: Add (+)]
												// BinaryOperator-  - int [Binary Operator: Mul (*)]
													// ParenExpr-  - int
														// BinaryOperator-  - int [Binary Operator: Sub (-)]
															// UnexposedExpr- y - int
																// DeclRefExpr- y - int
															// UnexposedExpr- iy0 - int
																// DeclRefExpr- iy0 - int
													// UnexposedExpr- w - int
														// DeclRefExpr- w - int
												// ParenExpr-  - int
													// BinaryOperator-  - int [Binary Operator: Sub (-)]
														// UnexposedExpr- x - int
															// DeclRefExpr- x - int
														// UnexposedExpr- ix0 - int
															// DeclRefExpr- ix0 - int
										// CStyleCastExpr-  - unsigned char
											// UnexposedExpr- val - float
												// DeclRefExpr- val - float
					// CallExpr- free - void
						// UnexposedExpr- free - void (*)(void *) __attribute__((cdecl))
							// DeclRefExpr- free - void (void *)
						// UnexposedExpr- precompute - void *
							// UnexposedExpr- precompute - float *
								// DeclRefExpr- precompute - float *
					// CallExpr- free - void
						// UnexposedExpr- free - void (*)(void *) __attribute__((cdecl))
							// DeclRefExpr- free - void (void *)
						// UnexposedExpr- verts - void *
							// UnexposedExpr- verts - stbtt_vertex *
								// DeclRefExpr- verts - stbtt_vertex *
				// ReturnStmt-  - 
					// UnexposedExpr- data - unsigned char *
						// DeclRefExpr- data - unsigned char *
		// FunctionDecl- stbtt_GetCodepointSDF - unsigned char *(const stbtt_fontinfo *, float, int, int, unsigned char, float, int *, int *, int *, int *)
			// ParmDecl- info - const stbtt_fontinfo *
				// TypeRef- stbtt_fontinfo - stbtt_fontinfo
			// ParmDecl- scale - float
			// ParmDecl- codepoint - int
			// ParmDecl- padding - int
			// ParmDecl- onedge_value - unsigned char
			// ParmDecl- pixel_dist_scale - float
			// ParmDecl- width - int *
			// ParmDecl- height - int *
			// ParmDecl- xoff - int *
			// ParmDecl- yoff - int *
			// CompoundStmt-  - 
				// ReturnStmt-  - 
					// CallExpr- stbtt_GetGlyphSDF - unsigned char *
						// UnexposedExpr- stbtt_GetGlyphSDF - unsigned char *(*)(const stbtt_fontinfo *, float, int, int, unsigned char, float, int *, int *, int *, int *)
							// DeclRefExpr- stbtt_GetGlyphSDF - unsigned char *(const stbtt_fontinfo *, float, int, int, unsigned char, float, int *, int *, int *, int *)
						// UnexposedExpr- info - const stbtt_fontinfo *
							// DeclRefExpr- info - const stbtt_fontinfo *
						// UnexposedExpr- scale - float
							// DeclRefExpr- scale - float
						// CallExpr- stbtt_FindGlyphIndex - int
							// UnexposedExpr- stbtt_FindGlyphIndex - int (*)(const stbtt_fontinfo *, int)
								// DeclRefExpr- stbtt_FindGlyphIndex - int (const stbtt_fontinfo *, int)
							// UnexposedExpr- info - const stbtt_fontinfo *
								// DeclRefExpr- info - const stbtt_fontinfo *
							// UnexposedExpr- codepoint - int
								// DeclRefExpr- codepoint - int
						// UnexposedExpr- padding - int
							// DeclRefExpr- padding - int
						// UnexposedExpr- onedge_value - unsigned char
							// DeclRefExpr- onedge_value - unsigned char
						// UnexposedExpr- pixel_dist_scale - float
							// DeclRefExpr- pixel_dist_scale - float
						// UnexposedExpr- width - int *
							// DeclRefExpr- width - int *
						// UnexposedExpr- height - int *
							// DeclRefExpr- height - int *
						// UnexposedExpr- xoff - int *
							// DeclRefExpr- xoff - int *
						// UnexposedExpr- yoff - int *
							// DeclRefExpr- yoff - int *
		// FunctionDecl- stbtt_FreeSDF - void (unsigned char *, void *)
			// ParmDecl- bitmap - unsigned char *
			// ParmDecl- userdata - void *
			// CompoundStmt-  - 
				// CallExpr- free - void
					// UnexposedExpr- free - void (*)(void *) __attribute__((cdecl))
						// DeclRefExpr- free - void (void *)
					// UnexposedExpr- bitmap - void *
						// UnexposedExpr- bitmap - unsigned char *
							// DeclRefExpr- bitmap - unsigned char *
		// FunctionDecl- stbtt__CompareUTF8toUTF16_bigendian_prefix - stbtt_int32 (stbtt_uint8 *, stbtt_int32, stbtt_uint8 *, stbtt_int32)
			// TypeRef- stbtt_int32 - stbtt_int32
			// ParmDecl- s1 - stbtt_uint8 *
				// TypeRef- stbtt_uint8 - stbtt_uint8
			// ParmDecl- len1 - stbtt_int32
				// TypeRef- stbtt_int32 - stbtt_int32
			// ParmDecl- s2 - stbtt_uint8 *
				// TypeRef- stbtt_uint8 - stbtt_uint8
			// ParmDecl- len2 - stbtt_int32
				// TypeRef- stbtt_int32 - stbtt_int32
			// CompoundStmt-  - 
				// DeclStmt-  - 
					// VarDecl- i - stbtt_int32
						// TypeRef- stbtt_int32 - stbtt_int32
						// IntegerLiteral-  - int [Literal: 0]
				// WhileStmt-  - 
					// UnexposedExpr- len2 - stbtt_int32
						// DeclRefExpr- len2 - stbtt_int32
					// CompoundStmt-  - 
						// DeclStmt-  - 
							// VarDecl- ch - stbtt_uint16
								// TypeRef- stbtt_uint16 - stbtt_uint16
								// UnexposedExpr-  - stbtt_uint16
									// BinaryOperator-  - int [Binary Operator: Add (+)]
										// BinaryOperator-  - int [Binary Operator: Mul (*)]
											// UnexposedExpr-  - int
												// UnexposedExpr-  - stbtt_uint8
													// ArraySubscriptExpr-  - stbtt_uint8
														// UnexposedExpr- s2 - stbtt_uint8 *
															// DeclRefExpr- s2 - stbtt_uint8 *
														// IntegerLiteral-  - int [Literal: 0]
											// IntegerLiteral-  - int [Literal: 256]
										// UnexposedExpr-  - int
											// UnexposedExpr-  - stbtt_uint8
												// ArraySubscriptExpr-  - stbtt_uint8
													// UnexposedExpr- s2 - stbtt_uint8 *
														// DeclRefExpr- s2 - stbtt_uint8 *
													// IntegerLiteral-  - int [Literal: 1]
						// IfStmt-  - 
							// BinaryOperator-  - int [Binary Operator: LT (<)]
								// UnexposedExpr- ch - int
									// UnexposedExpr- ch - stbtt_uint16
										// DeclRefExpr- ch - stbtt_uint16
								// IntegerLiteral-  - int [Literal: 128]
							// CompoundStmt-  - 
								// IfStmt-  - 
									// BinaryOperator-  - int [Binary Operator: GE (>=)]
										// UnexposedExpr- i - stbtt_int32
											// DeclRefExpr- i - stbtt_int32
										// UnexposedExpr- len1 - stbtt_int32
											// DeclRefExpr- len1 - stbtt_int32
									// ReturnStmt-  - 
										// UnaryOperator-  - int [Unary Operator: Minus (-)]
											// IntegerLiteral-  - int [Literal: 1]
								// IfStmt-  - 
									// BinaryOperator-  - int [Binary Operator: NE (!=)]
										// UnexposedExpr-  - int
											// UnexposedExpr-  - stbtt_uint8
												// ArraySubscriptExpr-  - stbtt_uint8
													// UnexposedExpr- s1 - stbtt_uint8 *
														// DeclRefExpr- s1 - stbtt_uint8 *
													// UnaryOperator-  - stbtt_int32 [Unary Operator: PostInc (++)]
														// DeclRefExpr- i - stbtt_int32
										// UnexposedExpr- ch - int
											// UnexposedExpr- ch - stbtt_uint16
												// DeclRefExpr- ch - stbtt_uint16
									// ReturnStmt-  - 
										// UnaryOperator-  - int [Unary Operator: Minus (-)]
											// IntegerLiteral-  - int [Literal: 1]
							// IfStmt-  - 
								// BinaryOperator-  - int [Binary Operator: LT (<)]
									// UnexposedExpr- ch - int
										// UnexposedExpr- ch - stbtt_uint16
											// DeclRefExpr- ch - stbtt_uint16
									// IntegerLiteral-  - int [Literal: 2048]
								// CompoundStmt-  - 
									// IfStmt-  - 
										// BinaryOperator-  - int [Binary Operator: GE (>=)]
											// BinaryOperator-  - int [Binary Operator: Add (+)]
												// UnexposedExpr- i - stbtt_int32
													// DeclRefExpr- i - stbtt_int32
												// IntegerLiteral-  - int [Literal: 1]
											// UnexposedExpr- len1 - stbtt_int32
												// DeclRefExpr- len1 - stbtt_int32
										// ReturnStmt-  - 
											// UnaryOperator-  - int [Unary Operator: Minus (-)]
												// IntegerLiteral-  - int [Literal: 1]
									// IfStmt-  - 
										// BinaryOperator-  - int [Binary Operator: NE (!=)]
											// UnexposedExpr-  - int
												// UnexposedExpr-  - stbtt_uint8
													// ArraySubscriptExpr-  - stbtt_uint8
														// UnexposedExpr- s1 - stbtt_uint8 *
															// DeclRefExpr- s1 - stbtt_uint8 *
														// UnaryOperator-  - stbtt_int32 [Unary Operator: PostInc (++)]
															// DeclRefExpr- i - stbtt_int32
											// BinaryOperator-  - int [Binary Operator: Add (+)]
												// IntegerLiteral-  - int [Literal: 192]
												// ParenExpr-  - int
													// BinaryOperator-  - int [Binary Operator: Shr (>>)]
														// UnexposedExpr- ch - int
															// UnexposedExpr- ch - stbtt_uint16
																// DeclRefExpr- ch - stbtt_uint16
														// IntegerLiteral-  - int [Literal: 6]
										// ReturnStmt-  - 
											// UnaryOperator-  - int [Unary Operator: Minus (-)]
												// IntegerLiteral-  - int [Literal: 1]
									// IfStmt-  - 
										// BinaryOperator-  - int [Binary Operator: NE (!=)]
											// UnexposedExpr-  - int
												// UnexposedExpr-  - stbtt_uint8
													// ArraySubscriptExpr-  - stbtt_uint8
														// UnexposedExpr- s1 - stbtt_uint8 *
															// DeclRefExpr- s1 - stbtt_uint8 *
														// UnaryOperator-  - stbtt_int32 [Unary Operator: PostInc (++)]
															// DeclRefExpr- i - stbtt_int32
											// BinaryOperator-  - int [Binary Operator: Add (+)]
												// IntegerLiteral-  - int [Literal: 128]
												// ParenExpr-  - int
													// BinaryOperator-  - int [Binary Operator: And (&)]
														// UnexposedExpr- ch - int
															// UnexposedExpr- ch - stbtt_uint16
																// DeclRefExpr- ch - stbtt_uint16
														// IntegerLiteral-  - int [Literal: 63]
										// ReturnStmt-  - 
											// UnaryOperator-  - int [Unary Operator: Minus (-)]
												// IntegerLiteral-  - int [Literal: 1]
								// IfStmt-  - 
									// BinaryOperator-  - int [Binary Operator: LAnd (&&)]
										// BinaryOperator-  - int [Binary Operator: GE (>=)]
											// UnexposedExpr- ch - int
												// UnexposedExpr- ch - stbtt_uint16
													// DeclRefExpr- ch - stbtt_uint16
											// IntegerLiteral-  - int [Literal: 55296]
										// BinaryOperator-  - int [Binary Operator: LT (<)]
											// UnexposedExpr- ch - int
												// UnexposedExpr- ch - stbtt_uint16
													// DeclRefExpr- ch - stbtt_uint16
											// IntegerLiteral-  - int [Literal: 56320]
									// CompoundStmt-  - 
										// DeclStmt-  - 
											// VarDecl- c - stbtt_uint32
												// TypeRef- stbtt_uint32 - stbtt_uint32
										// DeclStmt-  - 
											// VarDecl- ch2 - stbtt_uint16
												// TypeRef- stbtt_uint16 - stbtt_uint16
												// UnexposedExpr-  - stbtt_uint16
													// BinaryOperator-  - int [Binary Operator: Add (+)]
														// BinaryOperator-  - int [Binary Operator: Mul (*)]
															// UnexposedExpr-  - int
																// UnexposedExpr-  - stbtt_uint8
																	// ArraySubscriptExpr-  - stbtt_uint8
																		// UnexposedExpr- s2 - stbtt_uint8 *
																			// DeclRefExpr- s2 - stbtt_uint8 *
																		// IntegerLiteral-  - int [Literal: 2]
															// IntegerLiteral-  - int [Literal: 256]
														// UnexposedExpr-  - int
															// UnexposedExpr-  - stbtt_uint8
																// ArraySubscriptExpr-  - stbtt_uint8
																	// UnexposedExpr- s2 - stbtt_uint8 *
																		// DeclRefExpr- s2 - stbtt_uint8 *
																	// IntegerLiteral-  - int [Literal: 3]
										// IfStmt-  - 
											// BinaryOperator-  - int [Binary Operator: GE (>=)]
												// BinaryOperator-  - int [Binary Operator: Add (+)]
													// UnexposedExpr- i - stbtt_int32
														// DeclRefExpr- i - stbtt_int32
													// IntegerLiteral-  - int [Literal: 3]
												// UnexposedExpr- len1 - stbtt_int32
													// DeclRefExpr- len1 - stbtt_int32
											// ReturnStmt-  - 
												// UnaryOperator-  - int [Unary Operator: Minus (-)]
													// IntegerLiteral-  - int [Literal: 1]
										// BinaryOperator-  - stbtt_uint32 [Binary Operator: Assign (=)]
											// DeclRefExpr- c - stbtt_uint32
											// UnexposedExpr-  - stbtt_uint32
												// BinaryOperator-  - int [Binary Operator: Add (+)]
													// BinaryOperator-  - int [Binary Operator: Add (+)]
														// ParenExpr-  - int
															// BinaryOperator-  - int [Binary Operator: Shl (<<)]
																// ParenExpr-  - int
																	// BinaryOperator-  - int [Binary Operator: Sub (-)]
																		// UnexposedExpr- ch - int
																			// UnexposedExpr- ch - stbtt_uint16
																				// DeclRefExpr- ch - stbtt_uint16
																		// IntegerLiteral-  - int [Literal: 55296]
																// IntegerLiteral-  - int [Literal: 10]
														// ParenExpr-  - int
															// BinaryOperator-  - int [Binary Operator: Sub (-)]
																// UnexposedExpr- ch2 - int
																	// UnexposedExpr- ch2 - stbtt_uint16
																		// DeclRefExpr- ch2 - stbtt_uint16
																// IntegerLiteral-  - int [Literal: 56320]
													// IntegerLiteral-  - int [Literal: 65536]
										// IfStmt-  - 
											// BinaryOperator-  - int [Binary Operator: NE (!=)]
												// UnexposedExpr-  - unsigned int
													// UnexposedExpr-  - stbtt_uint8
														// ArraySubscriptExpr-  - stbtt_uint8
															// UnexposedExpr- s1 - stbtt_uint8 *
																// DeclRefExpr- s1 - stbtt_uint8 *
															// UnaryOperator-  - stbtt_int32 [Unary Operator: PostInc (++)]
																// DeclRefExpr- i - stbtt_int32
												// BinaryOperator-  - unsigned int [Binary Operator: Add (+)]
													// UnexposedExpr-  - unsigned int
														// IntegerLiteral-  - int [Literal: 240]
													// ParenExpr-  - stbtt_uint32
														// BinaryOperator-  - stbtt_uint32 [Binary Operator: Shr (>>)]
															// UnexposedExpr- c - stbtt_uint32
																// DeclRefExpr- c - stbtt_uint32
															// IntegerLiteral-  - int [Literal: 18]
											// ReturnStmt-  - 
												// UnaryOperator-  - int [Unary Operator: Minus (-)]
													// IntegerLiteral-  - int [Literal: 1]
										// IfStmt-  - 
											// BinaryOperator-  - int [Binary Operator: NE (!=)]
												// UnexposedExpr-  - unsigned int
													// UnexposedExpr-  - stbtt_uint8
														// ArraySubscriptExpr-  - stbtt_uint8
															// UnexposedExpr- s1 - stbtt_uint8 *
																// DeclRefExpr- s1 - stbtt_uint8 *
															// UnaryOperator-  - stbtt_int32 [Unary Operator: PostInc (++)]
																// DeclRefExpr- i - stbtt_int32
												// BinaryOperator-  - unsigned int [Binary Operator: Add (+)]
													// UnexposedExpr-  - unsigned int
														// IntegerLiteral-  - int [Literal: 128]
													// ParenExpr-  - unsigned int
														// BinaryOperator-  - unsigned int [Binary Operator: And (&)]
															// ParenExpr-  - stbtt_uint32
																// BinaryOperator-  - stbtt_uint32 [Binary Operator: Shr (>>)]
																	// UnexposedExpr- c - stbtt_uint32
																		// DeclRefExpr- c - stbtt_uint32
																	// IntegerLiteral-  - int [Literal: 12]
															// UnexposedExpr-  - unsigned int
																// IntegerLiteral-  - int [Literal: 63]
											// ReturnStmt-  - 
												// UnaryOperator-  - int [Unary Operator: Minus (-)]
													// IntegerLiteral-  - int [Literal: 1]
										// IfStmt-  - 
											// BinaryOperator-  - int [Binary Operator: NE (!=)]
												// UnexposedExpr-  - unsigned int
													// UnexposedExpr-  - stbtt_uint8
														// ArraySubscriptExpr-  - stbtt_uint8
															// UnexposedExpr- s1 - stbtt_uint8 *
																// DeclRefExpr- s1 - stbtt_uint8 *
															// UnaryOperator-  - stbtt_int32 [Unary Operator: PostInc (++)]
																// DeclRefExpr- i - stbtt_int32
												// BinaryOperator-  - unsigned int [Binary Operator: Add (+)]
													// UnexposedExpr-  - unsigned int
														// IntegerLiteral-  - int [Literal: 128]
													// ParenExpr-  - unsigned int
														// BinaryOperator-  - unsigned int [Binary Operator: And (&)]
															// ParenExpr-  - stbtt_uint32
																// BinaryOperator-  - stbtt_uint32 [Binary Operator: Shr (>>)]
																	// UnexposedExpr- c - stbtt_uint32
																		// DeclRefExpr- c - stbtt_uint32
																	// IntegerLiteral-  - int [Literal: 6]
															// UnexposedExpr-  - unsigned int
																// IntegerLiteral-  - int [Literal: 63]
											// ReturnStmt-  - 
												// UnaryOperator-  - int [Unary Operator: Minus (-)]
													// IntegerLiteral-  - int [Literal: 1]
										// IfStmt-  - 
											// BinaryOperator-  - int [Binary Operator: NE (!=)]
												// UnexposedExpr-  - unsigned int
													// UnexposedExpr-  - stbtt_uint8
														// ArraySubscriptExpr-  - stbtt_uint8
															// UnexposedExpr- s1 - stbtt_uint8 *
																// DeclRefExpr- s1 - stbtt_uint8 *
															// UnaryOperator-  - stbtt_int32 [Unary Operator: PostInc (++)]
																// DeclRefExpr- i - stbtt_int32
												// BinaryOperator-  - unsigned int [Binary Operator: Add (+)]
													// UnexposedExpr-  - unsigned int
														// IntegerLiteral-  - int [Literal: 128]
													// ParenExpr-  - unsigned int
														// BinaryOperator-  - unsigned int [Binary Operator: And (&)]
															// UnexposedExpr-  - stbtt_uint32
																// ParenExpr-  - stbtt_uint32
																	// DeclRefExpr- c - stbtt_uint32
															// UnexposedExpr-  - unsigned int
																// IntegerLiteral-  - int [Literal: 63]
											// ReturnStmt-  - 
												// UnaryOperator-  - int [Unary Operator: Minus (-)]
													// IntegerLiteral-  - int [Literal: 1]
										// CompoundAssignOperator-  - stbtt_uint8 *
											// DeclRefExpr- s2 - stbtt_uint8 *
											// IntegerLiteral-  - int [Literal: 2]
										// CompoundAssignOperator-  - stbtt_int32
											// DeclRefExpr- len2 - stbtt_int32
											// IntegerLiteral-  - int [Literal: 2]
									// IfStmt-  - 
										// BinaryOperator-  - int [Binary Operator: LAnd (&&)]
											// BinaryOperator-  - int [Binary Operator: GE (>=)]
												// UnexposedExpr- ch - int
													// UnexposedExpr- ch - stbtt_uint16
														// DeclRefExpr- ch - stbtt_uint16
												// IntegerLiteral-  - int [Literal: 56320]
											// BinaryOperator-  - int [Binary Operator: LT (<)]
												// UnexposedExpr- ch - int
													// UnexposedExpr- ch - stbtt_uint16
														// DeclRefExpr- ch - stbtt_uint16
												// IntegerLiteral-  - int [Literal: 57344]
										// CompoundStmt-  - 
											// ReturnStmt-  - 
												// UnaryOperator-  - int [Unary Operator: Minus (-)]
													// IntegerLiteral-  - int [Literal: 1]
										// CompoundStmt-  - 
											// IfStmt-  - 
												// BinaryOperator-  - int [Binary Operator: GE (>=)]
													// BinaryOperator-  - int [Binary Operator: Add (+)]
														// UnexposedExpr- i - stbtt_int32
															// DeclRefExpr- i - stbtt_int32
														// IntegerLiteral-  - int [Literal: 2]
													// UnexposedExpr- len1 - stbtt_int32
														// DeclRefExpr- len1 - stbtt_int32
												// ReturnStmt-  - 
													// UnaryOperator-  - int [Unary Operator: Minus (-)]
														// IntegerLiteral-  - int [Literal: 1]
											// IfStmt-  - 
												// BinaryOperator-  - int [Binary Operator: NE (!=)]
													// UnexposedExpr-  - int
														// UnexposedExpr-  - stbtt_uint8
															// ArraySubscriptExpr-  - stbtt_uint8
																// UnexposedExpr- s1 - stbtt_uint8 *
																	// DeclRefExpr- s1 - stbtt_uint8 *
																// UnaryOperator-  - stbtt_int32 [Unary Operator: PostInc (++)]
																	// DeclRefExpr- i - stbtt_int32
													// BinaryOperator-  - int [Binary Operator: Add (+)]
														// IntegerLiteral-  - int [Literal: 224]
														// ParenExpr-  - int
															// BinaryOperator-  - int [Binary Operator: Shr (>>)]
																// UnexposedExpr- ch - int
																	// UnexposedExpr- ch - stbtt_uint16
																		// DeclRefExpr- ch - stbtt_uint16
																// IntegerLiteral-  - int [Literal: 12]
												// ReturnStmt-  - 
													// UnaryOperator-  - int [Unary Operator: Minus (-)]
														// IntegerLiteral-  - int [Literal: 1]
											// IfStmt-  - 
												// BinaryOperator-  - int [Binary Operator: NE (!=)]
													// UnexposedExpr-  - int
														// UnexposedExpr-  - stbtt_uint8
															// ArraySubscriptExpr-  - stbtt_uint8
																// UnexposedExpr- s1 - stbtt_uint8 *
																	// DeclRefExpr- s1 - stbtt_uint8 *
																// UnaryOperator-  - stbtt_int32 [Unary Operator: PostInc (++)]
																	// DeclRefExpr- i - stbtt_int32
													// BinaryOperator-  - int [Binary Operator: Add (+)]
														// IntegerLiteral-  - int [Literal: 128]
														// ParenExpr-  - int
															// BinaryOperator-  - int [Binary Operator: And (&)]
																// ParenExpr-  - int
																	// BinaryOperator-  - int [Binary Operator: Shr (>>)]
																		// UnexposedExpr- ch - int
																			// UnexposedExpr- ch - stbtt_uint16
																				// DeclRefExpr- ch - stbtt_uint16
																		// IntegerLiteral-  - int [Literal: 6]
																// IntegerLiteral-  - int [Literal: 63]
												// ReturnStmt-  - 
													// UnaryOperator-  - int [Unary Operator: Minus (-)]
														// IntegerLiteral-  - int [Literal: 1]
											// IfStmt-  - 
												// BinaryOperator-  - int [Binary Operator: NE (!=)]
													// UnexposedExpr-  - int
														// UnexposedExpr-  - stbtt_uint8
															// ArraySubscriptExpr-  - stbtt_uint8
																// UnexposedExpr- s1 - stbtt_uint8 *
																	// DeclRefExpr- s1 - stbtt_uint8 *
																// UnaryOperator-  - stbtt_int32 [Unary Operator: PostInc (++)]
																	// DeclRefExpr- i - stbtt_int32
													// BinaryOperator-  - int [Binary Operator: Add (+)]
														// IntegerLiteral-  - int [Literal: 128]
														// ParenExpr-  - int
															// BinaryOperator-  - int [Binary Operator: And (&)]
																// UnexposedExpr-  - int
																	// UnexposedExpr-  - stbtt_uint16
																		// ParenExpr-  - stbtt_uint16
																			// DeclRefExpr- ch - stbtt_uint16
																// IntegerLiteral-  - int [Literal: 63]
												// ReturnStmt-  - 
													// UnaryOperator-  - int [Unary Operator: Minus (-)]
														// IntegerLiteral-  - int [Literal: 1]
						// CompoundAssignOperator-  - stbtt_uint8 *
							// DeclRefExpr- s2 - stbtt_uint8 *
							// IntegerLiteral-  - int [Literal: 2]
						// CompoundAssignOperator-  - stbtt_int32
							// DeclRefExpr- len2 - stbtt_int32
							// IntegerLiteral-  - int [Literal: 2]
				// ReturnStmt-  - 
					// UnexposedExpr- i - stbtt_int32
						// DeclRefExpr- i - stbtt_int32
		// FunctionDecl- stbtt_CompareUTF8toUTF16_bigendian_internal - int (char *, int, char *, int)
			// ParmDecl- s1 - char *
			// ParmDecl- len1 - int
			// ParmDecl- s2 - char *
			// ParmDecl- len2 - int
			// CompoundStmt-  - 
				// ReturnStmt-  - 
					// BinaryOperator-  - int [Binary Operator: EQ (==)]
						// UnexposedExpr- len1 - int
							// DeclRefExpr- len1 - int
						// CallExpr- stbtt__CompareUTF8toUTF16_bigendian_prefix - stbtt_int32
							// UnexposedExpr- stbtt__CompareUTF8toUTF16_bigendian_prefix - stbtt_int32 (*)(stbtt_uint8 *, stbtt_int32, stbtt_uint8 *, stbtt_int32)
								// DeclRefExpr- stbtt__CompareUTF8toUTF16_bigendian_prefix - stbtt_int32 (stbtt_uint8 *, stbtt_int32, stbtt_uint8 *, stbtt_int32)
							// CStyleCastExpr-  - stbtt_uint8 *
								// TypeRef- stbtt_uint8 - stbtt_uint8
								// UnexposedExpr- s1 - char *
									// DeclRefExpr- s1 - char *
							// UnexposedExpr- len1 - int
								// DeclRefExpr- len1 - int
							// CStyleCastExpr-  - stbtt_uint8 *
								// TypeRef- stbtt_uint8 - stbtt_uint8
								// UnexposedExpr- s2 - char *
									// DeclRefExpr- s2 - char *
							// UnexposedExpr- len2 - int
								// DeclRefExpr- len2 - int
		// FunctionDecl- stbtt_GetFontNameString - const char *(const stbtt_fontinfo *, int *, int, int, int, int)
			// ParmDecl- font - const stbtt_fontinfo *
				// TypeRef- stbtt_fontinfo - stbtt_fontinfo
			// ParmDecl- length - int *
			// ParmDecl- platformID - int
			// ParmDecl- encodingID - int
			// ParmDecl- languageID - int
			// ParmDecl- nameID - int
			// CompoundStmt-  - 
				// DeclStmt-  - 
					// VarDecl- i - stbtt_int32
						// TypeRef- stbtt_int32 - stbtt_int32
					// VarDecl- count - stbtt_int32
						// TypeRef- stbtt_int32 - stbtt_int32
					// VarDecl- stringOffset - stbtt_int32
						// TypeRef- stbtt_int32 - stbtt_int32
				// DeclStmt-  - 
					// VarDecl- fc - stbtt_uint8 *
						// TypeRef- stbtt_uint8 - stbtt_uint8
						// UnexposedExpr- data - unsigned char *
							// MemberRefExpr- data - unsigned char *const
								// UnexposedExpr- font - const stbtt_fontinfo *
									// DeclRefExpr- font - const stbtt_fontinfo *
				// DeclStmt-  - 
					// VarDecl- offset - stbtt_uint32
						// TypeRef- stbtt_uint32 - stbtt_uint32
						// UnexposedExpr- fontstart - stbtt_uint32
							// UnexposedExpr- fontstart - int
								// MemberRefExpr- fontstart - const int
									// UnexposedExpr- font - const stbtt_fontinfo *
										// DeclRefExpr- font - const stbtt_fontinfo *
				// DeclStmt-  - 
					// VarDecl- nm - stbtt_uint32
						// TypeRef- stbtt_uint32 - stbtt_uint32
						// CallExpr- stbtt__find_table - stbtt_uint32
							// UnexposedExpr- stbtt__find_table - stbtt_uint32 (*)(stbtt_uint8 *, stbtt_uint32, const char *)
								// DeclRefExpr- stbtt__find_table - stbtt_uint32 (stbtt_uint8 *, stbtt_uint32, const char *)
							// UnexposedExpr- fc - stbtt_uint8 *
								// DeclRefExpr- fc - stbtt_uint8 *
							// UnexposedExpr- offset - stbtt_uint32
								// DeclRefExpr- offset - stbtt_uint32
							// UnexposedExpr-  - const char *
								// UnexposedExpr-  - char *
									// StringLiteral- "name" - char [5] [Literal: name]
				// IfStmt-  - 
					// UnaryOperator-  - int [Unary Operator: LNot (!)]
						// UnexposedExpr- nm - stbtt_uint32
							// DeclRefExpr- nm - stbtt_uint32
					// ReturnStmt-  - 
						// UnexposedExpr-  - const char *
							// ParenExpr-  - void *
								// CStyleCastExpr-  - void *
									// IntegerLiteral-  - int [Literal: 0]
				// BinaryOperator-  - stbtt_int32 [Binary Operator: Assign (=)]
					// DeclRefExpr- count - stbtt_int32
					// UnexposedExpr- ttUSHORT - stbtt_int32
						// CallExpr- ttUSHORT - stbtt_uint16
							// UnexposedExpr- ttUSHORT - stbtt_uint16 (*)(stbtt_uint8 *)
								// DeclRefExpr- ttUSHORT - stbtt_uint16 (stbtt_uint8 *)
							// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
								// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
									// UnexposedExpr- fc - stbtt_uint8 *
										// DeclRefExpr- fc - stbtt_uint8 *
									// UnexposedExpr- nm - stbtt_uint32
										// DeclRefExpr- nm - stbtt_uint32
								// IntegerLiteral-  - int [Literal: 2]
				// BinaryOperator-  - stbtt_int32 [Binary Operator: Assign (=)]
					// DeclRefExpr- stringOffset - stbtt_int32
					// UnexposedExpr-  - stbtt_int32
						// BinaryOperator-  - unsigned int [Binary Operator: Add (+)]
							// UnexposedExpr- nm - stbtt_uint32
								// DeclRefExpr- nm - stbtt_uint32
							// UnexposedExpr- ttUSHORT - unsigned int
								// CallExpr- ttUSHORT - stbtt_uint16
									// UnexposedExpr- ttUSHORT - stbtt_uint16 (*)(stbtt_uint8 *)
										// DeclRefExpr- ttUSHORT - stbtt_uint16 (stbtt_uint8 *)
									// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
										// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
											// UnexposedExpr- fc - stbtt_uint8 *
												// DeclRefExpr- fc - stbtt_uint8 *
											// UnexposedExpr- nm - stbtt_uint32
												// DeclRefExpr- nm - stbtt_uint32
										// IntegerLiteral-  - int [Literal: 4]
				// ForStmt-  - 
					// BinaryOperator-  - stbtt_int32 [Binary Operator: Assign (=)]
						// DeclRefExpr- i - stbtt_int32
						// IntegerLiteral-  - int [Literal: 0]
					// BinaryOperator-  - int [Binary Operator: LT (<)]
						// UnexposedExpr- i - stbtt_int32
							// DeclRefExpr- i - stbtt_int32
						// UnexposedExpr- count - stbtt_int32
							// DeclRefExpr- count - stbtt_int32
					// UnaryOperator-  - stbtt_int32 [Unary Operator: PreInc (++)]
						// DeclRefExpr- i - stbtt_int32
					// CompoundStmt-  - 
						// DeclStmt-  - 
							// VarDecl- loc - stbtt_uint32
								// TypeRef- stbtt_uint32 - stbtt_uint32
								// BinaryOperator-  - unsigned int [Binary Operator: Add (+)]
									// BinaryOperator-  - unsigned int [Binary Operator: Add (+)]
										// UnexposedExpr- nm - stbtt_uint32
											// DeclRefExpr- nm - stbtt_uint32
										// UnexposedExpr-  - unsigned int
											// IntegerLiteral-  - int [Literal: 6]
									// UnexposedExpr-  - unsigned int
										// BinaryOperator-  - int [Binary Operator: Mul (*)]
											// IntegerLiteral-  - int [Literal: 12]
											// UnexposedExpr- i - stbtt_int32
												// DeclRefExpr- i - stbtt_int32
						// IfStmt-  - 
							// BinaryOperator-  - int [Binary Operator: LAnd (&&)]
								// BinaryOperator-  - int [Binary Operator: LAnd (&&)]
									// BinaryOperator-  - int [Binary Operator: LAnd (&&)]
										// BinaryOperator-  - int [Binary Operator: EQ (==)]
											// UnexposedExpr- platformID - int
												// DeclRefExpr- platformID - int
											// UnexposedExpr- ttUSHORT - int
												// CallExpr- ttUSHORT - stbtt_uint16
													// UnexposedExpr- ttUSHORT - stbtt_uint16 (*)(stbtt_uint8 *)
														// DeclRefExpr- ttUSHORT - stbtt_uint16 (stbtt_uint8 *)
													// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
														// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
															// UnexposedExpr- fc - stbtt_uint8 *
																// DeclRefExpr- fc - stbtt_uint8 *
															// UnexposedExpr- loc - stbtt_uint32
																// DeclRefExpr- loc - stbtt_uint32
														// IntegerLiteral-  - int [Literal: 0]
										// BinaryOperator-  - int [Binary Operator: EQ (==)]
											// UnexposedExpr- encodingID - int
												// DeclRefExpr- encodingID - int
											// UnexposedExpr- ttUSHORT - int
												// CallExpr- ttUSHORT - stbtt_uint16
													// UnexposedExpr- ttUSHORT - stbtt_uint16 (*)(stbtt_uint8 *)
														// DeclRefExpr- ttUSHORT - stbtt_uint16 (stbtt_uint8 *)
													// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
														// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
															// UnexposedExpr- fc - stbtt_uint8 *
																// DeclRefExpr- fc - stbtt_uint8 *
															// UnexposedExpr- loc - stbtt_uint32
																// DeclRefExpr- loc - stbtt_uint32
														// IntegerLiteral-  - int [Literal: 2]
									// BinaryOperator-  - int [Binary Operator: EQ (==)]
										// UnexposedExpr- languageID - int
											// DeclRefExpr- languageID - int
										// UnexposedExpr- ttUSHORT - int
											// CallExpr- ttUSHORT - stbtt_uint16
												// UnexposedExpr- ttUSHORT - stbtt_uint16 (*)(stbtt_uint8 *)
													// DeclRefExpr- ttUSHORT - stbtt_uint16 (stbtt_uint8 *)
												// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
													// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
														// UnexposedExpr- fc - stbtt_uint8 *
															// DeclRefExpr- fc - stbtt_uint8 *
														// UnexposedExpr- loc - stbtt_uint32
															// DeclRefExpr- loc - stbtt_uint32
													// IntegerLiteral-  - int [Literal: 4]
								// BinaryOperator-  - int [Binary Operator: EQ (==)]
									// UnexposedExpr- nameID - int
										// DeclRefExpr- nameID - int
									// UnexposedExpr- ttUSHORT - int
										// CallExpr- ttUSHORT - stbtt_uint16
											// UnexposedExpr- ttUSHORT - stbtt_uint16 (*)(stbtt_uint8 *)
												// DeclRefExpr- ttUSHORT - stbtt_uint16 (stbtt_uint8 *)
											// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
												// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
													// UnexposedExpr- fc - stbtt_uint8 *
														// DeclRefExpr- fc - stbtt_uint8 *
													// UnexposedExpr- loc - stbtt_uint32
														// DeclRefExpr- loc - stbtt_uint32
												// IntegerLiteral-  - int [Literal: 6]
							// CompoundStmt-  - 
								// BinaryOperator-  - int [Binary Operator: Assign (=)]
									// UnaryOperator-  - int [Unary Operator: Deref (*)]
										// UnexposedExpr- length - int *
											// DeclRefExpr- length - int *
									// UnexposedExpr- ttUSHORT - int
										// CallExpr- ttUSHORT - stbtt_uint16
											// UnexposedExpr- ttUSHORT - stbtt_uint16 (*)(stbtt_uint8 *)
												// DeclRefExpr- ttUSHORT - stbtt_uint16 (stbtt_uint8 *)
											// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
												// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
													// UnexposedExpr- fc - stbtt_uint8 *
														// DeclRefExpr- fc - stbtt_uint8 *
													// UnexposedExpr- loc - stbtt_uint32
														// DeclRefExpr- loc - stbtt_uint32
												// IntegerLiteral-  - int [Literal: 8]
								// ReturnStmt-  - 
									// CStyleCastExpr-  - const char *
										// ParenExpr-  - stbtt_uint8 *
											// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
												// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
													// UnexposedExpr- fc - stbtt_uint8 *
														// DeclRefExpr- fc - stbtt_uint8 *
													// UnexposedExpr- stringOffset - stbtt_int32
														// DeclRefExpr- stringOffset - stbtt_int32
												// UnexposedExpr- ttUSHORT - int
													// CallExpr- ttUSHORT - stbtt_uint16
														// UnexposedExpr- ttUSHORT - stbtt_uint16 (*)(stbtt_uint8 *)
															// DeclRefExpr- ttUSHORT - stbtt_uint16 (stbtt_uint8 *)
														// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
															// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
																// UnexposedExpr- fc - stbtt_uint8 *
																	// DeclRefExpr- fc - stbtt_uint8 *
																// UnexposedExpr- loc - stbtt_uint32
																	// DeclRefExpr- loc - stbtt_uint32
															// IntegerLiteral-  - int [Literal: 10]
				// ReturnStmt-  - 
					// UnexposedExpr-  - const char *
						// ParenExpr-  - void *
							// CStyleCastExpr-  - void *
								// IntegerLiteral-  - int [Literal: 0]
		// FunctionDecl- stbtt__matchpair - int (stbtt_uint8 *, stbtt_uint32, stbtt_uint8 *, stbtt_int32, stbtt_int32, stbtt_int32)
			// ParmDecl- fc - stbtt_uint8 *
				// TypeRef- stbtt_uint8 - stbtt_uint8
			// ParmDecl- nm - stbtt_uint32
				// TypeRef- stbtt_uint32 - stbtt_uint32
			// ParmDecl- name - stbtt_uint8 *
				// TypeRef- stbtt_uint8 - stbtt_uint8
			// ParmDecl- nlen - stbtt_int32
				// TypeRef- stbtt_int32 - stbtt_int32
			// ParmDecl- target_id - stbtt_int32
				// TypeRef- stbtt_int32 - stbtt_int32
			// ParmDecl- next_id - stbtt_int32
				// TypeRef- stbtt_int32 - stbtt_int32
			// CompoundStmt-  - 
				// DeclStmt-  - 
					// VarDecl- i - stbtt_int32
						// TypeRef- stbtt_int32 - stbtt_int32
				// DeclStmt-  - 
					// VarDecl- count - stbtt_int32
						// TypeRef- stbtt_int32 - stbtt_int32
						// UnexposedExpr- ttUSHORT - stbtt_int32
							// CallExpr- ttUSHORT - stbtt_uint16
								// UnexposedExpr- ttUSHORT - stbtt_uint16 (*)(stbtt_uint8 *)
									// DeclRefExpr- ttUSHORT - stbtt_uint16 (stbtt_uint8 *)
								// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
									// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
										// UnexposedExpr- fc - stbtt_uint8 *
											// DeclRefExpr- fc - stbtt_uint8 *
										// UnexposedExpr- nm - stbtt_uint32
											// DeclRefExpr- nm - stbtt_uint32
									// IntegerLiteral-  - int [Literal: 2]
				// DeclStmt-  - 
					// VarDecl- stringOffset - stbtt_int32
						// TypeRef- stbtt_int32 - stbtt_int32
						// UnexposedExpr-  - stbtt_int32
							// BinaryOperator-  - unsigned int [Binary Operator: Add (+)]
								// UnexposedExpr- nm - stbtt_uint32
									// DeclRefExpr- nm - stbtt_uint32
								// UnexposedExpr- ttUSHORT - unsigned int
									// CallExpr- ttUSHORT - stbtt_uint16
										// UnexposedExpr- ttUSHORT - stbtt_uint16 (*)(stbtt_uint8 *)
											// DeclRefExpr- ttUSHORT - stbtt_uint16 (stbtt_uint8 *)
										// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
											// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
												// UnexposedExpr- fc - stbtt_uint8 *
													// DeclRefExpr- fc - stbtt_uint8 *
												// UnexposedExpr- nm - stbtt_uint32
													// DeclRefExpr- nm - stbtt_uint32
											// IntegerLiteral-  - int [Literal: 4]
				// ForStmt-  - 
					// BinaryOperator-  - stbtt_int32 [Binary Operator: Assign (=)]
						// DeclRefExpr- i - stbtt_int32
						// IntegerLiteral-  - int [Literal: 0]
					// BinaryOperator-  - int [Binary Operator: LT (<)]
						// UnexposedExpr- i - stbtt_int32
							// DeclRefExpr- i - stbtt_int32
						// UnexposedExpr- count - stbtt_int32
							// DeclRefExpr- count - stbtt_int32
					// UnaryOperator-  - stbtt_int32 [Unary Operator: PreInc (++)]
						// DeclRefExpr- i - stbtt_int32
					// CompoundStmt-  - 
						// DeclStmt-  - 
							// VarDecl- loc - stbtt_uint32
								// TypeRef- stbtt_uint32 - stbtt_uint32
								// BinaryOperator-  - unsigned int [Binary Operator: Add (+)]
									// BinaryOperator-  - unsigned int [Binary Operator: Add (+)]
										// UnexposedExpr- nm - stbtt_uint32
											// DeclRefExpr- nm - stbtt_uint32
										// UnexposedExpr-  - unsigned int
											// IntegerLiteral-  - int [Literal: 6]
									// UnexposedExpr-  - unsigned int
										// BinaryOperator-  - int [Binary Operator: Mul (*)]
											// IntegerLiteral-  - int [Literal: 12]
											// UnexposedExpr- i - stbtt_int32
												// DeclRefExpr- i - stbtt_int32
						// DeclStmt-  - 
							// VarDecl- id - stbtt_int32
								// TypeRef- stbtt_int32 - stbtt_int32
								// UnexposedExpr- ttUSHORT - stbtt_int32
									// CallExpr- ttUSHORT - stbtt_uint16
										// UnexposedExpr- ttUSHORT - stbtt_uint16 (*)(stbtt_uint8 *)
											// DeclRefExpr- ttUSHORT - stbtt_uint16 (stbtt_uint8 *)
										// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
											// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
												// UnexposedExpr- fc - stbtt_uint8 *
													// DeclRefExpr- fc - stbtt_uint8 *
												// UnexposedExpr- loc - stbtt_uint32
													// DeclRefExpr- loc - stbtt_uint32
											// IntegerLiteral-  - int [Literal: 6]
						// IfStmt-  - 
							// BinaryOperator-  - int [Binary Operator: EQ (==)]
								// UnexposedExpr- id - stbtt_int32
									// DeclRefExpr- id - stbtt_int32
								// UnexposedExpr- target_id - stbtt_int32
									// DeclRefExpr- target_id - stbtt_int32
							// CompoundStmt-  - 
								// DeclStmt-  - 
									// VarDecl- platform - stbtt_int32
										// TypeRef- stbtt_int32 - stbtt_int32
										// UnexposedExpr- ttUSHORT - stbtt_int32
											// CallExpr- ttUSHORT - stbtt_uint16
												// UnexposedExpr- ttUSHORT - stbtt_uint16 (*)(stbtt_uint8 *)
													// DeclRefExpr- ttUSHORT - stbtt_uint16 (stbtt_uint8 *)
												// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
													// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
														// UnexposedExpr- fc - stbtt_uint8 *
															// DeclRefExpr- fc - stbtt_uint8 *
														// UnexposedExpr- loc - stbtt_uint32
															// DeclRefExpr- loc - stbtt_uint32
													// IntegerLiteral-  - int [Literal: 0]
									// VarDecl- encoding - stbtt_int32
										// TypeRef- stbtt_int32 - stbtt_int32
										// UnexposedExpr- ttUSHORT - stbtt_int32
											// CallExpr- ttUSHORT - stbtt_uint16
												// UnexposedExpr- ttUSHORT - stbtt_uint16 (*)(stbtt_uint8 *)
													// DeclRefExpr- ttUSHORT - stbtt_uint16 (stbtt_uint8 *)
												// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
													// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
														// UnexposedExpr- fc - stbtt_uint8 *
															// DeclRefExpr- fc - stbtt_uint8 *
														// UnexposedExpr- loc - stbtt_uint32
															// DeclRefExpr- loc - stbtt_uint32
													// IntegerLiteral-  - int [Literal: 2]
									// VarDecl- language - stbtt_int32
										// TypeRef- stbtt_int32 - stbtt_int32
										// UnexposedExpr- ttUSHORT - stbtt_int32
											// CallExpr- ttUSHORT - stbtt_uint16
												// UnexposedExpr- ttUSHORT - stbtt_uint16 (*)(stbtt_uint8 *)
													// DeclRefExpr- ttUSHORT - stbtt_uint16 (stbtt_uint8 *)
												// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
													// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
														// UnexposedExpr- fc - stbtt_uint8 *
															// DeclRefExpr- fc - stbtt_uint8 *
														// UnexposedExpr- loc - stbtt_uint32
															// DeclRefExpr- loc - stbtt_uint32
													// IntegerLiteral-  - int [Literal: 4]
								// IfStmt-  - 
									// BinaryOperator-  - int [Binary Operator: LOr (||)]
										// BinaryOperator-  - int [Binary Operator: LOr (||)]
											// BinaryOperator-  - int [Binary Operator: EQ (==)]
												// UnexposedExpr- platform - stbtt_int32
													// DeclRefExpr- platform - stbtt_int32
												// IntegerLiteral-  - int [Literal: 0]
											// ParenExpr-  - int
												// BinaryOperator-  - int [Binary Operator: LAnd (&&)]
													// BinaryOperator-  - int [Binary Operator: EQ (==)]
														// UnexposedExpr- platform - stbtt_int32
															// DeclRefExpr- platform - stbtt_int32
														// IntegerLiteral-  - int [Literal: 3]
													// BinaryOperator-  - int [Binary Operator: EQ (==)]
														// UnexposedExpr- encoding - stbtt_int32
															// DeclRefExpr- encoding - stbtt_int32
														// IntegerLiteral-  - int [Literal: 1]
										// ParenExpr-  - int
											// BinaryOperator-  - int [Binary Operator: LAnd (&&)]
												// BinaryOperator-  - int [Binary Operator: EQ (==)]
													// UnexposedExpr- platform - stbtt_int32
														// DeclRefExpr- platform - stbtt_int32
													// IntegerLiteral-  - int [Literal: 3]
												// BinaryOperator-  - int [Binary Operator: EQ (==)]
													// UnexposedExpr- encoding - stbtt_int32
														// DeclRefExpr- encoding - stbtt_int32
													// IntegerLiteral-  - int [Literal: 10]
									// CompoundStmt-  - 
										// DeclStmt-  - 
											// VarDecl- slen - stbtt_int32
												// TypeRef- stbtt_int32 - stbtt_int32
												// UnexposedExpr- ttUSHORT - stbtt_int32
													// CallExpr- ttUSHORT - stbtt_uint16
														// UnexposedExpr- ttUSHORT - stbtt_uint16 (*)(stbtt_uint8 *)
															// DeclRefExpr- ttUSHORT - stbtt_uint16 (stbtt_uint8 *)
														// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
															// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
																// UnexposedExpr- fc - stbtt_uint8 *
																	// DeclRefExpr- fc - stbtt_uint8 *
																// UnexposedExpr- loc - stbtt_uint32
																	// DeclRefExpr- loc - stbtt_uint32
															// IntegerLiteral-  - int [Literal: 8]
										// DeclStmt-  - 
											// VarDecl- off - stbtt_int32
												// TypeRef- stbtt_int32 - stbtt_int32
												// UnexposedExpr- ttUSHORT - stbtt_int32
													// CallExpr- ttUSHORT - stbtt_uint16
														// UnexposedExpr- ttUSHORT - stbtt_uint16 (*)(stbtt_uint8 *)
															// DeclRefExpr- ttUSHORT - stbtt_uint16 (stbtt_uint8 *)
														// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
															// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
																// UnexposedExpr- fc - stbtt_uint8 *
																	// DeclRefExpr- fc - stbtt_uint8 *
																// UnexposedExpr- loc - stbtt_uint32
																	// DeclRefExpr- loc - stbtt_uint32
															// IntegerLiteral-  - int [Literal: 10]
										// DeclStmt-  - 
											// VarDecl- matchlen - stbtt_int32
												// TypeRef- stbtt_int32 - stbtt_int32
												// CallExpr- stbtt__CompareUTF8toUTF16_bigendian_prefix - stbtt_int32
													// UnexposedExpr- stbtt__CompareUTF8toUTF16_bigendian_prefix - stbtt_int32 (*)(stbtt_uint8 *, stbtt_int32, stbtt_uint8 *, stbtt_int32)
														// DeclRefExpr- stbtt__CompareUTF8toUTF16_bigendian_prefix - stbtt_int32 (stbtt_uint8 *, stbtt_int32, stbtt_uint8 *, stbtt_int32)
													// UnexposedExpr- name - stbtt_uint8 *
														// DeclRefExpr- name - stbtt_uint8 *
													// UnexposedExpr- nlen - stbtt_int32
														// DeclRefExpr- nlen - stbtt_int32
													// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
														// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
															// UnexposedExpr- fc - stbtt_uint8 *
																// DeclRefExpr- fc - stbtt_uint8 *
															// UnexposedExpr- stringOffset - stbtt_int32
																// DeclRefExpr- stringOffset - stbtt_int32
														// UnexposedExpr- off - stbtt_int32
															// DeclRefExpr- off - stbtt_int32
													// UnexposedExpr- slen - stbtt_int32
														// DeclRefExpr- slen - stbtt_int32
										// IfStmt-  - 
											// BinaryOperator-  - int [Binary Operator: GE (>=)]
												// UnexposedExpr- matchlen - stbtt_int32
													// DeclRefExpr- matchlen - stbtt_int32
												// IntegerLiteral-  - int [Literal: 0]
											// CompoundStmt-  - 
												// IfStmt-  - 
													// BinaryOperator-  - int [Binary Operator: LAnd (&&)]
														// BinaryOperator-  - int [Binary Operator: LAnd (&&)]
															// BinaryOperator-  - int [Binary Operator: LAnd (&&)]
																// BinaryOperator-  - int [Binary Operator: LAnd (&&)]
																	// BinaryOperator-  - int [Binary Operator: LT (<)]
																		// BinaryOperator-  - int [Binary Operator: Add (+)]
																			// UnexposedExpr- i - stbtt_int32
																				// DeclRefExpr- i - stbtt_int32
																			// IntegerLiteral-  - int [Literal: 1]
																		// UnexposedExpr- count - stbtt_int32
																			// DeclRefExpr- count - stbtt_int32
																	// BinaryOperator-  - int [Binary Operator: EQ (==)]
																		// UnexposedExpr- ttUSHORT - int
																			// CallExpr- ttUSHORT - stbtt_uint16
																				// UnexposedExpr- ttUSHORT - stbtt_uint16 (*)(stbtt_uint8 *)
																					// DeclRefExpr- ttUSHORT - stbtt_uint16 (stbtt_uint8 *)
																				// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
																					// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
																						// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
																							// UnexposedExpr- fc - stbtt_uint8 *
																								// DeclRefExpr- fc - stbtt_uint8 *
																							// UnexposedExpr- loc - stbtt_uint32
																								// DeclRefExpr- loc - stbtt_uint32
																						// IntegerLiteral-  - int [Literal: 12]
																					// IntegerLiteral-  - int [Literal: 6]
																		// UnexposedExpr- next_id - stbtt_int32
																			// DeclRefExpr- next_id - stbtt_int32
																// BinaryOperator-  - int [Binary Operator: EQ (==)]
																	// UnexposedExpr- ttUSHORT - int
																		// CallExpr- ttUSHORT - stbtt_uint16
																			// UnexposedExpr- ttUSHORT - stbtt_uint16 (*)(stbtt_uint8 *)
																				// DeclRefExpr- ttUSHORT - stbtt_uint16 (stbtt_uint8 *)
																			// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
																				// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
																					// UnexposedExpr- fc - stbtt_uint8 *
																						// DeclRefExpr- fc - stbtt_uint8 *
																					// UnexposedExpr- loc - stbtt_uint32
																						// DeclRefExpr- loc - stbtt_uint32
																				// IntegerLiteral-  - int [Literal: 12]
																	// UnexposedExpr- platform - stbtt_int32
																		// DeclRefExpr- platform - stbtt_int32
															// BinaryOperator-  - int [Binary Operator: EQ (==)]
																// UnexposedExpr- ttUSHORT - int
																	// CallExpr- ttUSHORT - stbtt_uint16
																		// UnexposedExpr- ttUSHORT - stbtt_uint16 (*)(stbtt_uint8 *)
																			// DeclRefExpr- ttUSHORT - stbtt_uint16 (stbtt_uint8 *)
																		// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
																			// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
																				// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
																					// UnexposedExpr- fc - stbtt_uint8 *
																						// DeclRefExpr- fc - stbtt_uint8 *
																					// UnexposedExpr- loc - stbtt_uint32
																						// DeclRefExpr- loc - stbtt_uint32
																				// IntegerLiteral-  - int [Literal: 12]
																			// IntegerLiteral-  - int [Literal: 2]
																// UnexposedExpr- encoding - stbtt_int32
																	// DeclRefExpr- encoding - stbtt_int32
														// BinaryOperator-  - int [Binary Operator: EQ (==)]
															// UnexposedExpr- ttUSHORT - int
																// CallExpr- ttUSHORT - stbtt_uint16
																	// UnexposedExpr- ttUSHORT - stbtt_uint16 (*)(stbtt_uint8 *)
																		// DeclRefExpr- ttUSHORT - stbtt_uint16 (stbtt_uint8 *)
																	// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
																		// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
																			// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
																				// UnexposedExpr- fc - stbtt_uint8 *
																					// DeclRefExpr- fc - stbtt_uint8 *
																				// UnexposedExpr- loc - stbtt_uint32
																					// DeclRefExpr- loc - stbtt_uint32
																			// IntegerLiteral-  - int [Literal: 12]
																		// IntegerLiteral-  - int [Literal: 4]
															// UnexposedExpr- language - stbtt_int32
																// DeclRefExpr- language - stbtt_int32
													// CompoundStmt-  - 
														// BinaryOperator-  - stbtt_int32 [Binary Operator: Assign (=)]
															// DeclRefExpr- slen - stbtt_int32
															// UnexposedExpr- ttUSHORT - stbtt_int32
																// CallExpr- ttUSHORT - stbtt_uint16
																	// UnexposedExpr- ttUSHORT - stbtt_uint16 (*)(stbtt_uint8 *)
																		// DeclRefExpr- ttUSHORT - stbtt_uint16 (stbtt_uint8 *)
																	// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
																		// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
																			// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
																				// UnexposedExpr- fc - stbtt_uint8 *
																					// DeclRefExpr- fc - stbtt_uint8 *
																				// UnexposedExpr- loc - stbtt_uint32
																					// DeclRefExpr- loc - stbtt_uint32
																			// IntegerLiteral-  - int [Literal: 12]
																		// IntegerLiteral-  - int [Literal: 8]
														// BinaryOperator-  - stbtt_int32 [Binary Operator: Assign (=)]
															// DeclRefExpr- off - stbtt_int32
															// UnexposedExpr- ttUSHORT - stbtt_int32
																// CallExpr- ttUSHORT - stbtt_uint16
																	// UnexposedExpr- ttUSHORT - stbtt_uint16 (*)(stbtt_uint8 *)
																		// DeclRefExpr- ttUSHORT - stbtt_uint16 (stbtt_uint8 *)
																	// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
																		// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
																			// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
																				// UnexposedExpr- fc - stbtt_uint8 *
																					// DeclRefExpr- fc - stbtt_uint8 *
																				// UnexposedExpr- loc - stbtt_uint32
																					// DeclRefExpr- loc - stbtt_uint32
																			// IntegerLiteral-  - int [Literal: 12]
																		// IntegerLiteral-  - int [Literal: 10]
														// IfStmt-  - 
															// BinaryOperator-  - int [Binary Operator: EQ (==)]
																// UnexposedExpr- slen - stbtt_int32
																	// DeclRefExpr- slen - stbtt_int32
																// IntegerLiteral-  - int [Literal: 0]
															// CompoundStmt-  - 
																// IfStmt-  - 
																	// BinaryOperator-  - int [Binary Operator: EQ (==)]
																		// UnexposedExpr- matchlen - stbtt_int32
																			// DeclRefExpr- matchlen - stbtt_int32
																		// UnexposedExpr- nlen - stbtt_int32
																			// DeclRefExpr- nlen - stbtt_int32
																	// ReturnStmt-  - 
																		// IntegerLiteral-  - int [Literal: 1]
															// IfStmt-  - 
																// BinaryOperator-  - int [Binary Operator: LAnd (&&)]
																	// BinaryOperator-  - int [Binary Operator: LT (<)]
																		// UnexposedExpr- matchlen - stbtt_int32
																			// DeclRefExpr- matchlen - stbtt_int32
																		// UnexposedExpr- nlen - stbtt_int32
																			// DeclRefExpr- nlen - stbtt_int32
																	// BinaryOperator-  - int [Binary Operator: EQ (==)]
																		// UnexposedExpr-  - int
																			// UnexposedExpr-  - stbtt_uint8
																				// ArraySubscriptExpr-  - stbtt_uint8
																					// UnexposedExpr- name - stbtt_uint8 *
																						// DeclRefExpr- name - stbtt_uint8 *
																					// UnexposedExpr- matchlen - stbtt_int32
																						// DeclRefExpr- matchlen - stbtt_int32
																		// CharacterLiteral-  - int [Literal:  ]
																// CompoundStmt-  - 
																	// UnaryOperator-  - stbtt_int32 [Unary Operator: PreInc (++)]
																		// DeclRefExpr- matchlen - stbtt_int32
																	// IfStmt-  - 
																		// CallExpr- stbtt_CompareUTF8toUTF16_bigendian_internal - int
																			// UnexposedExpr- stbtt_CompareUTF8toUTF16_bigendian_internal - int (*)(char *, int, char *, int)
																				// DeclRefExpr- stbtt_CompareUTF8toUTF16_bigendian_internal - int (char *, int, char *, int)
																			// CStyleCastExpr-  - char *
																				// ParenExpr-  - stbtt_uint8 *
																					// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
																						// UnexposedExpr- name - stbtt_uint8 *
																							// DeclRefExpr- name - stbtt_uint8 *
																						// UnexposedExpr- matchlen - stbtt_int32
																							// DeclRefExpr- matchlen - stbtt_int32
																			// BinaryOperator-  - int [Binary Operator: Sub (-)]
																				// UnexposedExpr- nlen - stbtt_int32
																					// DeclRefExpr- nlen - stbtt_int32
																				// UnexposedExpr- matchlen - stbtt_int32
																					// DeclRefExpr- matchlen - stbtt_int32
																			// CStyleCastExpr-  - char *
																				// ParenExpr-  - stbtt_uint8 *
																					// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
																						// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
																							// UnexposedExpr- fc - stbtt_uint8 *
																								// DeclRefExpr- fc - stbtt_uint8 *
																							// UnexposedExpr- stringOffset - stbtt_int32
																								// DeclRefExpr- stringOffset - stbtt_int32
																						// UnexposedExpr- off - stbtt_int32
																							// DeclRefExpr- off - stbtt_int32
																			// UnexposedExpr- slen - stbtt_int32
																				// DeclRefExpr- slen - stbtt_int32
																		// ReturnStmt-  - 
																			// IntegerLiteral-  - int [Literal: 1]
													// CompoundStmt-  - 
														// IfStmt-  - 
															// BinaryOperator-  - int [Binary Operator: EQ (==)]
																// UnexposedExpr- matchlen - stbtt_int32
																	// DeclRefExpr- matchlen - stbtt_int32
																// UnexposedExpr- nlen - stbtt_int32
																	// DeclRefExpr- nlen - stbtt_int32
															// ReturnStmt-  - 
																// IntegerLiteral-  - int [Literal: 1]
				// ReturnStmt-  - 
					// IntegerLiteral-  - int [Literal: 0]
		// FunctionDecl- stbtt__matches - int (stbtt_uint8 *, stbtt_uint32, stbtt_uint8 *, stbtt_int32)
			// ParmDecl- fc - stbtt_uint8 *
				// TypeRef- stbtt_uint8 - stbtt_uint8
			// ParmDecl- offset - stbtt_uint32
				// TypeRef- stbtt_uint32 - stbtt_uint32
			// ParmDecl- name - stbtt_uint8 *
				// TypeRef- stbtt_uint8 - stbtt_uint8
			// ParmDecl- flags - stbtt_int32
				// TypeRef- stbtt_int32 - stbtt_int32
			// CompoundStmt-  - 
				// DeclStmt-  - 
					// VarDecl- nlen - stbtt_int32
						// TypeRef- stbtt_int32 - stbtt_int32
						// CStyleCastExpr-  - stbtt_int32
							// TypeRef- stbtt_int32 - stbtt_int32
							// CallExpr- strlen - unsigned long long
								// UnexposedExpr- strlen - unsigned long long (*)(const char *)
									// DeclRefExpr- strlen - unsigned long long (const char *)
								// UnexposedExpr-  - const char *
									// CStyleCastExpr-  - char *
										// UnexposedExpr- name - stbtt_uint8 *
											// DeclRefExpr- name - stbtt_uint8 *
				// DeclStmt-  - 
					// VarDecl- nm - stbtt_uint32
						// TypeRef- stbtt_uint32 - stbtt_uint32
					// VarDecl- hd - stbtt_uint32
						// TypeRef- stbtt_uint32 - stbtt_uint32
				// IfStmt-  - 
					// UnaryOperator-  - int [Unary Operator: LNot (!)]
						// CallExpr- stbtt__isfont - int
							// UnexposedExpr- stbtt__isfont - int (*)(stbtt_uint8 *)
								// DeclRefExpr- stbtt__isfont - int (stbtt_uint8 *)
							// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
								// UnexposedExpr- fc - stbtt_uint8 *
									// DeclRefExpr- fc - stbtt_uint8 *
								// UnexposedExpr- offset - stbtt_uint32
									// DeclRefExpr- offset - stbtt_uint32
					// ReturnStmt-  - 
						// IntegerLiteral-  - int [Literal: 0]
				// IfStmt-  - 
					// UnexposedExpr- flags - stbtt_int32
						// DeclRefExpr- flags - stbtt_int32
					// CompoundStmt-  - 
						// BinaryOperator-  - stbtt_uint32 [Binary Operator: Assign (=)]
							// DeclRefExpr- hd - stbtt_uint32
							// CallExpr- stbtt__find_table - stbtt_uint32
								// UnexposedExpr- stbtt__find_table - stbtt_uint32 (*)(stbtt_uint8 *, stbtt_uint32, const char *)
									// DeclRefExpr- stbtt__find_table - stbtt_uint32 (stbtt_uint8 *, stbtt_uint32, const char *)
								// UnexposedExpr- fc - stbtt_uint8 *
									// DeclRefExpr- fc - stbtt_uint8 *
								// UnexposedExpr- offset - stbtt_uint32
									// DeclRefExpr- offset - stbtt_uint32
								// UnexposedExpr-  - const char *
									// UnexposedExpr-  - char *
										// StringLiteral- "head" - char [5] [Literal: head]
						// IfStmt-  - 
							// BinaryOperator-  - int [Binary Operator: NE (!=)]
								// ParenExpr-  - int
									// BinaryOperator-  - int [Binary Operator: And (&)]
										// UnexposedExpr- ttUSHORT - int
											// CallExpr- ttUSHORT - stbtt_uint16
												// UnexposedExpr- ttUSHORT - stbtt_uint16 (*)(stbtt_uint8 *)
													// DeclRefExpr- ttUSHORT - stbtt_uint16 (stbtt_uint8 *)
												// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
													// BinaryOperator-  - stbtt_uint8 * [Binary Operator: Add (+)]
														// UnexposedExpr- fc - stbtt_uint8 *
															// DeclRefExpr- fc - stbtt_uint8 *
														// UnexposedExpr- hd - stbtt_uint32
															// DeclRefExpr- hd - stbtt_uint32
													// IntegerLiteral-  - int [Literal: 44]
										// IntegerLiteral-  - int [Literal: 7]
								// ParenExpr-  - int
									// BinaryOperator-  - int [Binary Operator: And (&)]
										// UnexposedExpr- flags - stbtt_int32
											// DeclRefExpr- flags - stbtt_int32
										// IntegerLiteral-  - int [Literal: 7]
							// ReturnStmt-  - 
								// IntegerLiteral-  - int [Literal: 0]
				// BinaryOperator-  - stbtt_uint32 [Binary Operator: Assign (=)]
					// DeclRefExpr- nm - stbtt_uint32
					// CallExpr- stbtt__find_table - stbtt_uint32
						// UnexposedExpr- stbtt__find_table - stbtt_uint32 (*)(stbtt_uint8 *, stbtt_uint32, const char *)
							// DeclRefExpr- stbtt__find_table - stbtt_uint32 (stbtt_uint8 *, stbtt_uint32, const char *)
						// UnexposedExpr- fc - stbtt_uint8 *
							// DeclRefExpr- fc - stbtt_uint8 *
						// UnexposedExpr- offset - stbtt_uint32
							// DeclRefExpr- offset - stbtt_uint32
						// UnexposedExpr-  - const char *
							// UnexposedExpr-  - char *
								// StringLiteral- "name" - char [5] [Literal: name]
				// IfStmt-  - 
					// UnaryOperator-  - int [Unary Operator: LNot (!)]
						// UnexposedExpr- nm - stbtt_uint32
							// DeclRefExpr- nm - stbtt_uint32
					// ReturnStmt-  - 
						// IntegerLiteral-  - int [Literal: 0]
				// IfStmt-  - 
					// UnexposedExpr- flags - stbtt_int32
						// DeclRefExpr- flags - stbtt_int32
					// CompoundStmt-  - 
						// IfStmt-  - 
							// CallExpr- stbtt__matchpair - int
								// UnexposedExpr- stbtt__matchpair - int (*)(stbtt_uint8 *, stbtt_uint32, stbtt_uint8 *, stbtt_int32, stbtt_int32, stbtt_int32)
									// DeclRefExpr- stbtt__matchpair - int (stbtt_uint8 *, stbtt_uint32, stbtt_uint8 *, stbtt_int32, stbtt_int32, stbtt_int32)
								// UnexposedExpr- fc - stbtt_uint8 *
									// DeclRefExpr- fc - stbtt_uint8 *
								// UnexposedExpr- nm - stbtt_uint32
									// DeclRefExpr- nm - stbtt_uint32
								// UnexposedExpr- name - stbtt_uint8 *
									// DeclRefExpr- name - stbtt_uint8 *
								// UnexposedExpr- nlen - stbtt_int32
									// DeclRefExpr- nlen - stbtt_int32
								// IntegerLiteral-  - int [Literal: 16]
								// UnaryOperator-  - int [Unary Operator: Minus (-)]
									// IntegerLiteral-  - int [Literal: 1]
							// ReturnStmt-  - 
								// IntegerLiteral-  - int [Literal: 1]
						// IfStmt-  - 
							// CallExpr- stbtt__matchpair - int
								// UnexposedExpr- stbtt__matchpair - int (*)(stbtt_uint8 *, stbtt_uint32, stbtt_uint8 *, stbtt_int32, stbtt_int32, stbtt_int32)
									// DeclRefExpr- stbtt__matchpair - int (stbtt_uint8 *, stbtt_uint32, stbtt_uint8 *, stbtt_int32, stbtt_int32, stbtt_int32)
								// UnexposedExpr- fc - stbtt_uint8 *
									// DeclRefExpr- fc - stbtt_uint8 *
								// UnexposedExpr- nm - stbtt_uint32
									// DeclRefExpr- nm - stbtt_uint32
								// UnexposedExpr- name - stbtt_uint8 *
									// DeclRefExpr- name - stbtt_uint8 *
								// UnexposedExpr- nlen - stbtt_int32
									// DeclRefExpr- nlen - stbtt_int32
								// IntegerLiteral-  - int [Literal: 1]
								// UnaryOperator-  - int [Unary Operator: Minus (-)]
									// IntegerLiteral-  - int [Literal: 1]
							// ReturnStmt-  - 
								// IntegerLiteral-  - int [Literal: 1]
						// IfStmt-  - 
							// CallExpr- stbtt__matchpair - int
								// UnexposedExpr- stbtt__matchpair - int (*)(stbtt_uint8 *, stbtt_uint32, stbtt_uint8 *, stbtt_int32, stbtt_int32, stbtt_int32)
									// DeclRefExpr- stbtt__matchpair - int (stbtt_uint8 *, stbtt_uint32, stbtt_uint8 *, stbtt_int32, stbtt_int32, stbtt_int32)
								// UnexposedExpr- fc - stbtt_uint8 *
									// DeclRefExpr- fc - stbtt_uint8 *
								// UnexposedExpr- nm - stbtt_uint32
									// DeclRefExpr- nm - stbtt_uint32
								// UnexposedExpr- name - stbtt_uint8 *
									// DeclRefExpr- name - stbtt_uint8 *
								// UnexposedExpr- nlen - stbtt_int32
									// DeclRefExpr- nlen - stbtt_int32
								// IntegerLiteral-  - int [Literal: 3]
								// UnaryOperator-  - int [Unary Operator: Minus (-)]
									// IntegerLiteral-  - int [Literal: 1]
							// ReturnStmt-  - 
								// IntegerLiteral-  - int [Literal: 1]
					// CompoundStmt-  - 
						// IfStmt-  - 
							// CallExpr- stbtt__matchpair - int
								// UnexposedExpr- stbtt__matchpair - int (*)(stbtt_uint8 *, stbtt_uint32, stbtt_uint8 *, stbtt_int32, stbtt_int32, stbtt_int32)
									// DeclRefExpr- stbtt__matchpair - int (stbtt_uint8 *, stbtt_uint32, stbtt_uint8 *, stbtt_int32, stbtt_int32, stbtt_int32)
								// UnexposedExpr- fc - stbtt_uint8 *
									// DeclRefExpr- fc - stbtt_uint8 *
								// UnexposedExpr- nm - stbtt_uint32
									// DeclRefExpr- nm - stbtt_uint32
								// UnexposedExpr- name - stbtt_uint8 *
									// DeclRefExpr- name - stbtt_uint8 *
								// UnexposedExpr- nlen - stbtt_int32
									// DeclRefExpr- nlen - stbtt_int32
								// IntegerLiteral-  - int [Literal: 16]
								// IntegerLiteral-  - int [Literal: 17]
							// ReturnStmt-  - 
								// IntegerLiteral-  - int [Literal: 1]
						// IfStmt-  - 
							// CallExpr- stbtt__matchpair - int
								// UnexposedExpr- stbtt__matchpair - int (*)(stbtt_uint8 *, stbtt_uint32, stbtt_uint8 *, stbtt_int32, stbtt_int32, stbtt_int32)
									// DeclRefExpr- stbtt__matchpair - int (stbtt_uint8 *, stbtt_uint32, stbtt_uint8 *, stbtt_int32, stbtt_int32, stbtt_int32)
								// UnexposedExpr- fc - stbtt_uint8 *
									// DeclRefExpr- fc - stbtt_uint8 *
								// UnexposedExpr- nm - stbtt_uint32
									// DeclRefExpr- nm - stbtt_uint32
								// UnexposedExpr- name - stbtt_uint8 *
									// DeclRefExpr- name - stbtt_uint8 *
								// UnexposedExpr- nlen - stbtt_int32
									// DeclRefExpr- nlen - stbtt_int32
								// IntegerLiteral-  - int [Literal: 1]
								// IntegerLiteral-  - int [Literal: 2]
							// ReturnStmt-  - 
								// IntegerLiteral-  - int [Literal: 1]
						// IfStmt-  - 
							// CallExpr- stbtt__matchpair - int
								// UnexposedExpr- stbtt__matchpair - int (*)(stbtt_uint8 *, stbtt_uint32, stbtt_uint8 *, stbtt_int32, stbtt_int32, stbtt_int32)
									// DeclRefExpr- stbtt__matchpair - int (stbtt_uint8 *, stbtt_uint32, stbtt_uint8 *, stbtt_int32, stbtt_int32, stbtt_int32)
								// UnexposedExpr- fc - stbtt_uint8 *
									// DeclRefExpr- fc - stbtt_uint8 *
								// UnexposedExpr- nm - stbtt_uint32
									// DeclRefExpr- nm - stbtt_uint32
								// UnexposedExpr- name - stbtt_uint8 *
									// DeclRefExpr- name - stbtt_uint8 *
								// UnexposedExpr- nlen - stbtt_int32
									// DeclRefExpr- nlen - stbtt_int32
								// IntegerLiteral-  - int [Literal: 3]
								// UnaryOperator-  - int [Unary Operator: Minus (-)]
									// IntegerLiteral-  - int [Literal: 1]
							// ReturnStmt-  - 
								// IntegerLiteral-  - int [Literal: 1]
				// ReturnStmt-  - 
					// IntegerLiteral-  - int [Literal: 0]
		// FunctionDecl- stbtt_FindMatchingFont_internal - int (unsigned char *, char *, stbtt_int32)
			// ParmDecl- font_collection - unsigned char *
			// ParmDecl- name_utf8 - char *
			// ParmDecl- flags - stbtt_int32
				// TypeRef- stbtt_int32 - stbtt_int32
			// CompoundStmt-  - 
				// DeclStmt-  - 
					// VarDecl- i - stbtt_int32
						// TypeRef- stbtt_int32 - stbtt_int32
				// ForStmt-  - 
					// BinaryOperator-  - stbtt_int32 [Binary Operator: Assign (=)]
						// DeclRefExpr- i - stbtt_int32
						// IntegerLiteral-  - int [Literal: 0]
					// UnaryOperator-  - stbtt_int32 [Unary Operator: PreInc (++)]
						// DeclRefExpr- i - stbtt_int32
					// CompoundStmt-  - 
						// DeclStmt-  - 
							// VarDecl- off - stbtt_int32
								// TypeRef- stbtt_int32 - stbtt_int32
								// CallExpr- stbtt_GetFontOffsetForIndex - int
									// UnexposedExpr- stbtt_GetFontOffsetForIndex - int (*)(const unsigned char *, int)
										// DeclRefExpr- stbtt_GetFontOffsetForIndex - int (const unsigned char *, int)
									// UnexposedExpr- font_collection - const unsigned char *
										// UnexposedExpr- font_collection - unsigned char *
											// DeclRefExpr- font_collection - unsigned char *
									// UnexposedExpr- i - stbtt_int32
										// DeclRefExpr- i - stbtt_int32
						// IfStmt-  - 
							// BinaryOperator-  - int [Binary Operator: LT (<)]
								// UnexposedExpr- off - stbtt_int32
									// DeclRefExpr- off - stbtt_int32
								// IntegerLiteral-  - int [Literal: 0]
							// ReturnStmt-  - 
								// UnexposedExpr- off - stbtt_int32
									// DeclRefExpr- off - stbtt_int32
						// IfStmt-  - 
							// CallExpr- stbtt__matches - int
								// UnexposedExpr- stbtt__matches - int (*)(stbtt_uint8 *, stbtt_uint32, stbtt_uint8 *, stbtt_int32)
									// DeclRefExpr- stbtt__matches - int (stbtt_uint8 *, stbtt_uint32, stbtt_uint8 *, stbtt_int32)
								// CStyleCastExpr-  - stbtt_uint8 *
									// TypeRef- stbtt_uint8 - stbtt_uint8
									// UnexposedExpr- font_collection - unsigned char *
										// DeclRefExpr- font_collection - unsigned char *
								// UnexposedExpr- off - stbtt_uint32
									// UnexposedExpr- off - stbtt_int32
										// DeclRefExpr- off - stbtt_int32
								// CStyleCastExpr-  - stbtt_uint8 *
									// TypeRef- stbtt_uint8 - stbtt_uint8
									// UnexposedExpr- name_utf8 - char *
										// DeclRefExpr- name_utf8 - char *
								// UnexposedExpr- flags - stbtt_int32
									// DeclRefExpr- flags - stbtt_int32
							// ReturnStmt-  - 
								// UnexposedExpr- off - stbtt_int32
									// DeclRefExpr- off - stbtt_int32
		// FunctionDecl- stbtt_BakeFontBitmap - int (const unsigned char *, int, float, unsigned char *, int, int, int, int, stbtt_bakedchar *)
			// ParmDecl- data - const unsigned char *
			// ParmDecl- offset - int
			// ParmDecl- pixel_height - float
			// ParmDecl- pixels - unsigned char *
			// ParmDecl- pw - int
			// ParmDecl- ph - int
			// ParmDecl- first_char - int
			// ParmDecl- num_chars - int
			// ParmDecl- chardata - stbtt_bakedchar *
				// TypeRef- stbtt_bakedchar - stbtt_bakedchar
			// CompoundStmt-  - 
				// ReturnStmt-  - 
					// CallExpr- stbtt_BakeFontBitmap_internal - int
						// UnexposedExpr- stbtt_BakeFontBitmap_internal - int (*)(unsigned char *, int, float, unsigned char *, int, int, int, int, stbtt_bakedchar *)
							// DeclRefExpr- stbtt_BakeFontBitmap_internal - int (unsigned char *, int, float, unsigned char *, int, int, int, int, stbtt_bakedchar *)
						// CStyleCastExpr-  - unsigned char *
							// UnexposedExpr- data - const unsigned char *
								// DeclRefExpr- data - const unsigned char *
						// UnexposedExpr- offset - int
							// DeclRefExpr- offset - int
						// UnexposedExpr- pixel_height - float
							// DeclRefExpr- pixel_height - float
						// UnexposedExpr- pixels - unsigned char *
							// DeclRefExpr- pixels - unsigned char *
						// UnexposedExpr- pw - int
							// DeclRefExpr- pw - int
						// UnexposedExpr- ph - int
							// DeclRefExpr- ph - int
						// UnexposedExpr- first_char - int
							// DeclRefExpr- first_char - int
						// UnexposedExpr- num_chars - int
							// DeclRefExpr- num_chars - int
						// UnexposedExpr- chardata - stbtt_bakedchar *
							// DeclRefExpr- chardata - stbtt_bakedchar *
		// FunctionDecl- stbtt_GetFontOffsetForIndex - int (const unsigned char *, int)
			// ParmDecl- data - const unsigned char *
			// ParmDecl- index - int
			// CompoundStmt-  - 
				// ReturnStmt-  - 
					// CallExpr- stbtt_GetFontOffsetForIndex_internal - int
						// UnexposedExpr- stbtt_GetFontOffsetForIndex_internal - int (*)(unsigned char *, int)
							// DeclRefExpr- stbtt_GetFontOffsetForIndex_internal - int (unsigned char *, int)
						// CStyleCastExpr-  - unsigned char *
							// UnexposedExpr- data - const unsigned char *
								// DeclRefExpr- data - const unsigned char *
						// UnexposedExpr- index - int
							// DeclRefExpr- index - int
		// FunctionDecl- stbtt_GetNumberOfFonts - int (const unsigned char *)
			// ParmDecl- data - const unsigned char *
			// CompoundStmt-  - 
				// ReturnStmt-  - 
					// CallExpr- stbtt_GetNumberOfFonts_internal - int
						// UnexposedExpr- stbtt_GetNumberOfFonts_internal - int (*)(unsigned char *)
							// DeclRefExpr- stbtt_GetNumberOfFonts_internal - int (unsigned char *)
						// CStyleCastExpr-  - unsigned char *
							// UnexposedExpr- data - const unsigned char *
								// DeclRefExpr- data - const unsigned char *
		// FunctionDecl- stbtt_InitFont - int (stbtt_fontinfo *, const unsigned char *, int)
			// ParmDecl- info - stbtt_fontinfo *
				// TypeRef- stbtt_fontinfo - stbtt_fontinfo
			// ParmDecl- data - const unsigned char *
			// ParmDecl- offset - int
			// CompoundStmt-  - 
				// ReturnStmt-  - 
					// CallExpr- stbtt_InitFont_internal - int
						// UnexposedExpr- stbtt_InitFont_internal - int (*)(stbtt_fontinfo *, unsigned char *, int)
							// DeclRefExpr- stbtt_InitFont_internal - int (stbtt_fontinfo *, unsigned char *, int)
						// UnexposedExpr- info - stbtt_fontinfo *
							// DeclRefExpr- info - stbtt_fontinfo *
						// CStyleCastExpr-  - unsigned char *
							// UnexposedExpr- data - const unsigned char *
								// DeclRefExpr- data - const unsigned char *
						// UnexposedExpr- offset - int
							// DeclRefExpr- offset - int
		// FunctionDecl- stbtt_FindMatchingFont - int (const unsigned char *, const char *, int)
			// ParmDecl- fontdata - const unsigned char *
			// ParmDecl- name - const char *
			// ParmDecl- flags - int
			// CompoundStmt-  - 
				// ReturnStmt-  - 
					// CallExpr- stbtt_FindMatchingFont_internal - int
						// UnexposedExpr- stbtt_FindMatchingFont_internal - int (*)(unsigned char *, char *, stbtt_int32)
							// DeclRefExpr- stbtt_FindMatchingFont_internal - int (unsigned char *, char *, stbtt_int32)
						// CStyleCastExpr-  - unsigned char *
							// UnexposedExpr- fontdata - const unsigned char *
								// DeclRefExpr- fontdata - const unsigned char *
						// CStyleCastExpr-  - char *
							// UnexposedExpr- name - const char *
								// DeclRefExpr- name - const char *
						// UnexposedExpr- flags - int
							// DeclRefExpr- flags - int
		// FunctionDecl- stbtt_CompareUTF8toUTF16_bigendian - int (const char *, int, const char *, int)
			// ParmDecl- s1 - const char *
			// ParmDecl- len1 - int
			// ParmDecl- s2 - const char *
			// ParmDecl- len2 - int
			// CompoundStmt-  - 
				// ReturnStmt-  - 
					// CallExpr- stbtt_CompareUTF8toUTF16_bigendian_internal - int
						// UnexposedExpr- stbtt_CompareUTF8toUTF16_bigendian_internal - int (*)(char *, int, char *, int)
							// DeclRefExpr- stbtt_CompareUTF8toUTF16_bigendian_internal - int (char *, int, char *, int)
						// CStyleCastExpr-  - char *
							// UnexposedExpr- s1 - const char *
								// DeclRefExpr- s1 - const char *
						// UnexposedExpr- len1 - int
							// DeclRefExpr- len1 - int
						// CStyleCastExpr-  - char *
							// UnexposedExpr- s2 - const char *
								// DeclRefExpr- s2 - const char *
						// UnexposedExpr- len2 - int
							// DeclRefExpr- len2 - int
